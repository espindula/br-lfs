<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-binutils" role="wrap">
  <?dbhtml filename="binutils-pt_br.html"?>

<!--

Direitos autorais (Copyright): (c) 2022 Jamenson Ferreira Espindula de Almeida Melo (<jafesp@gmail.com>).

Direitos autorais da versão modificada traduzida para a língua 
portuguesa escrita e falada no Brasil: (c) 2022 Jamenson Ferreira 
Espindula de Almeida Melo (<jafesp@gmail.com>).

  Este trabalho de tradução do livro "Linux From Scratch" é classificado
  pela Free Software Foundation como sendo uma "versão modificada" do
  mencionado livro.  Em assim sendo, na qualidade de tradutor, produtor
  da "versão modificada" e titular dos direitos autorais sobre a versão
  traduzida para a língua portuguesa do livro "Linux From Scratch",
  concede-se a seguinte permissão:

  É concedida permissão para copiar, distribuir e (ou) modificar este
  livro "Linux From Scratch", versão traduzida para a língua portuguesa,
  sob os termos da Licença de Documentação Livre GNU, versão 1.3 ou
  qualquer versão posterior publicada pela Free Software Foundation; sem
  Seções Invariantes, sem Textos de Capa Frontal e sem Textos de Quarta
  Capa.  Uma cópia da licença está incluída na seção intitulada "Licença
  de Documentação Livre GNU".

# Atenção: todos os documentos aqui publicados são distribuídos sem qualquer garantia, implícita e (ou) explícita.

  Permission is granted to copy, distribute and (or) modify this book
  "Linux From Scratch", translated into Brazilian Portuguese, under the
  terms of the GNU Free Documentation License, Version 1.3 or any later
  version published by the Free Software Foundation; with no Invariant
  Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of
  the license is included in the section entitled "GNU Free
  Documentation License".

# Warning: all the files herein published are released with no warranty, implicit and (or) explicit.
-->

  <sect1info condition="script">
    <productname>binutils</productname>
    <productnumber>&binutils-version;</productnumber>
    <address>&binutils-url;</address>
  </sect1info>

  <title>Binutils-&binutils-version;</title>

  <indexterm zone="ch-system-binutils">
    <primary sortas="a-Binutils">Binutils</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>O pacote Binutils contém um vinculador, um montador, e outras 
    ferramentas para manusear arquivos objeto.</para>

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&binutils-fin-sbu;</seg>
        <seg>&binutils-fin-du;</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Instalação de Binutils</title>

    <para>Verifique se os Pseudo Terminais (PTYs) estão funcionando 
    adequadamente dentro do ambiente chroot executando um teste 
    simples:</para>

<screen><userinput remap="test">expect -c "spawn ls"</userinput></screen>

    <para>Esse comando deveria retornar o seguinte:</para>

<screen><computeroutput>spawn ls</computeroutput></screen>

    <para>Se, ao invés, a saída incluir a mensagem abaixo, então o 
    ambiente não está configurado para operação adequada de PTY.  Esse 
    problema precisa ser resolvido antes de executar as suítes de teste 
    para Binutils e GCC:</para>

<screen><computeroutput>The system has no more ptys.
Ask your system administrator to create more.</computeroutput></screen>

    <para>A(O) desenvolvedora(r) fez um conjunto curto de comandos para 
    fixar um problema quando do uso de binutils para construir alguns 
    pacotes BLFS com Link Time Optimization (LTO) habilitado.  Aplique 
    ele agora:</para>

 <screen><userinput remap="pre">patch -Np1 -i ../&binutils-lto-patch;</userinput></screen>

    <para>Agora, faça um conserto identificado pela(o) desenvolvedora(r) 
    que afeta a construção alguns pacotes:</para>

<screen><userinput remap="pre">sed -e '/R_386_TLS_LE /i \   || (TYPE) == R_386_TLS_IE \\' \
    -i ./bfd/elfxx-x86.h</userinput></screen>

    <para>A documentação de Binutils recomenda construir Binutils em um 
    diretório dedicado à construção:</para>

<screen><userinput remap="pre">mkdir -v build
cd       build</userinput></screen>

    <para>Prepare Binutils para compilação:</para>

<screen><userinput remap="configure">../configure --prefix=/usr       \
             --enable-gold       \
             --enable-ld=default \
             --enable-plugins    \
             --enable-shared     \
             --disable-werror    \
             --enable-64-bit-bfd \
             --with-system-zlib</userinput></screen>

    <variablelist>
      <title>O significado dos parâmetros de configure:</title>

      <varlistentry>
        <term><parameter>--enable-gold</parameter></term>
        <listitem>

          <para>Constrói o vinculador gold e instala ele como ld.gold 
          (juntamente com o vinculador padrão).</para>

        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--enable-ld=default</parameter></term>
        <listitem>

          <para>Constrói o vinculador bfd original e instala ele como 
          ambos ld (o vinculador padrão) e ld.bfd.</para>

        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--enable-plugins</parameter></term>
        <listitem>

          <para>Habilita suporte de plugin para o vinculador.</para>

        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--enable-64-bit-bfd</parameter></term>
        <listitem>

           <para>Habilita suporte de 64 bits (em anfitriões com tamanhos 
           de palavra mais estreitos). Talvez não seja necessário em 
           sistemas de 64 bits, porém não causa dano.</para>

        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--with-system-zlib</parameter></term>
        <listitem>

          <para>Usa a biblioteca zlib instalada em vez de construir a 
          versão incluída.</para>

        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile o pacote:</para>

<screen><userinput remap="make">make tooldir=/usr</userinput></screen>

    <variablelist>
      <title>O significado do parâmetro de make:</title>

      <varlistentry>
        <term><parameter>tooldir=/usr</parameter></term>
        <listitem>

          <para>Normalmente, o tooldir (o diretório onde os executáveis 
          estarão ultimamente localizados) é configurado para 
          <filename class="directory">$(exec_prefix)/$(target_alias)</filename>.  
          Por exemplo, máquinas x86_64 expandiriam isso para 
          <filename class="directory">/usr/x86_64-pc-linux-gnu</filename>.  Por 
          causa que este é um sistema personalizado, esse diretório alvo 
          específico em <filename class="directory">/usr</filename> não 
          é exigido.  
          <filename class="directory">$(exec_prefix)/$(target_alias)</filename> 
          seria usado se o sistema fosse usado para compilar cruzadamente (por 
          exemplo, compilar um pacote em uma máquina Intel que gera 
          código que pode ser executado em máquinas PowerPC).</para>

        </listitem>
      </varlistentry>

    </variablelist>

    <important>

      <para>A suíte de teste para Binutils nesta seção é considerada 
      crítica.  Não pule sob quaisquer circunstâncias.</para>

    </important>

    <para>Teste os resultados:</para>

<screen><userinput remap="test">make -k check</userinput></screen>

    <para>Instale o pacote:</para>

<screen><userinput remap="install">make tooldir=/usr install</userinput></screen>

    <para>Remova bibliotecas estáticas inúteis:</para>

<screen><userinput remap="install">rm -fv /usr/lib/lib{bfd,ctf,ctf-nobfd,opcodes}.a</userinput></screen>

  </sect2>

  <sect2 id="contents-binutils" role="content">
    <title>Conteúdo de Binutils</title>

    <segmentedlist>
      <segtitle>Aplicativos instalados</segtitle>
      <segtitle>Bibliotecas instaladas</segtitle>
      <segtitle>Diretório instalado</segtitle>

      <seglistitem>
        <seg>addr2line, ar, as, c++filt, dwp, elfedit, gprof, ld, ld.bfd, ld.gold, nm,
        objcopy, objdump, ranlib, readelf, size, strings, e strip</seg>
        <seg>libbfd.so, libctf.so, libctf-nobfd.so, e libopcodes.so</seg>
        <seg>/usr/lib/ldscripts</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descrições Curtas</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="addr2line">
        <term><command>addr2line</command></term>
        <listitem>

          <para>Traduz endereços de aplicativos para nomes de arquivo e 
          números de linha; dado um endereço e o nome de um executável, 
          ele usa a informação de depuração no executável para 
          determinar qual arquivo fonte e número de linha estão 
          associados ao endereço</para>

          <indexterm zone="ch-system-binutils addr2line">
            <primary sortas="b-addr2line">addr2line</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ar">
        <term><command>ar</command></term>
        <listitem>

          <para>Cria, modifica e extrai a partir de arquivamentos</para>

          <indexterm zone="ch-system-binutils ar">
            <primary sortas="b-ar">ar</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="as">
        <term><command>as</command></term>
        <listitem>

          <para>Um montador que monta a saída de <command>gcc</command> 
          para dentro de arquivos objeto</para>

          <indexterm zone="ch-system-binutils as">
            <primary sortas="b-as">as</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="c-filt">
        <term><command>c++filt</command></term>
        <listitem>

          <para>Usado pelo vinculador para desmembrar símbolos C++ e Java 
          e para impedir que funções sobrecarregadas entrem em 
          conflito</para>

          <indexterm zone="ch-system-binutils c-filt">
            <primary sortas="b-c++filt">c++filt</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="dwp">
        <term><command>dwp</command></term>
        <listitem>

          <para>O utilitário de empacotamento DWARF</para>

          <indexterm zone="ch-system-binutils dwp">
            <primary sortas="dwp">dwp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="elfedit">
        <term><command>elfedit</command></term>
        <listitem>

          <para>Atualiza o cabeçalho ELF de arquivos ELF</para>

          <indexterm zone="ch-system-binutils elfedit">
            <primary sortas="b-elfedit">elfedit</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gprof">
        <term><command>gprof</command></term>
        <listitem>

          <para>Exibe dados do perfil de gráfico de chamada</para>

          <indexterm zone="ch-system-binutils gprof">
            <primary sortas="b-gprof">gprof</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ld">
        <term><command>ld</command></term>
        <listitem>

          <para>Um vinculador que combina um número de objetos e 
          arquivos de arquivamento em um arquivo, realocando seus dados 
          e vinculando referências de símbolos</para>

          <indexterm zone="ch-system-binutils ld">
            <primary sortas="b-ld">ld</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ld.gold">
        <term><command>ld.gold</command></term>
        <listitem>

          <para>Uma versão reduzida de ld que suporta apenas o formato 
          de arquivo de objeto elf</para>

          <indexterm zone="ch-system-binutils ld.gold">
            <primary sortas="b-ld.gold">ld.gold</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ld.bfd">
        <term><command>ld.bfd</command></term>
        <listitem>

          <para>Hard link para <command>ld</command></para>

          <indexterm zone="ch-system-binutils ld.bfd">
            <primary sortas="b-ld.bfd">ld.bfd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nm">
        <term><command>nm</command></term>
        <listitem>

          <para>Lista os símbolos que ocorrem em um dado arquivo de 
          objeto</para>

          <indexterm zone="ch-system-binutils nm">
            <primary sortas="b-nm">nm</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="objcopy">
        <term><command>objcopy</command></term>
        <listitem>

          <para>Traduz um tipo de arquivo de objeto em outro</para>

          <indexterm zone="ch-system-binutils objcopy">
            <primary sortas="b-objcopy">objcopy</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="objdump">
        <term><command>objdump</command></term>
        <listitem>

         <para>Exibe informação sobre o dado arquivo de objeto, com 
         opções controlando a informação particular a ser exibida; a 
         informação mostrada é útil para programadores que estão 
         trabalhando nas ferramentas de compilação</para>

          <indexterm zone="ch-system-binutils objdump">
            <primary sortas="b-objdump">objdump</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ranlib">
        <term><command>ranlib</command></term>
        <listitem>

          <para>Gera um índice do conteúdo de um arquivamento e o 
          armazena no arquivamento; o índice lista todos os símbolos 
          definidos pelos membros do arquivamento que são arquivos de 
          objeto realocáveis</para>

          <indexterm zone="ch-system-binutils ranlib">
            <primary sortas="b-ranlib">ranlib</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="readelf">
        <term><command>readelf</command></term>
        <listitem>

          <para>Exibe informação sobre binários de tipo ELF</para>

          <indexterm zone="ch-system-binutils readelf">
            <primary sortas="b-readelf">readelf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="size">
        <term><command>size</command></term>
        <listitem>

          <para>Lista os tamanhos de seção e o tamanho total para os 
          arquivos de objeto dados</para>

          <indexterm zone="ch-system-binutils size">
            <primary sortas="b-size">size</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="strings">
        <term><command>strings</command></term>
        <listitem>

          <para>Exibe, para cada arquivo dado, as sequências de 
          caracteres imprimíveis que são de, no mínimo, o tamanho 
          especificado (padronizado para quatro); para arquivos de 
          objeto, ele imprime, por padrão, apenas as sequências de 
          caracteres a partir das seções de inicialização e carregamento 
          enquanto que para outros tipos de arquivos, ele escaneia o 
          arquivo inteiro</para>

          <indexterm zone="ch-system-binutils strings">
            <primary sortas="b-strings">strings</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="strip">
        <term><command>strip</command></term>
        <listitem>

          <para>Descarta símbolos de arquivos de objeto</para>

          <indexterm zone="ch-system-binutils strip">
            <primary sortas="b-strip">strip</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libbfd">
        <term><filename class="libraryfile">libbfd</filename></term>
        <listitem>

          <para>A biblioteca de Descritor de Arquivo Binário</para>

          <indexterm zone="ch-system-binutils libbfd">
            <primary sortas="c-libbfd">libbfd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libctf">
        <term><filename class="libraryfile">libctf</filename></term>
        <listitem>

          <para>A biblioteca de suporte de depuração Compat ANSI-C Type 
          Format</para>

          <indexterm zone="ch-system-binutils libctf">
            <primary sortas="c-libctf">libctf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libctf-nobfd">
        <term><filename class="libraryfile">libctf-nobfd</filename></term>
        <listitem>

          <para>Uma variante de libctf que não usa funcionalidade de 
          libbfd</para>

          <indexterm zone="ch-system-binutils libctf-nobfd">
            <primary sortas="c-libctf-nobfd">libctf-nobfd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libopcodes">
        <term><filename class="libraryfile">libopcodes</filename></term>
        <listitem>

          <para>Uma biblioteca para lidar com opcodes&mdash;as versões 
          de <quote>texto legível</quote> de instruções para o 
          processador; é usado para construir utilitários como 
          <command>objdump</command></para>

          <indexterm zone="ch-system-binutils libopcodes">
            <primary sortas="c-libopcodes">libopcodes</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
