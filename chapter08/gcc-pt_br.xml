<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-gcc" role="wrap">
  <?dbhtml filename="gcc-pt_br.html"?>

<!--

Direitos autorais (Copyright): (c) 2022 Jamenson Ferreira Espindula de Almeida Melo (<jafesp@gmail.com>).

Direitos autorais da versão modificada traduzida para a língua 
portuguesa escrita e falada no Brasil: (c) 2022 Jamenson Ferreira 
Espindula de Almeida Melo (<jafesp@gmail.com>).

  Este trabalho de tradução do livro "Linux From Scratch" é classificado
  pela Free Software Foundation como sendo uma "versão modificada" do
  mencionado livro.  Em assim sendo, na qualidade de tradutor, produtor
  da "versão modificada" e titular dos direitos autorais sobre a versão
  traduzida para a língua portuguesa do livro "Linux From Scratch",
  concede-se a seguinte permissão:

  É concedida permissão para copiar, distribuir e (ou) modificar este
  livro "Linux From Scratch", versão traduzida para a língua portuguesa,
  sob os termos da Licença de Documentação Livre GNU, versão 1.3 ou
  qualquer versão posterior publicada pela Free Software Foundation; sem
  Seções Invariantes, sem Textos de Capa Frontal e sem Textos de Quarta
  Capa.  Uma cópia da licença está incluída na seção intitulada "Licença
  de Documentação Livre GNU".

# Atenção: todos os documentos aqui publicados são distribuídos sem qualquer garantia, implícita e (ou) explícita.

  Permission is granted to copy, distribute and (or) modify this book
  "Linux From Scratch", translated into Brazilian Portuguese, under the
  terms of the GNU Free Documentation License, Version 1.3 or any later
  version published by the Free Software Foundation; with no Invariant
  Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of
  the license is included in the section entitled "GNU Free
  Documentation License".

# Warning: all the files herein published are released with no warranty, implicit and (or) explicit.
-->

  <sect1info condition="script">
    <productname>gcc</productname>
    <productnumber>&gcc-version;</productnumber>
    <address>&gcc-url;</address>
  </sect1info>

  <title>GCC-&gcc-version;</title>

  <indexterm zone="ch-system-gcc">
    <primary sortas="a-GCC">GCC</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>O pacote GCC contém a GNU compiler collection, o qual inclui 
    os compiladores C e C++.</para>

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&gcc-fin-sbu;</seg>
        <seg>&gcc-fin-du;</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Instalação de GCC</title>

    <para>Se construir em x86_64, então mude o nome de diretório padrão 
    para bibliotecas de 64 bits para <quote>lib</quote>:</para>

<screen><userinput remap="pre">case $(uname -m) in
  x86_64)
    sed -e '/m64=/s/lib64/lib/' \
        -i.orig gcc/config/i386/t-linux64
  ;;
esac</userinput></screen>

    <para>A documentação de GCC recomenda construir GCC em um diretório 
    de construção dedicado:</para>

<screen><userinput remap="pre">mkdir -v build
cd       build</userinput></screen>

    <para>Prepare GCC para compilação:</para>

<screen><userinput remap="configure">../configure --prefix=/usr            \
             LD=ld                    \
             --enable-languages=c,c++ \
             --disable-multilib       \
             --disable-bootstrap      \
             --with-system-zlib</userinput></screen>

    <para>Note que para outras linguagens de programação, existem alguns 
    pré-requisitos que ainda não estão disponíveis.  Veja-se a 
    <ulink url="&blfs-book;general/gcc.html">página de GCC do Livro BLFS</ulink> 
    para instruções sobre como construir todas as 
    linguagens suportadas do GCC.</para>

    <variablelist>
      <title>O significado dos novos parâmetros de configure:</title>

      <varlistentry>
        <term><parameter>LD=ld</parameter></term>
        <listitem>

          <para>Esse parâmetro induz o script configure a usar o ld 
          instalado pelo binutils construído anteriormente neste 
          capítulo, em vez da versão construída cruzadamente a qual de 
          outra maneira seria usada.</para>

        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--with-system-zlib</parameter></term>
        <listitem>

          <para>Essa chave diz a GCC para vincular à cópia instalada de 
          sistema da biblioteca zlib, em vez de sua própria cópia 
          interna.</para>

        </listitem>
      </varlistentry>
    </variablelist>

    <para>Compile o pacote:</para>

<screen><userinput remap="make">make</userinput></screen>

    <important>

      <para>Nesta seção, a suíte de teste para GCC é considerada 
      importante, porém ela toma um tempo longo.  Construtoras(es) de 
      primeira vez são encorajadas(os) a não pular ela.  O tempo para 
      executar os testes pode ser reduzido significantemente 
      adicionando-se -jx ao comando make abaixo, onde x é o número de 
      núcleos em seu sistema.</para>

    </important>

   <para>Um conjunto de testes na suíte de teste de GCC é conhecida por 
   esgotar a pilha padrão, então aumente o tamanho de pilha antes de 
   executar os testes:</para>

<screen><userinput remap="test">ulimit -s 32768</userinput></screen>

    <para>Teste os resultados como uma(m) usuária(o) não 
    privilegiada(o), porém não pare aos erros:</para>

<screen><userinput remap="test">chown -Rv tester .
su tester -c "PATH=$PATH make -k check"</userinput></screen>

    <para>Para receber um sumário dos resultados de suíte de teste, 
    execute:</para>

<screen><userinput remap="test">../contrib/test_summary</userinput></screen>

    <para>Para apenas os sumários, entube a saída por grep -A7 
    Summ.</para>

    <para>Resultados podem ser comparados com aqueles localizados em 
    <ulink url="&test-results;"/> e 
    <ulink url="https://gcc.gnu.org/ml/gcc-testresults/"/>.</para>

    <para>Em g++, quatro testes relacionados a PR100400 são conhecidos 
    por ser relatados como ambos XPASS e FAIL.  Isso é por causa de o 
    arquivo de teste para esse conhecido problema não ser bem 
    escrito.</para>

    <para>Umas poucas falhas inesperadas não podem ser evitadas sempre.  
    As(Os) desenvolvedoras(es) de GCC geralmente estão cientes desses 
    problemas, mas ainda não os resolveram.  A menos que os resultados 
    de teste sejam amplamente diferentes daqueles na URL acima, é seguro 
    continuar.</para>

    <para>Instale o pacote:</para>

<screen><userinput remap="install">make install</userinput></screen>

    <para>O diretório de construção de GCC é de propriedade de 
    <systemitem class="username">tester</systemitem> agora e a 
    propriedade do diretório de cabeçalho instalado (e o conteúdo dele) 
    estarão incorretos.  Mude a propriedade para usuária(o) e grupo 
    <systemitem class="username">root</systemitem>:</para>

<screen><userinput remap="install">chown -v -R root:root \
    /usr/lib/gcc/$(gcc -dumpmachine)/&gcc-version;/include{,-fixed}</userinput></screen>

    <para>Crie um link simbólico exigido por 
    <ulink url="https://refspecs.linuxfoundation.org/FHS_3.0/fhs/ch03s09.html">FHS</ulink> 
    por razões "históricas".</para>

<screen><userinput remap="install">ln -svr /usr/bin/cpp /usr/lib</userinput></screen>

    <para>Adicione um link simbólico de compatibilidade para habilitar a 
    construção de aplicativos com Link Time Optimization (LTO):</para>

<screen><userinput remap="install">ln -sfv ../../libexec/gcc/$(gcc -dumpmachine)/&gcc-version;/liblto_plugin.so \
        /usr/lib/bfd-plugins/</userinput></screen>

    <para>Agora que nosso conjunto de ferramentas final está no lugar, é 
    importante certificar-se novamente de que compilação e vinculação 
    funcionarão como esperado.  Nós fazemos isso realizando algumas 
    verificações de sanidade:</para>

<screen><userinput>echo 'int main(){}' &gt; dummy.c
cc dummy.c -v -Wl,--verbose &amp;&gt; dummy.log
readelf -l a.out | grep ': /lib'</userinput></screen>

  <para>Não deveriam existir erros, e a saída do último comando será 
  (permitindo diferenças específicas de plataforma no nome do vinculador 
  dinâmico):</para>

<screen><computeroutput>[Requesting program interpreter: /lib64/ld-linux-x86-64.so.2]</computeroutput></screen>

  <para>Agora tenha certeza de que nós estamos configurados para usar os 
  arquivos de início corretos:</para>

<screen><userinput>grep -o '/usr/lib.*/crt[1in].*succeeded' dummy.log</userinput></screen>

  <para>A saída do último comando deveria ser:</para>

<screen><computeroutput>/usr/lib/gcc/x86_64-pc-linux-gnu/&gcc-version;/../../../../lib/crt1.o succeeded
/usr/lib/gcc/x86_64-pc-linux-gnu/&gcc-version;/../../../../lib/crti.o succeeded
/usr/lib/gcc/x86_64-pc-linux-gnu/&gcc-version;/../../../../lib/crtn.o succeeded</computeroutput></screen>

  <para>Dependendo da arquitetura de sua máquina, o acima talvez difira 
  levemente.  A diferença será o nome do diretório depois de 
  <filename class="directory">/usr/lib/gcc</filename>.  A coisa importante a se 
  olhar aqui é que <command>gcc</command> encontrou todos os três 
  arquivos <filename>crt*.o</filename> sob o diretório 
  <filename class="directory">/usr/lib</filename>.</para>

  <para>Verifique se o compilador está buscando os arquivos de cabeçalho 
  corretos:</para>

<screen><userinput>grep -B4 '^ /usr/include' dummy.log</userinput></screen>

  <para>Esse comando deveria retornar a seguinte saída:</para>

<screen><computeroutput>#include &lt;...&gt; search starts here:
 /usr/lib/gcc/x86_64-pc-linux-gnu/&gcc-version;/include
 /usr/local/include
 /usr/lib/gcc/x86_64-pc-linux-gnu/&gcc-version;/include-fixed
 /usr/include</computeroutput></screen>

   <para>Novamente, o diretório nomeado após seu triplet alvo talvez 
   seja diferente do que o acima, dependendo da arquitetura de seu 
   sistema.</para>

  <para>Agora, verifique se o novo vinculador está sendo usado com os 
  caminhos de busca corretos:</para>

<screen><userinput>grep 'SEARCH.*/usr/lib' dummy.log |sed 's|; |\n|g'</userinput></screen>

  <para>As referências a caminhos que tem componentes com '-linux-gnu' 
  deveriam ser ignoradas, porém do contrário a saída do último comando 
  deveria ser:</para>

<screen><computeroutput>SEARCH_DIR("/usr/x86_64-pc-linux-gnu/lib64")
SEARCH_DIR("/usr/local/lib64")
SEARCH_DIR("/lib64")
SEARCH_DIR("/usr/lib64")
SEARCH_DIR("/usr/x86_64-pc-linux-gnu/lib")
SEARCH_DIR("/usr/local/lib")
SEARCH_DIR("/lib")
SEARCH_DIR("/usr/lib");</computeroutput></screen>

   <para>Um sistema de 32 bits talvez veja uns poucos diretórios 
   diferentes.  Por exemplo, aqui está a saída originária de uma máquina 
   i686:</para>

<screen><computeroutput>SEARCH_DIR("/usr/i686-pc-linux-gnu/lib32")
SEARCH_DIR("/usr/local/lib32")
SEARCH_DIR("/lib32")
SEARCH_DIR("/usr/lib32")
SEARCH_DIR("/usr/i686-pc-linux-gnu/lib")
SEARCH_DIR("/usr/local/lib")
SEARCH_DIR("/lib")
SEARCH_DIR("/usr/lib");</computeroutput></screen>

  <para>Agora tenha certeza de que nós estamos usando a libc 
  correta:</para>

<screen><userinput>grep "/lib.*/libc.so.6 " dummy.log</userinput></screen>

  <para>A saída do último comando deveria ser:</para>

<screen><computeroutput>attempt to open /usr/lib/libc.so.6 succeeded</computeroutput></screen>

  <para>Tenha certeza de que o GCC está usando o vinculador dinâmico 
  correto:</para>

<screen><userinput>grep found dummy.log</userinput></screen>

  <para>A saída do último comando deveria ser (permitindo diferenças 
  específicas de plataforma no nome do vinculador dinâmico):</para>

<screen><computeroutput>found ld-linux-x86-64.so.2 at /usr/lib/ld-linux-x86-64.so.2</computeroutput></screen>

  <para>Se a saída não aparecer como mostrada acima ou não for recebida 
  de jeito nenhum, então alguma coisa está seriamente errada.  
  Investigue e refaça os passos para descobrir onde o problema está e 
  corrigir ele.  Quaisquer problemas precisarão ser resolvidos antes de 
  continuar com o processo.</para>

  <para>Uma vez que tudo esteja funcionando corretamente, remova os 
  arquivos de teste:</para>

<screen><userinput>rm -v dummy.c a.out dummy.log</userinput></screen>

    <para>Finalmente, mova um arquivo mal colocado:</para>

<screen><userinput remap="install">mkdir -pv /usr/share/gdb/auto-load/usr/lib
mv -v /usr/lib/*gdb.py /usr/share/gdb/auto-load/usr/lib</userinput></screen>

  </sect2>

  <sect2 id="contents-gcc" role="content">
    <title>Conteúdo de GCC</title>

    <segmentedlist>
      <segtitle>Aplicativos instalados</segtitle>
      <segtitle>Bibliotecas instaladas</segtitle>
      <segtitle>Diretórios instalados</segtitle>

      <seglistitem>
        <seg>c++, cc (link para gcc), cpp, g++, gcc,
        gcc-ar, gcc-nm, gcc-ranlib, gcov, gcov-dump, gcov-tool,
        e lto-dump</seg>

        <seg>libasan.{a,so}, libatomic.{a,so}, libcc1.so, libgcc.a, libgcc_eh.a,
        libgcc_s.so, libgcov.a, libgomp.{a,so}, libitm.{a,so},
        liblsan.{a,so}, liblto_plugin.so,
        libquadmath.{a,so}, libssp.{a,so}, libssp_nonshared.a,
        libstdc++.{a,so}, libstdc++fs.a, libsupc++.a, libtsan.{a,so},
        e libubsan.{a,so}</seg>

        <seg>/usr/include/c++, /usr/lib/gcc, /usr/libexec/gcc, e
        /usr/share/gcc-&gcc-version;</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descrições Curtas</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="c">
        <term><command>c++</command></term>
        <listitem>

          <para>O compilador C++</para>

          <indexterm zone="ch-system-gcc c">
            <primary sortas="b-c++">c++</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="cc">
        <term><command>cc</command></term>
        <listitem>

          <para>O compilador C</para>

          <indexterm zone="ch-system-gcc cc">
            <primary sortas="b-cc">cc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="cpp">
        <term><command>cpp</command></term>
        <listitem>

          <para>O preprocessador C; é usado pelo compilador para 
          expandir as declarações #include, #define e similares nos 
          arquivos fonte</para>

          <indexterm zone="ch-system-gcc cpp">
            <primary sortas="b-cpp">cpp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="g">
        <term><command>g++</command></term>
        <listitem>

          <para>O compilador C++</para>

          <indexterm zone="ch-system-gcc g">
            <primary sortas="b-g++">g++</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcc">
        <term><command>gcc</command></term>
        <listitem>

          <para>O compilador C</para>

          <indexterm zone="ch-system-gcc gcc">
            <primary sortas="b-gcc">gcc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcc-ar">
        <term><command>gcc-ar</command></term>
        <listitem>

          <para>Um encapsulador em torno de <command>ar</command> que 
          adiciona um plugin à linha de comando.  Esse aplicativo é 
          usado apenas para adicionar "link time optimization" e não é 
          útil com as opções de construção padrão</para>

          <indexterm zone="ch-system-gcc gcc-ar">
            <primary sortas="b-gcc-ar">gc-ar</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcc-nm">
        <term><command>gcc-nm</command></term>
        <listitem>

          <para>Um encapsulador em torno de <command>nm</command> que 
          adiciona um plugin à linha de comando.  Esse aplicativo é 
          usado apenas para adicionar "link time optimization" e não é 
          útil com as opções de construção padrão</para>

          <indexterm zone="ch-system-gcc gcc-nm">
            <primary sortas="b-gcc-nm">gc-nm</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcc-ranlib">
        <term><command>gcc-ranlib</command></term>
        <listitem>

          <para>Um encapsulador em torno de <command>ranlib</command> que 
          adiciona um plugin à linha de comando.  Esse aplicativo é 
          usado apenas para adicionar "link time optimization" e não é 
          útil com as opções de construção padrão</para>

          <indexterm zone="ch-system-gcc gcc-ranlib">
            <primary sortas="b-gcc-ranlib">gc-ranlib</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcov">
        <term><command>gcov</command></term>
        <listitem>

          <para>Uma ferramenta de teste de cobertura; usada para 
          analisar aplicativos para determinar onde as otimizações terão 
          mais efeito</para>

          <indexterm zone="ch-system-gcc gcov">
            <primary sortas="b-gcov">gcov</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcov-dump">
        <term><command>gcov-dump</command></term>
        <listitem>

          <para>Ferramenta de despejo de perfil offline gcda e 
          gcno</para>

          <indexterm zone="ch-system-gcc gcov-dump">
            <primary sortas="b-gcov-dump">gcov-dump</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcov-tool">
        <term><command>gcov-tool</command></term>
        <listitem>

          <para>Ferramenta de processamento de perfil offline 
          gcda</para>

          <indexterm zone="ch-system-gcc gcov-tool">
            <primary sortas="b-gcov-tool">gcov-tool</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lto-dump">
        <term><command>lto-dump</command></term>
        <listitem>

          <para>Ferramenta para despejar arquivos objeto produzidos por 
          GCC com LTO habilitado</para>

          <indexterm zone="ch-system-gcc lto-dump">
            <primary sortas="b-lto-dump">lto-dump</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libasan">
        <term><filename class="libraryfile">libasan</filename></term>
        <listitem>

          <para>A biblioteca de tempo de execução do Address 
          Sanitizer</para>

          <indexterm zone="ch-system-gcc libasan">
            <primary sortas="b-libasan">libasan</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libatomic">
        <term><filename class="libraryfile">libatomic</filename></term>
        <listitem>

          <para>Biblioteca de tempo de execução atômica interna do 
          GCC</para>

          <indexterm zone="ch-system-gcc libatomic">
            <primary sortas="b-libatomic">libatomic</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libcc1">
        <term><filename class="libraryfile">libcc1</filename></term>
        <listitem>

          <para>A biblioteca de pré-processamento C</para>

          <indexterm zone="ch-system-gcc libcc1">
            <primary sortas="b-libcc1">libcc1</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libgcc">
        <term><filename class="libraryfile">libgcc</filename></term>
        <listitem>

          <para>Contém suporte de tempo de execução para 
          <command>gcc</command></para>

          <indexterm zone="ch-system-gcc libgcc">
            <primary sortas="c-libgcc">libgcc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libgcov">
        <term><filename class="libraryfile">libgcov</filename></term>
        <listitem>

          <para>Essa biblioteca é vinculada a um aplicativo quando GCC 
          for instruído a habilitar criação de perfil</para>

          <indexterm zone="ch-system-gcc libgcov">
            <primary sortas="c-libgcov">libgcov</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libgomp">
        <term><filename class="libraryfile">libgomp</filename></term>
        <listitem>

          <para>Implementação GNU da API OpenMP para programação 
          paralela de memória compartilhada multiplataforma em C/C++ e 
          Fortran</para>

          <indexterm zone="ch-system-gcc libgomp">
            <primary sortas="c-libgomp">libgomp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libitm">
        <term><filename class="libraryfile">libitm</filename></term>
        <listitem>

          <para>A biblioteca de memória transacional GNU</para>

          <indexterm zone="ch-system-gcc libitm">
            <primary sortas="c-libitm">libitm</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="liblsan">
        <term><filename class="libraryfile">liblsan</filename></term>
        <listitem>

          <para>A biblioteca de tempo de execução do Leak 
          Sanitizer</para>

          <indexterm zone="ch-system-gcc liblsan">
            <primary sortas="c-liblsan">liblsan</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="liblto_plugin">
        <term><filename class="libraryfile">liblto_plugin</filename></term>
        <listitem>

          <para>Plugin LTO do GCC permite ao binutils processar arquivos 
          objeto produzidos por GCC com LTO habilitado</para>

          <indexterm zone="ch-system-gcc liblto_plugin">
            <primary sortas="c-liblto_plugin">liblto_plugin</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libquadmath">
        <term><filename class="libraryfile">libquadmath</filename></term>
        <listitem>

          <para>API da Biblioteca Matemática de Precisão Quádrupla 
          GCC</para>

          <indexterm zone="ch-system-gcc libquadmath">
            <primary sortas="c-libquadmath">libquadmath</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libssp">
        <term><filename class="libraryfile">libssp</filename></term>
        <listitem>

          <para>Contém rotinas que suportam a funcionalidade de proteção 
          contra esmagamento de pilha do GCC</para>

          <indexterm zone="ch-system-gcc libssp">
            <primary sortas="c-libssp">libssp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libstdc">
        <term><filename class="libraryfile">libstdc++</filename></term>
        <listitem>

          <para>A biblioteca C++ padrão</para>

          <indexterm zone="ch-system-gcc libstdc">
            <primary sortas="c-libstdc++">libstdc++</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libstdcfs">
        <term><filename class="libraryfile">libstdc++fs</filename></term>
        <listitem>

          <para>Biblioteca de Sistema de Arquivos ISO/IEC TS 
          18822:2015</para>

          <indexterm zone="ch-system-gcc libstdcfs">
            <primary sortas="c-libstdc++fs">libstdc++fs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libsupc">
        <term><filename class="libraryfile">libsupc++</filename></term>
        <listitem>

          <para>Fornece rotinas de suporte para a linguagem de 
          programação C++</para>

          <indexterm zone="ch-system-gcc libsupc">
            <primary sortas="c-libsupc++">libsupc++</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libtsan">
        <term><filename class="libraryfile">libtsan</filename></term>
        <listitem>

          <para>A biblioteca de tempo de execução do Thread 
          Sanitizer</para>

          <indexterm zone="ch-system-gcc libtsan">
            <primary sortas="c-libtsan">libtsan</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libubsan">
        <term><filename class="libraryfile">libubsan</filename></term>
        <listitem>

          <para>A biblioteca de tempo de execução do Undefined Behavior 
          Sanitizer</para>

          <indexterm zone="ch-system-gcc libubsan">
            <primary sortas="c-libubsan">libubsan</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
