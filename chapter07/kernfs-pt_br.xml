<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-tools-kernfs">
  <?dbhtml filename="kernfs-pt_br.html"?>

<!--

Direitos autorais (Copyright): (c) 2022 Jamenson Ferreira Espindula de Almeida Melo (<jafesp@gmail.com>).

Direitos autorais da versão modificada traduzida para a língua 
portuguesa escrita e falada no Brasil: (c) 2022 Jamenson Ferreira 
Espindula de Almeida Melo (<jafesp@gmail.com>).

  Este trabalho de tradução do livro "Linux From Scratch" é classificado
  pela Free Software Foundation como sendo uma "versão modificada" do
  mencionado livro.  Em assim sendo, na qualidade de tradutor, produtor
  da "versão modificada" e titular dos direitos autorais sobre a versão
  traduzida para a língua portuguesa do livro "Linux From Scratch",
  concede-se a seguinte permissão:

  É concedida permissão para copiar, distribuir e (ou) modificar este
  livro "Linux From Scratch", versão traduzida para a língua portuguesa,
  sob os termos da Licença de Documentação Livre GNU, versão 1.3 ou
  qualquer versão posterior publicada pela Free Software Foundation; sem
  Seções Invariantes, sem Textos de Capa Frontal e sem Textos de Quarta
  Capa.  Uma cópia da licença está incluída na seção intitulada "Licença
  de Documentação Livre GNU".

# Atenção: todos os documentos aqui publicados são distribuídos sem qualquer garantia, implícita e (ou) explícita.

  Permission is granted to copy, distribute and (or) modify this book
  "Linux From Scratch", translated into Brazilian Portuguese, under the
  terms of the GNU Free Documentation License, Version 1.3 or any later
  version published by the Free Software Foundation; with no Invariant
  Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of
  the license is included in the section entitled "GNU Free
  Documentation License".

# Warning: all the files herein published are released with no warranty, implicit and (or) explicit.
-->

  <title>Preparando Sistemas de Arquivos Virtuais de Kernel</title>

  <indexterm zone="ch-tools-kernfs">
    <primary sortas="e-/dev/">/dev/*</primary>
  </indexterm>

    <para>Vários sistemas de arquivos exportados pelo kernel são usados 
    para comunicar para e oriunda do próprio kernel.  Esses sistemas de 
    arquivos são virtuais uma vez que nenhum espaço de disco é usado por 
    eles.  O conteúdo dos sistemas de arquivos reside em memória.</para>

    <para>Comece criando diretórios nos quais os sistemas de arquivos 
    serão montados:</para>

<screen><userinput>mkdir -pv $LFS/{dev,proc,sys,run}</userinput></screen>

  <sect2 id="ch-tools-bindmount">
    <title>Montando e Povoando /dev</title>

      <para>Durante uma inicialização normal, o kernel monta 
      automaticamente o sistema de arquivos 
      <systemitem class="filesystem">devtmpfs</systemitem> no diretório 
      <filename class="directory">/dev</filename>, e permite que os dispositivos 
      sejam criados dinamicamente naquele sistema de arquivos virtual 
      conforme eles sejam detectados ou acessados.  A criação de 
      dispositivo geralmente é feita durante o processo de inicialização 
      pelo kernel e Udev.  Uma vez que esse novo sistema ainda não tem 
      Udev e ainda não foi inicializado, é necessário montar e povoar 
      <filename class="directory">/dev</filename> manualmente. Isso é 
      conseguido montando vinculadamente o diretório 
      <filename class="directory">/dev</filename> do sistema anfitrião.  Uma 
      montagem vinculada é um tipo especial de montagem que permite que 
      você crie um espelho de um diretório ou ponto de montagem para 
      alguma outra localização.  Use o seguinte comando para conseguir 
      isso:</para>

<screen><userinput>mount -v --bind /dev $LFS/dev</userinput></screen>

  </sect2>

  <sect2 id="ch-tools-kernfsmount">
    <title>Montando Sistemas de Arquivos Virtuais de Kernel</title>

      <para>Agora monte os restantes sistemas de arquivos virtuais de 
      kernel:</para>

<screen><userinput>mount -v --bind /dev/pts $LFS/dev/pts
mount -vt proc proc $LFS/proc
mount -vt sysfs sysfs $LFS/sys
mount -vt tmpfs tmpfs $LFS/run</userinput></screen>

      <para>Em alguns sistemas anfitrião, <filename>/dev/shm</filename> 
      é um link simbólico para 
      <filename class="directory">/run/shm</filename>.  O tmpfs /run foi montado 
      acima então, nesse caso, apenas um diretório precisa ser 
      criado.</para>

<screen><userinput>if [ -h $LFS/dev/shm ]; then
  mkdir -pv $LFS/$(readlink $LFS/dev/shm)
fi</userinput></screen>

  </sect2>

</sect1>
