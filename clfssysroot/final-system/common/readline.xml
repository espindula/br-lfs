<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-readline" role="wrap">
  <?dbhtml filename="readline.html"?>

  <title>Readline-&readline-version;</title>

  <indexterm zone="ch-system-readline">
    <primary sortas="a-Readline">Readline</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Readline package is a set of libraries that offers command-line
    editing and history capabilities.</para>

  </sect2>

  &env-target;

  <sect2 role="installation">
    <title>Installation of Readline</title>

    <para os="p1">The following patch contains updates from the maintainer. The
    maintainer of Readline only releases these patches to fix serious issues:</para>

<screen os="p2"><userinput>patch -Np1 -i ../&readline-branch_update-patch;</userinput></screen>

    <para os="s1">This option forces Readline to link against the
          <filename class="libraryfile">libncursesw</filename> library:</para>

<screen os="s2"><userinput>sed -i 's:^SHLIB_LIBS=:SHLIB_LIBS=-lncursesw:' support/shobj-conf</userinput></screen>

    <para os="a">Prepare Readline for compilation:</para>

<screen os="b"><userinput>./configure --build=${CLFS_HOST} --host=${CLFS_TARGET} \
    --prefix=/usr --libdir=/lib</userinput></screen>

    <para os="c">Compile the package:</para>

<screen os="d"><userinput>make</userinput></screen>

    <para os="e">Install the package:</para>

<screen os="f"><userinput>make DESTDIR=${CLFS} install</userinput></screen>

    <para os="h">Install the documentation:</para>

<screen os="i"><userinput>make DESTDIR=${CLFS} install-doc</userinput></screen>

    <para os="j">Now move the static libraries to a more appropriate location:</para>

<screen os="k"><userinput>mv -v ${CLFS}/lib/lib{readline,history}.a ${CLFS}/usr/lib</userinput></screen>

    <para os="l">Next, remove the <filename class="extension">.so</filename>
    files in <filename class="directory">/lib</filename> and relink them into
    <filename class="directory">/usr/lib</filename>.</para>

<screen os="m"><userinput>rm -v ${CLFS}/lib/lib{readline,history}.so
ln -sfv ../../lib/libreadline.so.&readline-version2; ${CLFS}/usr/lib/libreadline.so
ln -sfv ../../lib/libhistory.so.&readline-version2; ${CLFS}/usr/lib/libhistory.so</userinput></screen>

  </sect2>

  <sect2 id="contents-readline" role="content">
    <title>Contents of Readline</title>

    <segmentedlist>
      <segtitle>Installed libraries</segtitle>

      <seglistitem>
        <seg>libhistory.[a,so], and libreadline.[a,so]</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="libhistory">
        <term><filename class="libraryfile">libhistory</filename></term>
        <listitem>
          <para>Provides a consistent user interface
          for recalling lines of history</para>
          <indexterm zone="ch-system-readline libhistory">
            <primary sortas="c-libhistory">libhistory</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libreadline">
        <term><filename class="libraryfile">libreadline</filename></term>
        <listitem>
          <para>Aids in the consistency of user interface
          across discrete programs that need to provide a command line
          interface</para>
          <indexterm zone="ch-system-readline libreadline">
            <primary sortas="c-libreadline">libreadline</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
