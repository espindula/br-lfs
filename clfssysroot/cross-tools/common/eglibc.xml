<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
]>

<sect1 id="ch-cross-tools-eglibc" role="wrap">
  <?dbhtml filename="eglibc.html"?>

  <title>EGLIBC-&eglibc-version;</title>

  <indexterm zone="ch-cross-tools-eglibc">
    <primary sortas="a-EGLIBC">EGLIBC</primary>
    <secondary>cross tools</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The EGLIBC package contains the main C library. This library provides
    the basic routines for allocating memory, searching directories, opening and
    closing files, reading and writing files, string handling, pattern matching,
    arithmetic, and so on.</para>

  </sect2>

  <sect2 role="installation">
    <title>Installation of EGLIBC</title>

    <note os="a">
      <para>Some packages outside of CLFS suggest installing GNU libiconv in
      order to translate data from one encoding to another. The project's
      home page (<ulink url="http://www.gnu.org/software/libiconv/"/>) says
      <quote>This library provides an <function>iconv()</function>
      implementation, for use on systems which don't have one, or whose
      implementation cannot convert from/to Unicode.</quote> EGLIBC provides
      an <function>iconv()</function> implementation and can convert from/to
      Unicode, therefore libiconv is not required on an CLFS system.</para>
    </note>

    <para os="p1">EGLIBC has various issues addressed by the following patch:</para>

<screen os="p2"><userinput>patch -Np1 -i ../&eglibc-fixes-patch;</userinput></screen>

    <para os="s1">Disable linking to <filename>libgcc_eh</filename>:</para>

<screen os="s2"><userinput>cp -v Makeconfig{,.orig}
sed -e 's/-lgcc_eh//g' Makeconfig.orig > Makeconfig</userinput></screen>

    <para os="b">The EGLIBC documentation recommends building EGLIBC outside of the
    source directory in a dedicated build directory:</para>

<screen os="c"><userinput>mkdir -v ../eglibc-build
cd ../eglibc-build</userinput></screen>

    <para os="d">The following lines need to be added to
    <filename>config.cache</filename> for EGLIBC to support NPTL:</para>

<screen os="e"><userinput>cat &gt; config.cache &lt;&lt; EOF
libc_cv_forced_unwind=yes
libc_cv_c_cleanup=yes
libc_cv_gnu89_inline=yes
EOF</userinput></screen>

    <para os="f">The following line needs to be added to
    <filename>configparms</filename> to adjust installation paths:</para>

<screen os="g"><userinput>cat &gt; configparms &lt;&lt; EOF
install_root=${CLFS}
EOF</userinput></screen>

    <para os="h">Prepare EGLIBC for compilation:</para>

<screen os="i"><userinput>BUILD_CC="gcc" CC="${CLFS_TARGET}-gcc" \
    AR="${CLFS_TARGET}-ar" RANLIB="${CLFS_TARGET}-ranlib" \
    ../eglibc-&eglibc-version;/configure --prefix=/usr \
    --libexecdir=/usr/lib/eglibc --host=${CLFS_TARGET} --build=${CLFS_HOST} \
    --disable-profile --enable-add-ons --with-tls --enable-kernel=2.6.0 \
    --with-__thread --with-binutils=${CLFS}/cross-tools/bin \
    --with-headers=${CLFS}/usr/include --cache-file=config.cache</userinput></screen>

    <variablelist os="j">
      <title>The meaning of the new configure options:</title>

      <varlistentry os="j1">
        <term><parameter>BUILD_CC="gcc"</parameter></term>
        <listitem>
          <para>This tells EGLIBC to use the compiler on the host system. This is
          used to create the tools EGLIBC uses during its build.</para>
        </listitem>
      </varlistentry>

      <varlistentry os="j2">
        <term><parameter>CC="${CLFS_TARGET}-gcc"</parameter></term>
        <listitem>
          <para>This forces EGLIBC to use the GCC compiler that we made for our target
          architecture.</para>
        </listitem>
      </varlistentry>

      <varlistentry os="j3">
        <term><parameter>AR="${CLFS_TARGET}-ar"</parameter></term>
        <listitem>
          <para>This forces EGLIBC to use the <command>ar</command> utility
          we made for our target architecture.</para>
        </listitem>
      </varlistentry>

      <varlistentry os="j4">
        <term><parameter>RANLIB="${CLFS_TARGET}-ranlib"</parameter></term>
        <listitem>
          <para>This forces EGLIBC to use the <command>ranlib</command> utility
          we made for our target architecture.</para>
        </listitem>
      </varlistentry>

      <varlistentry os="j5">
        <term><parameter>--disable-profile</parameter></term>
        <listitem>
          <para>This builds the libraries without profiling information.
          Omit this option if profiling on the temporary tools is necessary.</para>
        </listitem>
      </varlistentry>

      <varlistentry os="j6">
        <term><parameter>--enable-add-ons</parameter></term>
        <listitem>
          <para>This tells EGLIBC to utilize all add-ons that are
          available.</para>
        </listitem>
      </varlistentry>

      <varlistentry os="j7">
        <term><parameter>--with-tls</parameter></term>
        <listitem>
          <para>This tells EGLIBC to use Thread Local Storage.</para>
        </listitem>
      </varlistentry>

      <varlistentry os="j8">
        <term><parameter>--with-__thread</parameter></term>
        <listitem>
          <para>This tells EGLIBC to use use the __thread for libc and
          libpthread builds.</para>
        </listitem>
      </varlistentry>

      <varlistentry os="j9">
        <term><parameter>--with-binutils=${CLFS}/cross-tools/bin</parameter></term>
        <listitem>
          <para>This tells EGLIBC to use the Binutils that are specific to
          our target architecture.</para>
        </listitem>
      </varlistentry>

      <varlistentry os="j10">
        <term><parameter>--cache-file=config.cache</parameter></term>
        <listitem>
          <para>This tells EGLIBC to utilize a premade cache file.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para os="k">During this stage the following warning might appear:</para>

<blockquote os="l"><screen><computeroutput>configure: WARNING:
*** These auxiliary programs are missing or
*** incompatible versions: msgfmt
*** some features will be disabled.
*** Check the INSTALL file for required versions.</computeroutput></screen></blockquote>

    <para os="m">The missing or incompatible <command>msgfmt</command> program is
    generally harmless. This <command>msgfmt</command> program is part of the
    Gettext package which the host distribution should provide.</para>

    <para os="n">Compile the package:</para>

<screen os="o"><userinput>make</userinput></screen>

    <para os="p">Install the package:</para>

<screen os="q"><userinput>make install</userinput></screen>

  </sect2>

  <sect2 id="i18n-eglibc" role="configuration">
    <title>Internationalization</title>

    <para>To install locales we need to compile our own version of
    localedef to run nativly on the host system, so we have to extract the
    eglibc-localedef-&eglibc-version; package into our eglibc-&eglibc-version;
    directory:</para>

<screen><userinput>tar -jxvf ../eglibc-localedef-&eglibc-ports-dl-version;.tar.bz2
cd localedef</userinput></screen>

    <para>Prepare localedef for compilation:</para>

<screen><userinput>./configure --prefix=${CLFS}/usr \
    --with-glibc=../../eglibc-&eglibc-version;</userinput></screen>

    <para>Compile the package:</para>

<screen><userinput>make</userinput></screen>

    <para>The locales that can make the system respond in a different
    language were not installed with EGLIBC. Install them
    with:</para>

<screen><userinput>make install-locales</userinput></screen>

    <para>To save time, an alternative to running the previous command (which
    generates and installs every locale listed in the
    eglibc-&eglibc-version;/localedata/SUPPORTED file) is to install only
    those locales that are wanted and needed. This can be achieved by using
    the <command>localedef</command> command. Information on this command is
    located in the <filename>INSTALL</filename> file in the EGLIBC source.
    However, there are a number of locales that are essential in order for the
    tests of future packages to pass, in particular, the
    <emphasis>libstdc++</emphasis> tests from GCC. The following instructions,
    instead of the <parameter>install-locales</parameter> target used above,
    will install the minimum set of locales necessary for the tests to run
    successfully:</para>

<screen role="nodump"><userinput>make SUPPORTED-LOCALES="de_DE.UTF-8/UTF-8 de_DE/ISO-8859-1 de_DE@euro/ISO-8859-15 \
    en_HK.UTF-8/UTF-8 en_HK/ISO-8859-1 \
    en_PH.UTF-8/UTF-8 en_PH/ISO-8859-1 \
    en_US.UTF-8/UTF-8 en_US/ISO-8859-1 \
    es_MX.UTF-8/UTF-8 es_MX/ISO-8859-1 \
    fa_IR/UTF-8 \
    fr_FR.UTF-8/UTF-8 fr_FR/ISO-8859-1 fr_FR@euro/ISO-8859-15 \
    it_IT.UTF-8/UTF-8 it_IT/ISO-8859-1 \
    ja_JP.EUC-JP/EUC-JP ja_JP.UTF-8/UTF-8" install-locales</userinput></screen>

    <para>Some locales installed by the <command>make
    localedata/install-locales</command> command above are not properly
    supported by some applications that are in the CLFS and CBLFS books. Because
    of the various problems that arise due to application programmers making
    assumptions that break in such locales, CLFS should not be used in locales
    that utilize multibyte character sets (including UTF-8) or right-to-left
    writing order.  Numerous unofficial and unstable patches are required to
    fix these problems, and it has been decided by the CLFS developers not to
    support such complex locales at this time. This applies to the ja_JP and
    fa_IR locales as well&mdash;they have been installed only for GCC and
    Gettext tests to pass, and the <command>watch</command> program (part of
    the Procps package) does not work properly in them. Various attempts to
    circumvent these restrictions are documented in internationalization-related
    hints.</para>

  </sect2>

  <sect2 id="conf-eglibc" role="configuration">
    <title>Configuring EGLIBC</title>

    <indexterm zone="conf-eglibc">
      <primary sortas="e-/etc/nsswitch.conf">/etc/nsswitch.conf</primary>
    </indexterm>

    <indexterm zone="conf-eglibc">
      <primary sortas="e-/etc/localtime">/etc/localtime</primary>
    </indexterm>

    <para>The <filename>/etc/nsswitch.conf</filename> file needs to be created
    because, although EGLIBC provides defaults when this file is missing or
    corrupt, the EGLIBC defaults do not work well in a networked environment.
    The time zone also needs to be configured.</para>

    <para>Create a new file <filename>/etc/nsswitch.conf</filename> by running
    the following:</para>

<screen><userinput>cat &gt; ${CLFS}/etc/nsswitch.conf &lt;&lt; "EOF"
<literal># Begin /etc/nsswitch.conf

passwd: files
group: files
shadow: files

hosts: files dns
networks: files

protocols: files
services: files
ethers: files
rpc: files

# End /etc/nsswitch.conf</literal>
EOF</userinput></screen>

    <para>To determine the local time zone, run the following script:</para>

<screen role="nodump"><userinput>TZDIR="${CLFS}/usr/share/zoneinfo" ${CLFS}/usr/bin/tzselect</userinput></screen>

    <para>After answering a few questions about the location, the script will
    output the name of the time zone (e.g., <emphasis>EST5EDT</emphasis> or
    <emphasis>Canada/Eastern</emphasis>). Then create the
    <filename>/etc/localtime</filename> file by running:</para>

<screen><userinput>cp -v --remove-destination ${CLFS}/usr/share/zoneinfo/<replaceable>[xxx]</replaceable> \
    ${CLFS}/etc/localtime</userinput></screen>

    <para>Replace <replaceable>[xxx]</replaceable> with the name of the time zone
    that <command>tzselect</command> provided (e.g., Canada/Eastern).</para>

    <variablelist>
      <title>The meaning of the cp option:</title>

      <varlistentry>
        <term><parameter>--remove-destination</parameter></term>
        <listitem>
          <para>This is needed to force removal of the already existing symbolic
          link. The reason for copying the file instead of using a symlink is to
          cover the situation where <filename class="directory">/usr</filename>
          is on a separate partition. This could be important when booted into
          single user mode.</para>
        </listitem>
      </varlistentry>
    </variablelist>

  </sect2>

  <sect2 id="conf-ld" role="configuration">
    <title>Configuring The Dynamic Loader</title>

    <indexterm zone="conf-ld">
      <primary sortas="e-/etc/ld.so.conf">/etc/ld.so.conf</primary>
    </indexterm>

    <para>By default, the dynamic loader (<filename
    class="libraryfile">/lib/ld-linux.so.2</filename>) searches through
    <filename class="directory">/lib</filename> and <filename
    class="directory">/usr/lib</filename> for dynamic libraries that are
    needed by programs as they are run. However, if there are libraries in
    directories other than <filename class="directory">/lib</filename> and
    <filename class="directory">/usr/lib</filename>, these need to be
    added to the <filename>/etc/ld.so.conf</filename> file in order
    for the dynamic loader to find them. Two directories that are commonly
    known to contain additional libraries are <filename
    class="directory">/usr/local/lib</filename> and <filename
    class="directory">/opt/lib</filename>, so add those directories to the
    dynamic loader's search path.</para>

    <para>Create a new file <filename>/etc/ld.so.conf</filename> by running the
    following:</para>

<screen><userinput>cat &gt; ${CLFS}/etc/ld.so.conf &lt;&lt; "EOF"
<literal># Begin /etc/ld.so.conf

/usr/local/lib
/opt/lib

# End /etc/ld.so.conf</literal>
EOF</userinput></screen>

  </sect2>

  <sect2 id="contents-eglibc" role="content">
    <title>Contents of EGLIBC</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed libraries</segtitle>

      <seglistitem>
        <seg>catchsegv, gencat, getconf, getent, iconv, iconvconfig, ldconfig,
        ldd, lddlibc4, locale, localedef, mtrace, nscd,
        pcprofiledump, pt_chown, rpcgen, rpcinfo, sln, sprof, tzselect, xtrace,
        zdump, and zic</seg>
        <seg>ld.so, libBrokenLocale.[a,so], libSegFault.so, libanl.[a,so],
        libbsd-compat.a, libc.[a,so], libcrypt.[a,so], libdl.[a,so], libg.a,
        libieee.a, libm.[a,so], libmcheck.a, libmemusage.so, libnsl.a,
        libnss_compat.so, libnss_dns.so, libnss_files.so, libnss_hesiod.so,
        libnss_nis.so, libnss_nisplus.so, libpcprofile.so, libpthread.[a,so],
        libresolv.[a,so], librpcsvc.a, librt.[a,so], libthread_db.so, and
        libutil.[a,so]</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="catchsegv">
        <term><command>catchsegv</command></term>
        <listitem>
          <para>Can be used to create a stack trace when a program
          terminates with a segmentation fault</para>
          <indexterm zone="ch-cross-tools-eglibc catchsegv">
            <primary sortas="b-catchsegv">catchsegv</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gencat">
        <term><command>gencat</command></term>
        <listitem>
          <para>Generates message catalogues</para>
          <indexterm zone="ch-cross-tools-eglibc gencat">
            <primary sortas="b-gencat">gencat</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="getconf">
        <term><command>getconf</command></term>
        <listitem>
          <para>Displays the system configuration values for file system specific
          variables</para>
          <indexterm zone="ch-cross-tools-eglibc getconf">
            <primary sortas="b-getconf">getconf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="getent">
        <term><command>getent</command></term>
        <listitem>
          <para>Gets entries from an administrative database</para>
          <indexterm zone="ch-cross-tools-eglibc getent">
            <primary sortas="b-getent">getent</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="iconv">
        <term><command>iconv</command></term>
        <listitem>
          <para>Performs character set conversion</para>
          <indexterm zone="ch-cross-tools-eglibc iconv">
            <primary sortas="b-iconv">iconv</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="iconvconfig">
        <term><command>iconvconfig</command></term>
        <listitem>
          <para>Creates fastloading <command>iconv</command> module configuration
          files</para>
          <indexterm zone="ch-cross-tools-eglibc iconvconfig">
            <primary sortas="b-iconvconfig">iconvconfig</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ldconfig">
        <term><command>ldconfig</command></term>
        <listitem>
          <para>Configures the dynamic linker runtime bindings</para>
          <indexterm zone="ch-cross-tools-eglibc ldconfig">
            <primary sortas="b-ldconfig">ldconfig</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ldd">
        <term><command>ldd</command></term>
        <listitem>
          <para>Reports which shared libraries are required
          by each given program or shared library</para>
          <indexterm zone="ch-cross-tools-eglibc ldd">
            <primary sortas="b-ldd">ldd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lddlibc4">
        <term><command>lddlibc4</command></term>
        <listitem>
          <para>Assists <command>ldd</command> with object files</para>
          <indexterm zone="ch-cross-tools-eglibc lddlibc4">
            <primary sortas="b-lddlibc4">lddlibc4</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="locale">
        <term><command>locale</command></term>
        <listitem>
          <para>Tells the compiler to enable or disable the use of POSIX locales
          for built-in operations</para>
          <indexterm zone="ch-cross-tools-eglibc locale">
            <primary sortas="b-locale">locale</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="localedef">
        <term><command>localedef</command></term>
        <listitem>
          <para>Compiles locale specifications</para>
          <indexterm zone="ch-cross-tools-eglibc localedef">
            <primary sortas="b-localedef">localedef</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mtrace">
        <term><command>mtrace</command></term>
        <listitem>
          <para>Reads and interprets a memory trace file and
          displays a summary in human-readable format</para>
          <indexterm zone="ch-cross-tools-eglibc mtrace">
            <primary sortas="b-mtrace">mtrace</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nscd">
        <term><command>nscd</command></term>
        <listitem>
          <para>A daemon that provides a cache for the most common name
          service requests</para>
          <indexterm zone="ch-cross-tools-eglibc nscd">
            <primary sortas="b-nscd">nscd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pcprofiledump">
        <term><command>pcprofiledump</command></term>
        <listitem>
          <para>Dumps information generated by PC profiling</para>
          <indexterm zone="ch-cross-tools-eglibc pcprofiledump">
            <primary sortas="b-pcprofiledump">pcprofiledump</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pt_chown">
        <term><command>pt_chown</command></term>
        <listitem>
          <para>A helper program for <command>grantpt</command> to set the owner,
          group and access permissions of a slave pseudo terminal</para>
          <indexterm zone="ch-cross-tools-eglibc pt_chown">
            <primary sortas="b-pt_chown">pt_chown</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="rpcgen">
        <term><command>rpcgen</command></term>
        <listitem>
          <para>Generates C code to implement the Remote Procecure Call (RPC)
          protocol</para>
          <indexterm zone="ch-cross-tools-eglibc rpcgen">
            <primary sortas="b-rpcgen">rpcgen</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="rpcinfo">
        <term><command>rpcinfo</command></term>
        <listitem>
          <para>Makes an RPC call to an RPC server</para>
          <indexterm zone="ch-cross-tools-eglibc rpcinfo">
            <primary sortas="b-rpcinfo">rpcinfo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sln">
        <term><command>sln</command></term>
        <listitem>
          <para>A statically linked program that creates symbolic links</para>
          <indexterm zone="ch-cross-tools-eglibc sln">
            <primary sortas="b-sln">sln</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sprof">
        <term><command>sprof</command></term>
        <listitem>
          <para>Reads and displays shared object profiling data</para>
          <indexterm zone="ch-cross-tools-eglibc sprof">
            <primary sortas="b-sprof">sprof</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="tzselect">
        <term><command>tzselect</command></term>
        <listitem>
          <para>Asks the user about the location of the
          system and reports the corresponding time zone description</para>
          <indexterm zone="ch-cross-tools-eglibc tzselect">
            <primary sortas="b-tzselect">tzselect</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="xtrace">
        <term><command>xtrace</command></term>
        <listitem>
          <para>Traces the execution of a program by
          printing the currently executed function</para>
          <indexterm zone="ch-cross-tools-eglibc xtrace">
            <primary sortas="b-xtrace">xtrace</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="zdump">
        <term><command>zdump</command></term>
        <listitem>
          <para>The time zone dumper</para>
          <indexterm zone="ch-cross-tools-eglibc zdump">
            <primary sortas="b-zdump">zdump</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="zic">
        <term><command>zic</command></term>
        <listitem>
          <para>The time zone compiler</para>
          <indexterm zone="ch-cross-tools-eglibc zic">
            <primary sortas="b-zic">zic</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ld.so">
        <term><filename class="libraryfile">ld.so</filename></term>
        <listitem>
          <para>The helper program for shared library executables</para>
          <indexterm zone="ch-cross-tools-eglibc ld.so">
            <primary sortas="c-ld.so">ld.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libBrokenLocale">
        <term><filename class="libraryfile">libBrokenLocale</filename></term>
        <listitem>
          <para>Used by programs, such as Mozilla, to solve broken locales</para>
          <indexterm zone="ch-cross-tools-eglibc libBrokenLocale">
            <primary sortas="c-libBrokenLocale">libBrokenLocale</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libSegFault">
        <term><filename class="libraryfile">libSegFault</filename></term>
        <listitem>
          <para>The segmentation fault signal handler</para>
          <indexterm zone="ch-cross-tools-eglibc libSegFault">
            <primary sortas="c-libSegFault">libSegFault</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libanl">
        <term><filename class="libraryfile">libanl</filename></term>
        <listitem>
          <para>An asynchronous name lookup library</para>
          <indexterm zone="ch-cross-tools-eglibc libanl">
            <primary sortas="c-libanl">libanl</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libbsd-compat">
        <term><filename class="libraryfile">libbsd-compat</filename></term>
        <listitem>
          <para>Provides the portability needed
          in order to run certain Berkey Software Distribution (BSD) programs
          under Linux</para>
          <indexterm zone="ch-cross-tools-eglibc libbsd-compat">
            <primary sortas="c-libbsd-compat">libbsd-compat</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libc">
        <term><filename class="libraryfile">libc</filename></term>
        <listitem>
          <para>The main C library</para>
          <indexterm zone="ch-cross-tools-eglibc libc">
            <primary sortas="c-libc">libc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libcrypt">
        <term><filename class="libraryfile">libcrypt</filename></term>
        <listitem>
          <para>The cryptography library</para>
          <indexterm zone="ch-cross-tools-eglibc libcrypt">
            <primary sortas="c-libcrypt">libcrypt</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libdl">
        <term><filename class="libraryfile">libdl</filename></term>
        <listitem>
          <para>The dynamic linking interface library</para>
          <indexterm zone="ch-cross-tools-eglibc libdl">
            <primary sortas="c-libdl">libdl</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libg">
        <term><filename class="libraryfile">libg</filename></term>
        <listitem>
          <para>A runtime library for <command>g++</command></para>
          <indexterm zone="ch-cross-tools-eglibc libg">
            <primary sortas="c-libg">libg</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libieee">
        <term><filename class="libraryfile">libieee</filename></term>
        <listitem>
          <para>The Institute of Electrical and Electronic Engineers (IEEE)
          floating point library</para>
          <indexterm zone="ch-cross-tools-eglibc libieee">
            <primary sortas="c-libieee">libieee</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libm">
        <term><filename class="libraryfile">libm</filename></term>
        <listitem>
          <para>The mathematical library</para>
          <indexterm zone="ch-cross-tools-eglibc libm">
            <primary sortas="c-libm">libm</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libmcheck">
        <term><filename class="libraryfile">libmcheck</filename></term>
        <listitem>
          <para>Contains code run at boot</para>
          <indexterm zone="ch-cross-tools-eglibc libmcheck">
            <primary sortas="c-libmcheck">libmcheck</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libmemusage">
        <term><filename class="libraryfile">libmemusage</filename></term>
        <listitem>
          <para>Used by <command>memusage</command> (included in EGLIBC, but
          not built in a base CLFS system as it has additional dependencies)
          to help collect information about the memory usage of a program</para>
          <indexterm zone="ch-cross-tools-eglibc libmemusage">
            <primary sortas="c-libmemusage">libmemusage</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnsl">
        <term><filename class="libraryfile">libnsl</filename></term>
        <listitem>
          <para>The network services library</para>
          <indexterm zone="ch-cross-tools-eglibc libnsl">
            <primary sortas="c-libnsl">libnsl</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libnss">
        <term><filename class="libraryfile">libnss</filename></term>
        <listitem>
          <para>The Name Service Switch libraries, containing functions for
          resolving host names, user names, group names, aliases, services,
          protocols, etc.</para>
          <indexterm zone="ch-cross-tools-eglibc libnss">
            <primary sortas="c-libnss">libnss</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libpcprofile">
        <term><filename class="libraryfile">libpcprofile</filename></term>
        <listitem>
          <para>Contains profiling functions used to track the amount of CPU
          time spent in specific source code lines</para>
          <indexterm zone="ch-cross-tools-eglibc libpcprofile">
            <primary sortas="c-libpcprofile">libpcprofile</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libpthread">
        <term><filename class="libraryfile">libpthread</filename></term>
        <listitem>
          <para>The POSIX threads library</para>
          <indexterm zone="ch-cross-tools-eglibc libpthread">
            <primary sortas="c-libpthread">libpthread</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libresolv">
        <term><filename class="libraryfile">libresolv</filename></term>
        <listitem>
          <para>Contains functions for creating, sending, and interpreting
          packets to the Internet domain name servers</para>
          <indexterm zone="ch-cross-tools-eglibc libresolv">
            <primary sortas="c-libresolv">libresolv</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="librpcsvc">
        <term><filename class="libraryfile">librpcsvc</filename></term>
        <listitem>
          <para>Contains functions providing miscellaneous RPC services</para>
          <indexterm zone="ch-cross-tools-eglibc librpcsvc">
            <primary sortas="c-librpcsvc">librpcsvc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="librt">
        <term><filename class="libraryfile">librt</filename></term>
        <listitem>
          <para>Contains functions providing most of the interfaces specified by
          the POSIX.1b Realtime Extension</para>
          <indexterm zone="ch-cross-tools-eglibc librt">
            <primary sortas="c-librt">librt</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libthread_db">
        <term><filename class="libraryfile">libthread_db</filename></term>
        <listitem>
          <para>Contains functions useful for
          building debuggers for multi-threaded programs</para>
          <indexterm zone="ch-cross-tools-eglibc libthread_db">
            <primary sortas="c-libthread_db">libthread_db</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libutil">
        <term><filename class="libraryfile">libutil</filename></term>
        <listitem>
          <para>Contains code for <quote>standard</quote> functions used in
          many different Unix utilities</para>
          <indexterm zone="ch-cross-tools-eglibc libutil">
            <primary sortas="c-libutil">libutil</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
