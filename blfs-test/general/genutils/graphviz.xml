<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
    "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
   <!ENTITY % general-entities SYSTEM "../../general.ent">
   %general-entities;
   
   <!ENTITY graphviz-download-http "http://graphviz.org/pub/graphviz/stable/SOURCES/graphviz-&graphviz-version;.tar.gz">
   <!ENTITY graphviz-download-ftp  "&gentoo-ftp-repo;/graphviz-&graphviz-version;.tar.gz">
   <!ENTITY graphviz-md5sum        "6f45946fa622770c45609778c0a982ee">
   <!ENTITY graphviz-size          "17 Mio">
   <!ENTITY graphviz-buildsize     "142 Mio">
   <!ENTITY graphviz-time          "1.5 SBU">
   
]>
<sect1 id="graphviz" xreflabel="Graphviz-&graphviz-version;">
   <?dbhtml filename="graphviz.html"?>
   
   <sect1info>
      <othername>$LastChangedBy: andy $</othername>
      <date>$Date: 2012-02-17 15:43:28 +0100 (ven. 17 févr. 2012) $</date>
   </sect1info>
   
   <title>Graphviz-&graphviz-version;</title> 
   
   <indexterm zone="graphviz">
      <primary sortas="a-Graphviz"> Graphviz </primary>
   </indexterm>
   
   <sect2 role="package">
      <title>Introduction à Graphviz</title> 
      
      <para>
         Le paquet <application>Graphviz</application> contient le logiciel de visualisation de
         graphes. La visualisation is de Graphes est une manière de représenter des informations
         structurelles tels que des diagrammes de graphes abstraits et de réseaux.
         <application>Graphviz</application> a plusieurs programmes principaux de présentation de
         graphes. Il contient aussi des interfaces graphiques interactives et de Web, des outils,
         des bibliothèques, des langues et des bindings auxiliaires. 
      </para> 
      
      <para>
         Les programmes de présentation <application>Graphviz</application> prennent en charge les
         descriptions de graphes par un langage en texte simple, et ils créent des diagrammes dans
         divers formats utiles tels que des images ou des SVG pour pages Web, Postscript pour les
         insérer dans des documents PDF ou autres, ou en tant qu'objets affichés dans un navigateur
         de graphes interactif. (Graphviz supporte aussi les GXL et le langage XML.) En pratique,
         les graphes sont en général générés à partir de sources de données externes, mais vous
         pouvez aussi les créer et les éditer à la main, soit en tant que fichiers textes basiques,
         soit à l'intérieur d'un éditeur graphique. (Graphviz n'a pas été conçu pour remplacer
         <application>Visio</application> , vous seriez donc probablement frustrés si vous essayiez
         de l'utiliser de cette façon.) 
      </para> 
      
      <para>
         Ce paquet est utile pour dessiner automatiquement des graphes, qui ont des applications
         importantes dans la conception de logiciels, les bases de données et le dessin d'un réseau
         Internet, et dans des interfaces visuelles dans de nombreux domaines. Graphviz a diverses
         fonctionnalités utiles pour les diagrammes concrets, comme des options de couleurs, de
         polices, de présentation de n&oelig;uds de tableaux, de styles de lignes, d'hyperlien et de
         cadres personnalisés. 
      </para> 
      
      <bridgehead renderas="sect3"> Informations sur le paquet </bridgehead>
      <itemizedlist spacing="compact">
         <listitem>
            <para>
               Téléchargement (HTTP): <ulink url="&graphviz-download-http;"/> 
            </para> 
         </listitem>
         <listitem>
            <para>
               Téléchargement (FTP): <ulink url="&graphviz-download-ftp;"/> 
            </para> 
         </listitem>
         <listitem>
            <para>
               Somme de contrôle MD5 du téléchargement: &graphviz-md5sum; 
            </para> 
         </listitem>
         <listitem>
            <para>
               Taille du téléchargement: &graphviz-size; 
            </para> 
         </listitem>
         <listitem>
            <para>
               Estimation de l'espace disque requis: &graphviz-buildsize; 
            </para> 
         </listitem>
         <listitem>
            <para>
               Estimation du temps de construction: &graphviz-time; 
            </para> 
         </listitem>
      </itemizedlist>
      
      <bridgehead renderas="sect3"> Dépendances de Graphviz </bridgehead>
      
      <bridgehead renderas="sect4"> Facultatives </bridgehead>
      
      <para role="optional">
         <xref linkend="expat"/>, <xref linkend="freetype2"/>
         , <xref linkend="fontconfig"/>, <xref linkend="freeglut"/>
         , <xref linkend="libpng"/>, <xref linkend="x-window-system"/>
         , <xref linkend="pango"/>(construit avec le support <application>cairo</application> ),
         <xref linkend="gtk2"/>
         , <xref linkend="libglade"/>, <xref linkend="librsvg"/>
         , <xref linkend="gs"/>, <xref linkend="tcl"/>
         , <xref linkend="tk"/>, <ulink url="http://openil.sourceforge.net/projects.php"> DevIL
         </ulink>
         , <ulink url="http://sourceforge.net/projects/lasi/"> libLASi </ulink>
         , <ulink url="http://www.freedesktop.org/wiki/Software/glitz"> glitz </ulink>
         , <ulink url="http://www.libgd.org/"> GD Library </ulink>
         , <xref linkend="libjpeg"/>(seulement si on utilise la copie interne du code source de la
         bibliothèque GD) et <ulink url="http://www.perens.com/FreeSoftware/ElectricFence/">
         Electric Fence </ulink>
      </para> 
      
      <bridgehead renderas="sect4"> Facultatifs (pour construire les bindings de langages) </bridgehead>
      
      <para role="optional">
         <ulink url="http://www.swig.org/"> SWIG </ulink>
         (vous devez installer <application>SWIG</application> , sinon aucun binding ne sera
         construit), <xref linkend="guile"/>, <xref linkend="icedtea6"/>
         ou <xref linkend="jdk"/>, <xref linkend="php"/>
         , <xref linkend="python2"/>, <xref linkend="ruby"/>
         , <xref linkend="tcl"/>, C# ( <ulink
         url="http://www.southern-storm.com.au/portable_net.html"> DotGNU Portable.NET </ulink>
         ou <ulink url="http://www.mono-project.com/Main_Page"> Mono </ulink>
         ), <ulink url="http://www.iolanguage.com/about/"> Io </ulink>
         , <ulink url="http://www.r-project.org/"> R </ulink>
         , <ulink url="http://www.lua.org/"> Lua </ulink>
         et <ulink url="http://caml.inria.fr/ocaml/index.en.html"> Objective Caml </ulink>
      </para> 
      
      <para condition="html" role="usernotes">
         Notes utilisateur: <ulink url="&blfs-wiki;/graphviz"/> 
      </para> 
      
   </sect2>
   
   <sect2 role="installation">
      <title>Installation de Graphviz</title> 
      
      <para>
         Installez <application>Graphviz</application> en lançant les commandes suivantes: 
      </para> 
      
<screen><userinput>./configure --prefix=/usr &amp;&amp;
make</userinput></screen>
      
      <para>
         Ce paquet n'est pas fourni avec une suite de tests qui fournisse des résultats
         significatifs. 
      </para> 
      
      <para>
         Maintenant, en tant qu'utilisateur <systemitem class="username"> root </systemitem>&nbsp;: 
         
      </para> 
      
<screen role="root">
<userinput>make install</userinput></screen>
      
      <para>
         Si vous le désirez, créez un lien symbolique dans le répertoire des documents système vers
         la documentation installée dans <filename
         class='directory'>/usr/share/graphviz/doc</filename> en utilisant la commande suivante en
         tant qu'utilisateur <systemitem class="username"> root </systemitem>&nbsp;:  
      </para> 
      
<screen role="root">
<userinput>ln -v -s /usr/share/graphviz/doc \
         /usr/share/doc/graphviz-&graphviz-version;</userinput></screen>
      
   </sect2>
   
   <sect2 role="configuration">
      <title>Configuration de Graphviz</title> 
      
      <sect3 id="graphviz-config">
         <title>Fichiers de configuration</title> 
         
         <para>
            <filename>/usr/lib/graphviz/config</filename> 
         </para> 
         <indexterm zone="graphviz graphviz-config">
            <primary sortas="e-usr-share-graphviz-config"> /usr/share/graphviz/config </primary>
         </indexterm>
         
      </sect3>
      
      <sect3>
         <title>Informations de configuration</title> 
         
         <para>
         Il n'y a besoin d'aucune configuration particulière de <application>Graphviz</application>
         . Vous pourriez envisager d'installer des plugins et des outils supplémentaires disponibles
         sur la page de téléchargement à <ulink url="http://www.graphviz.org/Download_source.php"/>
         pour des fonctionnalités supplémentaires. Si vous installez des plugins supplémentaires,
         vous pouvez lancer <command>dot_static -c</command> (en tant qu'utilisateur <systemitem
         class="username"> root </systemitem>) pour mettre à jour le fichier
         <filename>config</filename> dans <filename class='directory'> /usr/lib/graphviz</filename>
         . </para> 
         
      </sect3>
      
   </sect2>
   
   <sect2 role="content">
      <title>Contenu</title> 
      
      <segmentedlist>
         <segtitle>Programmes installés</segtitle>
         <segtitle>Bibliothèques installées</segtitle>
         <segtitle>Répertoires installés</segtitle>
         
         <seglistitem>
            <seg>
               acyclic, bcomps, ccomps, circo, dijkstra, dot, dot2gxl, dot_static, dotty, fdp, gc,
               gvcolor, gvpack, gvpr, gxl2dot, lefty, lneato, nop, prune, sccmap, tred, twopi et
               unflatten
            </seg>
            <seg>
               libagraph.{so,a}, libcdt.{so,a}, libexpr.{so,a}, libgraph.{so,a}, libpack.{so,a},
               libpathplan.{so,a}, additional support libraries et language bindings
            </seg>
            <seg>
               /usr/include/graphviz, /usr/lib/graphviz et /usr/share/graphviz
            </seg>
         </seglistitem>
      </segmentedlist>
      <variablelist>
      
      <bridgehead renderas="sect3"> Descriptions courtes </bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>
      
      <varlistentry id="acyclic">
         <term><command>acyclic</command> </term>
         <listitem>
            <para>
               est un filtre qui prend en charge un graphe dirigé en entrée et sort une copie du
               graphe avec les limites inversées pour faire un graphe acyclique. Les bords inversés
               s'appliquent à tous les attributs des bords d'origine. 
            </para> 
            <indexterm zone="graphviz acyclic">
               <primary sortas="b-acyclic"> acyclic </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="bcomps">
         <term><command>bcomps</command> </term>
         <listitem>
            <para>
               décompose des graphes dans leur composants biconnectés, en affichant les composants
               sur la sortie standard. 
            </para> 
            <indexterm zone="graphviz bcomps">
               <primary sortas="b-bcomps"> bcomps </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="ccomps">
         <term><command>ccomps</command> </term>
         <listitem>
            <para>
               décompose des graphes dans leur composants connectés, en affichant les composants sur
               la sortie standard. 
            </para> 
            <indexterm zone="graphviz ccomps">
               <primary sortas="b-ccomps"> ccomps </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="circo">
         <term><command>circo</command> </term>
         <listitem>
            <para>
               dessine des graphes en utilisant une présentation circulaire. L'outil identifie les
               composants biconnectés et dessine les n&oelig;uds d'un composant sur un cercle.
               L'arborescence des blocs de points de coupure est ensuite affiché en utilisant un
               algorithme de radian récursif. Les croisements de bords dans un cercle sont minimisés
               en mettant dans le périmètre du cercle autant de bords que possible. En particulier,
               si un composant déborde du plan (outerplanar), le composant aura une présentation
               plane. 
            </para> 
            <indexterm zone="graphviz circo">
               <primary sortas="b-circo"> circo </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="dijkstra">
         <term><command>dijkstra</command> </term>
         <listitem>
            <para>
               lit un flux de graphes et calcule pour chacun d'eux la distance entre chaque chaque
               n&oelig;uds et son origine. 
            </para> 
            <indexterm zone="graphviz dijkstra">
               <primary sortas="b-dijkstra"> dijkstra </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="dot">
         <term><command>dot</command> </term>
         <listitem>
            <para>
               dessine des graphes droits. Il fonctionne bien sur des graphes DAGs et autres qui
               peuvent être dessinés sous une forme hiérarchisée. Il lit les fichiers de graphes
               avec des attributs et il écrit les dessins. Par défaut, le point du format de sortie
               est le fichier d'entrée avec la présentation des coordonnées transmises. 
            </para> 
            <indexterm zone="graphviz dot">
               <primary sortas="b-dot"> dot </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="dot2gxl">
         <term><command>dot2gxl</command> </term>
         <listitem>
            <para>
               fait des conversions de graphes représentés en GXL et dans le langage DOT. Sauf si
               vous spécifier un type de conversion en utilisant un drapeau,
               <command>gxl2dot</command> déduira le type de conversion à partir de l'extension du
               fichier d'entrée, une extension <filename class='extension'>.dot</filename> donnant
               une conversion de DOT en GXL, et une extension <filename class='extension'>
               .gxl</filename> donnant une conversion de GXL en DOT. 
            </para> 
            <indexterm zone="graphviz dot2gxl">
               <primary sortas="b-dot2gxl"> dot2gxl </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="dot_static">
         <term><command>dot_static</command> </term>
         <listitem>
            <para>
               est une version de <command>dot</command> qui contient toutes les bibliothèques
               <application>Graphviz</application> compilées de façon statique. 
            </para> 
            <indexterm zone="graphviz dot_static">
               <primary sortas="b-dot_static"> dot_static </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="dotty">
         <term><command>dotty</command> </term>
         <listitem>
            <para>
               est un éditeur de graphe pour le système X Window. Vous pouvez le lancer comme un
               éditeur autonome ou comme un appui pour des applications qui utilisent des graphes.
               Il peut contrôler la visualisation de différents graphes sur des fenêtres multiples. 
            </para> 
            <indexterm zone="graphviz dotty">
               <primary sortas="b-dotty"> dotty </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="fdp">
         <term><command>fdp</command> </term>
         <listitem>
            <para>
               dessine des graphes non droits en utilisant un modèle <quote>spring </quote> . Il se
               base sur une approche obligatoirement droite, dans l'esprit de Fruchterman et de
               Reingold. 
            </para> 
            <indexterm zone="graphviz fdp">
               <primary sortas="b-fdp"> fdp </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="gc-graphviz">
         <term><command>gc</command> </term>
         <listitem>
            <para>
               est un graphe analogue à <command>wc</command> dans le sens où il affiche sur la
               sortie standard le nombre de n&oelig;uds, de bords, de composants connectés ou de
               clusters contenus dans les fichiers d'entrée. Il affiche aussi un résultat total de
               tous les graphes si vous donnez plus d'un graphe. 
            </para> 
            <indexterm zone="graphviz gc-graphviz">
               <primary sortas="b-gc"> gc </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="gvcolor">
         <term><command>gvcolor</command> </term>
         <listitem>
            <para>
               est un filtre qui règle les couleurs des n&oelig;uds à partir des valeurs du point de
               départ. Les couleurs s'étendent le long des bords des pieds à la tête et sont
               alignées (comme les vecteurs HSB) aux n&oelig;uds. Le graphe doit déjà avoir été
               traité par <command>dot</command> . 
            </para> 
            <indexterm zone="graphviz gvcolor">
               <primary sortas="b-gvcolor"> gvcolor </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="gvpack">
         <term><command>gvpack</command> </term>
         <listitem>
            <para>
               lit le fil de graphes, combine les graphes dans une seule présentation et produit un
               graphe unique représentant l'union des graphes de l'entrée. Les graphes d'entrée
               doivent être au format <command>dot</command> et avoir toutes les informations de
               présentation nécessaires. 
            </para> 
            <indexterm zone="graphviz gvpack">
               <primary sortas="b-gvpack"> gvpack </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="gvpr">
         <term><command>gvpr</command> </term>
         <listitem>
            <para>
               est un éditeur de flux graphiques inspiré d' <command>awk</command> . Il copie les
               graphes en entrée vers sa sortie, en transformant éventuellement leur structure et
               leurs attributs, et créant de nouveaux graphes, ou affichant des informations
               arbitraires. 
            </para> 
            <indexterm zone="graphviz gvpr">
               <primary sortas="b-gvpr"> gvpr </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="gxl2dot">
         <term><command>gxl2dot</command> </term>
         <listitem>
            <para>
               convertit des graphes représentés en GXL en langage DOT. Sauf si vous spécifier un
               type de conversion en utilisant un drapeau, <command>gxl2dot</command> déduira le
               type de conversion de l'extension du fichier d'entrée, une extension <filename
               class='extension'>.dot</filename> donnant une conversion de DOT vers GXL, et une
               extension <filename class='extension'>
               .gxl</filename> donnant une conversion de GXL en DOT. 
            </para> 
            <indexterm zone="graphviz gxl2dot">
               <primary sortas="b-gxl2dot"> gxl2dot </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="lefty">
         <term><command>lefty</command> </term>
         <listitem>
            <para>
               est un éditeur de d1ux graphes pour des images techniques. 
            </para> 
            <indexterm zone="graphviz lefty">
               <primary sortas="b-lefty"> lefty </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="lneato">
         <term><command>lneato</command> </term>
         <listitem>
            <para>
               est un éditeur de graphes pour le système X Window. Vous pouvez le lancer comme un
               éditeur autonome ou comme un support pour des applications qui utilisent des graphes.
               Il peut contrôler la visualisation de plusieurs fenêtres, la visualisation de
               plusieurs graphes. 
            </para> 
            <indexterm zone="graphviz lneato">
               <primary sortas="b-lneato"> lneato </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="nop">
         <term><command>nop</command> </term>
         <listitem>
            <para>
               lit un flux de graphes et les affiche chacun d'eux sur la sortie standard de manière
               agréable (canonique). Si aucun fichier n'est donné, il lit l'entrée standard. 
            </para> 
            <indexterm zone="graphviz nop">
               <primary sortas="b-nop"> nop </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="prune">
         <term><command>prune</command> </term>
         <listitem>
            <para>
               lit des graphiques droits dans le même format que celui utilisé par
               <command>dot</command> et supprime les sous-graphes enracinées dans les n&oelig;uds
               spécifiés sur la ligne de commande avec les options. Ces n&oelig;uds eux-mêmes ne
               seront pas supprimés, mais on peut leur donner des attributs pour qu'ils puissent
               être facilement localisables par un éditeur de flux de graphes tel que
               <command>gpr</command> . <command>prune</command> gère correctement les cycles, les
               boucles et les multi-bords. 
            </para> 
            <indexterm zone="graphviz prune">
               <primary sortas="b-prune"> prune </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="sccmap">
         <term><command>sccmap</command> </term>
         <listitem>
            <para>
               décompose des diagraphes en composants fortement connectés et en carte auxiliaire des
               relations entre les composants. Sur cette carte, chaque composant est compris dans un
               n&oelig;ud. Les graphes qui en résultent sont affichés sur la sortie standard. Le
               nombre de n&oelig;uds, de bords et de composants fortement connectés est affiché sur
               la sortie standard. <command>sccmap</command> est une façon de diviser de gros
               graphes en des morceaux plus exploitables. 
            </para> 
            <indexterm zone="graphviz sccmap">
               <primary sortas="b-sccmap"> sccmap </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="tred">
         <term><command>tred</command> </term>
         <listitem>
            <para>
               calcule la réduction transitive des graphes droits et affiche les graphes qui en
               résultent sur la sortie standard. Ceci supprime les bords qu'implique la
               transitivité. Les n&oelig;uds et les sous-graphes ne sont pas affectés autrement. La
               <quote>signification </quote> et la validité des graphes réduits dépend de
               l'application. <command>tred</command> est particulièrement utile en tant que
               préprocesseur de <command>dot</command> pour réduire un cluster en présentations
               denses.. 
            </para> 
            <indexterm zone="graphviz tred">
               <primary sortas="b-tred"> tred </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="twopi">
         <term><command>twopi</command> </term>
         <listitem>
            <para>
               dessine des graphes en utilisant une présentation en rayons. À la base, un n&oelig;ud
               est choisi comme le centre est placé à l'origine. Les n&oelig;uds restants sont
               placés sur une séquences de cercles concentriques focalisés autour de l'origine,
               chacun étant à une distance de rayon fixe du cercle précédent. 
            </para> 
            <indexterm zone="graphviz twopi">
               <primary sortas="b-twopi"> twopi </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="unflatten">
         <term><command>unflatten</command> </term>
         <listitem>
            <para>
               est un préprocesseur de <command>dot</command> utilisé pour améliorer l'aspect ratio
               des graphes ayant beaucoup de blancs ou de n&oelig;uds déconnectés. La présentation
               normale d'un tel graphique est en général très large ou haute.
               <command>unflatten</command> insère des bords invisibles ou adjuste le millen sur les
               bords pour améliorer l'aspect compact de la présentation. 
            </para> 
            <indexterm zone="graphviz unflatten">
               <primary sortas="b-unflatten"> unflatten </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="libagraph">
         <term><filename class='libraryfile'>libagraph.{so,a}</filename> </term>
         <listitem>
            <para>
               supporte la programmation de graphes en maintenant les graphes en mémoire et en
               lisant et écrivant des fichiers de graphes. Les graphes, les n&oelig;uuds et les
               bords peuvent être attribués par des enregistrements définis par le programmeur et
               des chaînes de valeurs étant des noms de l'ensembles. Les graphes se composent de
               n&oelig;uds, de bords et de pous-graphes cachés. En interne, <filename
               class='libraryfile'>libagraph</filename> dépend beaucoup de <filename
               class='libraryfile'>
               libcdt</filename> (anciennement <filename class='libraryfile'>libdict</filename> )
               pour le réglage de la représentation. 
            </para> 
            <indexterm zone="graphviz libagraph">
               <primary sortas="c-libagraph"> libagraph.{so,a} </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="libcdt">
         <term><filename class='libraryfile'>libcdt.{so,a}</filename> </term>
         <listitem>
            <para>
               gère les dictionnaires pendant l'exécution en utilisant les types de données de
               contenu standards: set/multiset désordonné, set/multiset rangé, list, stack, et
               queue. 
            </para> 
            <indexterm zone="graphviz libcdt">
               <primary sortas="c-libcdt"> libcdt.{so,a} </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="libexpr">
         <term><filename class='libraryfile'>libexpr.{so,a}</filename> </term>
         <listitem>
            <para>
               est une bibliothèque d'expressions de type C. 
            </para> 
            <indexterm zone="graphviz libexpr">
               <primary sortas="c-libexpr"> libexpr.{so,a} </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="libgraph">
         <term><filename class='libraryfile'>libgraph.{so,a}</filename> </term>
         <listitem>
            <para>
               maintient en mémoire des graphes dont l'attribut est droit ou non droit, lit et écrit
               des fichiers de graphes. graphes se composent de n&oelig;uds, de bords et de
               pous-graphes cachés. Un sous-graphe peut contenir n'importe quel n&oelig;ud et les
               bords de ses parents, et il peut être passé à n'importe quelle fonction <filename
               class='libraryfile'>libgraph</filename> en prenant un pointeur de graphe, sauf les
               trois qui créent de nouveaux attributs (où un graphe principal est exigé). 
            </para> 
            <indexterm zone="graphviz libgraph">
               <primary sortas="c-libgraph"> libgraph.{so,a} </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="libpack">
         <term><filename class='libraryfile'>libpack.{so,a}</filename> </term>
         <listitem>
            <para>
               supporte l'utilisation de composants connectés dans le contexte d'une présentation
               des graphes utilisant d'autres bibliothèques <application>Graphviz</application> . Un
               ensemble de fonctions peut être utilisé pour prendre un seul graphe et le diviser en
               composants connectés. Un ensemble supplémentaire de fonctions prend un groupe de
               graphes (pas forcément les composants d'un seul graphe) qui a été extrait séparément,
               et les empaquette ensembles avec une taille légèrement réduite. Le paquet est fait en
               utilisant l'algorithme polyomino de K. Freivalds et al. 
            </para> 
            <indexterm zone="graphviz libpack">
               <primary sortas="c-libpack"> libpack.{so,a} </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="libpathplan">
         <term><filename class='libraryfile'>libpathplan.{so,a}</filename> </term>
         <listitem>
            <para>
               contient des fonctions pour trouver le chemin le plus court entre deux points sur un
               simple polygone. 
            </para> 
            <indexterm zone="graphviz libpathplan">
               <primary sortas="c-libpathplan"> libpathplan.{so,a} </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      </variablelist>
      
   </sect2>
   
</sect1>
