<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
    "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
   <!ENTITY % general-entities SYSTEM "../../general.ent">
   %general-entities;
   
   <!ENTITY expect-download-http "http://prdownloads.sourceforge.net/expect/expect&expect-version;.tar.gz">
   <!ENTITY expect-download-ftp  " ">
   <!ENTITY expect-md5sum        "44e1a4f4c877e9ddc5a542dfa7ecc92b">
   <!ENTITY expect-size          "620 Kio">
   <!ENTITY expect-buildsize     "4.1 Mio">
   <!ENTITY expect-time          "0.2 SBU">
   
]>
<sect1 id="expect" xreflabel="Expect-&expect-version;">
   <?dbhtml filename="expect.html"?>
   
   <sect1info>
      <othername>$LastChangedBy: bdubbs $</othername>
      <date>$Date: 2011-11-16 20:44:45 +0100 (mer. 16 nov. 2011) $</date>
   </sect1info>
   
   <title>Expect-&expect-version;</title> 
   
   <indexterm zone="expect">
      <primary sortas="a-Expect"> Expect </primary>
   </indexterm>
   
   <sect2 role="package">
      <title>Introduction à Expect</title> 
      
      <para>
         Le paquet <application>Expect</application> a été installé dans le répertoire des outils
         temporaires de LFS pour tester d'autres paquets. Ces procédures l'installent de manière
         permanente. Il contient des outils pour automatiser des applications interactives telles
         que <command>telnet</command> , <command>ftp</command> , <command>passwd</command> ,
         <command>fsck</command> , <command>rlogin</command> , <command>tip</command> , etc.
         <application>Expect</application> est également utile pour tester ces mêmes applications et
         pour faciliter soutes sortes de tâches difficiles au point d'en être prohibitives avec
         autre chose. 
      </para> 
      
      &lfs70_checked;
      
      <bridgehead renderas="sect3"> Informations sur le paquet </bridgehead>
      <itemizedlist spacing="compact">
         <listitem>
            <para>
               Téléchargement (HTTP): <ulink url="&expect-download-http;"/> 
            </para> 
         </listitem>
         <listitem>
            <para>
               Téléchargement (FTP): <ulink url="&expect-download-ftp;"/> 
            </para> 
         </listitem>
         <listitem>
            <para>
               Somme de contrôle MD5 du téléchargement: &expect-md5sum; 
            </para> 
         </listitem>
         <listitem>
            <para>
               Taille du téléchargement: &expect-size; 
            </para> 
         </listitem>
         <listitem>
            <para>
               Estimation de l'espace disque requis: &expect-buildsize; 
            </para> 
         </listitem>
         <listitem>
            <para>
               Estimation du temps de construction: &expect-time; 
            </para> 
         </listitem>
      </itemizedlist>
      
      <bridgehead renderas="sect3"> Dépendances d'Expect </bridgehead>
      
      <bridgehead renderas="sect4"> Requises </bridgehead>
      
      <para role="required">
         <xref linkend="tcl"/>
      </para> 
      
      <bridgehead renderas="sect4"> Facultatives </bridgehead>
      
      <para role="optional">
         <xref linkend="tk"/>
      </para> 
      
      <para condition="html" role="usernotes">
         Notes utilisateur: <ulink url="&blfs-wiki;/expect"/> 
      </para> 
      
   </sect2>
   
   <sect2 role="installation">
      <title>Installation de Expect</title> 
      
      <para>
         Installez <application>Expect</application> en lançant les commandes suivantes: 
      </para> 
      
<screen><userinput>./configure --prefix=/usr \
            --with-tcl=/usr/lib \
            --with-tclinclude=/usr/include \
            --enable-shared &amp;&amp;
make</userinput></screen>
      
      <para>
         Pour tester les résultats, lancez: <command>make test</command> . 
      </para> 
      
      <para>
         Maintenant, en tant qu'utilisateur <systemitem class="username"> root </systemitem>&nbsp;: 
         
      </para> 
      
<screen role="root">
<userinput>make install &amp;&amp;
ln -svf expect&expect-version;/libexpect&expect-version;.so /usr/lib</userinput></screen>
      
   </sect2>
   
   <sect2 role="commands">
      <title>Explication des commandes</title> 
      
      <para>
      <parameter>-with-tcl=/usr/lib </parameter>&nbsp;: Ce paramètre est utilisé pour dire au script
      <command>configure</command> où se trouve <command>tclConfig.sh</command> . 
      </para> 
      
      <para>
      <parameter>--enable-shared </parameter>&nbsp;: Cette option active la construction de la
      bibliothèque partagée. 
      </para> 
      
      <para>
         <command>ln -sf ...</command>&nbsp;: Cette commande crée un lien requis vers la
         bibliothèque partagée. 
      </para> 
      
   </sect2>
   
   <sect2 role="configuration">
      <title>Configuration d'Expect</title> 
      
      <sect3 id="expect-config">
         <title>Fichiers de configuration</title> 
         
         <para>
            <filename>$exp_library/expect.rc</filename> et <filename>~/.expect.rc</filename> 
         </para> 
         <indexterm zone="expect expect-config">
            <primary sortas="e-AA.expect.rc"> ~/.expect.rc </primary>
         </indexterm>
         <indexterm zone="expect expect-config">
            <primary sortas="e-Aexp_library-expect.rc"> $exp_library/expect.rc </primary>
         </indexterm>
         
      </sect3>
      
      <sect3>
         <title>Informations de configuration</title> 
         
         <para>
            Référez-vous à la page de man de <command>expect</command> pour des informations sur
            l'utilisation des fichiers de configuration de <filename>expect.rc</filename> . En
            outre, beaucoup d'outils contenus dans le paquet <application>Expect</application> vont
            utiliser leurs propres fichiers de configuration. Référez-vous aux pages de man qui les
            concerne, ou examinez le script directement pour des informations sur le fichier de
            configuration. 
         </para> 
         
      </sect3>
      
   </sect2>
   
   <sect2 role="content">
      <title>Contenu</title> 
      
      <segmentedlist>
         <segtitle>Programmes installés</segtitle>
         <segtitle>Bibliothèque installée</segtitle>
         <segtitle>Répertoire installé</segtitle>
         
         <seglistitem>
            <seg>
               autoexpect, autopasswd, cryptdir, decryptdir, dislocate, expect, ftp-rfc, kibitz,
               lpunlock, mkpasswd, passmass, rftp, rlogin-cwd, timed-read, timed-run, unbuffer,
               weather, et optionally (if
               <application>Expect</application> was linked against
               <application>Tk</application> ), expectk, multixterm, tknewsbiff, tkpasswd, xkibitz,
               et xpstat
            </seg>
            <seg>
               libexpect&expect-version;.so
            </seg>
            <seg>
               /usr/lib/expect&expect-version;
            </seg>
         </seglistitem>
      </segmentedlist>
      <variablelist>
      
      <bridgehead renderas="sect3"> Descriptions courtes </bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>
      
      <varlistentry id="autoexpect">
         <term><command>autoexpect</command> </term>
         <listitem>
            <para>
               génère un script <application>Expect</application> à partir de l'observation d'une
               session. 
            </para> 
            <indexterm zone="expect autoexpect">
               <primary sortas="b-autoexpect"> autoexpect </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="autopasswd">
         <term><command>autopasswd</command> </term>
         <listitem>
            <para>
               est une enveloppe pour rendre <command>passwd</command> (1) non interactif. 
            </para> 
            <indexterm zone="expect autopasswd">
               <primary sortas="b-autopasswd"> autopasswd </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="cryptdir">
         <term><command>cryptdir</command> </term>
         <listitem>
            <para>
               chiffre tous les fichiers dans un répertoire. 
            </para> 
            <indexterm zone="expect cryptdir">
               <primary sortas="b-cryptdir"> cryptdir </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="decryptdir">
         <term><command>decryptdir</command> </term>
         <listitem>
            <para>
               déchiffre tous les fichiers d'un répertoire. 
            </para> 
            <indexterm zone="expect decryptdir">
               <primary sortas="b-decryptdir"> decryptdir </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="dislocate">
         <term><command>dislocate</command> </term>
         <listitem>
            <para>
               autorise les processus à être déconnectés et reconnectés à un terminal. 
            </para> 
            <indexterm zone="expect dislocate">
               <primary sortas="b-dislocate"> dislocate </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="expect-prog">
         <term><command>expect</command> </term>
         <listitem>
            <para>
               est un programme qui <quote>parle </quote> à d'autres programmes interactifs selon un
               script. 
            </para> 
            <indexterm zone="expect expect-prog">
               <primary sortas="b-expect"> expect </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="ftp-rfc">
         <term><command>ftp-rfc</command> </term>
         <listitem>
            <para>
               récupère le une RFC (ou l'index) depuis UUNET. 
            </para> 
            <indexterm zone="expect ftp-rfc">
               <primary sortas="b-ftp-rfc"> ftp-rfc </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="kibitz">
         <term><command>kibitz</command> </term>
         <listitem>
            <para>
               permet à deux personnes (ou plus) d'interagir avec un shell (ou un programme de leur
               choix). 
            </para> 
            <indexterm zone="expect kibitz">
               <primary sortas="b-kibitz"> kibitz </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="lpunlock">
         <term><command>lpunlock</command> </term>
         <listitem>
            <para>
               décroche une imprimante qui est suspendue sur <quote>En attente de verrouillage
               </quote> . 
            </para> 
            <indexterm zone="expect lpunlock">
               <primary sortas="b-lpunlock"> lpunlock </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="mkpasswd">
         <term><command>mkpasswd</command> </term>
         <listitem>
            <para>
               génère des mots de passe et peut les appliquer automatiquement aux utilisateurs. 
            </para> 
            <indexterm zone="expect mkpasswd">
               <primary sortas="b-mkpasswd"> mkpasswd </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="passmass">
         <term><command>passmass</command> </term>
         <listitem>
            <para>
               modifie un mot de passe sur plusieurs machines. 
            </para> 
            <indexterm zone="expect passmass">
               <primary sortas="b-passmass"> passmass </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="rftp">
         <term><command>rftp</command> </term>
         <listitem>
            <para>
               ressemble beaucoup à <command>ftp</command> sauf qu'il utilise <option>
               ~g </option>
               et <option>
               ~p </option>
               au lieu de <option>
               mget </option>
               et de <option>
               mput </option>
               . 
            </para> 
            <indexterm zone="expect rftp">
               <primary sortas="b-rftp"> rftp </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="rlogin-cwd">
         <term><command>rlogin-cwd</command> </term>
         <listitem>
            <para>
               est <command>rlogin</command> sauf qu'il utilise le répertoire local actuel en tant
               que répertoire de travail actuel sur la machine distante. 
            </para> 
            <indexterm zone="expect rlogin-cwd">
               <primary sortas="b-rlogin-cwd"> rlogin-cwd </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="timed-read">
         <term><command>timed-read</command> </term>
         <listitem>
            <para>
               lit une ligne complète à partir de stdin et s'arrête après un nombre de secondes
               donné. 
            </para> 
            <indexterm zone="expect timed-read">
               <primary sortas="b-timed-read"> timed-read </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="timed-run">
         <term><command>timed-run</command> </term>
         <listitem>
            <para>
               lance un programme pour une durée donnée. 
            </para> 
            <indexterm zone="expect timed-run">
               <primary sortas="b-timed-run"> timed-run </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="unbuffer">
         <term><command>unbuffer</command> </term>
         <listitem>
            <para>
               désactive la mise en tampon de sortie qui se produit lorsque la sortie du programme
               est redirigée. 
            </para> 
            <indexterm zone="expect unbuffer">
               <primary sortas="b-unbuffer"> unbuffer </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="weather">
         <term><command>weather</command> </term>
         <listitem>
            <para>
               récupère un bulletin météo (merci à l'université du Michigan) pour une ville ou une
               zone géographique données. 
            </para> 
            <indexterm zone="expect weather">
               <primary sortas="b-weather"> weather </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="expectk">
         <term><command>expectk</command> </term>
         <listitem>
            <para>
               est une combinaison de <application>Expect</application> et de
               <application>Tk</application> et devrait lancer un script <command>wish</command> ou
               <application>Expect</application> . 
            </para> 
            <indexterm zone="expect expectk">
               <primary sortas="b-expectk"> expectk </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="multixterm">
         <term><command>multixterm</command> </term>
         <listitem>
            <para>
               crée plusieurs <command>xterm</command> s qui peuvent être pilotés ensemble ou
               séparément. 
            </para> 
            <indexterm zone="expect multixterm">
               <primary sortas="b-multixterm"> multixterm </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="tknewsbiff">
         <term><command>tknewsbiff</command> </term>
         <listitem>
            <para>
               affiche une fenêtre lorsqu'il y a des nouvelles non lues sur vos newsgroups favorits
               et supprime la fenêtre après que vous avez lu les nouvelles. 
            </para> 
            <indexterm zone="expect tknewsbiff">
               <primary sortas="b-tknewsbiff"> tknewsbiff </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="tkpasswd">
         <term><command>tkpasswd</command> </term>
         <listitem>
            <para>
               est un script pour modifier des mots de passe en utilisant <command>expectk</command>
               . 
            </para> 
            <indexterm zone="expect tkpasswd">
               <primary sortas="b-tkpasswd"> tkpasswd </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="xkibitz">
         <term><command>xkibitz</command> </term>
         <listitem>
            <para>
               permet aux utilisateurs dans des <command>xterm</command> s séparés de partager un
               shell (ou n'importe quel programme qui s'exécute sur <command>xterm</command> ). 
            </para> 
            <indexterm zone="expect xkibitz">
               <primary sortas="b-xkibitz"> xkibitz </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="xpstat">
         <term><command>xpstat</command> </term>
         <listitem>
            <para>
               est un script qui agit comme un front-end pour <command>xpilot</command> . 
            </para> 
            <indexterm zone="expect xpstat">
               <primary sortas="b-xpstat"> xpstat </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="libexpect">
         <term><filename class='libraryfile'>libexpect&expect-version;.so</filename> </term>
         <listitem>
            <para>
               contient des fonctions qui permettent à <application>Expect</application> d'être
               utilisées comme une extension <application>Tcl</application> ou directement à partir
               de C ou de C++ (sans <application>Tcl</application> ). 
            </para> 
            <indexterm zone="expect libexpect">
               <primary sortas="c-libexpect&expect-version;"> libexpect&expect-version;.so
               </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      </variablelist>
      
   </sect2>
   
</sect1>
