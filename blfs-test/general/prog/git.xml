<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
    "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
   <!ENTITY % general-entities SYSTEM "../../general.ent">
   %general-entities;
   
   <!ENTITY git-download-http "http://git-core.googlecode.com/files/git-&git-version;.tar.gz">
   <!ENTITY git-download-ftp  " ">
   <!ENTITY git-md5sum        "f2f0fc821ab074862c4a96de3f4cefbe">
   <!ENTITY git-size          "3.4 Mio">
   <!ENTITY git-buildsize     "153 Mio">
   <!ENTITY git-time          "3.0 SBU (including tests)">
   
]>
<sect1 id="git" xreflabel="git-&git-version;">
   <?dbhtml filename="git.html"?>
   
   <sect1info>
      <othername>$LastChangedBy: andy $</othername>
      <date>$Date: 2012-03-05 16:41:10 +0100 (lun. 05 mars 2012) $</date>
   </sect1info>
   
   <title>Git-&git-version;</title> 
   
   <indexterm zone="git">
      <primary sortas="a-git"> Git </primary>
   </indexterm>
   
   <sect2 role="package">
      <title>Introduction à Git</title> 
      
      <para>
         <application>Git</application> est un système de contrôle de versions distribué librement
         et open-source, conçu pour gérer du plus petit au plus gros projet rapidement et
         efficacement. Chaque clônage <application>Git</application> est un dépôt complet avec
         l'historique et les possibilités de poursuite des révisions, indépendamment de l'accès
         réseau ou d'un serveur central. Le système de branches et de synchronisation est rapide et
         facile à utiliser. <application>Git</application> est utilisé pour le contrôle de la
         version de fichiers pour de nombreux outils comme <application>Mercurial</application> ,
         <application>Bazaar</application> , <xref linkend="subversion"/>, <xref linkend="cvs"/>
         , <application>Perforce</application> , et <application>Team Foundation
         Server</application> . 
      </para> 
      
      &lfs71_checked;
      
      <bridgehead renderas="sect3"> Informations sur le paquet </bridgehead>
      <itemizedlist spacing="compact">
         <listitem>
            <para>
               Téléchargement (HTTP): <ulink url="&git-download-http;"/> 
            </para> 
         </listitem>
         <listitem>
            <para>
               Téléchargement (FTP): <ulink url="&git-download-ftp;"/> 
            </para> 
         </listitem>
         <listitem>
            <para>
               Somme de contrôle MD5 du téléchargement: &git-md5sum; 
            </para> 
         </listitem>
         <listitem>
            <para>
               Taille du téléchargement: &git-size; 
            </para> 
         </listitem>
         <listitem>
            <para>
               Estimation de l'espace disque requis: &git-buildsize; 
            </para> 
         </listitem>
         <listitem>
            <para>
               Estimation du temps de construction: &git-time; 
            </para> 
         </listitem>
      </itemizedlist>
      
      <bridgehead renderas="sect3"> Téléchargements supplémentaires </bridgehead>
      <itemizedlist spacing="compact">
         <listitem>
            <para>
               <ulink url="http://git-core.googlecode.com/files/git-manpages-&git-version;.tar.gz">
               http://git-core.googlecode.com/files/git-manpages-&git-version;.tar.gz </ulink>
               (seulement nécessaire si vous n'avez pas installé asciidoc) 
            </para> 
         </listitem>
         <listitem>
            <para>
               <ulink url="http://git-core.googlecode.com/files/git-htmldocs-&git-version;.tar.gz">
               http://git-core.googlecode.com/files/git-htmldocs-&git-version;.tar.gz </ulink>
               (seulement nécessaire si vous n'avez pas installé asciidoc and xmlto). 
            </para> 
         </listitem>
      </itemizedlist>
      
      <bridgehead renderas="sect3"> Dépendances de Git </bridgehead>
      
      <bridgehead renderas="sect4"> Recommandées </bridgehead>
      
      <para role="recommended">
         <xref linkend="python2"/>et <xref linkend="curl"/>
         (nécessaire pour utiliser <application>Git</application> par http, https, ftp ou ftps) 
      </para> 
      
      <bridgehead renderas="sect4"> Facultatives </bridgehead>
      
      <para role="optional">
         <xref linkend="openssl"/>, <xref linkend="expat"/>
         et <xref linkend="tk"/>(gitk, un simple visualiseur de dépôts
         <application>Git</application> , utilise <application>Tk</application> au moment de
         l'exécution) 
      </para> 
      
      <bridgehead renderas="sect4"> Facultatives (pour créer les pages de man) </bridgehead>
      
      <para>
         <ulink url="http://www.methods.co.nz/asciidoc/"> AsciiDoc </ulink>
         and <xref linkend="xmlto"/>. 
      </para> 
      
      <para condition="html" role="usernotes">
         Notes utilisateur: <ulink url="&blfs-wiki;/git"/> 
      </para> 
      
   </sect2>
   
   <sect2 role="installation">
      <title>Installation de Git</title> 
      
      <para>
         Installez <application>Git</application> en lançant les commandes suivantes: 
      </para> 
      
<screen><userinput>./configure --prefix=/usr         \
            --libexecdir=/usr/lib \
            --with-gitconfig=/etc/gitconfig &amp;&amp;
make</userinput></screen>
      
      <para>
         Si vous avez installé <ulink url="http://www.methods.co.nz/asciidoc/"> AsciiDoc </ulink>
         et si vous souhaitez créer les pages de man: 
      </para> 
      
<screen><userinput>make man</userinput></screen>
      
      <para>
         Si vous avez installé <ulink url="http://www.methods.co.nz/asciidoc/"> AsciiDoc </ulink>
         et <xref linkend="xmlto"/>vous pouvez créer la version html des pages de manuel et des
         autres docs: 
      </para> 
      
<screen><userinput>make html</userinput></screen>
      
      <para>
         Pour vérifier les résultats, lancez: <command>make test</command> . 
      </para> 
      
      <para>
         Maintenant, en tant qu'utilisateur <systemitem class="username"> root </systemitem>&nbsp;: 
         
      </para> 
      
<screen role="root">
<userinput>make install</userinput></screen>
      
      <para>
         Si vous avez créé les pages de man, installez-les en tant qu'utilisateur <systemitem
         class="username"> root </systemitem>&nbsp;:  
      </para> 
      
<screen role="root">
<userinput>make install-man</userinput></screen>
      
      <para>
         Si vous avez créé les documentations html, installez les en tant qu'utilisateur <systemitem
         class="username"> root </systemitem>&nbsp;:  
      </para> 
      
<screen role="root">
<userinput>make htmldir=/usr/share/doc/git-&git-version; install-html              &amp;&amp;
mkdir -p /usr/share/doc/git-&git-version;/man-pages/{html,text}         &amp;&amp;
mv       /usr/share/doc/git-&git-version;/{git*.txt,man-pages/text}     &amp;&amp;
mv       /usr/share/doc/git-&git-version;/{git*.,index.,man-pages/}html &amp;&amp;
mkdir    /usr/share/doc/git-&git-version;/technical/{html,text}         &amp;&amp;
mv       /usr/share/doc/git-&git-version;/technical/{*.txt,text}        &amp;&amp;
mv       /usr/share/doc/git-&git-version;/technical/{*.,}html           &amp;&amp;
mkdir    /usr/share/doc/git-&git-version;/howto/{html,text}             &amp;&amp;
mv       /usr/share/doc/git-&git-version;/howto/{*.txt,text}            &amp;&amp;
mv       /usr/share/doc/git-&git-version;/howto/{*.,}html</userinput></screen>
      
      <para>
         Sinon, si vous avez téléchargé les pages de manuel déballez les en tant qu'utilisateur
         <systemitem class="username"> root </systemitem>&nbsp;:  
      </para> 
      
<screen role="root">
<userinput>tar -xf ../git-manpages-&git-version;.tar.gz -C /usr/share/man
--no-same-owner</userinput></screen>
      
      <para>
         Si vous avez téléchargé les documentations HTML déballez les en tant qu'utilisateur
         <systemitem class="username"> root </systemitem>&nbsp;:  
      </para> 
      
<screen role="root">
<userinput>mkdir -p /usr/share/doc/git-&git-version;/man-pages/{html,text}         &amp;&amp;
tar -xf  ../git-htmldocs-&git-version;.tar.gz \
    -C   /usr/share/doc/git-&git-version; --no-same-owner               &amp;&amp;
mv       /usr/share/doc/git-&git-version;/{git*.txt,man-pages/text}     &amp;&amp;
mv       /usr/share/doc/git-&git-version;/{git*.,index.,man-pages/}html &amp;&amp;
mkdir    /usr/share/doc/git-&git-version;/technical/{html,text}         &amp;&amp;
mv       /usr/share/doc/git-&git-version;/technical/{*.txt,text}        &amp;&amp;
mv       /usr/share/doc/git-&git-version;/technical/{*.,}html           &amp;&amp;
mkdir    /usr/share/doc/git-&git-version;/howto/{html,text}             &amp;&amp;
mv       /usr/share/doc/git-&git-version;/howto/{*.txt,text}            &amp;&amp;
mv       /usr/share/doc/git-&git-version;/howto/{*.,}html</userinput></screen>
      
   </sect2>
   
   <sect2 role="commands">
      <title>Explications des commandes</title> 
      
      <para>
         <option>
         --libexecdir=/usr/lib </option>
         : Place les fichiers de a bibliothèque git correctement. 
      </para> 
      
      <para>
         <option>
         --with-gitconfig=/etc/gitconfig </option>
         : Ceci fait de <filename>/etc/gitconfig</filename> le fichier qui stocke les paramètres par
         défaut de <application>Git</application> pour le système global. 
      </para> 
      
      <para>
         <option>
         --without-python </option>
         : utilisez cette option si Python n'est pas installé. 
      </para> 
      
      <para>
         <option>
         --with-libpcre </option>
         : Utilisez cette option si PCRE est installé. 
      </para> 
      
      <para>
         <command>tar -xf ../git-manpages-&git-version;.tar.gz -C /usr/share/man
         --no-same-owner</command>&nbsp;: Cela va déballer
         <filename>git-manpages-&git-version;.tar.gz</filename> . L'option <option>
         -C </option>
         fait que tar change de répertoire pour <filename
         class="directory">/usr/share/man</filename> avant de commencer à décompresser les docs.
         L'option <option>
         --no-same-owner </option>
         arrête tar pour préserver les informations d'utilisateur et de groupe des fichiers. Cela
         est utile quand l'utilisateur ou le groupe n'existe pas sur votre système; Cela peut être
         (potentiellement une faille de sécurité. 
      </para> 
      
      <para>
         <command>mv /usr/share/doc/git-&git-version; ...</command>&nbsp;: Ces commandes déplacent
         certains des fichiers dans des sous-répertoires pour rendre plus facile le tri des docs et
         trouver plus facilement ce que vous cherchez. 
      </para> 
      
   </sect2>
   
   <sect2 role="configuration">
      <title>Configurer Git</title> 
      
      <sect3 id="git-config">
         <title>Fichiers de configuration</title> 
         
         <para>
            <filename>~/.gitconfig</filename> et <filename>/etc/gitconfig</filename> 
         </para> 
         <indexterm zone="git git-config">
            <primary sortas="e-AA.gitconfig"> ~/.gitconfig </primary>
         </indexterm>
         <indexterm zone="git git-config">
            <primary sortas="e-etc-gitconfig"> /etc/gitconfig </primary>
         </indexterm>
         
      </sect3>
      
      <sect3>
         <title>Informations de configuration</title> 
         
         <para>
            Si vous voulez utiliser <command>git svn</command> vous devrez installer <xref
            linkend="subversion"/>et ses bindings perl. 
         </para> 
         
         <para>
            Afin pouvoir utiliser git pour extraire à partir d'une source https, vous devez d'abord
            installer les <xref linkend="cacerts"/>puis configurer git pour qu'il sache où les
            trouver. Pour paramétrer l'emplacement des certificats SSL, en tant qu'utilisateur
            <systemitem class="username"> root </systemitem>&nbsp;:  
         </para> 
         
<screen role="root">
<userinput>git config --system http.sslCAPath /etc/ssl/certs</userinput></screen>
         
      </sect3>
      
   </sect2>
   
   <sect2 role="content">
      <title>Contenu</title> 
      
      <segmentedlist>
         <segtitle>Programmes installés</segtitle>
         <segtitle>Répertoires installés</segtitle>
         
         <seglistitem>
            <seg>
               git, git-cvsserver, gitk, git-receive-pack, git-shell, git-upload-archive et
               git-upload-pack.
            </seg>
            <seg>
               /usr/libexec/git-core, /usr/share/git-core, /usr/share/git-gui, /usr/share/gitk et
               /usr/share/gitweb
            </seg>
         </seglistitem>
      </segmentedlist>
      <variablelist>
      
      <bridgehead renderas="sect3"> Descriptions courtes </bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>
      
      <varlistentry id="git-prog">
         <term><command>git</command> </term>
         <listitem>
            <para>
               est un stupide pourchasseur de contenu. 
            </para> 
            <indexterm zone="git git-prog">
               <primary sortas="b-git"> git </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="git-cvsserver">
         <term><command>git-cvsserver</command> </term>
         <listitem>
            <para>
               est un émulateur de serveur CVS pour git. 
            </para> 
            <indexterm zone="git git-cvsserver">
               <primary sortas="b-git-cvsserver"> git-cvsserver </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="gitk">
         <term><command>gitk</command> </term>
         <listitem>
            <para>
               est un navigateur de dépôt git (exige <xref linkend="tk"/>). 
            </para> 
            <indexterm zone="git gitk">
               <primary sortas="b-gitk"> gitk </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="git-receive-pack">
         <term><command>git-receive-pack</command> </term>
         <listitem>
            <para>
               est appelé par <command>git send-pack</command> et met à jour le dépôt avec les
               informations issue du dépôt distant. 
            </para> 
            <indexterm zone="git git-receive-pack">
               <primary sortas="b-git-receive-pack"> git-receive-pack </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="git-shell">
         <term><command>git-shell</command> </term>
         <listitem>
            <para>
               est un shell de connexion pour que des comptes SSH donnent des accès Git restreints. 
            </para> 
            <indexterm zone="git git-shell">
               <primary sortas="b-git-shell"> git-shell </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="git-upload-archive">
         <term><command>git-upload-archive</command> </term>
         <listitem>
            <para>
               est appelé par <command>git archive --remote</command> et envoie une archive générée
               à l'autre bout du protocole git. 
            </para> 
            <indexterm zone="git git-upload-archive">
               <primary sortas="b-git-upload-archive"> git-upload-archive </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      
      <varlistentry id="git-upload-pack">
         <term><command>git-upload-pack</command> </term>
         <listitem>
            <para>
               est appelé par <command>git fetch-pack</command> , il détecte les objets manquant à
               l'autre bout et il les envoie ensuite en paquets. 
            </para> 
            <indexterm zone="git git-upload-pack">
               <primary sortas="b-git-upload-pack"> git-upload-pack </primary>
            </indexterm>
         </listitem>
      </varlistentry>
      </variablelist>
      
   </sect2>
   
</sect1>
