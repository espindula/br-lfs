<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
    "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
   <!ENTITY % general-entities SYSTEM "../../general.ent">
   %general-entities;
   
   <!ENTITY perl_modules_md5sums_download_http "&sources-anduin-http;/perl-modules/">
   <!ENTITY perl_modules_md5sums_download_ftp  "&sources-anduin-ftp;/perl-modules/">
   
]>
<sect1 id="perl-modules" xreflabel="Perl modules">
   <?dbhtml filename="perl-modules.html" ?>
   
   <sect1info>
      <othername>$LastChangedBy: randy $</othername>
      <date>$Date: 2011-01-21 15:37:25 +0100 (ven. 21 janv. 2011) $</date>
   </sect1info>
   
   <title></title> 
   
   <indexterm zone="perl-modules">
      <primary sortas="a-Perl-modules"> Perl modules </primary>
   </indexterm>
   
   <sect2 role="package">
      <title></title> 
      
      <para>
         Les paquets de module <application></application> ajoutent des objets utiles au langage
         <application></application> . Voici les modules utilisés par paquets à travers BLFS avec
         leurs dépendances. L'installation des modules décrite sur cette page devrait être effectuée
         en installant les dépendances listées (en partant du bas et en remontant vers le haut) puis
         le module désiré. La plupart des références aux modules <application></application> sous
         sous forme de Module, Module::SubName ou Module::Sub::Name, même si vous verrez parfois
         Module, Module-SubName ou Module-Sub-Name. Les références sur cette page à une URL externe
         ont la dernière forme, vu que ce sont les noms officiels des paquets. 
      </para> 
      <itemizedlist spacing="compact">
         <listitem>
            <para>
               Somme de contrôle MD5 du téléchargements (HTTP): <ulink
               url="&perl_modules_md5sums_download_http;"/> 
            </para> 
         </listitem>
         <listitem>
            <para>
               Somme de contrôle MD5 du téléchargements (FTP): <ulink
               url="&perl_modules_md5sums_download_ftp;"/> 
            </para> 
         </listitem>
      </itemizedlist>
      
      <note> 
         <para>
            Certaines dépendances telles que le module <xref linkend="perl-test-pod"/>sont utilisées
            par plusieurs dépendances listées du module principal et peut-être par le module que
            vous êtes en train d'installer. De telles dépendances ne sont listées qu'une fois dans
            l'arbre des dépendances pour chaque module principal (en général vers la dépendance le
            plus en bas) pour éviter des répétitions et un morcellement supplémentaires dans les
            instructions. 
         </para> 
      </note>
      
      <bridgehead renderas="sect3" id="perl-archive-zip" xreflabel="Archive::Zip-&Archive-Zip-version;">  </bridgehead>
      <indexterm zone="perl-modules perl-archive-zip">
         <primary sortas="g-Archive-Zip"> Archive::Zip </primary>
      </indexterm>
      
      <para>
         Le module Archive::Zip permet à un programme <application></application> de créer, de
         manipuler, de lire et d'écrire des fichiers d'archives Zip. 
      </para> 
      <itemizedlist spacing='compact'>
         <listitem>
            <para>
               <ulink
               url="http://www.cpan.org/authors/id/A/AD/ADAMK/Archive-Zip-&Archive-Zip-version;.tar.gz"> Archive-Zip-&Archive-Zip-version; </ulink>
               (utilise le <xref linkend="perl-standard-install"/>standard) 
            </para> 
         </listitem>
      </itemizedlist>
      
      <bridgehead renderas="sect3" id="perl-date-manip" xreflabel="Date::Manip-&Date-Manip-version;">  </bridgehead>
      <indexterm zone="perl-modules perl-date-manip">
         <primary sortas="g-Date-Manip"> Date::Manip </primary>
      </indexterm>
      
      <para>
         Date::Manip est un ensemble de routines conçu pour faciliter toutes les manipulation
         nécessaires de date/heure. Des opérations telles que la comparaison de deux heures, le
         calcul d'une heure ou d'une quantité de temps la séparant d'une autre, ou le parsing
         d'heures internationales se font facilement. Depuis le début, l'axe principal de
         Date::Manip doit être capable de faire facilement N'IMPORTE QUELLE opération de date/heure.
         
      </para> 
      <itemizedlist spacing='compact'>
         <listitem>
            <para>
               <ulink
               url="http://cpan.org/authors/id/S/SB/SBECK/Date-Manip-&Date-Manip-version;.tar.gz">
               Date-Manip-&Date-Manip-version; </ulink>
               (utilise le <xref linkend="perl-standard-install"/>standard) 
            </para> 
         </listitem>
      </itemizedlist>
      
      <bridgehead renderas="sect3" id="perl-finance-quote" xreflabel="Finance::Quote-&Finance-Quote-version;">  </bridgehead>
      <indexterm zone="perl-modules perl-finance-quote">
         <primary sortas="g-Finance-Quote"> Finance::Quote </primary>
      </indexterm>
      
      <para>
         Finance::Quote est utilisé pour obtenir l'état des cours à partir de de diverses sources
         Internet, notamment Yahoo! Finance, Fidelity Investments, et le Stock Exchange australien.
         Il y a deux méthodes pour utiliser ce module &ndash; une interface fonctionnelle obsolète,
         et une méthode orientée objet qui offre une plus grande flexibilité et une plus grande
         stabilité. À l'exception des rythmes d'échange des devises certaines, toutes les
         informations sont retournées sous forme d'une courbe à deux dimensions (ou une référence à
         telle ou telle courbe s'il est appelé dans un contexte scalaire). 
      </para> 
      
      <para>
         Après que vous avez installé le paquet, exécutez <command>perldoc Finance::Quote</command>
         pour des informations complètes. Sinon, vous pouvez exécuter <command>après avoir déballé
         l'archive tar de la distribution et vous âtre rendu dans le répertoire racine. Le module et
         les dépendances sont installées en utilisant le</command> module standard
         <application></application> de module standard pour <xref
         linkend="perl-standard-install"/>cpan 
      </para> 
      
      <note> 
         <para>
            cpan&gt; <filename class='directory'>test</filename> pour installer un ou plusieurs
            modules: 
         </para> 
         
<screen><userinput>ln -s test t</userinput></screen>
         
         <para>
            cpan <filename>INSTALL</filename> en ligne de commande. 
         </para> 
      </note>
      <itemizedlist spacing='compact'>
         <listitem>
            <para>
               <ulink
               url="http://cpan.org/authors/id/H/HA/HAMPTON/Finance-Quote-&Finance-Quote-version;.tar.gz"> <!-- Finance-Quote-&Finance-Quote-version;= --> \n --non_traduit-- </ulink>
            </para> 
         <itemizedlist>
         <listitem>
            <para>
               <xref linkend="perl-html-tableextract"/>
            </para> 
         </listitem>
         <listitem>
            <para>
               <xref linkend="perl-lwp"/>
            </para> 
         </listitem>
      </itemizedlist>
      </listitem>
      </itemizedlist>
      
      <bridgehead renderas="sect3" id="perl-finance-quotehist" xreflabel="Finance::QuoteHist-&Finance-QuoteHist-version;">  </bridgehead>
      <indexterm zone="perl-modules perl-finance-quotehist">
         <primary sortas="g-Finance-QuoteHist"> Finance::QuoteHist </primary>
      </indexterm>
      
      <para>
         <!-- The Finance::QuoteHist bundle is several modules designed to fetch historical stock
         quotes from the web. The module and dependencies are installed using the standard= --> \n
         --non_traduit-- <application></application> <!-- module= --> \n --non_traduit-- <xref
         linkend="perl-standard-install"/>. 
      </para> 
      <itemizedlist spacing='compact'>
         <listitem>
            <para>
               <ulink
               url="http://cpan.org/authors/id/M/MS/MSISK/Finance-QuoteHist-&Finance-QuoteHist-version;.tar.gz"> <!-- Finance-QuoteHist-&Finance-QuoteHist-version;= --> \n --non_traduit-- </ulink>
            </para> 
         <itemizedlist>
         <listitem>
            <para>
               <xref linkend="perl-html-tableextract"/>
            </para> 
         </listitem>
         <listitem>
            <para>
               <xref linkend="perl-lwp"/>
            </para> 
         </listitem>
         <listitem>
            <para>
               <xref linkend="perl-date-manip"/>
            </para> 
         </listitem>
         <listitem>
            <para id="perl-text-csv">
               <ulink
               url="http://cpan.org/authors/id/M/MA/MAKAMAKA/Text-CSV-&Text-CSV-version;.tar.gz">
               <!-- Text-CSV-&Text-CSV-version;= --> \n --non_traduit-- </ulink>
            </para> 
            <indexterm zone="perl-modules perl-text-csv">
               <primary sortas="g-Text-CSV"> Text::CSV </primary>
            </indexterm>
         </listitem>
         <listitem>
            <para id="perl-text-csv_xs">
               <ulink
               url="http://cpan.org/authors/id/H/HM/HMBRAND/Text-CSV_XS-&Text-CSV_XS-version;.tgz">
               <!-- Text-CSV_XS-&Text-CSV_XS-version; (optional)= --> \n --non_traduit-- </ulink>
            </para> 
            <indexterm zone="perl-modules perl-text-csv_xs">
               <primary sortas="g-Text-CSV_XS"> Text::CSV_XS </primary>
            </indexterm>
         </listitem>
      </itemizedlist>
      </listitem>
      </itemizedlist>
      
      <bridgehead renderas="sect3" id="perl-html-parser" xreflabel="HTML::Parser-&HTML-Parser-version;">  </bridgehead>
      <indexterm zone="perl-modules perl-html-parser">
         <primary sortas="g-HTML-Parser"> HTML::Parser </primary>
      </indexterm>
      
      <para>
         <!-- The HTML::Parser distribution is a collection of modules that parse and extract
         information from HTML documents. The modules listed below are installed using the standard=
         --> \n --non_traduit-- <application></application> <!-- module= --> \n --non_traduit--
         <xref linkend="perl-standard-install"/>. 
      </para> 
      <itemizedlist spacing='compact'>
         <listitem>
            <para>
               <ulink
               url="http://cpan.org/authors/id/G/GA/GAAS/HTML-Parser-&HTML-Parser-version;.tar.gz">
               <!-- HTML-Parser-&HTML-Parser-version;= --> \n --non_traduit-- </ulink>
            </para> 
         <itemizedlist>
         <listitem>
            <para id="perl-html-tagset">
               <ulink
               url="http://cpan.org/authors/id/P/PE/PETDANCE/HTML-Tagset-&HTML-Tagset-version;.tar.gz"> <!-- HTML-Tagset-&HTML-Tagset-version;= --> \n --non_traduit-- </ulink>
            </para> 
            <indexterm zone="perl-modules perl-html-tagset">
               <primary sortas="g-HTML-Tagset"> HTML::Tagset </primary>
            </indexterm>
         <itemizedlist>
         <listitem>
            <para>
               <xref linkend="perl-test-pod"/><!-- (optionally used during the tests)= --> \n
               --non_traduit-- 
            </para> 
         </listitem>
      </itemizedlist>
      </listitem>
      <listitem>
         <para>
            <xref linkend="perl-lwp"/><!-- (run-time requirement for the included HTML::HeadParser
            module)= --> \n --non_traduit-- 
         </para> 
      </listitem>
      </itemizedlist>
      </listitem>
      </itemizedlist>
      
      <bridgehead renderas="sect3" id="perl-html-tableextract" xreflabel="HTML::TableExtract-&HTML-TableExtract-version;">  </bridgehead>
      <indexterm zone="perl-modules perl-html-tableextract">
         <primary sortas="g-HTML-TableExtract"> HTML::TableExtract </primary>
      </indexterm>
      
      <para>
         <!-- HTML::TableExtract is a module that simplifies the extraction of the content contained
         in tables within HTML documents, extracted either as text or encoded element trees. Tables
         of note may be specified using Headers, Depth, Count, Attributes, or some combination of
         the four. The module and dependencies are installed using the standard= --> \n
         --non_traduit-- <application></application> <!-- module= --> \n --non_traduit-- <xref
         linkend="perl-standard-install"/>. 
      </para> 
      <itemizedlist spacing='compact'>
         <listitem>
            <para>
               <ulink
               url="http://cpan.org/authors/id/M/MS/MSISK/HTML-TableExtract-&HTML-TableExtract-version;.tar.gz"> <!-- HTML-TableExtract-&HTML-TableExtract-version;= --> \n --non_traduit-- </ulink>
            </para> 
         <itemizedlist>
         <listitem>
            <para id="perl-html-element-extended">
               <ulink
               url="http://cpan.org/authors/id/M/MS/MSISK/HTML-Element-Extended-&HTML-Element-Extended-version;.tar.gz"> <!-- HTML-Element-Extended-&HTML-Element-Extended-version;= --> \n --non_traduit-- </ulink>
            </para> 
            <indexterm zone="perl-modules perl-html-element-extended">
               <primary sortas="g-HTML-Element-Extended"> HTML::Element::Extended </primary>
            </indexterm>
         <itemizedlist>
         <listitem>
            <para id="perl-html-tree">
               <ulink
               url="http://cpan.org/authors/id/P/PE/PETEK/HTML-Tree-&HTML-Tree-version;.tar.gz">
               <!-- HTML-Tree-&HTML-Tree-version;= --> \n --non_traduit-- </ulink>
            </para> 
            <indexterm zone="perl-modules perl-html-tree">
               <primary sortas="g-HTML-Tree"> HTML::Tree </primary>
            </indexterm>
         <itemizedlist>
         <listitem>
            <para>
               <xref linkend="perl-html-parser"/>
            </para> 
         </listitem>
         <listitem>
            <para>
               <xref linkend="perl-test-pod"/><!-- (optionally used during the tests)= --> \n
               --non_traduit-- 
            </para> 
         </listitem>
      </itemizedlist>
      </listitem>
      </itemizedlist>
      </listitem>
      <listitem>
         <para>
            <xref linkend="perl-test-pod-coverage"/><!-- (optionally used during the tests)= --> \n
            --non_traduit-- 
         </para> 
      </listitem>
      </itemizedlist>
      </listitem>
      </itemizedlist>
      
      <bridgehead renderas="sect3" id="perl-lwp" xreflabel="libwww-perl-&LWP-version;">  </bridgehead>
      <indexterm zone="perl-modules perl-lwp">
         <primary sortas="g-libwww-perl"> libwww-perl </primary>
      </indexterm>
      
      <para>
         <!-- The libwww-perl (LWP) collection is a set of= --> \n --non_traduit--
         <application></application> <!-- modules which provide a simple and consistent application
         programming interface to the World-Wide Web. The main focus of the library is to provide
         classes and functions that allow you to write WWW clients. The library also contains
         modules that are of more general use and even classes that help you implement simple HTTP
         servers. The LWP collection and all its= --> \n --non_traduit-- <application></application>
         <!-- module dependencies are installed using the standard= --> \n --non_traduit--
         <application></application> <!-- module= --> \n --non_traduit-- <xref
         linkend="perl-standard-install"/>. 
      </para> 
      <itemizedlist spacing='compact'>
         <listitem>
            <para>
               <ulink url="http://cpan.org/authors/id/G/GA/GAAS/libwww-perl-&LWP-version;.tar.gz">
               <!-- libwww-perl-&LWP-version;= --> \n --non_traduit-- </ulink>
            </para> 
         <itemizedlist>
         <listitem>
            <para>
               <xref linkend="perl-uri"/>
            </para> 
         </listitem>
         <listitem>
            <para>
               <xref linkend="perl-html-parser"/>
            </para> 
         </listitem>
         <listitem>
            <para id="perl-crypt-ssleay" xreflabel="Crypt::SSLeay-&Crypt-SSLeay-version;">
               <ulink
               url="http://cpan.org/authors/id/D/DL/DLAND/Crypt-SSLeay-&Crypt-SSLeay-version;.tar.gz"> <!-- Crypt-SSLeay-&Crypt-SSLeay-version;= --> \n --non_traduit-- </ulink>
               <!-- (optional, for HTTPS support)= --> \n --non_traduit-- 
            </para> 
            <indexterm zone="perl-modules perl-crypt-ssleay">
               <primary sortas="g-Crypt-SSLeay"> Crypt::SSLeay </primary>
            </indexterm>
         <itemizedlist>
         <listitem>
            <para>
               <xref linkend="openssl"/>
            </para> 
         </listitem>
         <listitem>
            <para>
               <!-- A= --> \n --non_traduit-- <quote><!-- testcover= --> \n --non_traduit-- </quote>
               <filename>Makefile</filename> <!-- target is created (which creates a= --> \n
               --non_traduit-- <command><!-- /usr/bin/testcover= --> \n --non_traduit--</command>
               <!-- script) if the= --> \n --non_traduit-- <ulink
               url="http://cpan.org/authors/id/S/SM/SMPETERS/ExtUtils-MakeMaker-Coverage-0.05.tar.gz"> <!-- Extutils::MakeMaker::Coverage= --> \n --non_traduit-- </ulink>
               <!-- module is installed.= --> \n --non_traduit-- 
            </para> 
         </listitem>
      </itemizedlist>
      </listitem>
      </itemizedlist>
      </listitem>
      </itemizedlist>
      
      <bridgehead renderas="sect3" id="perl-module-info" xreflabel="Module::Info-&Module-Info-version;">  </bridgehead>
      <indexterm zone="perl-modules perl-module-info">
         <primary sortas="g-Module-Info"> Module::Info </primary>
      </indexterm>
      
      <para>
         <!-- The Module::Info module is quite useful for tasks other than just support of other
         modules. It can be used from the command-line to tell you if a particular module is
         included in, or has been installed into your= --> \n --non_traduit--
         <application></application> <!-- installation. Additionally, Module::Info can tell you what
         version of a module is installed and what dependencies are required for it. You can even
         use Module::Info to gather dependencies of uninstalled modules. The Module::Info module and
         dependencies install using the standard= --> \n --non_traduit-- <application></application>
         <!-- module= --> \n --non_traduit-- <xref linkend="perl-standard-install"/>. 
      </para> 
      <itemizedlist spacing='compact'>
         <listitem>
            <para>
               <ulink
               url="http://www.cpan.org/authors/id/M/MB/MBARBON/Module-Info-&Module-Info-version;.tar.gz"> <!-- Module-Info-&Module-Info-version;= --> \n --non_traduit-- </ulink>
            </para> 
         <itemizedlist>
         <listitem>
            <para>
               <xref linkend="perl-test-pod-coverage"/><!-- (optionally used during the tests)= -->
               \n --non_traduit-- 
            </para> 
         </listitem>
         <listitem>
            <para>
               <xref linkend="perl-test-pod"/><!-- (optionally used during the tests)= --> \n
               --non_traduit-- 
            </para> 
         </listitem>
      </itemizedlist>
      </listitem>
      </itemizedlist>
      
      <bridgehead renderas="sect3" id="perl-module-signature" xreflabel="Module::Signature-&Module-Signature-version;">  </bridgehead>
      <indexterm zone="perl-modules perl-module-signature">
         <primary sortas="g-Module-Signature"> Module::Signature </primary>
      </indexterm>
      
      <para>
         <!-- The Module::Signature module is used to check and create= --> \n --non_traduit--
         <filename>SIGNATURE</filename> <!-- files for CPAN distributions. After installing
         Module::Signature you can verify the content of a distribution tarball (if it includes a=
         --> \n --non_traduit-- <filename>SIGNATURE</filename> <!-- file) by unpacking the tarball,
         changing into the newly created directory and issuing the command= --> \n --non_traduit--
         <command><!-- cpansign -v= --> \n --non_traduit--</command> <!-- . It will check each
         file's integrity, as well as the signature's validity. Note that some of the dependencies
         appear to be circular, however, they are only run-time conflicts and you should be able to
         fully utilize them as long as everything is installed. Module::Signature and the dependency
         modules are installed using the standard= --> \n --non_traduit--
         <application></application> <!-- module= --> \n --non_traduit-- <xref
         linkend="perl-standard-install"/>. 
      </para> 
      <itemizedlist spacing='compact'>
         <listitem>
            <para>
               <ulink
               url="http://cpan.org/authors/id/A/AU/AUDREYT/Module-Signature-&Module-Signature-version;.tar.gz"> <!-- Module-Signature-&Module-Signature-version;= --> \n --non_traduit-- </ulink>
            </para> 
         <itemizedlist>
         <listitem>
            <para>
               <xref linkend="perl-text-diff"/>
            </para> 
         </listitem>
         <listitem>
            <para id="perl-par-dist">
               <ulink
               url="http://cpan.org/authors/id/S/SM/SMUELLER/PAR-Dist-&PAR-Dist-version;.tar.gz">
               <!-- PAR-Dist-&PAR-Dist-version;= --> \n --non_traduit-- </ulink>
            </para> 
            <indexterm zone="perl-modules perl-par-dist">
               <primary sortas="g-PAR-Dist"> PAR::Dist </primary>
            </indexterm>
         <itemizedlist>
         <listitem>
            <para>
               <xref linkend="perl-archive-zip"/>
            </para> 
         </listitem>
         <listitem>
            <para>
               <xref linkend="perl-lwp"/>
            </para> 
         </listitem>
         <listitem>
            <para>
               <xref linkend="perl-module-signature"/>
            </para> 
         </listitem>
      </itemizedlist>
      </listitem>
      <listitem>
         <para>
            <xref linkend="gnupg"/>
         </para> 
      </listitem>
      </itemizedlist>
      </listitem>
      </itemizedlist>
      
      <bridgehead renderas="sect3" id="perl-net-dns" xreflabel="Net-DNS-&Net-DNS-version;">  </bridgehead>
      <indexterm zone="perl-modules perl-net-dns">
         <primary sortas="g-Net-DNS"> Net::DNS </primary>
      </indexterm>
      
      <para>
         <!-- Net::DNS is a DNS resolver implemented in= --> \n --non_traduit--
         <application></application> <!-- . It can be used to perform nearly any type of DNS query
         from a= --> \n --non_traduit-- <application></application> <!-- script. The Net::DNS module
         and all its dependencies are installed using the standard= --> \n --non_traduit--
         <application></application> <!-- module= --> \n --non_traduit-- <xref
         linkend="perl-standard-install"/>. 
      </para> 
      <itemizedlist spacing='compact'>
         <listitem>
            <para>
               <ulink url="http://cpan.org/authors/id/O/OL/OLAF/Net-DNS-&Net-DNS-version;.tar.gz">
               <!-- Net-DNS-&Net-DNS-version;= --> \n --non_traduit-- </ulink>
            </para> 
         <itemizedlist>
         <listitem>
            <para id="perl-digest-hmac">
               <ulink
               url="http://cpan.org/authors/id/G/GA/GAAS/Digest-HMAC-&Digest-HMAC-version;.tar.gz">
               <!-- Digest-HMAC-&Digest-HMAC-version;= --> \n --non_traduit-- </ulink>
            </para> 
            <indexterm zone="perl-modules perl-digest-hmac">
               <primary sortas="g-Digest-HMAC"> Digest::HMAC </primary>
            </indexterm>
         <itemizedlist>
         <listitem>
            <para id="perl-digest-sha1">
               <ulink
               url="http://cpan.org/authors/id/G/GA/GAAS/Digest-SHA1-&Digest-SHA1-version;.tar.gz">
               <!-- Digest-SHA1-&Digest-SHA1-version;= --> \n --non_traduit-- </ulink>
            </para> 
            <indexterm zone="perl-modules perl-digest-sha1">
               <primary sortas="g-Digest-SHA1"> Digest::SHA1 </primary>
            </indexterm>
         </listitem>
      </itemizedlist>
      </listitem>
      <listitem>
         <para id="perl-net-ip">
            <ulink url="http://cpan.org/authors/id/M/MA/MANU/Net-IP-&Net-IP-version;.tar.gz"> <!--
            Net-IP-&Net-IP-version;= --> \n --non_traduit-- </ulink>
         </para> 
         <indexterm zone="perl-modules perl-net-ip">
            <primary sortas="g-Net-IP"> Net::IP </primary>
         </indexterm>
      </listitem>
      <listitem>
         <para id="perl-io-socket-inet6">
            <ulink
            url="http://cpan.org/authors/id/M/MO/MONDEJAR/IO-Socket-INET6-&IO-Socket-INET6-version;.tar.gz"> <!-- IO-Socket-INET6-&IO-Socket-INET6-version;= --> \n --non_traduit-- </ulink>
            <!-- (required for IPv6 support)= --> \n --non_traduit-- 
         </para> 
         <indexterm zone="perl-modules perl-io-socket-inet6">
            <primary sortas="g-IO-Socket-INET6"> IO::Socket::INET6 </primary>
         </indexterm>
         <itemizedlist>
         <listitem>
            <para id="perl-socket6">
               <ulink
               url="http://cpan.org/authors/id/U/UM/UMEMOTO/Socket6-&Socket6-version;.tar.gz"> <!--
               Socket6-&Socket6-version;= --> \n --non_traduit-- </ulink>
            </para> 
            <indexterm zone="perl-modules perl-socket6">
               <primary sortas="g-Socket6"> Socket6 </primary>
            </indexterm>
         </listitem>
      </itemizedlist>
      </listitem>
      <listitem>
         <para id="perl-digest-bubblebabble">
            <ulink
            url="http://cpan.org/authors/id/B/BT/BTROTT/Digest-BubbleBabble-&Digest-BubbleBabble-version;.tar.gz"> <!-- Digest-BubbleBabble-&Digest-BubbleBabble-version;= --> \n --non_traduit-- </ulink>
         </para> 
         <indexterm zone="perl-modules perl-digest-bubblebabble">
            <primary sortas="g-Digest-BubbleBabble"> Digest::BubbleBabble </primary>
         </indexterm>
      </listitem>
      <listitem>
         <para>
            <xref linkend="perl-test-pod"/><!-- (optional, only used during the test suite)= --> \n
            --non_traduit-- 
         </para> 
      </listitem>
      </itemizedlist>
      </listitem>
      </itemizedlist>
      
      <bridgehead renderas="sect3" id="perl-pod-coverage" xreflabel="Pod::Coverage-&Pod-Coverage-version;">  </bridgehead>
      <indexterm zone="perl-modules perl-pod-coverage">
         <primary sortas="g-Pod-Coverage"> Pod::Coverage </primary>
      </indexterm>
      
      <para>
         <!-- The Pod::Coverage module is a= --> \n --non_traduit-- <application></application> <!--
         library used to check if the documentation of a module is comprehensive. All the
         dependencies are installed using the standard= --> \n --non_traduit--
         <application></application> <!-- module= --> \n --non_traduit-- <xref
         linkend="perl-standard-install"/>. 
      </para> 
      <itemizedlist spacing='compact'>
         <listitem>
            <para>
               <ulink
               url="http://www.cpan.org/authors/id/R/RC/RCLAMP/Pod-Coverage-&Pod-Coverage-version;.tar.gz"> <!-- Pod-Coverage-&Pod-Coverage-version;= --> \n --non_traduit-- </ulink>
            </para> 
         <itemizedlist>
         <listitem>
            <para id="perl-devel-symdump">
               <ulink
               url="http://www.cpan.org/authors/id/A/AN/ANDK/Devel-Symdump-&Devel-Symdump-version;.tar.gz"> <!-- Devel-Symdump-&Devel-Symdump-version;= --> \n --non_traduit-- </ulink>
            </para> 
            <indexterm zone="perl-modules perl-devel-symdump">
               <primary sortas="g-Devel-Symdump"> Devel::Symdump </primary>
            </indexterm>
         <itemizedlist>
         <listitem>
            <para>
               <xref linkend="perl-test-pod-coverage"/><!-- (optionally used during the tests, and
               is a circular dependency)= --> \n --non_traduit-- 
            </para> 
         </listitem>
         <listitem>
            <para>
               <xref linkend="perl-test-pod"/><!-- (optionally used during the tests)= --> \n
               --non_traduit-- 
            </para> 
         </listitem>
      </itemizedlist>
      </listitem>
      </itemizedlist>
      </listitem>
      </itemizedlist>
      
      <bridgehead renderas="sect3" id="perl-sgmlspm" xreflabel="SGMLSpm-&SGMLSpm-version;">  </bridgehead>
      <indexterm zone="perl-modules perl-sgmlspm">
         <primary sortas="g-SGMLSpm"> SGMLSpm </primary>
      </indexterm>
      
      <para>
         <!-- The SGMLSpm module is a= --> \n --non_traduit-- <application></application> <!--
         library used for parsing the output from James Clark's SGMLS and NSGMLS parsers. This
         module requires modified installation instructions, shown below.= --> \n --non_traduit-- 
      </para> 
      <itemizedlist spacing='compact'>
         <listitem>
            <para>
               <ulink url="http://cpan.org/authors/id/D/DM/DMEGG/SGMLSpm-&SGMLSpm-version;.tar.gz">
               <!-- SGMLSpm-&SGMLSpm-version;= --> \n --non_traduit-- </ulink>
            </para> 
         </listitem>
      </itemizedlist>
      
      <para>
         <!-- If your system's= --> \n --non_traduit-- <application></application> <!-- version is
         different than &lfs-perl-version;, you'll need to modify the= --> \n --non_traduit--
         <command><!-- sed= --> \n --non_traduit--</command> <!-- command below to reflect the
         version you have installed.= --> \n --non_traduit-- 
      </para> 
      
<screen><userinput>sed -i -e "s@/usr/local/bin@/usr/bin@" \
       -e "s@/usr/local/lib/perl5@/usr/lib/perl5/site_perl/&lfs-perl-version;@" \
       -e "s@/usr/local/lib/www/docs@/usr/share/doc/perl5@" \
    Makefile</userinput></screen>
      
      <para>
         <!-- Now, as the= --> \n --non_traduit-- <systemitem class="username"> <!-- root= --> \n
         --non_traduit-- </systemitem><!-- user:= --> \n --non_traduit--  
      </para> 
      
<screen role="root">
<userinput>make install &amp;&amp;
install -v -m755 -d /usr/share/doc/perl5 &amp;&amp;
make install_html &amp;&amp;
rm -v -f /usr/share/doc/perl5/SGMLSpm/sample.pl &amp;&amp;
install -v -m644 DOC/sample.pl /usr/share/doc/perl5/SGMLSpm</userinput></screen>
      
      <bridgehead renderas="sect3" id="perl-test-pod" xreflabel="Test::Pod-&Test-Pod-version;">  </bridgehead>
      <indexterm zone="perl-modules perl-test-pod">
         <primary sortas="g-Test-Pod"> Test::Pod </primary>
      </indexterm>
      
      <para>
         <!-- The Test:Pod module is (most of the time, optionally) used by other modules during the
         build process to check the validity of POD (Plain Old Documentation) files. The Test::Pod
         module is typically included by module authors to automatically find and check all POD
         files in a module distribution. This module is installed using the standard= --> \n
         --non_traduit-- <application></application> <!-- module= --> \n --non_traduit-- <xref
         linkend="perl-standard-install"/>. 
      </para> 
      <itemizedlist spacing='compact'>
         <listitem>
            <para>
               <ulink
               url="http://www.cpan.org/authors/id/D/DW/DWHEELER/Test-Pod-&Test-Pod-version;.tar.gz"> <!-- Test-Pod-&Test-Pod-version;= --> \n --non_traduit-- </ulink>
            </para> 
         </listitem>
      </itemizedlist>
      
      <bridgehead renderas="sect3" id="perl-test-pod-coverage" xreflabel="Test::Pod::Coverage-&Test-Pod-Coverage-version;">  </bridgehead>
      <indexterm zone="perl-modules perl-test-pod-coverage">
         <primary sortas="g-Test-Pod-Coverage"> Test::Pod::Coverage </primary>
      </indexterm>
      
      <para>
         <!-- The Test::Pod::Coverage module is used to check files in a distribution for POD
         coverage. It is normally used by developers to ensure their projects are adequately covered
         with POD and it is also used in the test suites of many module distributions. This module
         and the dependency are installed using the standard= --> \n --non_traduit--
         <application></application> <!-- module= --> \n --non_traduit-- <xref
         linkend="perl-standard-install"/>. 
      </para> 
      <itemizedlist spacing='compact'>
         <listitem>
            <para>
               <ulink
               url="http://cpan.org/authors/id/P/PE/PETDANCE/Test-Pod-Coverage-&Test-Pod-Coverage-version;.tar.gz"> <!-- Test-Pod-Coverage-&Test-Pod-Coverage-version;= --> \n --non_traduit-- </ulink>
            </para> 
         <itemizedlist>
         <listitem>
            <para>
               <xref linkend="perl-pod-coverage"/>
            </para> 
         </listitem>
      </itemizedlist>
      </listitem>
      </itemizedlist>
      
      <bridgehead renderas="sect3" id="perl-text-diff" xreflabel="Text::Diff-&Text-Diff-version;">  </bridgehead>
      <indexterm zone="perl-modules perl-text-diff">
         <primary sortas="g-Text-Diff"> Text::Diff </primary>
      </indexterm>
      
      <para>
         <!-- Text::Diff is used to perform diffs on files and record sets. It provides a basic set
         of services akin to the GNU= --> \n --non_traduit-- <command><!-- diff= --> \n
         --non_traduit--</command> <!-- utility. It is not anywhere near as feature complete as GNU=
         --> \n --non_traduit-- <command><!-- diff= --> \n --non_traduit--</command> <!-- , but it
         is better integrated with= --> \n --non_traduit-- <application></application> <!-- and
         available on all platforms. Text::Diff is often faster than shelling out to a system's= -->
         \n --non_traduit-- <command><!-- diff= --> \n --non_traduit--</command> <!-- executable for
         small files, and generally slower on larger files. The modules listed below are installed
         using the standard= --> \n --non_traduit-- <application></application> <!-- module= --> \n
         --non_traduit-- <xref linkend="perl-standard-install"/>. 
      </para> 
      <itemizedlist spacing='compact'>
         <listitem>
            <para>
               <ulink
               url="http://cpan.org/authors/id/R/RB/RBS/Text-Diff-&Text-Diff-version;.tar.gz"> <!--
               Text-Diff-&Text-Diff-version;= --> \n --non_traduit-- </ulink>
            </para> 
         <itemizedlist>
         <listitem>
            <para id="perl-algorithm-diff">
               <ulink
               url="http://cpan.org/authors/id/T/TY/TYEMQ/Algorithm-Diff-&Algorithm-Diff-version;.tar.gz"> <!-- Algorithm-Diff-&Algorithm-Diff-version;= --> \n --non_traduit-- </ulink>
            </para> 
            <indexterm zone="perl-modules perl-algorithm-diff">
               <primary sortas="g-Algorithm-Diff"> Algorithm::Diff </primary>
            </indexterm>
         </listitem>
      </itemizedlist>
      </listitem>
      </itemizedlist>
      
      <bridgehead renderas="sect3" id="tk-perl" xreflabel="Tk-Perl-&Tk-Perl-version;">  </bridgehead>
      <indexterm zone="perl-modules tk-perl">
         <primary sortas="g-Tk"> Tk </primary>
      </indexterm>
      
      <para>
         <!-- The= --> \n --non_traduit-- <application></application> <!-- module is a= --> \n
         --non_traduit-- <application></application> <!-- interface to the= --> \n --non_traduit--
         <application></application> <!-- package. The goal of this release is Unicode support via=
         --> \n --non_traduit-- <application></application> <!-- 's and core-= --> \n
         --non_traduit-- <application></application> <!-- 's use of UTF-8. Tk-&Tk-Perl-version;
         builds and loads into a threaded= --> \n --non_traduit-- <application></application> <!--
         but is NOT yet thread safe. The module is installed using the standard= --> \n
         --non_traduit-- <application></application> <!-- module= --> \n --non_traduit-- <xref
         linkend="perl-standard-install"/>. 
      </para> 
      <itemizedlist spacing='compact'>
         <listitem>
            <para>
               <ulink url="http://www.cpan.org/authors/id/S/SR/SREZIC/Tk-&Tk-Perl-version;.tar.gz">
               <!-- Tk-&Tk-Perl-version;= --> \n --non_traduit-- </ulink>
            </para> 
         <itemizedlist>
         <listitem>
            <para>
               <xref linkend="tk"/><!-- and= --> \n --non_traduit-- <xref linkend="libjpeg"/>
            </para> 
         </listitem>
      </itemizedlist>
      </listitem>
      </itemizedlist>
      
      <bridgehead renderas="sect3" id="perl-uri" xreflabel="URI-&URI-version;">  </bridgehead>
      <indexterm zone="perl-modules perl-uri">
         <primary sortas="g-URI"> URI </primary>
      </indexterm>
      
      <para>
         <!-- The URI module implements the URI class.  Objects of this class represent Uniform
         Resource Identifier references as specified in RFC 2396 and updated by RFC 2732 and can be
         used to access and manipulate the various components that make up these strings. The URI
         module and all its dependencies are installed using the standard= --> \n --non_traduit--
         <xref linkend="perl-standard-install"/>. 
      </para> 
      <itemizedlist spacing='compact'>
         <listitem>
            <para>
               <ulink url="http://cpan.org/authors/id/G/GA/GAAS/URI-&URI-version;.tar.gz"> <!--
               URI-&URI-version;= --> \n --non_traduit-- </ulink>
            </para> 
            <indexterm zone="perl-modules perl-uri">
               <primary sortas="g-URI"> URI </primary>
            </indexterm>
         <itemizedlist>
         <listitem>
            <para id="perl-business-isbn">
               <ulink
               url="http://cpan.org/authors/id/B/BD/BDFOY/Business-ISBN-&Business-ISBN-version;.tar.gz"> <!-- Business-ISBN-&Business-ISBN-version;= --> \n --non_traduit-- </ulink>
               <!-- (optional, only used during the test suite)= --> \n --non_traduit-- 
            </para> 
            <indexterm zone="perl-modules perl-business-isbn">
               <primary sortas="g-Business-ISBN"> Business::ISBN </primary>
            </indexterm>
         <itemizedlist>
         <listitem>
            <para>
               <!-- LWP::Simple is required for many of the tests. This is a circular dependency.=
               --> \n --non_traduit-- 
            </para> 
         </listitem>
         <listitem>
            <para id="perl-business-isbn-data">
               <ulink
               url="http://cpan.org/authors/id/B/BD/BDFOY/Business-ISBN-Data-&Business-ISBN-Data-version;.tar.gz"> <!-- Business-ISBN-Data-&Business-ISBN-Data-version;= --> \n --non_traduit-- </ulink>
            </para> 
            <indexterm zone="perl-modules perl-business-isbn-data">
               <primary sortas="g-Business-ISBN-Data"> Business::ISBN::Data </primary>
            </indexterm>
         <itemizedlist>
         <listitem>
            <para id="perl-test-prereq">
               <ulink
               url="http://cpan.org/authors/id/B/BD/BDFOY/Test-Prereq-&Test-Prereq-version;.tar.gz">
               <!-- Test-Prereq-&Test-Prereq-version;= --> \n --non_traduit-- </ulink>
               <!-- (you may need to set up your CPAN access parameters by issuing the command= -->
               \n --non_traduit-- <command><!-- perl -MCPAN -e shell= --> \n
               --non_traduit--</command> <!-- before running the test suite, else the tests may
               hang)= --> \n --non_traduit-- 
            </para> 
            <indexterm zone="perl-modules perl-test-prereq">
               <primary sortas="g-Test-Prereq"> Test::Prereq </primary>
            </indexterm>
         <itemizedlist>
         <listitem>
            <para>
               <xref linkend="perl-module-info"/>
            </para> 
         </listitem>
         <listitem>
            <para id="perl-module-corelist">
               <ulink
               url="http://cpan.org/authors/id/R/RG/RGARCIA/Module-CoreList-&Module-Corelist-version;.tar.gz"> <!-- Module-CoreList-&Module-Corelist-version;= --> \n --non_traduit-- </ulink>
            </para> 
            <indexterm zone="perl-modules perl-module-corelist">
               <primary sortas="g-Module-Corelist"> Module::Corelist </primary>
            </indexterm>
         <itemizedlist>
         <listitem>
            <para>
               <xref linkend="perl-test-pod"/><!-- (optionally used during the tests)= --> \n
               --non_traduit-- 
            </para> 
         </listitem>
      </itemizedlist>
      </listitem>
      </itemizedlist>
      </listitem>
      <listitem>
         <para>
            <xref linkend="perl-test-pod-coverage"/><!-- (optionally used during the tests)= --> \n
            --non_traduit-- 
         </para> 
      </listitem>
      </itemizedlist>
      </listitem>
      </itemizedlist>
      </listitem>
      </itemizedlist>
      </listitem>
      </itemizedlist>
      
      <bridgehead renderas="sect3" id="perl-xml-parser" xreflabel="XML::Parser-&XML-Parser-version;">  </bridgehead>
      <indexterm zone="perl-modules perl-xml-parser">
         <primary sortas="g-XML-Parser"> XML::Parser </primary>
      </indexterm>
      
      <para>
         <!-- The XML::Parser module is a= --> \n --non_traduit-- <application></application> <!--
         extension interface to James Clark's XML parser,= --> \n --non_traduit--
         <application></application> <!-- . The module is installed using the standard= --> \n
         --non_traduit-- <application></application> <!-- module= --> \n --non_traduit-- <xref
         linkend="perl-standard-install"/>. 
      </para> 
      <itemizedlist spacing='compact'>
         <listitem>
            <para>
               <ulink
               url="http://www.cpan.org/authors/id/C/CH/CHORNY/XML-Parser-&XML-Parser-version;.tar.gz"> <!-- XML-Parser-&XML-Parser-version;= --> \n --non_traduit-- </ulink>
            </para> 
         <itemizedlist>
         <listitem>
            <para>
               <xref linkend="expat"/>
            </para> 
         </listitem>
      </itemizedlist>
      <itemizedlist>
         <listitem>
            <para>
               <xref linkend="perl-lwp"/><!-- (optionally used during the tests)= --> \n
               --non_traduit-- 
            </para> 
         </listitem>
      </itemizedlist>
      </listitem>
      </itemizedlist>
      
      <bridgehead renderas="sect3" id="perl-xml-simple" xreflabel="XML::Simple-&XML-Simple-version;">  </bridgehead>
      <indexterm zone="perl-modules perl-xml-simple">
         <primary sortas="g-XML-Simple"> XML::Simple </primary>
      </indexterm>
      
      <para>
         <!-- The XML::Simple module is a= --> \n --non_traduit-- <application></application> <!--
         extension that provides an easy API to read and write XML (especially config files). The
         module and all dependencies are installed using the standard= --> \n --non_traduit--
         <application></application> <!-- module= --> \n --non_traduit-- <xref
         linkend="perl-standard-install"/>. 
      </para> 
      <itemizedlist spacing='compact'>
         <listitem>
            <para>
               <ulink
               url="http://cpan.org/authors/id/G/GR/GRANTM/XML-Simple-&XML-Simple-version;.tar.gz">
               <!-- XML-Simple-&XML-Simple-version;= --> \n --non_traduit-- </ulink>
            </para> 
         <itemizedlist>
         <listitem>
            <para>
               <!-- One of the following four modules must be installed:= --> \n --non_traduit-- 
            </para> 
         <itemizedlist>
         <listitem>
            <para id="perl-xml-sax">
               <ulink url="http://cpan.org/authors/id/G/GR/GRANTM/XML-SAX-&XML-SAX-version;.tar.gz">
               <!-- XML-SAX-&XML-SAX-version;= --> \n --non_traduit-- </ulink>
            </para> 
            <indexterm zone="perl-modules perl-xml-sax">
               <primary sortas="g-XML-SAX"> XML::SAX </primary>
            </indexterm>
         <itemizedlist>
         <listitem>
            <para id="perl-xml-namespacesupport">
               <ulink
               url="http://www.cpan.org/authors/id/P/PE/PERIGRIN/XML-NamespaceSupport-&XML-NamespaceSupport-version;.tar.gz"> <!-- XML-NamespaceSupport-&XML-NamespaceSupport-version;= --> \n --non_traduit-- </ulink>
            </para> 
            <indexterm zone="perl-modules perl-xml-namespacesupport">
               <primary sortas="g-XML-NamespaceSupport"> XML::NamespaceSupport </primary>
            </indexterm>
         </listitem>
      </itemizedlist>
      </listitem>
      <listitem>
         <para id="perl-xml-sax-expat">
            <ulink
            url="http://cpan.org/authors/id/B/BJ/BJOERN/XML-SAX-Expat-&XML-SAX-Expat-version;.tar.gz"> <!-- XML-SAX-Expat-&XML-SAX-Expat-version;= --> \n --non_traduit-- </ulink>
         </para> 
         <indexterm zone="perl-modules perl-xml-sax-expat">
            <primary sortas="g-XML-SAX-Expat"> XML::SAX::Expat </primary>
         </indexterm>
      </listitem>
      <listitem>
         <para id="perl-xml-libxml">
            <ulink
            url="http://cpan.org/authors/id/P/PA/PAJAS/XML-LibXML-&XML-LibXML-version;.tar.gz"> <!--
            XML-LibXML-&XML-LibXML-version;= --> \n --non_traduit-- </ulink>
         </para> 
         <indexterm zone="perl-modules perl-xml-libxml">
            <primary sortas="g-XML-LibXML"> XML::LibXML </primary>
         </indexterm>
      </listitem>
      <listitem>
         <para>
            <xref linkend="perl-xml-parser"/>
         </para> 
      </listitem>
      </itemizedlist>
      </listitem>
      <listitem>
         <para id="perl-tie-ixhash">
            <ulink
            url="http://www.cpan.org/authors/id/C/CH/CHORNY/Tie-IxHash-&Tie-IxHash-version;.tar.gz">
            <!-- Tie-IxHash-&Tie-IxHash-version;= --> \n --non_traduit-- </ulink>
         </para> 
         <indexterm zone="perl-modules perl-tie-ixhash">
            <primary sortas="g-Tie-IxHash"> Tie::IxHash </primary>
         </indexterm>
      </listitem>
      </itemizedlist>
      </listitem>
      </itemizedlist>
      
      <bridgehead renderas="sect3" id="perl-yaml" xreflabel="YAML-&YAML-version;">  </bridgehead>
      <indexterm zone="perl-modules perl-yaml">
         <primary sortas="g-YAML"> YAML </primary>
      </indexterm>
      
      <para>
         <!-- The= --> \n --non_traduit-- <application></application> <!-- modules implement a= -->
         \n --non_traduit-- <application></application> <!-- Loader and Dumper based on the= --> \n
         --non_traduit-- <application></application> <!-- 1.0 specification= --> \n --non_traduit--
         <ulink url="http://www.yaml.org/spec/"/> . <application></application> <!-- is a generic
         data serialization language that is optimized for human readability. It can be used to
         express the data structures of most modern programming languages. The module and
         dependencies are installed using the standard= --> \n --non_traduit--
         <application></application> <!-- module= --> \n --non_traduit-- <xref
         linkend="perl-standard-install"/>. 
      </para> 
      
      <note> 
         <para>
            <!-- The= --> \n --non_traduit-- <application></application> ,
            <application></application> <!-- and= --> \n --non_traduit-- <application></application>
            <!-- modules will install UTF-8 encoded manual pages. To modify the manual pages so that
            non-UTF-8 encoded pages are installed, issue the following commands (before any other
            build commands):= --> \n --non_traduit-- 
         </para> 
         
<screen><literal>
<application>
</application> 
<command>
</command> 
<application>
</application> 
<command>
</command> 
<application>
</application> 
<command>
</command> </literal>
</screen>
      </note>
      <itemizedlist spacing='compact'>
         <listitem>
            <para>
               <ulink url="http://cpan.org/authors/id/I/IN/INGY/YAML-&YAML-version;.tar.gz"> <!--
               YAML-&YAML-version;= --> \n --non_traduit-- </ulink>
            </para> 
         <itemizedlist>
         <listitem>
            <para id="perl-test-base">
               <ulink
               url="http://cpan.org/authors/id/I/IN/INGY/Test-Base-&Test-Base-version;.tar.gz"> <!--
               Test-Base-&Test-Base-version;= --> \n --non_traduit-- </ulink>
               <!-- (optionally used during the tests)= --> \n --non_traduit-- 
            </para> 
            <indexterm zone="perl-modules perl-test-base">
               <primary sortas="g-Test-Base"> Test::Base </primary>
            </indexterm>
         <itemizedlist>
         <listitem>
            <para id="perl-spiffy">
               <ulink url="http://cpan.org/authors/id/I/IN/INGY/Spiffy-&Spiffy-version;.tar.gz">
               <!-- Spiffy-&Spiffy-version;= --> \n --non_traduit-- </ulink>
            </para> 
            <indexterm zone="perl-modules perl-spiffy">
               <primary sortas="g-Spiffy"> Spiffy </primary>
            </indexterm>
         </listitem>
      </itemizedlist>
      </listitem>
      <listitem>
         <para>
            <xref linkend="perl-text-diff"/><!-- (optionally used during the tests)= --> \n
            --non_traduit-- 
         </para> 
      </listitem>
      </itemizedlist>
      </listitem>
      </itemizedlist>
      
   </sect2>
   
   <sect2 role="installation" id="perl-standard-install" xreflabel="build et installation
   instructions">
      <title></title> 
      
      <para>
         <!-- Install= --> \n --non_traduit-- <application></application> <!-- modules by running
         the following commands:= --> \n --non_traduit-- 
      </para> 
      
<screen><userinput>perl Makefile.PL &amp;&amp;
make &amp;&amp;
make test</userinput></screen>
      
      <para>
         <!-- Now, as the= --> \n --non_traduit-- <systemitem class="username"> <!-- root= --> \n
         --non_traduit-- </systemitem><!-- user:= --> \n --non_traduit--  
      </para> 
      
<screen role="root">
<userinput>make install</userinput></screen>
      
      <note> 
         <para>
            <!-- When reinstalling a= --> \n --non_traduit-- <application></application> <!--
            module, sometimes older versions of the module being reinstalled are in other
            directories specified in= --> \n --non_traduit-- 
         <parameter><!-- @INC= --> \n --non_traduit-- </parameter> <!-- .  To delete all other
         versions of the module being reinstalled (not simply older ones) set the= --> \n
         --non_traduit-- <varname>
            <!-- UNINST= --> \n --non_traduit-- </varname>
            <!-- variable:= --> \n --non_traduit-- 
         </para> 
         
<screen><userinput>make install UNINST=1</userinput></screen>
      </note>
      
   </sect2>
   
   <sect2 role="installation">
      <title></title> 
      
      <para>
         <!-- There is an alternate way of installing the modules using the= --> \n --non_traduit--
         <command><!-- cpan= --> \n --non_traduit--</command> <!-- shell= --> \n --non_traduit--
         <command><!-- install= --> \n --non_traduit--</command> <!-- command. The command
         automatically downloads the source from the CPAN archive, extracts it, runs the
         compilation, testing and installation commands mentioned above, and removes the build
         source tree. You may still need to install dependent library packages before running the
         automated installation method.= --> \n --non_traduit-- 
      </para> 
      
      <para>
         <!-- The first time you run= --> \n --non_traduit-- <command><!-- cpan= --> \n
         --non_traduit--</command> <!-- , you'll be prompted to enter some information regarding
         download locations and methods. This information is retained in files located in= --> \n
         --non_traduit-- <filename class='directory'>~/.cpan</filename> <!-- . Start the= --> \n
         --non_traduit-- <command><!-- cpan= --> \n --non_traduit--</command> <!-- shell by issuing
         '= --> \n --non_traduit-- <command><!-- cpan= --> \n --non_traduit--</command> <!-- ' as
         the= --> \n --non_traduit-- <systemitem class="username"> <!-- root= --> \n --non_traduit--
         </systemitem><!-- user. Any module may now be installed from the= --> \n --non_traduit--
         <emphasis role='underlined'> <prompt>
         <!-- cpan&gt;= --> \n --non_traduit-- </prompt>
         </emphasis>
         <!-- prompt with the command:= --> \n --non_traduit-- 
      </para> 
      
<screen role="root">
<userinput>install<replaceable>-&lt;Module::Name&gt;</replaceable></userinput>
</screen>
      
      <para>
         <!-- For additional commands and help, issue '= --> \n --non_traduit-- <command><!-- help=
         --> \n --non_traduit--</command> <!-- ' from the= --> \n --non_traduit-- <emphasis
         role='underlined'>
         <prompt>
         <!-- cpan&gt;= --> \n --non_traduit-- </prompt>
         </emphasis>
         <!-- prompt.= --> \n --non_traduit-- 
      </para> 
      
      <para>
         <!-- Alternatively, for scripted or non-interactive installations, use the following syntax
         as the= --> \n --non_traduit-- <systemitem class="username"> <!-- root= --> \n
         --non_traduit-- </systemitem><!-- user to install one or more modules:= --> \n
         --non_traduit--  
      </para> 
      
<screen role="root">
<userinput>cpan -i<replaceable>-&lt;Module1::Name&gt;
&lt;Module2::Name&gt;</replaceable></userinput>
</screen>
      
      <para>
         <!-- Review the= --> \n --non_traduit-- <filename>cpan.1</filename> <!-- man page for
         additional parameters you can pass to= --> \n --non_traduit-- <command><!-- cpan= --> \n
         --non_traduit--</command> <!-- on the command line.= --> \n --non_traduit-- 
      </para> 
      
   </sect2>
   
</sect1>
