<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
    "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
   <!ENTITY % general-entities SYSTEM "../../general.ent">
   %general-entities;
   
]>
<sect1 id="compressdoc" xreflabel="Compresser des pages de man et d'infos">
   <?dbhtml filename="compressdoc.html"?>
   
   <sect1info>
      <othername>$LastChangedBy: dnicholson $</othername>
      <date>$Date: 2008-04-22 01:27:43 +0200 (mar. 22 avril 2008) $</date>
   </sect1info>
   
   <title>Compresser des pages de man et d'infos</title> 
   
   <indexterm zone="compressdoc">
      <primary sortas="b-compressdoc"> compressdoc </primary>
   </indexterm>
   
   <para>
      Les lecteurs de man et d'infos peuvent gérer de façon transparente des fichiers compressés
      avec <command>gzip</command> ou <command>bzip2</command> , une fonctionnalité que vous pouvez
      utiliser pour libérer de l'espace disque en laissant disponible la documentation. Les choses
      ne sont cependant pas si simples; les répertoires de man ont tendance à contenir des
      liens&mdash;durs et symboliques&mdash;qui remettent en cause les idées simples telles que
      l'appel de <command>gzip</command> sur eux de manière récursive. Une meilleure manière de
      faire est d'utiliser le script ci-dessous. Si vous préférez télécharger le fichier au lieu de
      le créer en tapant ou en faisant un copier-coller, vous pouvez le trouver sur <ulink
      url="&files-anduin;/compressdoc"/> (vous devriez installer le fichier dans le répertoire
      <filename class="directory">/usr/sbin</filename> ). 
   </para> 
   
<screen role="root">
<?dbfo keep-together="auto"?>
<userinput>cat &gt; /usr/sbin/compressdoc &lt;&lt; "EOF"
<literal>
  if [ -n "$1" ]; then -    echo "Option inconnue: $1" -  ( echo "Utilisation: $MY_NAME
  &lt;comp_method&gt; [options] [reps]" &amp;&amp; \ -  "Bootable Utility CD" (outil CD amorçable),
  datant du 09042003.1816(+0200), et -  BASENAME=`basename "${2}" .bz2` -  BASENAME=`basename
  "${BASENAME}" .gz` -  GZ_FILE="$BASENAME".gz -  BZ_FILE="$BASENAME".bz2 -  LATEST=`(cd "$DIR"; ls
  -1rt "${BASENAME}" "${GZ_FILE}" "${BZ_FILE}" \ -  for i in "${BASENAME}" "${GZ_FILE}"
  "${BZ_FILE}"; do -    [ "$LATEST" !="$i" ] &amp;&amp; rm -f "$DIR"/"$i" -  [ "$LATEST" ="$2" ]
  &amp;&amp; return 0 -while [ -n "$1" ]; do -      MAN_CONF="$2" -      MAN_DIR="${MAN_DIR} ${1}" -
       echo "\"$1\" n'est pas le nom d'un chemin absolu" -     VERBOSE_OPT="-v -v" -if [ -z
  "$MAN_DIR" ]; then -  MAN_DIR=`manpath -q -C "$MAN_CONF"/man_db.conf \ -            | while read
  foo; do dirname "$foo"/.; done \ -            | while read bar; do echo -n "$bar "; done` -if [ -z
  "$MAN_DIR" ]; then -  echo "Aucun répertoire spécifié et aucun répertoire trouvé avec \`manpath'"
  -  if [ ! -d "$DIR" -o ! -r "$DIR" ]; then -    echo "Le répertoire '$DIR' n'existe pas ou n'est
  pas lisible" -if [ "$FAKE" !="no" ]; then -  echo "Paramètres actuels utilisés:" -  echo -n
  "Compression.......: " -    --bzip2|--bz2|-b) echo -n "bzip2";; -    --gzip|--gz|-g) echo -n
  "gzip";; -    --automatic) echo -n "compressing";; -    --decompress|-d) echo -n "decompressing";;
  -    *) echo -n "unknown";; -  echo " ($COMP_METHOD)" -  echo "Niveau de compression.: $COMP_LVL"
  -  echo "Suffixe de compression: $COMP_SUF" -  echo -n "Forcer la compression.: " -  [
  "foo$FORCE_OPT" ="foo-F" ] &amp;&amp; echo "yes" || echo "no" -  echo "man_db.conf est....:
  ${MAN_CONF}/man_db.conf" -  echo -n "Liens en dur........: " -  [ "foo$LN_OPT" ="foo-S" ]
  &amp;&amp; -  echo "convertir en liens mous" || echo "leave as is" -  echo -n "Liens mous........:
  " -  [ "foo$LN_OPT" ="foo-H" ] &amp;&amp; -  echo "convertir en liens durs" || echo "leave as is"
  -  echo "Sauvegarde............: $BACKUP" -  echo "Tromperie (oui !).....: $FAKE" -  echo
  "Répertoires.......: $MAN_DIR" -  echo "Niveau de verbosité...: $VERBOSE_LVL" -if [ -z
  "${COMP_METHOD}" -a "${BACKUP}" ="no" ]; then -if [ "$BACKUP" ="yes" ]; then -    cd "${DIR}/.." -
     if [ ! -w "`pwd`" ]; then -      echo "On ne peut pas écrire dans le répertoire '`pwd`'" -   
  DIR_NAME=`basename "${DIR}"` -    echo "Sauvegarde de $DIR..." &gt; $DEST_FD0 -    [ -f
  "${DIR_NAME}.tar.old" ] &amp;&amp; rm -f "${DIR_NAME}.tar.old" -    [ -f "${DIR_NAME}.tar" ]
  &amp;&amp; -    mv "${DIR_NAME}.tar" "${DIR_NAME}.tar.old" -    tar -cvf "${DIR_NAME}.tar"
  "${DIR_NAME}" &gt; $DEST_FD1 -  if [ ! -w "$DIR" ]; then -    echo "On ne peut écrire dans le
  répertoire '$DIR'" -  cd "$DIR" -    if [ "foo$FILE" ="foo*" ]; then continue; fi -    if [ ! -L
  "$FILE" -a ! -e "$FILE" ]; then continue; fi -    if [ "$FILE" ="whatis" ]; then continue; fi -   
  if [ -d "$FILE" ]; then -      echo "-&gt; Entrant dans ${DIR}/${FILE}..." &gt; $DEST_FD0 -     
  (cd "$MEM_DIR" &amp;&amp; eval "$0" ${COMP_METHOD} ${COMP_LVL} ${LN_OPT} \ -        ${VERBOSE_OPT}
  ${FORCE_OPT} "${DIR}/${FILE}") || exit $? -      echo "&lt;- Quittant ${DIR}/${FILE}." &gt;
  $DEST_FD1 -      if ! check_unique "$DIR" "$FILE"; then continue; fi -      if [ "$COMP_METHOD"
  ="--automatic" ]; then -        case "$FILE" in -            SIZE=$(bzcat "$FILE" | wc -c) ;; -   
          SIZE=$(zcat "$FILE" | wc -c) ;; -            SIZE=$(wc -c &lt; "$FILE") ;; -     
  BASE_FILE=`basename "$FILE" .gz` -      BASE_FILE=`basename "$BASE_FILE" .bz2` -      if [
  "${FILE}" ="${BASE_FILE}${COMP_SUF}" \ -         -a "foo${FORCE_OPT}" ="foo" ]; then continue; fi
  -      if [ -h "$FILE" ]; then -        case "$FILE" in -        if [ ! "$EXT" ="none" ]; then -  
         LINK=`ls -l "$FILE" | cut -d "&gt;" -f2 \ -               | tr -d " " | sed s/\.$EXT$//` - 
          NEWNAME=`echo "$FILE" | sed s/\.$EXT$//` -          mv "$FILE" "$NEWNAME" -         
  FILE="$NEWNAME" -          LINK=`ls -l "$FILE" | cut -d "&gt;" -f2 | tr -d " "` -        if [
  "$LN_OPT" ="-H" ]; then -          rm -f "$FILE" &amp;&amp; ln "${LINK}$COMP_SUF"
  "${FILE}$COMP_SUF" -          chmod --reference "${LINK}$COMP_SUF" "${FILE}$COMP_SUF" -         
  rm -f "$FILE" &amp;&amp; ln -s "${LINK}$COMP_SUF" "${FILE}$COMP_SUF" -        echo "Réédition du
  lien $FILE" &gt; $DEST_FD1 -      # sinon, si on a un fichier "plain" -      elif [ -f "$FILE" ];
  then -        inode=`ls -li "$FILE" | awk '{print $1}'` -        HLINKS=`find . \! -name "$FILE"
  -inum $inode` -        if [ -n "$HLINKS" ]; then -          for i in $HLINKS; do rm -f "$i"; done
  -        case "$FILE" in -            FILE=`basename "$FILE" .bz2` -            FILE=`basename
  "$FILE" .gz` -            bzip2 ${COMP_LVL} "$FILE" &amp;&amp; chmod 644 "${FILE}${COMP_SUF}" -   
          echo "$FILE compressé" &gt; $DEST_FD1 -            gzip ${COMP_LVL} "$FILE" &amp;&amp;
  chmod 644 "${FILE}${COMP_SUF}" -            echo "$FILE compressé" &gt; $DEST_FD1 -           
  echo "$FILE décompressé" &gt; $DEST_FD1 -        if [ -n "$HLINKS" ]; then -           
  NEWFILE=`echo "$i" | sed s/\.gz$// | sed s/\.bz2$//` -            if [ "$LN_OPT" ="-S" ]; then -  
             ln -s "${FILE}$COMP_SUF" "${NEWFILE}$COMP_SUF" -              ln "${FILE}$COMP_SUF"
  "${NEWFILE}$COMP_SUF" -            chmod 644 "${NEWFILE}$COMP_SUF" -        echo -n "Whaooo...
  \"${DIR}/${FILE}\" n'est ni un lien symbolique " -        echo "ni un vrai fichier. Merci de
  vérifier:" -        ls -l "${DIR}/${FILE}"
</literal>
EOF</userinput></screen>
   
   <para>
      En tant qu'utilisateur <systemitem class="username"> root </systemitem>, rendez exécutable
      <command>compressdoc</command> pour tous les utilisateurs:  
   </para> 
   
<screen><userinput>chmod -v 755 /usr/sbin/compressdoc</userinput></screen>
   
   <para>
      Maintenant, en tant qu'utilisateur <systemitem class="username"> root </systemitem>, vous
      pouvez exécuter la commande <command>compressdoc --bz2</command> pour compresser toutes les
      pages de man de votre système. Vous pouvez aussi lancer <command>compressdoc --help</command>
      pour obtenir une aide complète les possibilités du script.  
   </para> 
   
   <para>
      N'oubliez pas que quelques paquets tels que le <application>Système X Window</application> et
      <application>XEmacs</application> installent aussi leur documentation à des endroits non
      standards (tels que <filename class="directory">/usr/X11R6/man</filename> , etc.).
      Assurez-vous d'ajouter ces emplacements au fichier <filename>/etc/man_db.conf</filename> ,
      sous forme de lignes <envar>MANDATORY_MANPATH </envar><replaceable>&lt;/chemin&gt;
      </replaceable>. 
   </para>  
   
   <para>
      Exemple: 
   </para> 
   
<screen><literal>
</literal>
</screen>
   
   <para>
      En général, les systèmes d'installation des paquets ne compressent pas les pages de man/info,
      ce qui veut dire que vous devrez de nouveau lancer le script si vous voulez maintenir la
      taille de documentation la plus petite possible. Remarquez aussi que l'exécution du script
      après la mise à jour d'un paquet est sécurisée; quand vous avez plusieurs versions d'une page
      (par exemple, une compressée et une décompressée), celle la plus récente est conservée et les
      autres sont effacées. 
   </para> 
   
</sect1>
