<?xml version="1.0" encoding="ISO-8859-1"?>
<sect1 id="xorg" xreflabel="X.org-&xorg-version;">
<?dbhtml filename="xorg.html"?>
<title>Xorg-&xorg-version;</title>


<sect2>
<title>Introduction à <application>Xorg</application></title>

<note><para>BLFS propose deux paquets implémentant le système
<application>X</application> Window&nbsp;: <application>Xorg</application> et
<application>XFree86</application>. Ils sont similaires. En fait, le système de
base d'<application>Xorg</application> est
<application>XFree86</application>-RC2. La principale différence, au moment où
ceci est écrit, concerne les licences des paquetes. Pour une personne
construisant un paquet pour son utilisation personnel, ces problèmes sont sans
importance. La plupart des grandes distributions commerciales ont décidé
d'utiliser le paquet <application>Xorg</application> mais certaines utilisent
toujours <application>XFree86</application>.</para>

<para>Une seconde raison au doublement des paquets X est les buts précisés par
les développeurs. Quelques développeurs ne sont pas contents de l'administration
et des progrès de <application>XFree86</application>. Les plans annoncés par
Xorg incluent des améliorations significatives du fonctionnement interne du
système et des sorties plus fréquentes.</para>

<para><application>XFree86</application> continue à être une application
solide, conservative avec un excellent support des pilotes.</para>

<para>À la fois <application>Xorg</application> et
<application>XFree86</application> sont installés de la même façon mais cette
section fournira une variation légère mais plus actuelle de
l'installation.</para>
</note>


<para><application>Xorg</application> est une implémentation opensource
librement distribuable du système <application>X</application> Window. Cette
application fournit une interface client/serveur entre le matériel d'affichage
(souris, clavier et affichage vidéo) et l'environnement de bureau tout en
fournissant aussi l'infrastructure des fenêtres et une interface standardisée de
l'application interface (<acronym>API</acronym>).</para>
 
<sect3><title>Informations sur le paquet</title>
<itemizedlist spacing='compact'>
<listitem><para>Téléchargement (HTTP)&nbsp;: <ulink
url="&xorg-download-http;"/></para></listitem>
<listitem><para>Téléchargement (FTP)&nbsp;: <ulink
url="&xorg-download-ftp;"/></para></listitem>
<listitem><para>Taille du téléchargement&nbsp;: &xorg-size;</para></listitem>
<listitem><para>Estimation de l'espace disque requis&nbsp;:
&xorg-buildsize;</para></listitem>
<listitem><para>Estimation du temps de construction&nbsp;:
&xorg-time;</para></listitem></itemizedlist>
</sect3>
 
 
<sect3><title>Dépendances d'<application>Xorg</application></title>
 
<sect4><title>Requis</title>
<para><xref linkend="libpng"/>, <xref linkend="expat"/>, <xref
linkend="freetype2"/> et <xref linkend="fontconfig"/>.</para>
</sect4>

<sect4><title>Optionnel</title> 
<para><xref linkend="Linux_PAM"/>.</para>
</sect4>

</sect3>
 
 
<sect3><title>Instructions de téléchargement</title>
 
<para>Plusieurs fichiers doivent être récupérés de l'emplacement de
téléchargement&nbsp;:</para>
<itemizedlist spacing='compact'>
<listitem><para><filename>X11R6.7.0-src1.tar.gz</filename></para></listitem>
<listitem><para><filename>X11R6.7.0-src2.tar.gz</filename></para></listitem>
<listitem><para><filename>X11R6.7.0-src3.tar.gz</filename></para></listitem>
<listitem><para><filename>X11R6.7.0-src4.tar.gz</filename></para></listitem>
<listitem><para><filename>X11R6.7.0-src5.tar.gz</filename></para></listitem>
<listitem><para><filename>X11R6.7.0-src6.tar.gz</filename></para></listitem>
<listitem><para><filename>X11R6.7.0-src7.tar.gz</filename></para></listitem>
</itemizedlist>

<para>Le premier paquet contient les bibliothèques
<application>Xorg</application> et les programmes de support, le second
contient les programmes X standards, le troisième le serveur X, les quatrième
et cinquième les polices de caractères, le sixième la documentation et le
septième une autre version de la documentation.</para> 
 
<para>Pour vérifier l'intégrité de vos téléchargements, récupérez le fichier
<filename>md5sums</filename> et lancez&nbsp;:</para>
 
<screen><userinput><command>md5sum -c md5sums</command></userinput></screen>
 
<para>Les sept paquets doivent avoir un statut OK.</para>
</sect3>
</sect2>

<sect2>
<title>Installation de <application>Xorg</application></title>


<sect3>
<title>Configuration de la compilation du noyau</title>

<para>Si vous avez un Intel P6 (Pentium Pro, Pentium II et suivants), il est
recommendé de compiler le support de <acronym>MTRR</acronym> (Memory Type Range
Registers) directement dans le noyau. Le noyau peut faire correspondre
l'interface <acronym>MTRR</acronym> aux <acronym>CPU</acronym> Cyrix et AMD,
donc sélectionner cette option est aussi utile pour ces processeurs. Cette
option se trouve dans le menu <quote>Processor type and features</quote>. Elle
peut améliorer la performances des opérations d'écriture des images de 2,5
fois, voire plus, sur les cartes vidéos <acronym>PCI</acronym> ou
<acronym>AGP</acronym>.</para>
 
<para>Dans la section <quote>Character Devices</quote>, activez le support de
l'<acronym>AGP</acronym> et sélectionnez le support du jeu de composants de
votre carte mère. Si vous ne connaissez pas le jeu de composants, vous pouvez
sélectionner tous les types de composants, au prix d'un supplément de taille
pour le noyau. Vous pouvez habituellement déterminer le jeu de composants de
votre carte mère en lançant&nbsp;:</para>

<screen><userinput><command>cat /proc/pci</command></userinput></screen>
 
<para>Dans la section <quote>Character Devices</quote>,
<emphasis>désactivez</emphasis> le gestionnaire de rendu direct
(<foreignphrase>Direct Rendering Manager</foreignphrase>) sauf si vous disposez
d'une carte vidéo supportant l'infrastructure de rendu direct
(<acronym>DRI</acronym>, acronyme de <foreignphrase>Direct Rendering
Infrastructure</foreignphrase>). Une liste complète des cartes vidéos supportant
le <acronym>DRI</acronym> est disponible dans la section <quote>Status</quote>
de la page <ulink url="http://dri.sourceforge.net" />. Habituellement, les
cartes supportées incluent celles de 3dfx (Voodoo, Banshee), 3Dlabs,
ATI (Rage Pro, Rage 128, Radeon 7X00, Radeon 2), Intel (i810, i815) et Matrox
(G200, G400, G450). Si vous activez le <acronym>DRI</acronym> maintenant,
assurez-vous de sélectionner la (ou les) carte(s) vidéo(s) que vous voulez
supporter en tant que <emphasis>module</emphasis>.</para>
 
<para>De plus, NVidia fournit ses propres pilotes sous forme de binaire (sources
propriétaires) qui ne font pas usage du <acronym>DRI</acronym>. Si vous avez
l'intention d'utiliser ces pilotes, n'activez pas le
<acronym>DRI</acronym>.</para>
 
<para>Si vous avez fait des modifications dans la configuration du noyau,
recompilez-le.</para>
 
<para>Copiez les fichiers <filename>arch/i386/boot/bzImage</filename> et
<filename>System.map</filename>  du répertoire de construction dans le
répertoire <filename class='directory'>/boot</filename>. Éditez le fichier
<filename>/boot/grub/grub.conf</filename> et ajoutez le nouveau noyau dans le
menu de démarrage. (Si vous utilisez lilo, éditez le fichier
<filename>/etc/lilo.conf</filename> et lancez <filename>lilo</filename>.)
</para>
 
<note><para>Si vous installez <application>Xorg</application> dans un
environnement chroot, assurez-vous que la version du noyau du système de base
et du système cible sont les mêmes. C'est tout spécialement important si vous
activez le support du <acronym>DRI</acronym> en tant que module comme indiqué
ci-dessus.</para></note>
</sect3>

<sect3><title>Configurer un répertoire fantôme</title>

<para>Lors de la construction d'<application>Xorg</application>, vous devez
créer un répertoire fantôme contenant des liens symboliques vers le code
compilé. Pour ce faire, nous allons tout d'abord créer
<application>lndir</application>. Depuis le répertoire
<filename class='directory'>xc</filename>&nbsp;:</para>

<screen><userinput><command>pushd config/util &amp;&amp;
make -f Makefile.ini lndir &amp;&amp;
cp lndir /usr/bin/ &amp;&amp;
popd</command></userinput></screen>

<para>Maintenant, créez la hiérarchie fantôme&nbsp;:</para>

<screen><userinput><command>mkdir ../xcbuild &amp;&amp;
cd ../xcbuild &amp;&amp;
lndir ../xc</command></userinput></screen>
</sect3>

<sect3><title>Créer <filename>host.def</filename></title>

<para>The next step is to create the <filename>config/cf/host.def</filename> file.
La documentation d'<application>Xorg</application> indique que l'application
sera construite sans fichier <filename>host.def</filename> mais les
bibliothèques incluses pour <application>fontconfig</application> et
<application>freetype2</application> ne sont pas construit proprement sur un
système de base LFS. Du coup, vous devez spécifier que ces bibliothèques, ainsi
que les autres, devraient être importées du système.</para>

<note><para><filename>config/cf/host.def</filename> est un fichier C, pas un
script shell. Assurez-vous que les commentaires délimités par /* ... */ sont
balancés lors de la modification d'un fichier.</para></note>


<screen><userinput><command>cat &gt; config/cf/host.def &lt;&lt; "EOF"</command>
/* Begin Xorg host.def file */
 
/* System Related Information.  If you read and configure only one
 * section then it should be this one.  The Intel architecture defaults are
 * set for a i686 and higher.  Axp is for the Alpha architecture and Ppc is
 * for the Power PC.  AMD64 is for the Opteron processor. Note that there have 
 * been reports that the Ppc optimization line causes segmentation faults during 
 * build.  If that happens, try building without the DefaultGcc2PpcOpt line.  ***********/
 
/* #define DefaultGcc2i386Opt -O2 -fno-strength-reduce -fno-strict-aliasing -march=i686 */
/* #define DefaultGccAMD64Opt -O2 -fno-strength-reduce -fno-strict-aliasing */
/* #define DefaultGcc2AxpOpt  -O2 -mcpu=ev6 */
/* #define DefaultGcc2PpcOpt  -O2 -mcpu=750 */

#define HasFreetype2             YES
#define HasFontconfig            YES
#define HasExpat                 YES
#define HasLibpng                YES
#define HasZlib                  YES

/*
 * Which drivers to build.  When building a static server, each of these
 * will be included in it.  When building the loadable server each of these
 * modules will be built.
 *
#define XF86CardDrivers         mga glint nv tga s3virge sis rendition \
                                neomagic i740 tdfx savage \
                                cirrus vmware tseng trident chips apm \
                                GlideDriver fbdev i128 \
                                ati AgpGartDrivers DevelDrivers ark cyrix \
                                siliconmotion \
                                vesa vga XF86OSCardDrivers XF86ExtraCardDrivers
*/

/*
 * Select the XInput devices you want by uncommenting this.
 *
#define XInputDrivers           mouse keyboard acecad calcomp citron \
                                digitaledge dmc dynapro elographics \
                                microtouch mutouch penmount spaceorb summa \
                                wacom void magictouch aiptek
 */

/* Most installs will only need this */

#define XInputDrivers           mouse keyboard


/* End Xorg host.def file */
<command>EOF</command></userinput></screen>

<para>D'autres options pourraient vous intéresser. Un fichier exemple bien 
documenté est <filename>config/cf/xorgsite.cf</filename>.</para>
</sect3>

<sect3>
<title>Commandes de construction</title>

<para>Installez <application>Xorg</application> en lançant les commandes
suivantes&nbsp;:</para>
 
 
<screen><userinput><command>( make World 2&gt;&amp;1 | tee xorg-compile.log &amp;&amp; exit $PIPESTATUS ) &amp;&amp;
make install &amp;&amp;
make install.man &amp;&amp;
ln -sf ../X11R6/bin /usr/bin/X11 &amp;&amp;
ln -sf ../X11R6/lib/X11 /usr/lib/X11 &amp;&amp;
ln -sf ../X11R6/include/X11 /usr/include/X11</command></userinput></screen>
 
</sect3>

<sect3>
<title>Mise à jour de l'infrastructure de rendu direct
(<acronym>DRI</acronym>)</title>

<para>Si vous avez une des cartes supportant le <acronym>DRI</acronym> et que
vous avez activé les modules <acronym>DRI</acronym> du noyau, comme expliqué
ci-dessus, vous avez maintenant besoin de mettre à jour les modules du noyau
pour vous assurer qu'ils sont compatibles avec la version actuelle
d'<application>Xorg</application>. Pour faire ceci, réalisez ce qui
suit&nbsp;:</para>
 
<screen><userinput><command>cd programs/Xserver/hw/xfree86/os-support/linux/drm/kernel &amp;&amp;
make  CC=/opt/gcc-2.95.3/bin/gcc -f Makefile.linux  &amp;&amp;
mkdir -p /lib/modules/`uname -r`/kernel/drivers/char/drm/  &amp;&amp;
cp gamma.o radeon.o sis.o r128.o i810.o i830.o mga.o tdfx.o \
    /lib/modules/`uname -r`/kernel/drivers/char/drm/  &amp;&amp;
depmod -a</command></userinput></screen>
 
<warning><para>Si vous recompilez ou mettez à jour votre noyau, vous aurez de
nouveau besoin de copier les modules appropriés du pilote dans la bibliothèque
des modules du noyau et de re-lancer la commande <command>depmod
-a</command>.</para></warning>
 
<note><para>Si vous avez ajouté le support de l'<acronym>AGP</acronym> en tant
que module lors de la compilation du noyau, vous pourriez avoir à ajouter une
ligne dans le fichier <filename>/etc/modules.conf</filename> pour vous assurer
que le module agpgart est chargé. Par exemple, la version
d'<acronym>AGP</acronym> de la carte vidéo Radeon sera utilisé dans le pilote
<filename>radeon.o</filename>. Il aura de la ligne <screen>below radeon
agpgart</screen> dans le fichier <filename>/etc/modules.conf</filename> pour
activer le support du <acronym>DRI</acronym>.</para></note>
</sect3>
</sect2>

<sect2>
<title>Explication des commandes</title>
 
<para><command>( make World 2&gt;&amp;1 | tee xorg-compile.log
   &amp;&amp; exit $PIPESTATUS )</command>&nbsp;: cette commande lance plusieurs
makefiles pour reconstruire complètement le système.
<parameter>2&gt;&amp;1</parameter> redirige les messages d'erreurs vers
le même emplacement comme sortie standard. La commande <command>tee</command>
autorise aussi la visualisation de la sortie pendant l'enregistrement des
résultats dans un fichier. Les parenthèses autour de la commande lance la
commande entièredans un sous-shell et le <command>exit $PIPESTATUS</command>
nous assure que le résultat de la commande <command>make</command> est renvoyé
comme résultat et non le résultat de la commande <command>tee</command>.</para>
 
<note><para>Lors de la reconstruction d'<application>Xorg</application>, une
commande séparée, qui pourrait être utilisée si seuls quelques petites
modifications sont faires aux sources, est <command>make
Everything</command>. Ceci ne supprime pas automatiquement les fichiers générés
mais reconstruis aussi ces fichiers ou programmes obsolètes.</para></note>
 
<para><screen><command>ln -sf ../X11R6/bin /usr/bin/X11
ln -sf ../X11R6/lib/X11 /usr/lib/X11
ln -sf ../X11R6/include/X11 /usr/include/X11</command></screen>&nbsp;: ces
commandes sont présentes pour activer les autres paquets (cassés) à
construire avec <application>Xorg</application>. Nous le faisons en accord avec
ce que dit le FHS (<foreignphrase>Filesystem Hierarchy
Standard</foreignphase>)&nbsp;: <quote>en général, le logiciel ne peut pas être
installé ou géré via les liens symboliques ci-dessus. Seuls les utilisateurs
peuvent les utiliser.</quote> (<foreignphrase>In
general, software must not be installed or managed via the above
symbolic links. They are intended for utilization by users
only.</foreignphrase>)</para>
 
<para><command>make  CC=/opt/gcc-2.95.3/bin/gcc -f
Makefile.linux</command>&nbsp;: ceci construit
<application>Xorg</application> en compatibilité avec les modules du noyau en
utilisant le même compilateur que celui du noyau.</para>
 
<para><command>cp gamma.o radeon.o sis.o r128.o i810.o i830.o mga.o tdfx.o
/lib/modules/`uname -r`/kernel/drivers/char/drm/</command>&nbsp;: placez le(s)
module(s) du noyau où le noyau peut les trouver. Vous avez seulement besoin de
copier le pilote dont vous avez besoin pour supporter votre carte vidéo.</para>
 
<para><command>depmod -a</command>&nbsp;: mise à jour du fichier modules.dep
pour la gestion des modules.</para>

</sect2>

<sect2>
<title>Configurer Xorg</title>

<para>Éditez <filename>/etc/ld.so.conf</filename> et ajoutez
<filename class="directory">/usr/X11R6/lib</filename>. Lancez&nbsp;:
</para> <screen><userinput><command>ldconfig</command></userinput></screen>
 
<para>Assurez-vous que <filename class='directory'>/usr/X11R6/bin</filename>
est ajouté votre variable d'environnement <envar>PATH</envar>. Les instructions
pour le faire sont décrites dans la section <xref
linkend='postlfs-config-profile'/>.</para>
 
<para>Étendez <envar>PKG_CONFIG_PATH</envar> de façon à ce que les autres
paquets peuvent trouver les bibliothèques de <application>X</application>. Les
procédures sur ce point sont aussi décrites dans la section <xref
linkend='postlfs-config-profile'/>.</para>

<para>Configurez votre souris&nbsp;:
<screen><userinput><command>ln -s psaux /dev/mouse</command></userinput></screen>
 
Ajustez le lien symbolique en fonction des autres types de souris. Par exemple,
une souris série sur le premier port série sera liée à ttyS1.</para>
 
<para>Créez le fichier <filename>xorg.conf</filename> avec&nbsp;:
<screen><userinput><command>cd ~
Xorg -configure</command></userinput></screen>
L'écran deviendra noir et vous entendrez quelques bruits du moniteur. Cette
commande créera un fichier, <filename>xorg.conf.new</filename> dans votre
répertoire personnel.</para>
 
<para>Éditez <filename>xorg.conf.new</filename> pour correspondre avec votre
système. Les détails de ce fichier sont situés dans la page man avec
<command>man xorg.conf</command>. Voici d'autres choses que vous pourriez
vouloir faire&nbsp;:</para>
 
<itemizedlist>
 
<listitem><para>Section <quote>Files</quote>. Modifiez l'ordre des chemins des
polices recherché. Vous pouvez placer les polices de 100dpi avant les polices
de 75dpi si votre système est plus proche des 100 pixels par pouce. Vous pouvez
aussi supprimer certains répertoires.</para></listitem>
 
<listitem><para>Section <quote>Monitor</quote>. Spécifiez les valeurs de
<parameter>VertRefresh</parameter> et <parameter>HorizSync</parameter> si le
système ne détecte pas automatiquement le moniteur et ses
valeurs.</para></listitem>
 
<listitem><para>Section <quote>InputDevice</quote>. Vous pouvez modifier le
taux de répétition du clavier en ajoutant <parameter>Option "Autorepeat"
"250 30"</parameter>.</para></listitem>
 
<listitem><para>Section <quote>Device</quote>. Vous pouvez initialiser les
options disponibles pour votre pilote vidéo. Une description des paramètres du
pilote se trouve dans la page man de votre pilote.</para></listitem>
 
<listitem><para>Section <quote>Screen</quote>. Ajoutez une instruction
DefaultDepth telle que <parameter>DefaultDepth 16</parameter>. Dans la
sous-section de votre profondeur par défaut, ajouter une ligne modes telle
que&nbsp;: <parameter>Modes "1280x1024" "1024x768"</parameter>. Le premier mode
listé sera normalement la résolution du début.</para></listitem>
 
</itemizedlist>

<para>Testez le système avec&nbsp;:
<screen><userinput><command>X -xf86config ~/xorg.conf.new</command></userinput></screen>
Vous obtiendrez seulement un fond gris avec un curseur de souris en forme de X
mais cela confirme le fonctionnement du système. Sortez avec
Control-Alt-Backspace. Si le système ne fonctionne pas, jetez un &oelig;il à
<filename>/var/log/Xorg.0.log</filename> pour voir les messages d'erreur.</para>
 
<para>Déplacez le fichier de configuration vers son emplacement
final&nbsp;:</para>

<screen><userinput><command>mv ~/xorg.conf.new /etc/X11/xorg.conf</command></userinput></screen>
 
<para>Créez le fichier <filename>.xinitrc</filename>&nbsp;:
<screen><userinput><command>cat &gt; ~/.xinitrc &lt;&lt; "EOF"</command>
# Begin .xinitrc file
xterm  -g 80x40+0+0   &amp;
xclock -g 100x100-0+0 &amp;
twm
<command>EOF</command></userinput></screen>
Ceci fournit un écran initial avec un terminal graphique (xterm) et une horloge
gérés par un gestionnaire de fenêtres très simple, le <foreignphrase>Tab Window
Manager</foreignphrase>). Pour des détails sur twm, voir la page man.</para>
 
<note>
 
<para>Si nécessaire, <application>Xorg</application> crée le répertoire
<filename>/tmp/.ICE-unix</filename> s'il n'existe pas. Si ce répertoire
n'appartient pas à root, <application>Xorg</application> délaie le démarrage de
quelques secondes et ajoute aussi un avertissement dans le journal des traces.
Ceci affecte le lancement d'autres applications. Pour améliorer la performance,
il est remarquable de créer manuellement le répertoire avant qu'Xorg l'utilise.
Ajoutez la création du fichier dans
<filename>/etc/sysconfig/createfiles</filename> qui est utilisé par le script
de démarrage <filename>/etc/rc.d/init.d/cleanfs</filename>.</para>
 
<screen><userinput><command>cat &gt;&gt; /etc/sysconfig/createfiles &lt;&lt; "EOF"</command>
/tmp/.ICE-unix dir 1777 root root
<command>EOF</command></userinput></screen>
 
</note>
 
<para>Lancez <application>X</application> avec&nbsp;:
<screen><userinput><command>startx</command></userinput></screen>
pour obtenir un système <application>X</application> Window fonctionnel de
base.</para>

<para>À ce moment, vous devriez vérifier les composants X Window sur
<xref linkend='x-setup'/>.</para>

</sect2>
</sect1>
