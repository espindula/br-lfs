<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY xulrunner-download-http "http://releases.mozilla.org/pub/mozilla.org/firefox/releases/&firefox-version;/source/firefox-&firefox-version;-source.tar.bz2">
  <!ENTITY xulrunner-download-ftp  "ftp://ftp.mozilla.org/pub/mozilla.org/firefox/releases/&firefox-version;/source/firefox-&firefox-version;-source.tar.bz2">
  <!-- md5sum et size should match firefox, but the buildize and time will differ -->
  <!ENTITY xulrunner-md5sum        "9875c9237b532009df8e91c3785539a3">
  <!ENTITY xulrunner-size          "35.3 Mio">
  <!ENTITY xulrunner-buildsize     "663 Mio">
  <!ENTITY xulrunner-time          "13.2 SBU">
]>

<sect1 id="xulrunner" xreflabel="Xulrunner-&xulrunner-version;">
  <?dbhtml filename="xulrunner.html" ?>

  <sect1info>
    <othername>$LastChangedBy: ken $</othername>
    <date>$Date: 2009-07-17 20:56:27 +0200 (ven 17 jui 2009) $</date>
  </sect1info>

  <title>Xulrunner-&xulrunner-version;</title>

  <indexterm zone="xulrunner">
    <primary sortas="a-Xulrunner">Xulrunner</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction à Xulrunner</title>

    <para><application>Xulrunner</application> est un environnement d'exécution
    pour les applications XUL, et il constitue la majeure partie de la base de
    code de <application>Mozilla</application>. En particulier, il offre 
    le moteur gecko et les fichiers pkgconfig pour que des applications telles que
    <application>Epiphany</application> et
    <application>Yelp</application> puissent l'utiliser.</para>

   <note>
    <para>Si vous construisez plus tard une version plus récente de 
    <application>xulrunner</application>, pour bénéficier des dernières 
    corrections de sécurité, vous <emphasis>devrez</emphasis> mettre à jour
    les liens symboliques (y compris pour nss, nspr si vous utilisez les
    versions de <application>xulrunner</application>) et reconstruire toutes les
    applications qui utilisent gecko, et même mettre à jour <application>firefox</application> 
    si vous l'avez installé.</para>
   </note>

    <bridgehead renderas="sect3">Informations sur le paquet</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>Téléchargement (HTTP)&nbsp;: <ulink url="&xulrunner-download-http;"/></para>
      </listitem>
      <listitem>
        <para>Téléchargement (FTP)&nbsp;: <ulink url="&xulrunner-download-ftp;"/></para>
	<tip><para>Quand une nouvelle version de <application>firefox</application> 
	est publiée, une nouvelle version correspondante de <application>xulrunner</application> 
	apparaît parfois en même temps. D'autres fois, elle apparaît plusieurs jours
	plus tard ou pas du tout. Jusque-là, dans la série
	<application>firefox-3.0</application>, toute nouvelle version a des
	bibliothèques xulrunner créées avec une nouvelle version correspondante. Chaque
	fois qu'une archive tar xulrunner séparée est publiée, elle est bit à bit
		identique à l'archive tar correspondante de firefox. Nous utiliserns donc
	l'archive tar de <application>firefox</application> pour éviter de télécharger
	ce gros paquet deux fois.</para></tip>
      </listitem>
      <listitem>
        <para>Somme de contrôle MD5 du téléchargement&nbsp;: &xulrunner-md5sum;</para>
      </listitem>
      <listitem>
        <para>Taille du téléchargement&nbsp;: &xulrunner-size;</para>
      </listitem>
      <listitem>
        <para>Estimation de l'espace disque requis&nbsp;: &xulrunner-buildsize;</para>
      </listitem>
      <listitem>
        <para>Estimation du temps de construction&nbsp;: &xulrunner-time;</para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Dépendances de Xulrunner</bridgehead>

    <bridgehead renderas="sect4">Requises</bridgehead>
    <para role="required"><xref linkend="gtk2"/>,
    <xref linkend="libidl"/>
    <xref linkend="pango"/>
    <xref linkend="python"/> et
    <xref linkend="zip"/></para>

    <para>Remarque&nbsp;: Vous devriez avoir installé <application>libjpeg</application> 
    avant <application>GTK+</application> et elle devrait exister sur votre 
    système. Si pour une raison quelconque, vous n'avez pas installé
    <application>libjpeg</application>, vous devriez supprimer l'option
    <option>--with-system-jpeg</option> du fichier
    <filename>.mozconfig</filename> créé ci-dessous.</para>

    <bridgehead renderas="sect4">Facultatives</bridgehead>
    <para role="optional"><xref linkend="dbus-glib"/>,
    <xref linkend="doxygen"/>,
    <xref linkend="curl"/> (only for crash-reporter),
    <xref linkend="gnome-vfs"/> et <xref linkend="libgnomeui"/>
    (pour l'intégration dans gnome),
    <xref linkend="lcms"/>,
    <xref linkend="libpng"/> (patched for apng support),
    <ulink url="http://sqlite.org/">SQLite</ulink>,
    <xref linkend="startup-notification"/>.
    <xref linkend="unzip"/>,
    <ulink url="http://www.valgrind.org/">Valgrind</ulink> (seulement pour tester
    le code jemalloc), et
    <xref linkend="wget"/></para>

    <para condition="html" role="usernotes">Notes utilisateur&nbsp;:
    <ulink url="&blfs-wiki;/xulrunner"/></para>

  </sect2>

  <sect2 role="installation">
    <title>Installation de Xulrunner</title>

  <!-- FIXME : I assume current OOo can't use xulrunner ?
    lines near the bottom of the file. If you are going to build the
    <application>OpenOffice</application> package et you want to use this
    <application>Xulrunner</application> installation as the default
    <application>Mozilla</application> source, ensure you uncomment the
	+ substitutions to stop the comment breaking the syntax
    <option>++enable-ldap+/option+ option in the file created below. -->
    <para>La configuration de <application>Xulrunner</application> se fait en
    créant un fichier <filename>.mozconfig</filename> contenant les options de
    configuration désirées. Un <filename>.mozconfig</filename> par défaut est
    créé ci-dessous. Pour voir toute la liste des options de configuration 
    disponibles (et une description abrégée de chacune), exécutez
    <command>./configure --help</command>. Si vous allez utiliser les versions
    installées sur le système des bibliothèques <application>NSS</application> et
    <application>NSPR</application>, assurez-vous de décommenter les deux lignes
    vers la fin du fichier. Vous devriez regarder tout le fichier et commenter
    ou décommenter les options selon ce qui est nécessaire. Si vous préférez
    télécharger le fichier au lieu de le créer en tapant ou en copiant/collant
    vous pouvez le trouver sur <ulink
    url="&files-anduin;/xulrunner-&xulrunner-version;-mozconfig"/>
    (il faut mettre le fichier à la racine de l'arborescence des sources du
    répertoire <filename class='directory'>mozilla</filename>, et l'appeler
    <filename>.mozconfig</filename>).</para>

<screen><?dbfo keep-together="auto"?><userinput>cat &gt; .mozconfig &lt;&lt; "EOF"
<literal># Ce fichier contient les options utilisées dans la construction de Xulrunner
# Il se peut que vous deviez spécifier des options supplémentaires pour vos
# besoins spécifiques de construction.
# Utilisez les informations fournies par l'exécution de './configure --help' 
# pour vous aider à déterminer si vous avez besoin d'ajouter des options
# supplémentaires.
# On peut ajouter des options supplémentaires en décommentant les exemples dans
# ce fichier ou en ajoutant des options en insérant une ligne contenant 
# 'ac_add_options --une-option-dont-vous-avez-besoin'.  Sachez que certaines
# options acceptées, comme '--with-system-bz2', ne touchent pas la construction.

# spécifie qu'on veut construire xulrunner
ac_add_options --enable-application=xulrunner

# Crée un répertoire objet et spécifie de construire le paquet dans ce
# répertoire. Si désiré, modifiez l'emplacement du répertoire objet pour un 
# répertoire à l'intérieur de l'arborescence des sources en supprimant '../' 
# de la ligne ci-dessous.
mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/../xulrunner-build

# Spécifie le préfixe d'installation. Si vous préférez installer Xulrunner dans
# un autre préfixe, modifiez la ligne ci-dessous pour l'adapter à vos besoins
# (la config sera toujours écrite dans /etc/gre.d)
ac_add_options --prefix=/usr

# applique un niveau minimal d'optimisation (-O)
ac_add_options --enable-optimize

# Ces options sont utilisées pour que les binaires de Xulrunner soient
# liés aux copies installées du système des bibliothèques spécifiées et non au
# code source qui peut ne pas être les versions les plus récentes (ou,
# pour cairo, peut contenir des correctifs supplémentaires) : sauf libsqlite3, les
# bibliothèques sont liées statiquement - l'utilisation de la version incluse
# de libsqlite3 a été signalée pour provoquer des problèmes avec d'autres
# applications qui utilisaient sqlite3.

# (les options --enable-system)
# commentez cela si vous voulez utiliser une autre version corrigée de cairo que
# celle incluse dans l'arborescence de mozilla et les en-têtes du système.
ac_add_options --enable-system-cairo

# commentez cela si vous n'avez pas installé lcms
ac_add_options --enable-system-lcms

# commentez cela si vous n'avez pas installé sqlite
ac_add_options --enable-system-sqlite

# (les options --with-system)
# commentez cela si vous n'avez pas construit libjpeg avant gtk+-2
ac_add_options --with-system-jpeg

# Ces deux options activent le support pour la construction de Xulrunner avec
# les versions installées sur le système des bibliothèques du
# Network Security Services (NSS) et Netscape Portable Runtime (NSPR).
# Décommentez les deux lignes pour activer le support de NSS/NSPR installé
# sur le système au lieu de construire les versions incluses avec xulrunner.
#ac_add_options --with-system-nspr
#ac_add_options --with-system-nss

# commentez cela si vous n'avez pas construit png avec le correctif apng
ac_add_options --with-system-png

# L'option pthreads n'est utilisé que lors de la construction de nspr
# donc vous pouvez commenter cela si vous activez --with-system-nspr
ac_add_options --with-pthreads

# zlib est dans LFS
ac_add_options --with-system-zlib

# (options pour désactiver des bouts du paquet)
# Cette option est utilisée pour désactiver le support d'accessibilité dans les
# binaires de Xulrunner. Commentez cette option si vous voulez le support 
# d'accessibilité.
ac_add_options --disable-accessibility

# décommentez cela si vous n'avez pas construit curl
#ac_add_options --disable-crashreporter

# commentez cela si vous n'avez pas construit dbus-glib
ac_add_options --disable-dbus

# commentez cela si vous avez gnome-vfs et libgnomeui, et si vous souhaitez
# intégrer xulrunner sur votre bureau gnome
ac_add_options --disable-gnomevfs

# Cette option est ajoutée pour que le programme d'installation de Mozilla 
# ne soit pas construit ou installé. Le programme n'est pas nécessaire pour une
# installation BLFS de Xulrunner.
ac_add_options --disable-installer

# Si vous activez javaxpcom, vous devez avoir installé un compilateur java.
ac_add_options --disable-javaxpcom

# mochitest pose souvent problème
ac_add_options --disable-mochitest

# Cette option est ajoutée pour que les bibliothèques et les programmes de test
# ne se construisent pas. Ils ne serviraient que pour du débogage.
ac_add_options --disable-tests

# Désactive le metteur à jour, qui n'est pas adapté si vous construisez à partir
# des sources 
ac_add_options --disable-updater

# (options pour ajouter des suppléments du paquet
# Cette option est utilisée pour activer dans les binaires Xulrunner le support
# LDAP inclus dans l'arborescence des sources.
###################################################################
#
# REMARQUE : Vous devez décommenter 
# cette option s'il y a une chance que vous compiliez le paquet OpenOffice
# à partir du code source en utilisant cette copie de Xulrunner pour votre
# support Mozilla.
# Cela N'a PAS été testé, les versions actuelles d'OpenOffice sont supposées ne
# pas se compiler contre cette version de xulrunner!
#
###################################################################
#ac_add_options --enable-ldap

# Utilisez les mesures anti-phishing (une liste noire des sites)
ac_add_options --enable-safe-browsing

# Cette option est utilisé pour que les symboles de débogage soient supprimés
# des binaires installés lors du processus d'installation. Commentez cette
# option s'il se peut que vous ayez besoin de garder les symboles de débogage
# dans les binaires installés (les binaires qui en résultent seront alourdis
# d'environ 7Mio).
ac_add_options --enable-strip

# Décommentez cette option si vous désirez le support de l'affichage sur deux
# écrans en même temps en utilisant les bibliothèques Xinerama de X-Window.
#ac_add_options --enable-xinerama

# (options 'with')
# Cette option identifie le répertoire par défaut des binaires de l'installation
# de Xulrunner et utilisé pour localiser les fichiers installés de Xulrunner.
# Cette option n'est pas exigée pour la navigation de l'utilisateur final et
# n'est utilisée que pour du développement.
#ac_add_options --with-default-mozilla-five-home=/usr/lib/xulrunner-&xulrunner-version;</literal>

EOF</userinput></screen>

    <para>Compilez <application>Xulrunner</application> en lançant les
    commandes suivantes&nbsp;:</para>

<screen><userinput>echo "Requires: nspr" >>xulrunner/installer/libxul-embedding.pc.in &amp;&amp;
make -f client.mk build</userinput></screen>

    <para>Ce paquet n'est pas fourni avec une suite de tests.</para>

    <para>Maintenant, en tant qu'utilisateur <systemitem class="username">root</systemitem>,
    installez le paquet&nbsp;:</para>

<screen role="root"><userinput>make -f client.mk install &amp;&amp;
for DL in \
    libnss3.so libnssutil3.so libsmime3.so libssl3.so libsoftokn3.so \
    libplds4.so libplc4.so libnspr4.so ; do
        ln -sv xulrunner-&xulrunner-version;/$DL /usr/lib/$DL
done &amp;&amp;
ln -sv mozilla-nspr.pc /usr/lib/pkgconfig/nspr.pc &amp;&amp;
mkdir /usr/lib/mozilla &amp;&amp;
ln -sv /usr/lib/xulrunner-&xulrunner-version;/plugins /usr/lib/mozilla/plugins</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Explication des commandes</title>

    <para><command>echo "Requires: nspr" >>xulrunner/installer/libxul-embedding.pc.in</command>
    &nbsp;: Si vous essayez de construire <application>Yelp</application> sans
    cela, l'en-tête prtypes de nspr ne sera pas installée. On peut discuter
    pour savoir si c'est un problème (le code fonctionne en principe sur les 
    geckos récents), mais cette correction est peu vraisemblablement à l'origine
    de problèmes dans d'autres paquets.</para>

    <para><command>make -f client.mk ...</command>&nbsp;: Les produits Mozilla 
    sont empaquetées pour permettre l'utilisation d'un fichier de configuration
    qu'on peut utiliser pour passer les paramètres de configuration à la
    commande <command>configure</command>. <command>make</command> utilise
    le fichier <filename>client.mk</filename> pour obtenir la configuration de
    départ et paramétrer les réglages, puis selon le paramètre cible
    (<parameter>build</parameter> ou <parameter>install</parameter>), soit lance
    le script <command>configure</command>, soit compile le paquet oru
    installe le paquet.</para>

    <para><command>for DL in ...</command>&nbsp;: Les bibliothèques nspr et nss
    inclus avec ce paquet sont installés dans /usr/lib/xulrunner-&xulrunner-version;,
    ce qui signifie qu'elles ne seront pas trouvées au moment de l'exécution. En
    utilisant des liens symboliques issus de
    <filename class="directory">/usr/lib</filename> elles seront trouvées et nous
    pourrons modifier facilement les liens pour pointer vers une version plus
    récente quand nous mettrons à jour.</para>

    <para><command>ln -sv /usr/lib/xulrunner-&xulrunner-version;/plugins
    /usr/lib/mozilla/plugins</command>&nbsp;: Certains paquets installeront des 
    plugins de navigateur dans /usr/lib/mozilla/plugins. En le créant sous forme
    de lien symbolique vers les plugins de base, nous les laissons tous ensembles.</para>

   <tip>
    <para>Quand vous mettez à jour xulrunner, rappelez-vous de mettre à jour les
    liens symboliques et de copier les plugins supplémentaires compilés contre
    cette série de xulrunner dans le nouveau répertoire des plugin.</para>
   </tip>

  </sect2>

  <sect2 role="content">
    <title>Contenu</title>

    <segmentedlist>
      <segtitle>Programmes installés</segtitle>
      <segtitle>Bibliothèques installées</segtitle>
      <segtitle>Répertoires installés</segtitle>

      <seglistitem>
        <seg>xulrunner</seg>
        <seg>Numerous libraries, browser components, plugins, extensions, et
        helper modules installed in <filename
        class='directory'>/usr/lib/xulrunner-&xulrunner-version;</filename></seg>
        <seg>/etc/gre.d, /usr/include/xulrunner-&xulrunner-version;,
        /usr/lib/xulrunner-&xulrunner-version;, et
        /usr/lib/xulrunner-devel-&xulrunner-version;</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descriptions courtes</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="xulrunner-prog">
        <term><command>xulrunner</command></term>
        <listitem>
          <para>est un script shell, utile pour identifier la version
          installée.</para>
          <indexterm zone="xulrunner xulrunner-prog">
            <primary sortas="b-xulrunner">xulrunner</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
