<sect1 id="x-installing-dri">
<?dbhtml filename="dri.html" dir="x"?>
<title>Ajouter le support du 'Direct Rendering Infrastructure' (DRI) dans
XFree86</title>

<para><screen>L'installation de DRI dépends de <xref linkend="cvs"/></screen>
</para>

<para>DRI apporte l'accélération matérielle des graphiques 3D pour le projet
XFree86.</para> 

<note><para>Ces instructions ont été développé à partir du Guide de compilation
DRI sur <userinput><ulink
url="http://www.xfree86.org/4.2.0/DRIcomp.html"/></userinput>  et modifié pour
les versions récentes de DRI.</para></note>

<para>Les pilotes DRI fonctionnent généralement sur les systèmes à base de CPU
Intel et AMD. Néanmoins, il existe un support limité pour Alpha et PowerPC.
</para>

<para>Le support DRI est actuellement au stade beta. Les cartes vidéo suivantes
sont actuellement supportés:</para>

<itemizedlist> 

 <listitem><para>3dfx (Voodoo 5 5500, Voodoo4 4500, Voodoo3 3500 TV, 
 Voodoo3 3000 {AGP, PCI}, Voodoo3 2000 {AGP, PCI}, Voodoo Banshee, 
 Velocity 100/200)</para></listitem>
 
 <listitem><para>Matrox (G200, G400) </para></listitem>

 <listitem><para>Chipsets de carte mère Intel (i810, i810-dc100, i810e, i815, 
 i830) </para></listitem>
 
 <listitem><para>ATI (Rage {128, Fury, Magnum}, XPERT {2000, 128, 99}, 
 All-in-Wonder 128, Radeon {SDR AGP, DDR AGP, 32MB SDR PCI} </para></listitem>
 
 <listitem><para>3Dlabs (Oxygen 2000) [son développement n'est plus très actif]
 </para></listitem>

</itemizedlist>

<para>Pour le matériel 3dfx Voodoo3, vous aurez aussi besoin des entêtes Glide3
et les bibliothèques d'exécution. Ils sont obtenus par
from <userinput><ulink url="http://linux.3dfx.com"/></userinput>.</para>

<sect2><title>Mettre à jour le noyau</title>

<para>Dans la section "Character Devices" de la configuration du noyau, si vous
ne l'avez pas déjà fait, <emphasis>activez</emphasis> Direct Rendering 
Manager. Sélectionnez aussi le type de carte(s) vidéo que vous souhaitez
supporté comme <emphasis>module</emphasis>. Ceci est nécessaire pour s'assurer
que le noyau dispose des bons liens lorsque le code DRI sera compilé.</para>

<para>Si nécessaire, recompilez le noyau avec
<screen><userinput>make dep &amp;&amp;
make bzImage&amp;&amp;
make modules &amp;&amp;
make modules_install</userinput></screen></para>

<para>Copiez <filename>/usr/src/linux/arch/i386/boot/bzImage</filename> et
<filename>/usr/src/linux/System.map</filename> dans
<filename>/boot</filename>, editez <filename>/etc/lilo.conf</filename>
de manière appropriée et lancez <userinput>lilo</userinput>.</para>

</sect2>

<sect2><title>Récupérez le code source du pilote DRI</title>

<para>Récupérez les sources du DRI avec
<screen><userinput>cd /usr/src
mkdir DRI-CVS
cd DRI-CVS
cvs -d:pserver:anonymous@cvs.dri.sourceforge.net:/cvsroot/dri login</userinput>
    (hit ENTER when prompted for a password)
<userinput>cvs -z3 -d:pserver:anonymous@cvs.dri.sourceforge.net:/cvsroot/dri co xc</userinput></screen></para> 

<note><para>L'option -z3 fait que la compression soit utilisée pour réduire le
temps de téléchargement.</para></note>

<para>Depuis que les pilotes DRI sont en beta, vous pouvez mettre à jour les
sources avec
<screen><userinput>cd /usr/src/DRI-CVS
cvs -z3 -d:pserver:anonymous@cvs.dri.sourceforge.net:/cvsroot/dri update -dA xc</userinput></screen></para>
      
<para>Il n'y a pas besoin de télécharger ou d'installer les fichiers sources
Mesa. Le téléchargement fait à peu près 99Mo et la taille de construction 477Mo.
</para>

</sect2>

<sect2><title>Construire le DRI</title>

<para>Les pilotes DRI vont être construit dans un répertoire partagé pour les
sources principaux XFree86. Pour accéder aux bons fichiers, liez les fichiers
au répertoire de construction:
<screen><userinput>cd /usr/src/DRI-CVS
ln -s xc XFree40
mkdir build
cd build
lndir -silent -ignorelinks ../XFree40</userinput></screen></para>
            
<para>Maintenant, mettez à jour le fichier <filename>host.def</filename>. Le
seul changement nécessaire est de décommenter la définition
<parameter>BuildXF86DRM</parameter>. Comme DRI est toujours en version Beta,
changer les optimisations n'est pas recommandé.</para>

<para>Si vous ne voulez pas construire tous les pilotes, changez
<parameter>XF86CardDrivers</parameter> et <parameter>DriDrivers</parameter> pour
éliminer ceux dont vous ne voulez pas.</para>

<para>Assurez-vous que les entêtes du noyau Linux 2.4.x sont disponibles dans
<filename>/usr/src/linux/include/linux</filename>.</para>

<para>Vous aurez aussi besoin de créer <filename>modversions.h</filename> pour
que les pilotes compilent correctement.
<screen>touch /lib/modules/2.4.19/build/include/linux/modversions.h</screen>
Bien sûr, vous avez besoin de changer la version 2.4.19 dans votre version
courante du noyau.</para>

<sect3><title>Compiler DRI</title>

<note><para>Si vous construisez XFree86 dans un environnement chroot,
assurez-vous que la version du noyau du système de base et du système cible sont
les mêmes.</para></note>

<warning><para>Ne pas utiliser l'option -j pour <filename>make</filename></para></warning>

<para>Construire le système en utilisant:
<screen><userinput>cd xc &amp;&amp;
make World 2&gt;&amp;1 | tee World.log</userinput></screen></para>

<para>En utilisant <userinput>less</userinput> ou un éditeur, examinez
<filename>World.log</filename> pour les erreurs en recherchant le motif ***.
Examinez aussi le répertoire
<filename>/usr/src/DRI-CVS/build/xc/programs/Xserver/hw/xfree86/os-support/linux/drm/kernel/</filename>
pour le pilote que vous construisez:</para>

<itemizedlist>

<listitem><para>Pour la Voodoo 3dfx, vous devriez voir
<filename>tdfx.o</filename></para></listitem>

<listitem><para>Pour la Matrox G200/G400, vous devriez voir 
<filename>mga.o</filename></para></listitem>

<listitem><para>Pour l'ATI Rage 128, vous devriez voir 
<filename>r128.o</filename></para></listitem>

<listitem><para>Pour l'ATI Radeon, vous devriez voir 
<filename>radeon.o</filename></para></listitem>

<listitem><para>Pour le Intel i81x, vous devriez voir 
<filename>i810.o</filename></para></listitem>

<listitem><para>Pour le Intel i830, vous devriez voir 
<filename>i830.o</filename></para></listitem>

</itemizedlist>

</sect3>
</sect2>

<sect2><title>Installer les pilotes DRI</title>

<para>Copiez le module du noyau pour votre carte vidéo dans
<filename>/lib/modules/2.4.x/kernel/drivers/char/drm/</filename>,
alors lancez <userinput>modprobe &lt;module name&gt;</userinput>.</para>
 
<note><para>Quelques modules DRI nécessitent que le module agpgart soit chargé
en premier, si il n'est pas compilé dans le noyau.</para></note>

<para>Maintenant, installez les autres portions de DRI qui ont été construit et
assurez-vous que les bibliothèques peuvent être bien trouvées
<screen><userinput>make install &amp;&amp;
ldconfig</userinput></screen></para>

<para>Si vous utilisez l'information locale X, faire la suite
<screen><userinput>cd /usr/src/DRI-CVS/build/xc/nls
../config/util/xmkmf -a
make
make install</userinput></screen></para>
                        
</sect2>
 
<sect2><title>Configurer XFree86 pour DRI</title>
      
<para>Sur le site web de DRI, <ulink url="http://dri.sourceforge.net"/>,
dans la section des ressources, vous trouverez des fichiers
<filename>XF86Config</filename> d'exemple pour un certain nombre de cartes
graphiques. Ces fichiers de configuration mettent aussi en place les options
DRI, donc il est hautement recommandé que vous regardiez ces exemples.</para>

<para>Généralement, vous pouvez lancer avec votre configuration existante,
<filename>/etc/X11/XFConfig-4</filename>, mais si vous avez des problèmes,
vous pourriez vouloir démarrer avec un nouveau fichier comme lors de
l'installation basique de XFree86.</para>

<para>Editez <filename>XF86Config-4</filename> pour vous assurer que les
sections suivantes sont présentes
<screen>Section "Module"
     ...
# This loads the GLX module
     Load       "glx"
# This loads the DRI module
     Load       "dri"
EndSection</screen></para>

<para>Si vous voulez que tous vos utilisateurs sur votre système puissent
utiliser le 'direct rendering', alors utilisez une section DRI simple comme
celle-ci:

<screen>Section "DRI"
     Mode 0666
EndSection</screen></para>

<para>Faites tous les autres changements pour les chemins des polices, les
modes d'écran, etc... suivant vos besoins et sauvegardez le fichier de
configuration.</para>

<note><para>Les pilotes DRI basés sur le DMA (ce qui est le cas de la plupart
des pilotes DRI) ne peuvent fonctionner sauf si le bus maître est activé pour
la carte graphique. Par défaut, quelques systèmes n'ont pas de bus maître. Vous
devriez l'activer dans votre BIOS.</para></note>

</sect2>
 
<sect2><title>Tester l'installation DRI</title>

<para>Lancez (ou relancez) XFree86 avec <userinput>startx</userinput>.</para>

<para>Vérifiez le fichier de traces XFree86,
<filename>/var/log/XFree86.0.log</filename>, pour un état comme
<screen>(II) R128(0): [drm] installed DRM signal handler
(II) R128(0): [DRI] installation complete
(II) R128(0): [drm] Added 128 16384 byte vertex/indirect buffers
(II) R128(0): [drm] Mapped 128 vertex/indirect buffers
(II) R128(0): Direct rendering enabled</screen></para>

<para>Pour un <filename>xterm</filename>, lancez <userinput>glxinfo</userinput>.
La sortie ressemble à quelque chose comme ceci:
<screen>name of display: :0.0
display: :0  screen: 0
direct rendering: Yes
server glx vendor string: SGI
server glx version string: 1.2
server glx extensions:
    GLX_EXT_visual_info, GLX_EXT_visual_rating, GLX_EXT_import_context
client glx vendor string: SGI
client glx version string: 1.2
client glx extensions:
    GLX_EXT_visual_info, GLX_EXT_visual_rating, GLX_EXT_import_context
GLX extensions:
    GLX_EXT_visual_info, GLX_EXT_visual_rating, GLX_EXT_import_context
OpenGL vendor string: VA Linux Systems, Inc.
OpenGL renderer string: Mesa DRI Rage128 20020221 Pro AGP 1x x86/MMX/SSE
OpenGL version string: 1.2 Mesa 4.0.2
OpenGL extensions:
    GL_ARB_imaging, GL_ARB_multitexture, GL_ARB_texture_env_add,
    GL_ARB_transpose_matrix, GL_EXT_abgr, GL_EXT_bgra, GL_EXT_blend_color,
    GL_EXT_blend_minmax, GL_EXT_blend_subtract, GL_EXT_clip_volume_hint,
    GL_EXT_convolution, GL_EXT_compiled_vertex_array, GL_EXT_histogram,
    GL_EXT_packed_pixels, GL_EXT_polygon_offset, GL_EXT_rescale_normal,
    GL_EXT_texture3D, GL_EXT_texture_env_add, GL_EXT_texture_object,
    GL_EXT_vertex_array, GL_IBM_rasterpos_clip, GL_MESA_window_pos,
    GL_NV_texgen_reflection, GL_SGI_color_matrix, GL_SGI_color_table
glu version: 1.3
glu extensions:
    GLU_EXT_nurbs_tessellator, GLU_EXT_object_space_tess
 
   visual  x  bf lv rg d st colorbuffer ax dp st accumbuffer  ms  cav
 id dep cl sp sz l  ci b ro  r  g  b  a bf th cl  r  g  b  a ns b eat
----------------------------------------------------------------------
0x23 16 tc  0 16  0 r  y  .  5  6  5  0  0 16  0  0  0  0  0  0 0 None
0x24 16 tc  0 16  0 r  y  .  5  6  5  0  0 16  8  0  0  0  0  0 0 Slow
0x25 16 tc  0 16  0 r  y  .  5  6  5  0  0 16  0 16 16 16  0  0 0 Slow
0x26 16 tc  0 16  0 r  y  .  5  6  5  0  0 16  8 16 16 16  0  0 0 Slow
0x27 16 dc  0 16  0 r  y  .  5  6  5  0  0 16  0  0  0  0  0  0 0 None
0x28 16 dc  0 16  0 r  y  .  5  6  5  0  0 16  8  0  0  0  0  0 0 Slow
0x29 16 dc  0 16  0 r  y  .  5  6  5  0  0 16  0 16 16 16  0  0 0 Slow
0x2a 16 dc  0 16  0 r  y  .  5  6  5  0  0 16  8 16 16 16  0  0 0 Slow</screen></para>

<para>Lancez <userinput>ldd /usr/X11R6/bin/glxgears</userinput> et cherchez la
bibliothèque <filename>libGL</filename>. Par exemple,
<screen>      libGL.so.1 =&gt; /usr/lib/libGL.so.1 (0x4001b000)
      libXext.so.6 =&gt; /usr/X11R6/lib/libXext.so.6 (0x40089000)
      libX11.so.6 =&gt; /usr/X11R6/lib/libX11.so.6 (0x40097000)
      libpthread.so.0 =&gt; /lib/libpthread.so.0 (0x40158000)
      libm.so.6 =&gt; /lib/libm.so.6 (0x4016e000)
      libc.so.6 =&gt; /lib/libc.so.6 (0x40192000)
      libdl.so.2 =&gt; /lib/libdl.so.2 (0x402c6000)
      libgcc_s.so.1 =&gt; /lib/libgcc_s.so.1 (0x402ca000)
      /lib/ld-linux.so.2 =&gt; /lib/ld-linux.so.2 (0x40000000)</screen></para>

<para>Vous pouvez aussi lancer le programme de test
<userinput>glxgears</userinput>.
Ce programme apporte une fenêtre avec trois roues qui tournent. Le
<filename>xterm</filename> affichera le nombre d'images dessinées toutes les
cinq secondes, donc c'est un benchmark raisonnable. Il est possible de changer
la taille de la fenêtre, et que le nombre d'images par seconde est grandement
dépendants de la taille de la fenêtre.</para>

<para>Pour des problèmes, vérifiez le Guide Utilisateur DRI sur
<userinput><ulink url="http://dri.sourceforge.net/doc/DRIuserguide.html"/></userinput>.</para>

</sect2>

</sect1>
