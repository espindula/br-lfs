<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
   "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
]>

<sect1 id="intro-important-unpacking">
<sect1info>
<othername>$LastChangedBy: bdubbs $</othername>
<date>$Date: 2005-06-21 20:04:59 $</date>
</sect1info>
<?dbhtml filename="unpacking.html"?>
<title>Notes sur la construction des logiciels</title>

<para>Ceux qui ont déjà construit un système <acronym>LFS</acronym> connaissent
les principes généraux du téléchargement et du déballage de logiciel.
Néanmoins, nous allons répéter ici quelques informations pour ceux ne sachant
pas construire leur propre logiciel.</para>

<para>Chaque ensemble d'instructions d'installation contient une
<acronym>URL</acronym> d'où vous pouvez télécharger le package. Néanmoins, nous
gardons une sélection de correctifs disponibles via http. Ils sont référencés
dans les instructions d'installation.</para>

<para>Alors que vous pouvez conserver les fichiers sources où vous
souhaitez, nous utiliserons lors de leur déballage ou lors de la décompression
de tout correctif requis le répertoire <filename>/usr/src</filename>.</para>

<para>Nous ne pouvons pas accentuer plus sur le fait que vous devez démarrer
avec un <emphasis>arbre des sources propre</emphasis> à chaque fois. Ceci veut
dire que si vous avez une erreur, il est habituellement mieux de supprimer
l'arbre des sources et de déballer l'archive <emphasis>avant</emphasis>
d'essayer de nouveau. Ceci ne s'applique pas si vous êtes un utilisateur
avancé, habitué à la modification des Makefiles et du code C, mais, en cas de
doute, repartez d'un arbre propre.</para>

<sect2>
<title>Déballer le logiciel</title>

<para>Si un fichier est une archive tar compressée au format gzip, il est
déballé en lançant les commandes suivantes, dépendant du nom du
fichier&nbsp;:</para>

<screen><command>tar -xvzf filename.tar.gz
tar xvzf nom_du_fichier.tgz
tar -xvzf filename.tar.Z</command></screen>

<para>Si un fichier est une archive tar compressée au format bzip, il peut être
déballé en lançant:</para>

<screen><command>tar -jxvf filename.tar.bz2</command></screen>

<para>Vous pouvez utiliser une méthode légèrement différente:</para>

<screen><command>bzcat filename.tar.bz2 | tar -xv</command></screen>

<para>Enfin, vous devez être capable, quelque fois, de déballer les correctifs, qui,
généralement, n'utilisent pas le format tar. Le meilleur moyen est de copier le
correctif dans <filename>/usr/src</filename> et de lancer ensuite une des
commandes suivantes suivant que le fichier est .gz ou .bz2:</para>

<screen><command>gunzip patchname.gz
bunzip2 patchname.bz2</command></screen>

</sect2>

<sect2>
<title>Vérifier l'intégrité des fichiers avec md5sum</title>

<para>Généralement, pour vérifier que le fichier téléchargé est intact et
complet, la plupart des mainteneurs de paquetages distribuent aussi la somme de
vérification md5 des fichiers. Pour la vérifier, téléchargez à la fois le
fichier et le fichierde contrôle correspondant dans le même répertoire (de
préférence à partir d'emplacements de téléchargement différents) et (en
supposant que fichier.md5sum est le fichier de contrôle téléchargé), lancez la
commande suivante&nbsp;:</para>

<screen><command>md5sum -c fichier.md5sum</command></screen>

<para>Si des erreurs existent, elles seront indiquées.</para>

</sect2>

<sect2>
<title>Créer des journaux de trace lors des installations</title>

<para>Pour les gros paquetages, il est agréable de créer des journaux de traces
au lieu de fixer l'écran en espérant y trouver une erreur ou un message
d'attention particulier. Les journaux de trace sont aussi utiles pour le
déboguage et pour conserver un enregistrement. La commande suivante vous permet
de créer une journal des traces d'installation. Remplacez &lt;commande&gt; avec
la commande que vous souhaitez exécutée.</para>

<screen><command>( &lt;commande&gt; 2&gt;&amp;1 | tee compile.log &amp;&amp;
exit
$PIPESTATUS )</command></screen>

<para><parameter>2&gt;&amp;1</parameter> redirige les messages d'erreur sur la
sortie standard. La commande <command>tee</command> permet de visualiser la
sortie alors qu'elle enregistre les résultats dans un fichier. Les parenthèses
autour de la commande lance la commande entière dans un sous-shell. Enfin,
<command>exit $PIPESTATUS</command> nous assure que le résultat de
&lt;commande&gt; est renvoyé comme code de retour et non pas le résultat de la
commande <command>tee</command>.</para>

</sect2>

</sect1>
