<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY libmusicbrainz-download-http "http://ftp.musicbrainz.org/pub/musicbrainz/libmusicbrainz-&libmusicbrainz-version;.tar.gz">
  <!ENTITY libmusicbrainz-download-ftp  "ftp://ftp.musicbrainz.org/pub/musicbrainz/libmusicbrainz-&libmusicbrainz-version;.tar.gz">
  <!ENTITY libmusicbrainz-md5sum        "d5e19bb77edd6ea798ce206bd05ccc5f">
  <!ENTITY libmusicbrainz-size          "524 KB">
  <!ENTITY libmusicbrainz-buildsize     "12 MB">
  <!ENTITY libmusicbrainz-time          "0.4 SBU">
]>

<sect1 id="libmusicbrainz" xreflabel="libmusicbrainz-&libmusicbrainz-version;">
  <?dbhtml filename="libmusicbrainz.html"?>

  <sect1info>
    <othername>$LastChangedBy: randy $</othername>
    <date>$Date: 2008-11-16 21:28:01 $</date>
  </sect1info>

  <title>libmusicbrainz-&libmusicbrainz-version;</title>

  <indexterm zone="libmusicbrainz">
    <primary sortas="a-libmusicbrainz">libmusicbrainz</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to libmusicbrainz</title>

    <para>The <application>libmusicbrainz</application> package contains a
    library which allows you to access the data held on the MusicBrainz server.
    This is useful for adding MusicBrainz lookup capabilities to other
    applications.</para>

    <para>MusicBrainz is a community music metadatabase that attempts to create
    a comprehensive music information site. You can use the MusicBrainz data
    either by browsing the web site, or you can access the data from a client
    program &mdash; for example, a CD player program can use MusicBrainz to
    identify CDs and provide information about the CD, about the artist or
    other related information.</para>

    <bridgehead renderas="sect3">Package Information</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>Download (HTTP): <ulink url="&libmusicbrainz-download-http;"/></para>
      </listitem>
      <listitem>
        <para>Download (FTP): <ulink url="&libmusicbrainz-download-ftp;"/></para>
      </listitem>
      <listitem>
        <para>Download MD5 sum: &libmusicbrainz-md5sum;</para>
      </listitem>
      <listitem>
        <para>Download size: &libmusicbrainz-size;</para>
      </listitem>
      <listitem>
        <para>Estimated disk space required: &libmusicbrainz-buildsize;</para>
      </listitem>
      <listitem>
        <para>Estimated build time: &libmusicbrainz-time;</para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">libmusicbrainz Dependencies</bridgehead>

    <bridgehead renderas="sect4">Required</bridgehead>
    <para role="optional"><xref linkend="expat"/></para>

    <bridgehead renderas="sect4">Optional to Build the Python
    Bindings</bridgehead>
    <para role="optional"><xref linkend="python"/></para>

    <para condition="html" role="usernotes">User Notes:
    <ulink url="&blfs-wiki;/libmusicbrainz"/></para>

  </sect2>

  <sect2 role="installation">
    <title>Installation of libmusicbrainz</title>

    <para>Install <application>libmusicbrainz</application> by running the
    following commands:</para>

<screen><userinput>./configure --prefix=/usr &amp;&amp;
make</userinput></screen>

    <para>If <application>Python</application> is installed, build the bindings
    with the following commands:</para>

<screen><userinput>(cd python &amp;&amp; python setup.py build)</userinput></screen>

    <para>This package does not come with a stand-alone test suite (to
    test you must have <application>Python</application> installed and perform
    the test after the package is installed).</para>

    <para>Now, as the <systemitem class="username">root</systemitem> user:</para>

<screen role="root"><userinput>make install &amp;&amp;
install -v -m644 -D docs/mb_howto.txt \
    /usr/share/doc/libmusicbrainz-&libmusicbrainz-version;/mb_howto.txt</userinput></screen>

    <para>To test the Python bindings, issue the following:
    <command>(cd python &amp;&amp; python setup.py test)</command>.</para>

    <para>If you built the Python bindings, issue the following commands as
    the <systemitem class="username">root</systemitem> user to install
    them:</para>

<screen role="root"><userinput>(cd python &amp;&amp; python setup.py install)</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Installed Programs</segtitle>
      <segtitle>Installed Library</segtitle>
      <segtitle>Installed Directories</segtitle>

      <seglistitem>
        <seg>None</seg>
        <seg>libmusicbrainz.{so,a}</seg>
        <seg>/usr/include/musicbrainz and
        /usr/share/doc/libmusicbrainz-&libmusicbrainz-version;</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="libmusicbrainz-lib">
        <term><filename class='libraryfile'>libmusicbrainz.{so,a}</filename></term>
        <listitem>
          <para>contains API functions to access the MusicBrainz database, both
          for looking up data and also for submitting new data.</para>
          <indexterm zone="libmusicbrainz libmusicbrainz-lib">
            <primary sortas="c-libmusicbrainz">libmusicbrainz.{so,a}</primary>
          </indexterm>
        </listitem>
      </varlistentry>
    </variablelist>

  </sect2>

</sect1>
