<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
   "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY ncftp-download-http "http://gd.tuwien.ac.at/infosys/clients/ftp/ncftp/ncftp-&ncftp-version;-src.tar.bz2">
  <!-- <!ENTITY ncftp-download-ftp  "ftp://ftp.ncftp.com/ncftp/ncftp-&ncftp-version;-src.tar.bz2"> -->
  <!ENTITY ncftp-download-ftp  "ftp://ftp.fu-berlin.de/unix/linux/mirrors/gentoo/distfiles/ncftp-&ncftp-version;-src.tar.bz2">
  <!ENTITY ncftp-md5sum        "2a310a3c9ca126e6b409d0d1d1ccda75">
  <!ENTITY ncftp-size          "389 KB">
  <!ENTITY ncftp-buildsize     "5.2 MB">
  <!ENTITY ncftp-time          "0.38 SBU">
]>

<sect1 id="ncftp" xreflabel="NcFTP-&ncftp-version;">
<sect1info>
<othername>$LastChangedBy: randy $</othername>
<date>$Date: 2005-06-15 06:23:55 $</date>
</sect1info>
<?dbhtml filename="ncftp.html"?>
<title>NcFTP-&ncftp-version;</title>

<sect2>
<title>Introduction to 
<application>Nc<acronym>FTP</acronym></application></title>

<para>The <application>Nc<acronym>FTP</acronym></application> package contains 
a powerful and flexible interface to the Internet standard File Transfer 
Protocol.  It is intended to replace or supplement the stock 
<command>ftp</command> program.</para>

<sect3><title>Package information</title>
<itemizedlist spacing='compact'>
<listitem><para>Download (HTTP): <ulink
url="&ncftp-download-http;"/></para></listitem>
<listitem><para>Download (FTP): <ulink
url="&ncftp-download-ftp;"/></para></listitem>
<listitem><para>Download MD5 sum: &ncftp-md5sum;</para></listitem>
<listitem><para>Download size: &ncftp-size;</para></listitem>
<listitem><para>Estimated disk space required:
&ncftp-buildsize;</para></listitem>
<listitem><para>Estimated build time:
&ncftp-time;</para></listitem></itemizedlist>
</sect3>

</sect2>

<sect2>
<title>Installation of 
<application>Nc<acronym>FTP</acronym></application></title>

<para>There are two ways to build 
<application>Nc<acronym>FTP</acronym></application>.  The first 
(and optimal) way builds most of the functionality as a shared library and 
then builds and installs the program linked against this library.  The second 
method simply links all of the functionality into the binary statically.  This
doesn't make the dynamic library available for linking by other
applications.  You need to choose which method best suits you.  Note
that the second method does <emphasis>not</emphasis> create an entirely
statically linked binary; only the 
<filename class="libraryfile">libncftp</filename> parts are 
statically linked in, in this case. Be aware that building and using the shared 
library is covered by the Clarified Artistic License; however, developing 
applications that utilize the shared library is subject to a different 
license.</para>

<para>To install <application>Nc<acronym>FTP</acronym></application> using the 
first (and optimal) method, run the following commands:</para>

<screen><userinput><command>./configure --prefix=/usr &amp;&amp;
make -C libncftp shared &amp;&amp;
make -C libncftp soinstall &amp;&amp;
make &amp;&amp;
make install</command></userinput></screen>

<para>To install <application>Nc<acronym>FTP</acronym></application> using the 
second method (with the <filename class="libraryfile">libncftp</filename> 
functionality linked in statically) run the following commands:</para>

<screen><userinput><command>./configure --prefix=/usr &amp;&amp;
make &amp;&amp;
make install</command></userinput></screen>

</sect2>

<sect2>
<title>Command explanations</title>

<para><screen><command>make -C libncftp shared  
make -C libncftp soinstall</command></screen>
These commands make and install the dynamic library <filename
class="libraryfile">libncftp</filename> which is then used to link
against when compiling the main program.</para>

</sect2>

<sect2>
<title>Configuring <application>Nc<acronym>FTP</acronym></application></title>

<sect3><title>Config files</title>
<para><filename>~/.ncftp/*</filename>; especially
<filename>~/.ncftp/prefs_v3</filename></para>
</sect3>

<sect3><title>Configuration Information</title>

<para>Most <application>Nc<acronym>FTP</acronym></application> configuration 
is done while in the program, and the configuration files are dealt with 
automatically. One exception to this is <filename>~/.ncftp/prefs_v3</filename>. 
There are various options to alter in there, including:</para>

<para><screen><userinput>yes-i-know-about-NcFTPd=yes</userinput></screen> 
This disables the splash screen advertising the
<application>NcFTPd</application> server.</para>

<para>There are other options in the <filename>prefs_v3</filename> file. Most 
of these are self-explanatory.</para>
</sect3>

</sect2>

<sect2>
<title>Contents</title>

<para>The <application>Nc<acronym>FTP</acronym></application> package
contains <filename class="libraryfile">libncftp</filename>,
<command>ncftp</command>, <command>ncftpbatch
</command>, <command>ncftpbookmarks</command>,
<command>ncftpget</command>, <command>ncftpls</command>,
<command>ncftpput</command> and <command>ncftpspooler</command>.</para>
</sect2>

<sect2><title>Description</title>

<sect3><title>ncftp</title>
<para>A browser program for File Transfer Protocol.</para></sect3>

<sect3><title>ncftpbatch</title>
<para>Individual batch <acronym>FTP</acronym> job processor.</para></sect3>

<sect3><title>ncftpbookmarks</title>
<para><application>NcFTP</application> Bookmark Editor
(<application>NCurses</application>-based).</para></sect3>

<sect3><title>ncftpget</title>
<para>Internet file transfer program for scripts.</para></sect3>

<sect3><title>ncftpls</title>
<para>Internet file transfer program for scripts.</para></sect3>

<sect3><title>ncftpput</title>
<para>Internet file transfer program for scripts.</para></sect3>

<sect3><title>ncftpspooler</title>
<para>Global batch <acronym>FTP</acronym> job processor daemon.</para></sect3>

</sect2>

</sect1>

