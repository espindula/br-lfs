<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
  <!ENTITY fop-download-http "https://archive.apache.org/dist/xmlgraphics/fop/source/fop-&fop-version;-src.tar.gz">
  <!ENTITY fop-download-ftp  " ">
  <!ENTITY fop-md5sum        "13b5b497dfb0ba8a01093dfc1a89d106">
  <!ENTITY fop-size          "23 Mo">
  <!ENTITY fop-buildsize     "342 Mo">
  <!ENTITY fop-time          "0.3 SBU">
  <!ENTITY jai-version       "1_1_3">
  <!ENTITY jai-download      "http://download.java.net/media/jai/builds/release/&jai-version;/jai-&jai-version;-lib-linux-i586.tar.gz">
  <!ENTITY jai-md5sum        "a2cbc155ef3899bcde9c74a8035764b3">
  <!ENTITY jai-size          "3.4 Mo">
  <!ENTITY jai64-download    "http://download.java.net/media/jai/builds/release/&jai-version;/jai-&jai-version;-lib-linux-amd64.tar.gz">
  <!ENTITY jai64-md5sum      "4a906db35612f668aeef2c0606d7075b">
  <!ENTITY jai64-size        "3.4 Mo">
<!--
  <!ENTITY offo-download     "&sourceforge-repo;/offo/offo-hyphenation_v2.0.zip">
  <!ENTITY offo-md5sum       "a78171d47c9af223c51bbd42df36f26d">
  <!ENTITY offo-size         "858 Ko">
-->
]>
<sect1 id="fop" xreflabel="fop-&fop-version;">
  <?dbhtml filename="fop.html"?>
  <sect1info>
    <othername>$LastChangedBy&nbsp;: bdubbs $</othername>
    <date>$Date&nbsp;: 2013-03-13 18:58:54 +0100 (Wed, 13 Mar 2013) $</date>
  </sect1info>
  <title>fop-&fop-version;</title>
  <indexterm zone="fop">
    <primary sortas="a-FOP">fop</primary>
  </indexterm>
  <sect2 role="package">
    <title>Introduction à fop</title>
    <para>Le paquet <application>fop</application> (Formatting Objects Processor)
    contient un formateur d'impression guidé par le formatage XSL d'objets
    (XSL-FO). C'est une application <application>Java</application> qui lit
    une arborescence d'objets de formatage et qui produit les pages qui en résulte
    vers une sortie spécifique. Les formats de sortie actuellement supportés
    comprennent le PDF, PCL, PostScript, SVG, XML (représentation en arborescence
    de zone), print, AWT, MIF et texte ASCII. La cible sortie primaire est le
    PDF.</para>
    &lfs78_checked;
    <bridgehead renderas="sect3">Informations sur le paquet</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>Téléchargement (HTTP)&nbsp;: <ulink url="&fop-download-http;"/></para>
      </listitem>
      <listitem>
        <para>Téléchargement (FTP)&nbsp;: <ulink url="&fop-download-ftp;"/></para>
      </listitem>
      <listitem>
        <para>Somme de contrôle MD5 du téléchargement&nbsp;: &fop-md5sum;</para>
      </listitem>
      <listitem>
        <para>Taille du téléchargement&nbsp;: &fop-size;</para>
      </listitem>
      <listitem>
        <para>Estimation de l'espace disque requis&nbsp;: &fop-buildsize;</para>
      </listitem>
      <listitem>
        <para>Estimation du temps de construction&nbsp;: &fop-time;</para>
      </listitem>
    </itemizedlist>
    <bridgehead renderas="sect3">Téléchargements supplémentaires</bridgehead>
    <itemizedlist spacing="compact">
      <title>Paquets recommandés</title>
      <listitem>
        <para>Composants de l'API <foreignphrase>Java Advanced Imaging</foreignphrase>
        (JAI) (fonction de l'architecture)&nbsp;:
          <simplelist>
            <member><ulink url="&jai-download;"/></member>
            <member>&jai-md5sum;</member>
            <member>&jai-size;</member>
          </simplelist>
          <literallayout>ou</literallayout>
          <simplelist>
            <member><ulink url="&jai64-download;"/></member>
            <member>&jai64-md5sum;</member>
            <member>&jai64-size;</member>
          </simplelist>
         </para>
      </listitem>
    </itemizedlist>
    <itemizedlist spacing="compact">
      <title>Correctif requis</title>
      <listitem>
        <para>
          <ulink url="&patch-root;/fop-&fop-version;-listNPE-1.patch"/>
        </para>
      </listitem>
    </itemizedlist>
    <bridgehead renderas="sect3">Dépendances de fop</bridgehead>
    <bridgehead renderas="sect4">Requises</bridgehead>
    <para role="required">
      <xref linkend="apache-ant"/>
    </para>
    <bridgehead renderas="sect4">Facultatives</bridgehead>
    <para role="optional">
       <xref linkend="junit"/> (pour exécuter les tests),
       <xref linkend="x-window-system"/> (pour exécuter les tests)
       <ulink url="http://java.sun.com/products/jimi/">JIMI SDK</ulink>,
    <ulink url="http://xmlunit.sourceforge.net/">XMLUnit</ulink>,
    <ulink url="https://java.net/projects/jai-imageio">JAI Image I/O Tools</ulink>,
    <ulink url="http://jeuclid.sourceforge.net/">JEuclid</ulink>,
    <ulink url="http://pmd.sourceforge.net">PMD</ulink>
    (requires <ulink url="http://jaxen.codehaus.org/">Jaxen</ulink>), et
    <ulink url="http://forrest.apache.org/">Forrest</ulink> (Forrest est utilisé seulement
    pour reconstruire la documentation)
    </para>
    <para condition="html" role="usernotes">Notes utilisateur&nbsp;:
    <ulink url="&blfs-wiki;/fop"/></para>
  </sect2>
  <sect2 role="installation">
    <title>Installation de fop</title>
     <para>Assurez-vous que <envar>$JAVA_HOME</envar> est correctement paramétré
    avant de commencer la construction. Pour construire les classes d'extension
    <application>JIMI SDK</application> et/u
    <application>XMLUnit</application>, assurez-vous que les fichiers
    <filename class='extension'>.jar</filename> correspondant peuvent être trouvés
    par la variable d'environnement <envar>CLASSPATH</envar>.</para>
    <sect3>
      <title>Installer les composants de l'API de JAI</title>
      <para>Installez les composants de l'API de JAI. En tant qu'utilisateur <systemitem
      class="username">root</systemitem>&nbsp;:</para>
<screen role="root">
<userinput>case `uname -m` in
  i?86)
    tar -xf ../jai-&jai-version;-lib-linux-i586.tar.gz
    cp -v jai-&jai-version;/lib/{jai*,mlibwrapper_jai.jar} $JAVA_HOME/jre/lib/ext/
    cp -v jai-&jai-version;/lib/libmlib_jai.so             $JAVA_HOME/jre/lib/i386/
    ;;
  x86_64)
    tar -xf ../jai-&jai-version;-lib-linux-amd64.tar.gz
    cp -v jai-&jai-version;/lib/{jai*,mlibwrapper_jai.jar} $JAVA_HOME/jre/lib/ext/
    cp -v jai-&jai-version;/lib/libmlib_jai.so             $JAVA_HOME/jre/lib/amd64/
    ;;
esac</userinput>
</screen>
    </sect3>
    <sect3>
      <title>Installer les composants fop</title>
    <para>
      La commande <command>javadoc</command> venant avec OpenJDK 8 est devenu plus strict qu'avant
      à propos de la conformité des commentaires javadoc dans le code source vers l'HTML.
      La documentation de FOP
      ne respecte pas ces stantards, aussi les tests de conformité ont été désactivés. Cela peut être
      fait avec la commande suivante:
    </para>
<screen>
<userinput>sed -i '@&lt;/javad@i&lt;arg value="-Xdoclint:none"/&gt;' build.xml</userinput>
</screen>
      <para>Ensuite, compilez <application>fop</application> en lançant les
      commandes suivantes&nbsp;:</para>
<screen>
<userinput>patch -Np1 -i ../fop-&fop-version;-listNPE-1.patch &amp;&amp;
ant compile &amp;&amp;
ant jar-main &amp;&amp;
ant javadocs &amp;&amp;
mv build/javadocs .</userinput>
</screen>
      <para>Pour tester l'application, lancez <command>ant junit-all</command>.
      Les tests de césure échoueront. Pour voir une liste des autres
      cibles de test, utilisez <command>ant -p</command>.
      Vous devez lancer les tests depuis un X-window utilisant
      un serveur GL-aware de <application>Xorg</application> ou certains des tests de
      <application>JUnit</application> planteront.</para>
      <para>Maintenant en tant qu'utilisateur <systemitem class="username">root</systemitem>&nbsp;:</para>
<screen role="root">
<userinput>install -v -d -m755                                     /opt/fop-&fop-version; &amp;&amp;
cp -v  KEYS LICENSE NOTICE README                       /opt/fop-&fop-version; &amp;&amp;
cp -va build conf examples fop* javadocs lib status.xml /opt/fop-&fop-version; &amp;&amp;
ln -v -sf fop-&fop-version; /opt/fop</userinput>
</screen>
    </sect3>
   </sect2>
  <sect2 role="commands">
    <title>Explication des commandes</title>
    <para><command>ant <option>target</option></command>&nbsp;: Cela lit le fichier
    <filename>build.xml</filename> et construit les fichiers cibles.</para>
    <para><command>ln -v -sf fop-&fop-version; /opt/fop</command>&nbsp;: C'est
    facultatif et cela crée un lien symbolique commode pour qu'on n'ait pas
    besoin de modifier <envar>$FOP_HOME</envar> à chaque fois qu'il y a un
    changement de version de paquet.</para>
  </sect2>
  <sect2 role="configuration">
    <title>Configuration de fop</title>
    <sect3 id="fop-config">
      <title>Fichiers de configuration</title>
      <para><filename>~/.foprc</filename></para>
      <indexterm zone="fop fop-config">
        <primary sortas="e-AA.foprc">~/.foprc</primary>
      </indexterm>
    </sect3>
    <sect3>
      <title>Informations de configuration</title>
      <para>L'utilisationn de <application>fop</application> pour traiter
      certains gros FO's (y compris les FO dérivés des sources XML de BLFS),
      peut conduire à des erreurs de mémoire. Sauf si vous ajoutez un paramètre
      à la commande <command>java</command>, utilisé dans le script
      <command>fop</command>, il se peut que vous receviez des messages similaires
      à celui décrit ci-dessous&nbsp;:</para>
      <para><computeroutput>Exception in thread "main" java.lang.OutOfMemoryError:
      Java heap space</computeroutput></para>
      <para>Pour éviter des erreurs comme ça, vous avez besoin de passer un
      paramètre supplémentaire à la commande <command>java</command> utilisé
      dans le script <command>fop</command>. On peut faire cela en créant un
      <filename>~/.foprc</filename> (dont la soupee est dans le script
      <command>fop</command>) et en ajoutant le paramètre à la variable
      d'environnement <envar>FOP_OPTS</envar>.</para>
      <para>Le script <command>fop</command> cherche une variable d'environement
      <envar>FOP_HOME</envar> pour localiser les bibliothèques de la classe
      <application>fop</application>. Vous pouvez créer cette variable en utilisant
      aussi le fichier <filename>~/.foprc</filename>. Créez un fichier
      <filename>~/.foprc</filename> en utilisant les commandes suivantes&nbsp;:</para>
<screen>
<userinput>cat &gt; ~/.foprc &lt;&lt; "EOF"
<literal>FOP_OPTS="-Xmx<replaceable>&lt;RAM_Installed&gt;</replaceable>m"
FOP_HOME="/opt/fop"</literal>
EOF</userinput>
</screen>
      <para>Remplacez <replaceable>&lt;RAM_Installée&gt;</replaceable> par un
      nombre représentant la quantité de RAM installée sur votre ordinateur
      (en mégaoctets). Un exemple serait
      <userinput>FOP_OPTS="-Xmx768m"</userinput>.
      </para>
      <para>Pour inclure le script <command>fop</command> dans votre path, mettez
      à jour votre profil personnel ou pour tout le système avec ce qui
      suit&nbsp;:</para>
<screen>
<literal>PATH=$PATH:/opt/fop</literal>
</screen>
       <note><para>L'exécution de <command>fop</command> peut être un peu verbeuse.
       Le niveau de journalisation par défaut peut être changé à INFO pour toutes les
       varibales FINEST, FINER, FINE, CONFIG, INFO, WARNING, SEVERE, ALL, ou OFF.
       Pour faire cela, éditez
       <filename>$JAVA_HOME/jre/lib/logging.properties</filename> et changez
       les entrées pour <option>.leval</option> et
       <option>java.util.logging.ConsoleHandler.level</option> à la valeur
       désirée.</para></note>
    </sect3>
  </sect2>
  <sect2 role="content">
    <title>Contenu</title>
    <segmentedlist>
      <segtitle>Programmes installés</segtitle>
      <segtitle>Bibliothèques installées</segtitle>
      <segtitle>Répertoire installé</segtitle>
      <seglistitem>
        <seg>fop</seg>
        <seg>fop.jar et numerous support library classes located in
        <filename class='directory'>/opt/fop/{build,lib}</filename>; JAI
        components include libmlib_jai.so, jai_codec.jar, jai_core.jar, et
        mlibwrapper_jai.jar</seg>
        <seg>/opt/fop-&fop-version;</seg>
      </seglistitem>
    </segmentedlist>
    <variablelist>
      <bridgehead renderas="sect3">Descriptions courtes</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>
      <varlistentry id="fop-prog">
        <term><command>fop</command></term>
        <listitem>
          <para>est un script enveloppe pour la commande <command>java</command>
          qui paramètre l'environnement <application>fop</application> et passe
          les paramètres requis.</para>
          <indexterm zone="fop fop-prog">
            <primary sortas="b-fop">fop</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="fop.jar">
        <term><filename class='libraryfile'>fop.jar</filename></term>
        <listitem>
          <para>contient toutes les classes <application>Java</application> de
           <application>fop</application>.</para>
          <indexterm zone="fop fop.jar">
            <primary sortas="c-fop.jar">fop.jar</primary>
          </indexterm>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect2>
</sect1>
