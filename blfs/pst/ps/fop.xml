<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
   "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY fop-download-http "http://www.apache.org/dist/xml/fop/fop-&fop-version;-src.tar.gz">
  <!ENTITY fop-download-ftp  "ftp://apache.mirrors.pair.com/xml/fop/source/fop-&fop-version;-src.tar.gz">
  <!ENTITY fop-md5sum        "1a31eb1357e5d4b8d32d4cb3edae2da2">
  <!ENTITY fop-size          "7.8 MB">
  <!ENTITY fop-buildsize     "45.3 MB">
  <!ENTITY fop-time          "0.25 SBU">

  <!ENTITY jai-download      "http://javashoplm.sun.com/ECom/docs/Welcome.jsp?StoreId=22&amp;PartDetailId=jai-1_1_2_01-oth-JPR&amp;SiteId=JSC&amp;TransactionId=noreg">
  <!ENTITY jai-md5sum        "f2be3619a8d002eff3874355e96327eb">
  <!ENTITY jai-size          "2.6 MB">
]>

<sect1 id="fop" xreflabel="FOP-&fop-version;">
<sect1info>
<othername>$LastChangedBy: randy $</othername>
<date>$Date: 2005-06-15 06:18:19 $</date>
</sect1info>
<?dbhtml filename="fop.html"?>
<title><application><acronym>FOP</acronym></application>-&fop-version;</title>
<indexterm zone="fop">
<primary sortas="a-FOP">FOP</primary></indexterm>

<sect2>
<title>Introduction to <application><acronym>FOP</acronym></application></title>

<para>The <application><acronym>FOP</acronym></application> (Formatting 
Objects Processor) package contains a print formatter driven by 
<acronym>XSL</acronym> formatting objects 
(<acronym>XSL</acronym>-<acronym>FO</acronym>). It is a 
<application>Java</application> application that reads a formatting object 
tree and renders the resulting pages to a specified output. Output formats 
currently supported include <acronym>PDF</acronym>, <acronym>PCL</acronym>, 
PostScript, <acronym>SVG</acronym>, <acronym>XML</acronym> (area tree 
representation), print, <acronym>AWT</acronym>, <acronym>MIF</acronym> and 
<acronym>ASCII</acronym> text. The primary output target is 
<acronym>PDF</acronym>.</para>

<sect3><title>Package information</title>
<itemizedlist spacing="compact">
<listitem><para>Download (HTTP): 
<ulink url="&fop-download-http;"/></para></listitem>
<listitem><para>Download (FTP): 
<ulink url="&fop-download-ftp;"/></para></listitem>
<listitem><para>Download MD5 sum: 
&fop-md5sum;</para></listitem>
<listitem><para>Download size: 
&fop-size;</para></listitem>
<listitem><para>Estimated disk space required: 
&fop-buildsize;</para></listitem>
<listitem><para>Estimated build time: 
&fop-time;</para></listitem></itemizedlist>
</sect3>

<sect3><title>Additional downloads</title>
<itemizedlist spacing="compact">
<listitem><para><application>Java</application> Advanced Imaging 
(<acronym>JAI</acronym>) <acronym>API</acronym> components: 
<ulink url="&jai-download;">
http://javashoplm.sun.com/ECom/docs/Welcome.jsp?StoreId=22&amp;</ulink>
<ulink url="&jai-download;">
PartDetailId=jai-1_1_2_01-oth-JPR&amp;SiteId=JSC&amp;TransactionId=noreg</ulink>
</para></listitem>
<listitem><para>Download MD5 sum: &jai-md5sum;</para></listitem>
<listitem><para>Download size: &jai-size;</para></listitem>
</itemizedlist>

<para>Choose the <quote><application>Linux</application> 
<application><acronym>JDK</acronym></application> Install</quote> file after 
accepting the license agreement.</para>
</sect3>

<sect3><title><application>FOP</application> dependencies</title>
<sect4><title>Required</title>
<para><xref linkend="j2sdk"/></para>
</sect4>

<sect4><title>Optional</title>
<para><xref linkend="libxslt"/>, 
<ulink url="http://java.sun.com/products/jimi/">JIMI SDK</ulink>, 
<ulink url="http://xml.apache.org/batik/">Batik</ulink> and 
<ulink url="http://forrest.apache.org/">Forrest</ulink> (only used to rebuild 
the documentation)</para>
</sect4>
</sect3>

</sect2>

<sect2>
<title>Installation of <application>FOP</application></title>

<note><para>Ensure <envar>$JAVA_HOME</envar> is set correctly before beginning 
the build. Additionally, the build will fail if your version of the 
<acronym>JDK</acronym> is higher than 1.4.2_x.</para></note>

<para>Some versions of tar will display a message similar to 
<quote><computeroutput>tar: A lone zero block at 33476</computeroutput></quote> 
when unpacking the source tarball. You may safely ignore this message.</para>

<sect3><title>Installing <acronym>JAI</acronym></title>
<para>Install the <acronym>JAI</acronym> components by running the following 
commands as the root user while in the root of the 
<application><acronym>FOP</acronym></application> source tree:</para>

<screen><userinput role='root'><command>chmod 755 ../jai-1_1_2_01-lib-linux-i586-jdk.bin &amp;&amp;
FOP_BUILD_DIR=$(pwd) &amp;&amp;
cd $JAVA_HOME &amp;&amp;
yes | $FOP_BUILD_DIR/../jai-1_1_2_01-lib-linux-i586-jdk.bin &amp;&amp;
cd $FOP_BUILD_DIR</command></userinput></screen>
</sect3>

<sect3><title>Installing <application><acronym>FOP</acronym></application> 
required components</title>
<para>Install <application><acronym>FOP</acronym></application> by running the 
following commands:</para>

<screen><userinput><command>./build.sh &amp;&amp;
sed -i -e "s/build/lib/" fop.sh</command></userinput></screen>

<para>Now, as the root user:</para>

<screen><userinput role='root'><command>install -v -d -m755 \
    /opt/fop-&fop-version;/{bin,lib,docs/{general,lib,site}} &amp;&amp;
install -v -m755 fop.sh /opt/fop-&fop-version;/bin &amp;&amp;
install -v -m644 build/fop.jar lib/avalon-framework-cvs-20020806.jar \
    /opt/fop-&fop-version;/lib &amp;&amp;
install -v -m644 docs/* /opt/fop-&fop-version;/docs &amp;&amp;
install -v -m644 CHANGES LICENSE README ReleaseNotes.html STATUS \
    /opt/fop-&fop-version;/docs/general &amp;&amp;
install -v -m644 lib/{avalon.LICENSE.txt,readme} \
    /opt/fop-&fop-version;/docs/lib &amp;&amp;
cp -v -R build/site/* /opt/fop-&fop-version;/docs/site &amp;&amp;
ln -svf fop-&fop-version; /opt/fop</command></userinput></screen>
</sect3>

<sect3><title>Installing the <application>Batik</application> 
<acronym>JAR</acronym></title>
<para>You'll need to install one additional <application>Java</application> 
class library to process <acronym>SVG</acronym> objects. This library is part 
of the <ulink url="http://xml.apache.org/batik/">Batik</ulink> package, but is 
also included with the <application><acronym>FOP</acronym></application> 
package. If you have <application>Batik</application> installed, ensure the 
<filename>batik.jar</filename> library is included in your 
<envar>$CLASSPATH</envar> environment variable. Alternatively, create a 
symbolic link from <filename>/opt/fop-&fop-version;/lib/batik.jar</filename> 
pointing to the full path of the installed <filename>batik.jar</filename> 
file so that the <command>fop.sh</command> script will automatically pick it 
up.</para>

<para>If you don't have the <application>Batik</application> package installed, 
run the following commands as the root user:</para>

<screen><userinput role='root'><command>install -v -m644 lib/batik.jar /opt/fop-&fop-version;/lib &amp;&amp;
install -v -m644 lib/batik.LICENSE.txt \
    /opt/fop-&fop-version;/docs/lib</command></userinput></screen>
</sect3>

<sect3><title>Installing the <application>Xalan-Java</application> 
components</title>
<para>The components of <application><acronym>FOP</acronym></application> 
required to process <acronym>FO</acronym> files created by an 
<acronym>XSL</acronym> transformation engine (also known as an 
<acronym>XSLT</acronym> processor) is now complete. An 
<acronym>XSL</acronym> transformation engine (<command>xsltproc</command>) 
is included with the <xref linkend="libxslt"/> package in 
<acronym>BLFS</acronym>. The <application><acronym>FOP</acronym></application> 
package includes components of 
<ulink url="http://xml.apache.org/xalan-j/">Xalan-Java</ulink> to accomplish 
<acronym>XSL</acronym> transformations. If you have the 
<application>Xalan-Java</application> package installed, skip to the next 
section.</para>

<para>If you wish to install the <application>Xalan-Java</application> 
components provided by the <application><acronym>FOP</acronym></application> 
package, run the following commands as the root user:</para>

<screen><userinput role='root'><command>sed -i -e "s/build/lib/" xalan.sh &amp;&amp;
install -v -m755 xalan.sh /opt/fop-&fop-version;/bin &amp;&amp;
install -v -m644 lib/xml-apis.jar \
                 lib/xercesImpl-2.2.1.jar \
                 lib/xalan-2.4.1.jar \
    /opt/fop-&fop-version;/lib &amp;&amp;
install -v -m644 lib/{xml-apis,xerces,xalan}.LICENSE.txt \
                 lib/xml-apis.README.txt \
    /opt/fop-&fop-version;/docs/lib</command></userinput></screen>
</sect3>

<sect3><title>Installing the 
<application>Jimi <acronym>SDK</acronym></application> 
<acronym>JAR</acronym></title>
<para>If you installed the Java Image I/O class library 
(<application>Jimi <acronym>SDK</acronym></application>) into the 
<application><acronym>FOP</acronym></application> source tree 
<filename class='directory'>lib</filename> directory before building 
<application><acronym>FOP</acronym></application> (this will enable Jimi 
support), ensure you also install this <acronym>JAR</acronym> file into 
<filename class='directory'>/opt/fop-&fop-version;/lib</filename>.</para>
</sect3>

</sect2>

<sect2>
<title>Command explanations</title>

<para><command>yes | $FOP_BUILD_DIR/../jai-...-jdk.bin</command>: This command 
installs the <application><acronym>JAI</acronym></application> components 
into the <application><acronym>JDK</acronym></application> file structure. The 
<command>yes</command> command is piped through so that you don't have to 
scroll through four pages of the license agreement and automatically responds 
<quote>yes</quote> to the agreement. <envar>$FOP_BUILD_DIR</envar> is used as 
a reference point to the source executable and as a method to return back to 
the <application><acronym>FOP</acronym></application> source tree.</para>

<para><command>sed -i -e "s/build/lib/" ...</command>: These commands modify 
the installed shell scripts so that the location of the installed 
<filename>fop.jar</filename> file is correctly identified.</para>

<para><command>install -v ...; cp -v ...</command>: There is no installation 
script provided by the <application><acronym>FOP</acronym></application> 
package. These commands install the package.</para>

<para><command>ln -svf fop-&fop-version; /opt/fop</command>: This creates a 
convenience symlink so that <envar>$FOP_HOME</envar> doesn't have to be 
changed each time there's a package version change.</para>
</sect2>

<sect2>
<title>Configuring <application>FOP</application></title>

<sect3 id="fop-config"><title>Config files</title>
<para><filename>~/.foprc</filename></para>
<indexterm zone="fop fop-config">
<primary sortas="e-AA.foprc">~/.foprc</primary></indexterm>
</sect3>

<sect3><title>Configuration Information</title>

<para>Using <application><acronym>FOP</acronym></application> to process some 
large <acronym>FO</acronym>'s (including the <acronym>FO</acronym> derived from 
the <acronym>BLFS</acronym> <acronym>XML</acronym> sources), can lead to memory 
errors. Unless you add a parameter to the <command>java</command> command used 
in the <command>fop.sh</command> script you may receive messages similar to the 
one shown below:</para>

<para><computeroutput>Exception in thread "main" java.lang.OutOfMemoryError: 
Java heap space</computeroutput></para>

<para>To avoid errors like this, you need to pass an extra parameter to the 
<command>java</command> command used in the <command>fop.sh</command> script. 
This can be accomplished by creating a <filename>~/.foprc</filename> (which 
is sourced by the <command>fop.sh</command> script) and adding the parameter 
to the <envar>FOP_OPTS</envar> environment variable.</para>

<para>The <command>fop.sh</command> script looks for a <envar>FOP_HOME</envar> 
environment variable to locate the 
<application><acronym>FOP</acronym></application> class libraries. You can 
create this variable using the <filename>~/.foprc</filename> file as 
well. Create a <filename>~/.foprc</filename> file using the following 
commands:</para>

<screen><userinput><command>cat &gt; ~/.foprc &lt;&lt; "EOF"</command>
FOP_OPTS="-Xmx<replaceable>[RAM_Installed]</replaceable>m"
FOP_HOME="/opt/fop"

<command>EOF</command></userinput></screen>

<para>Replace <replaceable>[RAM_Installed]</replaceable> with a number 
representing the amount of RAM installed in your computer. An example would 
be <userinput>FOP_OPTS="-Xmx768m"</userinput>. For more information about 
memory issues running <application><acronym>FOP</acronym></application>, see
<ulink url="http://xml.apache.org/fop/running.html#memory"/>.</para>

<para>To include the <command>fop.sh</command> script in your path, update 
your personal or system-wide profile with the following:</para>

<screen><userinput>PATH=$PATH:/opt/fop/bin</userinput></screen>
</sect3>

</sect2>

<sect2>
<title>Contents</title>

<segmentedlist>
<segtitle>Installed Programs</segtitle>
<segtitle>Installed Libraries</segtitle>
<segtitle>Installed Directory</segtitle>
<seglistitem>
<seg>fop.sh and xalan.sh</seg>
<seg>avalon-framework-cvs-20020806.jar, batik.jar, fop.jar, xalan-2.4.1.jar, 
xercesImpl-2.2.1.jar and xml-apis.jar. <acronym>JAI</acronym> components 
include libmlib_jai.so, jai_codec.jar, jai_core.jar and 
mlibwrapper_jai.jar</seg>
<seg>/opt/fop-&fop-version;</seg>
</seglistitem>
</segmentedlist>

<variablelist>
<bridgehead renderas="sect3">Short Descriptions</bridgehead>
<?dbfo list-presentation="list"?>

<varlistentry id="fop.sh">
<term><command>fop.sh</command></term>
<listitem><para>is a wrapper script to the <command>java</command> command 
which sets up the <application><acronym>FOP</acronym></application> 
environment and passes the required parameters.</para>
<indexterm zone="fop fop.sh">
<primary sortas="b-fop.sh">fop.sh</primary></indexterm>
</listitem>
</varlistentry>

<varlistentry id="fop.jar">
<term><filename class='libraryfile'>fop.jar</filename></term>
<listitem><para>contains all the 
<application><acronym>FOP</acronym></application>
<application>Java</application> classes.</para>
<indexterm zone="fop fop.jar">
<primary sortas="c-fop.jar">fop.jar</primary></indexterm>
</listitem>
</varlistentry>
</variablelist>

</sect2>

</sect1>

