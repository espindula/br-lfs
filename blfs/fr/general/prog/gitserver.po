# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-01-05 20:02+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Content of the gituid entity
#: blfs-en/general/prog/gitserver.xml:6 blfs-en/general/prog/gitserver.xml:7
msgid "58"
msgstr "58"

#. type: Content of: <sect1><sect1info>
#: blfs-en/general/prog/gitserver.xml:14
#| msgid ""
#| "<othername>$LastChangedBy: thomas $</othername> <date>$Date: 2021-01-04 "
#| "16:07:19 +0000 (Mon, 04 Jan 2021) $</date>"
msgid ""
"<othername>$LastChangedBy: thomas $</othername> <date>$Date: 2021-01-05 "
"15:59:46 +0000 (Tue, 05 Jan 2021) $</date>"
msgstr ""
"<othername>$LastChangedBy: thomas $</othername> <date>$Date: 2021-01-05 "
"15:59:46 +0000 (Tue, 05 Jan 2021) $</date>"

#. type: Content of: <sect1><sect2><title>
#: blfs-en/general/prog/gitserver.xml:18 blfs-en/general/prog/gitserver.xml:21
msgid "Running a git Server"
msgstr ""

#. type: Content of: <sect1><sect2><para>
#: blfs-en/general/prog/gitserver.xml:24
msgid ""
"This section will describe how to set up, administer and secure a "
"<application>git</application> server. It is recommended to have a look to "
"the <ulink url=\"https://git-scm.com/book/en/v2\">git-scm "
"documentation</ulink> as <application>git</application> has many options to "
"set."
msgstr ""

#. type: Content of: <sect1><sect2><bridgehead>
#: blfs-en/general/prog/gitserver.xml:30
msgid "git Server Dependencies"
msgstr "Dpendances de git Server"

#. type: Content of: <sect1><sect2><bridgehead>
#: blfs-en/general/prog/gitserver.xml:32
msgid "Required"
msgstr "Requises"

#. type: Content of: <sect1><sect2><para>
#: blfs-en/general/prog/gitserver.xml:34
msgid "<xref linkend=\"git\"/> and <xref linkend=\"openssh\"/>"
msgstr ""

#. type: Content of: <sect1><sect2><title>
#: blfs-en/general/prog/gitserver.xml:41
msgid "Setting up a git Server."
msgstr ""

#. type: Content of: <sect1><sect2><para>
#: blfs-en/general/prog/gitserver.xml:44
msgid ""
"The following instructions will install a <application>git</application> "
"server, which will be set up to use <application>OpenSSH</application> as "
"the secure remote access method."
msgstr ""

#. type: Content of: <sect1><sect2><para>
#: blfs-en/general/prog/gitserver.xml:51
msgid ""
"Configuration of the <application>git</application> server consists of the "
"following steps:"
msgstr ""

#. type: Content of: <sect1><sect2><sect3><title>
#: blfs-en/general/prog/gitserver.xml:56
msgid "1. Setup Users, Groups, and Permissions"
msgstr ""

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/general/prog/gitserver.xml:59
msgid ""
"You'll need to be user <systemitem class='username'>root</systemitem> for "
"the initial portion of configuration. Create the <systemitem "
"class=\"username\">git</systemitem> user and group with the following "
"commands:"
msgstr ""

#. type: Content of: <sect1><sect2><sect3><screen>
#: blfs-en/general/prog/gitserver.xml:66
#, no-wrap
msgid ""
"<userinput>groupadd -g &gitgid; git &amp;&amp;\n"
"useradd -c \"git Owner\" -d /home/git -m -g git -s /usr/bin/git-shell -u &gituid; git</userinput>"
msgstr ""
"<userinput>groupadd -g &gitgid; git &amp;&amp;\n"
"useradd -c \"git Owner\" -d /home/git -m -g git -s /usr/bin/git-shell -u &gituid; git</userinput>"

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/general/prog/gitserver.xml:70
msgid ""
"Create some files and directories in the home directory of the git user. The"
" current approach is to allow access to the git repository using ssh keys."
msgstr ""

#. type: Content of: <sect1><sect2><sect3><screen>
#: blfs-en/general/prog/gitserver.xml:75
#, no-wrap
msgid ""
"<userinput>install -o git -g git -dm0700 /home/git/.ssh &amp;&amp;\n"
"install -o git -g git -m0600 /dev/null /home/git/.ssh/authorized_keys\n"
"</userinput>"
msgstr ""
"<userinput>install -o git -g git -dm0700 /home/git/.ssh &amp;&amp;\n"
"install -o git -g git -m0600 /dev/null /home/git/.ssh/authorized_keys\n"
"</userinput>"

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/general/prog/gitserver.xml:80
msgid ""
"For any developer who should have access to the repository add his/hers "
"public ssh key to <filename>/home/git/.ssh/authorized_keys</filename>.  "
"Prepending some options to prevent users to use the connection to git for "
"port forwarding to other machines the git server might reach."
msgstr ""

#. type: Content of: <sect1><sect2><sect3><screen>
#: blfs-en/general/prog/gitserver.xml:87
#, no-wrap
msgid ""
"<userinput>echo -n \"no-port-forwarding,no-X11-forwarding,no-agent-forwarding,no-pty \" >> /home/git/.ssh/authorized_keys &amp;&amp;\n"
"cat users-ssh-key >> /home/git/.ssh/authorized_keys</userinput>"
msgstr ""
"<userinput>echo -n \"no-port-forwarding,no-X11-forwarding,no-agent-forwarding,no-pty \" >> /home/git/.ssh/authorized_keys &amp;&amp;\n"
"cat users-ssh-key >> /home/git/.ssh/authorized_keys</userinput>"

#. type: Content of: <sect1><sect2><sect3><title>
#: blfs-en/general/prog/gitserver.xml:93
msgid "2. Create a git repository."
msgstr ""

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/general/prog/gitserver.xml:96
msgid ""
"The repository can be but has not to be in git users home directory - it can"
" be anywhere on the filesystem. It is important that the git user has "
"read/write access to that location. We use <filename "
"class=\"directory\">/srv/git</filename> as base directory. Create a new "
"<application>git</application> repository with the following commands (as "
"the <systemitem class=\"username\">root</systemitem> user):"
msgstr ""

#. type: Content of: <sect1><sect2><sect3><screen>
#: blfs-en/general/prog/gitserver.xml:105
#, no-wrap
msgid ""
"<userinput>install -o git -g git -m0755 -d /srv/git/project1.git &amp;&amp;\n"
"cd /srv/git/project1.git &amp;&amp;\n"
"git init --bare &amp;&amp;\n"
"chown -R git:git .</userinput>"
msgstr ""
"<userinput>install -o git -g git -m0755 -d /srv/git/project1.git &amp;&amp;\n"
"cd /srv/git/project1.git &amp;&amp;\n"
"git init --bare &amp;&amp;\n"
"chown -R git:git .</userinput>"

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/general/prog/gitserver.xml:111
msgid ""
"Now that the repository is created, it can be used by the developers to put "
"some files into it. Once the ssh key of the user is imported to git's "
"<filename>authorized_keys</filename> file, the user can interact with the "
"repository."
msgstr ""

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/general/prog/gitserver.xml:118
msgid ""
"A minimal configuration should be available on developers machine specifying"
" its user name and the email address.  Create this minimal config file on "
"client side:"
msgstr ""

#. type: Content of: <sect1><sect2><sect3><screen>
#: blfs-en/general/prog/gitserver.xml:123
#, no-wrap
msgid ""
"<userinput>cat &gt; ~/.gitconfig &lt;&lt;EOF\n"
"[user]\n"
"\tname = &lt;users-name&gt;\n"
"\temail = &lt;users-email-address&gt;\n"
"EOF</userinput>"
msgstr ""
"<userinput>cat &gt; ~/.gitconfig &lt;&lt;EOF\n"
"[user]\n"
"\tname = &lt;users-name&gt;\n"
"\temail = &lt;users-email-address&gt;\n"
"EOF</userinput>"

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/general/prog/gitserver.xml:129
msgid ""
"On the developers machine, setup some files to be pushed to the repository "
"as the initial content:"
msgstr ""

#. type: Content of: <sect1><sect2><sect3><screen>
#: blfs-en/general/prog/gitserver.xml:133
#, no-wrap
msgid ""
"<userinput>mkdir myproject\n"
"cd myproject\n"
"git init\n"
"git remote add origin git@gitserver:/srv/git/project1.git\n"
"cat &gt;README &lt;&lt;EOF\n"
"This is the README file\n"
"EOF\n"
"git add README\n"
"git commit -m 'Initial creation of README'\n"
"git push --set-upstream origin master</userinput>"
msgstr ""
"<userinput>mkdir myproject\n"
"cd myproject\n"
"git init\n"
"git remote add origin git@gitserver:/srv/git/project1.git\n"
"cat &gt;README &lt;&lt;EOF\n"
"This is the README file\n"
"EOF\n"
"git add README\n"
"git commit -m 'Initial creation of README'\n"
"git push --set-upstream origin master</userinput>"

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/general/prog/gitserver.xml:144
msgid ""
"The initial content is now pushed to the server and is available for other "
"users. On the current machine, the argument <literal>--set-upstream origin "
"master</literal> is now no longer required as the local repository is now "
"connected to the remote repository. Subsequent pushes can be performed as"
msgstr ""

#. type: Content of: <sect1><sect2><sect3><screen>
#: blfs-en/general/prog/gitserver.xml:152
#, no-wrap
msgid "<userinput>git push</userinput>"
msgstr "<userinput>git push</userinput>"

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/general/prog/gitserver.xml:155
msgid ""
"Other developers can now clone the repository and do modifications to the "
"content (as long as their ssh keys has been installed):"
msgstr ""

#. type: Content of: <sect1><sect2><sect3><screen>
#: blfs-en/general/prog/gitserver.xml:160
#, no-wrap
msgid ""
"<userinput>git clone git@gitserver:/srv/git/project1.git\n"
"cd project1\n"
"vi README\n"
"git commit -am 'Fix for README file'\n"
"git push</userinput>"
msgstr ""
"<userinput>git clone git@gitserver:/srv/git/project1.git\n"
"cd project1\n"
"vi README\n"
"git commit -am 'Fix for README file'\n"
"git push</userinput>"

#. type: Content of: <sect1><sect2><sect3><note><para>
#: blfs-en/general/prog/gitserver.xml:168
msgid ""
"This is a very basic server setup based on "
"<application>OpenSSH</application> access. All developers are using the "
"<systemitem class=\"username\">git</systemitem> user to perform actions on "
"the repository and the changes users are commiting can be distiguished as "
"the local user name (see <filename>~/.gitconfig</filename>) is recorded in "
"the changesets."
msgstr ""

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/general/prog/gitserver.xml:177
msgid ""
"Access is restricted by the public keys added to git's "
"<filename>authorized_keys</filename> file and there is no option for the "
"public to export/clone the repository. To enable this, continue with step 3 "
"to setup the git server."
msgstr ""

#. type: Content of: <sect1><sect2><sect3><title>
#: blfs-en/general/prog/gitserver.xml:186
msgid "3. Configure the Server"
msgstr ""

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/general/prog/gitserver.xml:189
msgid ""
"The setup described above makes a repository available for authenticated "
"users (via providing the ssh public key file).  There is also a quite simple"
" server to publish the repository to unauthenticated users - of course "
"without write access."
msgstr ""

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/general/prog/gitserver.xml:196
msgid ""
"The combination of access via ssh (for authenticated users) and the export "
"of repositories to unauthenticated users via the daemon is in most cases "
"enough for a development site."
msgstr ""

#. type: Content of: <sect1><sect2><sect3><note><para>
#: blfs-en/general/prog/gitserver.xml:203
msgid ""
"The daemon will be reachable at port <literal>9418</literal> by default. "
"Make sure that your firewall setup allows access to that port."
msgstr ""

#. type: Content of: <sect1><sect2><sect3><title>
#: blfs-en/general/prog/gitserver.xml:212
msgid "4. Starting the Server"
msgstr ""

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/general/prog/gitserver.xml:215
msgid ""
"To start the server at boot time, install the git-daemon bootscript included"
" in the <xref linkend=\"bootscripts\"/> package:"
msgstr ""

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/general/prog/gitserver.xml:220
msgid ""
"To start the server at boot time, install the <filename>git-"
"daemon.service</filename> unit from the <xref linkend=\"systemd-units\"/> "
"package:"
msgstr ""

#. type: Content of: <sect1><sect2><sect3><indexterm><primary>
#: blfs-en/general/prog/gitserver.xml:226
msgid "git"
msgstr "git"

#. type: Content of: <sect1><sect2><sect3><screen>
#: blfs-en/general/prog/gitserver.xml:229
#: blfs-en/general/prog/gitserver.xml:235
#, no-wrap
#| msgid "<userinput>/etc/rc.d/init.d/git-daemon start</userinput>"
msgid "<userinput>make install-git-daemon</userinput>"
msgstr "<userinput>make install-git-daemon</userinput>"

#. type: Content of: <sect1><sect2><sect3><indexterm><primary>
#: blfs-en/general/prog/gitserver.xml:232
msgid "gitserve"
msgstr "gitserve"

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/general/prog/gitserver.xml:238
msgid ""
"In order to make <application>git</application> exporting a repository, a "
"file named <filename>git-daemon-export-ok</filename> is required in each "
"repository directory on the server. The file needs no content, just its "
"existance enables, its absence disables the export of that repository."
msgstr ""

#. type: Content of: <sect1><sect2><sect3><screen>
#: blfs-en/general/prog/gitserver.xml:245
#, no-wrap
msgid ""
"<userinput>touch /srv/git/project1.git/git-daemon-export-ok</userinput>"
msgstr ""
"<userinput>touch /srv/git/project1.git/git-daemon-export-ok</userinput>"

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/general/prog/gitserver.xml:248
msgid ""
"Also review the configuration file <filename "
"revision=\"sysv\">/etc/sysconfig/git-daemon</filename> <filename "
"revision=\"systemd\">/etc/default/git-daemon</filename> for valid repository"
" paths."
msgstr ""

#~ msgid ""
#~ "<userinput>cat &gt; /etc/rc.d/init.d/git-daemon &lt;&lt;\"EOF\"\n"
#~ "#!/bin/sh\n"
#~ "########################################################################\n"
#~ "# Begin /etc/rc.d/init.d/git-daemon\n"
#~ "#\n"
#~ "# Description : Start/Stop git as a daemon\n"
#~ "#\n"
#~ "# Authors     :\n"
#~ "#\n"
#~ "# Version     : LFS x.x\n"
#~ "#\n"
#~ "# Notes       :\n"
#~ "#\n"
#~ "########################################################################\n"
#~ "\n"
#~ "### BEGIN INIT INFO\n"
#~ "# Provides:            git-daemon\n"
#~ "# Required-Start:      network\n"
#~ "# Should-Start:\n"
#~ "# Required-Stop:\n"
#~ "# Should-Stop:\n"
#~ "# Default-Start:\n"
#~ "# Default-Stop:\n"
#~ "# Short-Description:   git as daemon\n"
#~ "# Description:\n"
#~ "# X-LFS-Provided-By:\n"
#~ "### END INIT INFO\n"
#~ "\n"
#~ ". /lib/lsb/init-functions\n"
#~ "\n"
#~ "GIT_BIN=\"/usr/bin/git\"\n"
#~ "DFT_REPO_DIR=\"/srv/git/\"\n"
#~ "PID_FILE=\"/run/git-daemon.pid\"\n"
#~ "\n"
#~ "case \"${1}\" in\n"
#~ "   start)\n"
#~ "      log_info_msg \"Starting git-daemon ...\"\n"
#~ "      $GIT_BIN daemon \\\n"
#~ "               --detach --pid-file=$PID_FILE \\\n"
#~ "               --user=git --group=git \\\n"
#~ "               --reuseaddr --base-path=$DFT_REPO_DIR $DFT_REPO_DIR\n"
#~ "      evaluate_retval\n"
#~ "      ;;\n"
#~ "\n"
#~ "   stop)\n"
#~ "      log_info_msg \"Stopping git-daemon ...\"\n"
#~ "      killproc -p $PID_FILE $GIT_BIN\n"
#~ "      evaluate_retval\n"
#~ "      ;;\n"
#~ "\n"
#~ "   restart)\n"
#~ "      ${0} stop\n"
#~ "      sleep 1\n"
#~ "      ${0} start\n"
#~ "      ;;\n"
#~ "\n"
#~ "   *)\n"
#~ "      echo \"Usage: ${0} {start|stop|restart}\"\n"
#~ "      exit 1\n"
#~ "      ;;\n"
#~ "esac\n"
#~ "\n"
#~ "exit 0\n"
#~ "\n"
#~ "# End /etc/rc.d/init.d/git-daemon\n"
#~ "EOF\n"
#~ "chmod 755 /etc/rc.d/init.d/git-daemon\n"
#~ "ln -v -sf ../init.d/git-daemon /etc/rc.d/rc0.d/K29git-daemon\n"
#~ "ln -v -sf ../init.d/git-daemon /etc/rc.d/rc1.d/K29git-daemon\n"
#~ "ln -v -sf ../init.d/git-daemon /etc/rc.d/rc2.d/K29git-daemon\n"
#~ "ln -v -sf ../init.d/git-daemon /etc/rc.d/rc3.d/S50git-daemon\n"
#~ "ln -v -sf ../init.d/git-daemon /etc/rc.d/rc4.d/S50git-daemon\n"
#~ "ln -v -sf ../init.d/git-daemon /etc/rc.d/rc5.d/S50git-daemon\n"
#~ "ln -v -sf ../init.d/git-daemon /etc/rc.d/rc6.d/K29git-daemon</userinput>"
#~ msgstr ""
#~ "<userinput>cat &gt; /etc/rc.d/init.d/git-daemon &lt;&lt;\"EOF\"\n"
#~ "#!/bin/sh\n"
#~ "########################################################################\n"
#~ "# Begin /etc/rc.d/init.d/git-daemon\n"
#~ "#\n"
#~ "# Description : Start/Stop git as a daemon\n"
#~ "#\n"
#~ "# Authors     :\n"
#~ "#\n"
#~ "# Version     : LFS x.x\n"
#~ "#\n"
#~ "# Notes       :\n"
#~ "#\n"
#~ "########################################################################\n"
#~ "\n"
#~ "### BEGIN INIT INFO\n"
#~ "# Provides:            git-daemon\n"
#~ "# Required-Start:      network\n"
#~ "# Should-Start:\n"
#~ "# Required-Stop:\n"
#~ "# Should-Stop:\n"
#~ "# Default-Start:\n"
#~ "# Default-Stop:\n"
#~ "# Short-Description:   git as daemon\n"
#~ "# Description:\n"
#~ "# X-LFS-Provided-By:\n"
#~ "### END INIT INFO\n"
#~ "\n"
#~ ". /lib/lsb/init-functions\n"
#~ "\n"
#~ "GIT_BIN=\"/usr/bin/git\"\n"
#~ "DFT_REPO_DIR=\"/srv/git/\"\n"
#~ "PID_FILE=\"/run/git-daemon.pid\"\n"
#~ "\n"
#~ "case \"${1}\" in\n"
#~ "   start)\n"
#~ "      log_info_msg \"Starting git-daemon ...\"\n"
#~ "      $GIT_BIN daemon \\\n"
#~ "               --detach --pid-file=$PID_FILE \\\n"
#~ "               --user=git --group=git \\\n"
#~ "               --reuseaddr --base-path=$DFT_REPO_DIR $DFT_REPO_DIR\n"
#~ "      evaluate_retval\n"
#~ "      ;;\n"
#~ "\n"
#~ "   stop)\n"
#~ "      log_info_msg \"Stopping git-daemon ...\"\n"
#~ "      killproc -p $PID_FILE $GIT_BIN\n"
#~ "      evaluate_retval\n"
#~ "      ;;\n"
#~ "\n"
#~ "   restart)\n"
#~ "      ${0} stop\n"
#~ "      sleep 1\n"
#~ "      ${0} start\n"
#~ "      ;;\n"
#~ "\n"
#~ "   *)\n"
#~ "      echo \"Usage: ${0} {start|stop|restart}\"\n"
#~ "      exit 1\n"
#~ "      ;;\n"
#~ "esac\n"
#~ "\n"
#~ "exit 0\n"
#~ "\n"
#~ "# End /etc/rc.d/init.d/git-daemon\n"
#~ "EOF\n"
#~ "chmod 755 /etc/rc.d/init.d/git-daemon\n"
#~ "ln -v -sf ../init.d/git-daemon /etc/rc.d/rc0.d/K29git-daemon\n"
#~ "ln -v -sf ../init.d/git-daemon /etc/rc.d/rc1.d/K29git-daemon\n"
#~ "ln -v -sf ../init.d/git-daemon /etc/rc.d/rc2.d/K29git-daemon\n"
#~ "ln -v -sf ../init.d/git-daemon /etc/rc.d/rc3.d/S50git-daemon\n"
#~ "ln -v -sf ../init.d/git-daemon /etc/rc.d/rc4.d/S50git-daemon\n"
#~ "ln -v -sf ../init.d/git-daemon /etc/rc.d/rc5.d/S50git-daemon\n"
#~ "ln -v -sf ../init.d/git-daemon /etc/rc.d/rc6.d/K29git-daemon</userinput>"

#~ msgid ""
#~ "<userinput>cat &gt; /etc/systemd/system/git-daemon.service &lt;&lt;EOF\n"
#~ "[Unit]\n"
#~ "Description=Start Git Daemon\n"
#~ "\n"
#~ "[Service]\n"
#~ "ExecStart=/usr/bin/git daemon --reuseaddr --base-path=/srv/git/ /srv/git/\n"
#~ "\n"
#~ "Restart=always\n"
#~ "RestartSec=500ms\n"
#~ "\n"
#~ "StandardOutput=syslog\n"
#~ "StandardError=syslog\n"
#~ "SyslogIdentifier=git-daemon\n"
#~ "\n"
#~ "User=git\n"
#~ "Group=git\n"
#~ "\n"
#~ "[Install]\n"
#~ "WantedBy=multi-user.target\n"
#~ "EOF</userinput>"
#~ msgstr ""
#~ "<userinput>cat &gt; /etc/systemd/system/git-daemon.service &lt;&lt;EOF\n"
#~ "[Unit]\n"
#~ "Description=Start Git Daemon\n"
#~ "\n"
#~ "[Service]\n"
#~ "ExecStart=/usr/bin/git daemon --reuseaddr --base-path=/srv/git/ /srv/git/\n"
#~ "\n"
#~ "Restart=always\n"
#~ "RestartSec=500ms\n"
#~ "\n"
#~ "StandardOutput=syslog\n"
#~ "StandardError=syslog\n"
#~ "SyslogIdentifier=git-daemon\n"
#~ "\n"
#~ "User=git\n"
#~ "Group=git\n"
#~ "\n"
#~ "[Install]\n"
#~ "WantedBy=multi-user.target\n"
#~ "EOF</userinput>"

#~ msgid ""
#~ "<userinput>systemctl enable git-daemon &amp;&amp;\n"
#~ "systemctl start git-daemon</userinput>"
#~ msgstr ""
#~ "<userinput>systemctl enable git-daemon &amp;&amp;\n"
#~ "systemctl start git-daemon</userinput>"
