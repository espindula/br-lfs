# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-12-12 12:05+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Content of: <sect1><sect1info>
#: blfs-en/server/databases/upgradedb.xml:12
msgid "<date>$Date$</date>"
msgstr "<date>$Date$</date>"

#. type: Content of: <sect1><title>
#: blfs-en/server/databases/upgradedb.xml:15
msgid "Important notes about upgrading Database Server Software"
msgstr ""

#. type: Content of: <sect1><note><para>
#: blfs-en/server/databases/upgradedb.xml:17
msgid ""
"This section is about reinstalling database software when an existing "
"database is in use.  It is not applicable for initial installations or if "
"there is no existing database for the package being updated, but users "
"should read through it to become aware of issues that can arise in the "
"future."
msgstr ""

#. type: Content of: <sect1><para>
#: blfs-en/server/databases/upgradedb.xml:23
msgid ""
"Lets start this chapter with a dramatic screenshot of an issue that really "
"happened.  This issue will not occur if you are going to install the "
"software the first time:"
msgstr ""

#. type: Content of: <sect1><screen>
#: blfs-en/server/databases/upgradedb.xml:27
#, no-wrap
msgid ""
"$ sudo systemctl status postgresql\n"
"-- postgresql.service - PostgreSQL database server\n"
"     Loaded: loaded (/usr/lib/systemd/system/postgresql.service; enabled; vendor preset: enabled)\n"
"     Active: failed (Result: exit-code) since Tue 2021-10-26 17:11:53 CDT; 2min 49s ago\n"
"    Process: 17336 ExecStart=/usr/bin/pg_ctl -s -D ${PGROOT}/data start -w -t 120 (code=exited, status=1/FAILURE)\n"
"        CPU: 7ms\n"
"\n"
"Oct 26 17:11:53 SVRNAME systemd[1]: Starting PostgreSQL database server...\n"
"Oct 26 17:11:53 SRVNAME postgres[17338]: 2021-10-26 17:11:53.420 CDT [17338] FATAL:  \n"
"                database files are incompatible with server\n"
"Oct 26 17:11:53 SRVNAME postgres[17338]: 2021-10-26 17:11:53.420 CDT [17338] DETAIL:  \n"
"                The data directory was initialized by PostgreSQL version 13,\n"
"                which is not compatible with this version 14.0.\n"
"Oct 26 17:11:53 SRVNAME postgres[17336]: pg_ctl: could not start server\n"
"Oct 26 17:11:53 SRVNAME postgres[17336]: Examine the log output.\n"
"Oct 26 17:11:53 SRVNAME systemd[1]: postgresql.service: Control process exited, code=exited, status=1/FAILURE\n"
"Oct 26 17:11:53 SRVNAME systemd[1]: postgresql.service: Failed with result 'exit-code'.\n"
"Oct 26 17:11:53 SRVNAME systemd[1]: Failed to start PostgreSQL database server."
msgstr ""

#. type: Content of: <sect1><para>
#: blfs-en/server/databases/upgradedb.xml:47
msgid ""
"To avoid situations like the one above finding your database server software"
" refusing to start, read the following thoughts about how to upgrade a DBMS "
"(Database Management System) prior to actually doing the upgrade."
msgstr ""

#. type: Content of: <sect1><para>
#: blfs-en/server/databases/upgradedb.xml:54
msgid ""
"The root cause of the issue shown above was an upgrade of the server "
"software to a newer major version but leaving the data files untouched. The "
"administrator was able to recover without any loss of data."
msgstr ""

#. type: Content of: <sect1><para>
#: blfs-en/server/databases/upgradedb.xml:61
msgid ""
"Even if you are doing an install DBMS install, read through this section. Tt"
" will provide you information about how to set up backup and restore "
"procedures (at least the strategy for building them) which are sufficient "
"for your needs and for the safety of your data."
msgstr ""

#. type: Content of: <sect1><sect2><title>
#: blfs-en/server/databases/upgradedb.xml:69
msgid "Upgrade database server packages"
msgstr ""

#. type: Content of: <sect1><sect2><para>
#: blfs-en/server/databases/upgradedb.xml:72
msgid ""
"Database systems work on files which hold the database metadata and the data"
" itself. Those files are highly optimized in their internal structures for "
"use by the server software. When upgrading such server software, newer "
"server software may expect a different file format than was created by "
"previous versions. In the best case, the new software can act on the old "
"format as well&mdash;but not benefitting from newer formats which might "
"result in better performance or of other improvements.  It can also happen "
"that the new server software will reformat the data files automatically when"
" starting."
msgstr ""

#. type: Content of: <sect1><sect2><para>
#: blfs-en/server/databases/upgradedb.xml:84
msgid ""
"Unfortunatly, the most likly case is that the new server software complains "
"about out of date file formats and exits.  When this happens and you have "
"overwritten the installed server software, you may not be able to read the "
"data files and the new software is unwilling to do so."
msgstr ""

#. type: Content of: <sect1><sect2><para>
#: blfs-en/server/databases/upgradedb.xml:91
msgid ""
"Changes in data file formats usually happen at major version changes but "
"potentially can come at other times.  Before upgrading the server software, "
"check the documentation if there are changes which will require reformatting"
" the database."
msgstr ""

#. type: Content of: <sect1><sect2><para>
#: blfs-en/server/databases/upgradedb.xml:98
msgid ""
"Of course, if you have databases with content which is not easy to rebuild, "
"it is always a good idea to create backups of the database from time to "
"time. When upgrading the server software, it is time to run another backup."
msgstr ""

#. type: Content of: <sect1><sect2><sect3><title>
#: blfs-en/server/databases/upgradedb.xml:105
msgid "Upgrade by backup and restore"
msgstr ""

#. type: Content of: <sect1><sect2><sect3><note><para>
#: blfs-en/server/databases/upgradedb.xml:109
msgid ""
"A backup is meaningless if there is no verified process to restore the data "
"from this backup. When running a database server, you should not only create"
" backups but you should also verify that the process you designed to "
"fullfill the restore task is working properly. When you encounter a problem "
"with the restore when you urgently have to rely on the backup data, it is "
"too late&mdash;your database is in danger."
msgstr ""

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/server/databases/upgradedb.xml:121
msgid ""
"In general, most (all?) database server software provides some basic tools "
"to create backups of your data. Usually the backups created with those tools"
" can be read by newer versions of the software (via a restore tool). Using "
"older restore tools with newer backup data is not defined and you should "
"<emphasis>never</emphasis> blindly assume that it will work. It might, but "
"usually it doesn't."
msgstr ""

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/server/databases/upgradedb.xml:130
msgid "The easiest way to upgrade your database files is to"
msgstr ""

#. type: Content of: <sect1><sect2><sect3><itemizedlist><listitem><para>
#: blfs-en/server/databases/upgradedb.xml:135
msgid "Create a full database backup using the old tools."
msgstr ""

#. type: Content of: <sect1><sect2><sect3><itemizedlist><listitem><para>
#: blfs-en/server/databases/upgradedb.xml:137
msgid ""
"This step creates an offline copy of the database files ready to be used for"
" long term archiving, for disaster recovery, or just preparation for "
"upgrade. This offline backup consists of the full one-to-one copy of the "
"current database files or a backup of the files from a certain time in "
"history plus all journal data (that is Oracle&reg; terminology, it is called"
" \"Continuous Archiving\" or \"write ahead log (WAL)\" in Postgresql) "
"containing information about changes made to the data content. The later "
"take less time to create if the DB software provides this type of journaling"
" as you only have to save the changes after creating the last backup. The "
"amount of data to backup is much less than doing a full backup every time."
msgstr ""

#. type: Content of: <sect1><sect2><sect3><itemizedlist><listitem><para>
#: blfs-en/server/databases/upgradedb.xml:150
msgid ""
"In terms of upgrading database server software, a full backup (which can be "
"used for subsequent incremental backups) should be made, but if the amount "
"of data is too big, an incremental backup will be sufficient. Which strategy"
" is appropriate for you depends on the amount of data stored in your "
"database (is it a few hundred table rows or is it hundreds of terabytes?). A"
" full backup of the later one isn't done quickly (and we assume that the "
"underlying system of such a database is probably not on an LFS system).  To "
"close the last gap to fully protect your data, create a backup of the "
"corresponding old binaries (and/or their sources) and store it along with "
"the data files to make sure that there is a fallback solution if the newer "
"software is not able to read the older data."
msgstr ""

#. type: Content of: <sect1><sect2><sect3><itemizedlist><listitem><para>
#: blfs-en/server/databases/upgradedb.xml:165
msgid "Upgrade the server software"
msgstr ""

#. type: Content of: <sect1><sect2><sect3><itemizedlist><listitem><para>
#: blfs-en/server/databases/upgradedb.xml:167
msgid ""
"In this step, instructions to build the database server software are "
"executed just as they are shown in subsequent sections talking about the "
"DBMs like MariaDB or Postgresql. That is, build the software as usual using "
"BLFS instructions."
msgstr ""

#. type: Content of: <sect1><sect2><sect3><itemizedlist><listitem><para>
#: blfs-en/server/databases/upgradedb.xml:174
msgid "Restore the database by using the new tools."
msgstr ""

#. type: Content of: <sect1><sect2><sect3><itemizedlist><listitem><para>
#: blfs-en/server/databases/upgradedb.xml:176
msgid ""
"To restore the data, the tools of the newly installed server software should"
" be used. During the restoration process, the new tools will create and/or "
"upgrade the data files in the format the software requires. It is assumed "
"that newer software is capable of reading old data."
msgstr ""

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/server/databases/upgradedb.xml:185
msgid ""
"Since you have already have a backup procedure in place (and you have tested"
" your restore procedure, right?), this might be the easiest way to upgrade "
"as you are going to use your well known processes to upgrade just as you "
"allways do&mdash;at least in terms of the backup and restore."
msgstr ""

#. type: Content of: <sect1><sect2><sect3><title>
#: blfs-en/server/databases/upgradedb.xml:195
msgid "Upgrade the database files by using system tools"
msgstr ""

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/server/databases/upgradedb.xml:198
msgid ""
"Some database systems (for instance Postgresql) provide a tool which can "
"reformat (upgrade) the existing database files to the new format. Since the "
"upgrading tool has to be used from the new server software (the old one "
"cannot know anything about a new file format), the old software might be "
"overwritten due to installation of the new software."
msgstr ""

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/server/databases/upgradedb.xml:207
msgid ""
"In case you have to restore a backup (for example, running the upgrade tool "
"failed) you have to reinstall the old version to get back the access to your"
" data."
msgstr ""

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/server/databases/upgradedb.xml:213
msgid ""
"Even though those tools might work with one of the actual database files, "
"you should create a full backup before running them. A failure might result "
"in a serious damage of the database files."
msgstr ""

#. type: Content of: <sect1><sect2><title>
#: blfs-en/server/databases/upgradedb.xml:223
msgid "Notes for specific DBMS"
msgstr ""

#. type: Content of: <sect1><sect2><sect3><title>
#: blfs-en/server/databases/upgradedb.xml:226
msgid "PostgreSQL"
msgstr "PostgreSQL"

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/server/databases/upgradedb.xml:230
msgid ""
"Upstream documentation for Backup/Restore: <ulink "
"url=\"https://www.postgresql.org/docs/current/backup.html\"/>"
msgstr ""

#. type: Content of: <sect1><sect2><sect3><title>
#: blfs-en/server/databases/upgradedb.xml:237
msgid "MariaDB"
msgstr "MariaDB"

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/server/databases/upgradedb.xml:241
msgid ""
"Upstream documentation for Backup/Restore: <ulink "
"url=\"https://mariadb.com/kb/en/backup-and-restore-overview/\"/>"
msgstr ""

#. type: Content of: <sect1><sect2><sect3><title>
#: blfs-en/server/databases/upgradedb.xml:248
msgid "Sqlite"
msgstr "Sqlite"

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/server/databases/upgradedb.xml:252
msgid ""
"Do not underestimate <application>Sqlite</application>. It is a feature rich"
" DBMS. The main difference from the two big players above is that Sqlite "
"does not provide access via a network API. Sqlite databases are files always"
" stored on the same machine as the running program which uses the database. "
"The manipulation of data content is done via API calls to library functions "
"directly within the program."
msgstr ""

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/server/databases/upgradedb.xml:259
msgid "In the upstream documentation you may find the following useful:"
msgstr ""

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/server/databases/upgradedb.xml:262
msgid ""
"Documentation of the sqlite3 command line tool: <ulink "
"url=\"https://www.sqlite.org/cli.html\"/>"
msgstr ""

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/server/databases/upgradedb.xml:266
msgid ""
"Documentation of backup API calls: <ulink "
"url=\"https://www.sqlite.org/backup.html\"/>"
msgstr ""

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/server/databases/upgradedb.xml:270
msgid ""
"Unfortunatly, there is no dedicated chapter in the upstream documentation "
"talking about backup/restore but there are several articles about it on the "
"Internet. One example is shown below."
msgstr ""

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/server/databases/upgradedb.xml:275
msgid ""
"Documentation for Backup/Restore: <ulink "
"url=\"https://database.guide/backup-sqlite-database/\"/>"
msgstr ""

#. type: Content of: <sect1><sect2><sect3><title>
#: blfs-en/server/databases/upgradedb.xml:282
msgid "Berkeley DB"
msgstr ""

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/server/databases/upgradedb.xml:286
msgid ""
"Just like <application>Sqlite</application> this software acts on local "
"database files meaning there is no network interface."
msgstr ""

#. type: Content of: <sect1><sect2><sect3><para>
#: blfs-en/server/databases/upgradedb.xml:290
msgid ""
"The relevant resources for Backup/Restore a Berkeley database are the man "
"pages for <filename>db_dump</filename> and its counterpart "
"<filename>db_load</filename>."
msgstr ""
