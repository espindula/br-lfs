<sect2>
<title>Explications des commandes</title>

<para><command>export PATH_HOLD=$PATH</command> : Cette commande
stocke le chemin courant avant qu'il soit modifié de façon à ce qu'il soit
restauré après installation.</para>

<para><command>export PATH=$PATH:/opt/gnat/bin</command> : Cette
commande permet la construction pour trouver le compilateur
<application>Ada</application> de <application><acronym>GNAT</acronym></application>
pour construire <application>Ada</application>.</para>

<para><command>touch treeprs.ads [es]info.h nmake.ad[bs]</command> :
Cette commande crée les fichiers nécessaires pour la construction
d'<application>Ada</application>. Cette étape peut ne pas être réalisée si vous
ne voulez pas compiler l'interfac d'<application>Ada</application>.</para>

<para><command>CC=/usr/bin/gcc</command> : Cette commande fonctionne avec le
nouveau <envar>PATH</envar> qui prend le <command>gcc</command> de
<application><acronym>GNAT</acronym></application> comme compilateur primaire.</para>

<para><command>--enable-languages=c,c++,objc,f77,ada,java</command> :
Cette commande construit tous les langages disponibles dans le package
gcc. Vous pouvez modifier cette commande pour supprimer les
langages non voulus.</para>

<para><command>-- enable shared --enable-threads=posix --enable-__cxa_atexit</command> :
Ces commandes sont requises pour construire les bibliothèques C++ aux
standards publiés.</para>

<para><command>--enable-clocale=gnu</command> : Cette commande constitue
un sécurité intrinsèque pour les localedata incomplètes.</para>

<para><command>make gnatlib_and tools :</command> Cette commande
complète la construction d'<application>Ada</application>. Ne faites pas cette
étape si vous n'avez pas activé <application>Ada</application> comme langage
supporté.</para>

</sect2>

