<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
  <!ENTITY ojdk-upd                  "25">
  <!ENTITY ojdk-bd                   "b18">
  <!ENTITY ojdk-tarball              "jdk8u&ojdk-upd;-&ojdk-bd;.tar.bz2">
  <!ENTITY ojdk-repo                 "http://hg.openjdk.java.net/jdk8u/jdk8u">
  <!ENTITY ojdk-download             "&ojdk-repo;/archive/&ojdk-tarball;">
  <!ENTITY anduin-download           "http://anduin.linuxfromscratch.org/files/BLFS/OpenJDK-&openjdk-version;-&ojdk-bd;">
  <!ENTITY ojdk-md5sum               "a0e0db6c9b322b4639e150b43a374cea">
  <!ENTITY ojdk-size                 "384 Ko">
  <!ENTITY corba-download            "&anduin-download;/corba.tar.xz">
  <!ENTITY corba-md5sum              "8ebdf969cd72746a619ae479a1785b41">
  <!ENTITY corba-size                "912 Ko">
  <!ENTITY hotspot-download          "&anduin-download;/hotspot.tar.xz">
  <!ENTITY hotspot-md5sum            "684776e6340ff192a818ac38d3d809f1">
  <!ENTITY hotspot-size              "6.2 Mo">
  <!ENTITY jaxp-download             "&anduin-download;/jaxp.tar.xz">
  <!ENTITY jaxp-md5sum               "74d98254e16f79d7f88c8d3ee69f3742">
  <!ENTITY jaxp-size                 "2.2 Mo">
  <!ENTITY jaxws-download            "&anduin-download;/jaxws.tar.xz">
  <!ENTITY jaxws-md5sum              "24346979cfbba2d9093c02eb3cad8732">
  <!ENTITY jaxws-size                "2.1 Mo">
  <!ENTITY jdk-download              "&anduin-download;/jdk.tar.xz">
  <!ENTITY jdk-md5sum                "9a9e1dc67e43efd246348048ecd717aa">
  <!ENTITY jdk-size                  "36.2 Mo">
  <!ENTITY langtools-download        "&anduin-download;/langtools.tar.xz">
  <!ENTITY langtools-md5sum          "b1e6dea259a362375a1084576282acd2">
  <!ENTITY langtools-size            "2.0 Mo">
  <!ENTITY nashorn-download          "&anduin-download;/nashorn.tar.xz">
  <!ENTITY nashorn-md5sum            "cb457804b83babe31f20a9e7ae4944cf">
  <!ENTITY nashorn-size              "1.9 Mo">
  <!ENTITY jtreg-version             "4.1-b10">
  <!ENTITY jtreg-download            "https://adopt-openjdk.ci.cloudbees.com/job/jtreg/lastStableBuild/artifact/jtreg&jtreg-version;.tar.gz">
  <!ENTITY jtreg-md5sum              "f48d6f8b748f869a5624d2c44998d54c">
  <!ENTITY jtreg-size                "122 Ko">
  <!ENTITY icedtea-web-download      "http://icedtea.classpath.org/download/source/icedtea-web-&icedtea-web-version;.tar.gz">
  <!ENTITY ojdk-buildsize           "3 Go">
  <!ENTITY ojdk-time                "10 SBU (ajouter 100 SBU pour lancer la suite de tests)">
]>
<sect1 id="openjdk" xreflabel="OpenJDK-&openjdk-version;">
  <?dbhtml filename="openjdk.html" ?>
  <sect1info>
    <othername>$LastChangedBy&nbsp;: bdubbs $</othername>
    <date>$Date&nbsp;: 2013-01-15 03:50:02 +0100 (Tue, 15 Jan 2013) $</date>
  </sect1info>
  <title>OpenJDK-&openjdk-version;</title>
  <indexterm zone="openjdk">
    <primary sortas="a-OpenJDK">OpenJDK</primary>
  </indexterm>
  <sect2 role="package">
    <title>Introduction à OpenJDK</title>
       <para>
      <application>OpenJDK</application> est une implémentation livre de la plateforme
      d'édition standard Java d' Oracle.
      <application>OpenJDK</application> est utile pour développer des programmes
      <application>Java</application>, et forunir un environnement d'exécution complet pour lancer
      des programmes <application>Java</application>.
    </para>
   &lfs76_checked;
    <note>
      <para>
        Un greffon de navigateur et une implémentation de webstart, aussi bien que le moteur de sons pulseaudio
        sont fournis par le projet Icedtea. Pour fournir une implémentation complète, vous devrez installer
        plus tard 
        <xref linkend="icedtea-web"/> et <xref linkend="icedtea-sound"/>.
      </para>
    </note>

    <para>OpenJDK est du code GPL, cependant, il convient de préciser qu'il y a
     eu une exception spéciale pour les projets non-libres d'utiliser ces classes dans
     leurs produits propriétaires. De façon similaire à la LGPL, qui autorise
    des programmes non-libre à lier des bibliothèques fournit par des programmes libres,
    La <ulink url="http://openjdk.java.net/legal/gplv2+ce.html">GNU
    General Public License, version 2, avec l'exception des chemins de classe</ulink>
    autorise des programmes tierces à utiliser des classes fournit par des programmes libres
    sans l'obligation que le programme tierce soit également libre. Comme avec la LGPL,
    toutes les modifications faite dans des parties d'un programme libre d'une application tierce,doit
    également être librement disponible.</para>
    <note>
      <para>L'environnement de construction IcedTea inclu une très complète, open source
      suite de tests appelée <application>JTreg</application>.
      <application>JTreg</application> est prévue pour tester le JDK fraichement construit
      pour une compatibilité raisonnable avec le JDK fermé d'Oracle. Cependant, pour qu'une
      implémentation indépendante revendique la compatibilité, incluant le projet
      sponsorisé par Oracle <application>OpenJDK</application>, elle doit passer
      une suite de tests fermée <application>JCK/TCK</application>. Pas de revendication
      de compatibilité, même une compatibilité partielle, peut être faite sans passer
      une suite de tests approuvées.</para>
      <para>Oracle fournit un accès libre communautaire, au cas par cas,
      à des outils fermés pour assurer une compatibilité à 100% avec leur JDK propriétaire.
      La version binaire fournit ici n'a pas été testé avec 
      <ulink url="http://openjdk.java.net/groups/conformance/JckAccess/jck-access.html">
      TCK</ulink>. Toutes les versions qui seront construites en utilisant les instructions données,
      ne pourront pas revendiquer d'être compatible avec le JDK propriétaire,  sans que l'utilisateur demande, et
      réussissent les tests de compatibilités.</para>
      <para>Avec cela en tête, les binaires produits en utilisant cette méthode de construction sont
         régulièrement testé avec le TCK par les membres listés sur le site au dessus.
      En supplément de la licence communautaire, une licence pour l'éducation, non-commerciale
      pour TCK peut être obtenue 
      <ulink url="http://www.oracle.com/technetwork/java/index-137188.html">
      ici</ulink>.</para>
    </note>
    <bridgehead renderas="sect3">Information sur le paquet source </bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>Paquet des sources de IcedTea
          <simplelist>
            <member>Téléchargement: <ulink url="&icedtea-download;"/></member>
            <member>Somme de contrôle MD5 du téléchargement&nbsp;: &icedtea-md5sum;</member>
            <member>Téléchargement Size: &icedtea-size;</member>
          </simplelist>
        </para>
      </listitem>
    </itemizedlist>
     <para>La suite peut être téléchargé séparément ou être fait en tant que partie
       du processus <command>make</command>. Par confort
    les auteurs de BLFS ont rendu les fichiers disponibles sur le site web LFS.
    Ces fichiers ne sont pas distribués avec les versions, mais extraits depuis le système de contrôle de version de
    OpenJDK aux points spécifiés (tagged).</para> 
   <itemizedlist spacing="compact">
       <listitem>
       <para>Source de Corba
          <simplelist>
            <member>Téléchargement: <ulink url="&corba-download;"/></member>
            <member>Somme de contrôle MD5 du téléchargement&nbsp;: &corba-md5sum;</member>
            <member>Téléchargement Size: &corba-size;</member>
          </simplelist>
        </para>
      </listitem>
      <listitem>
        <para>Source de Hotspot
          <simplelist>
            <member>Téléchargement: <ulink url="&hotspot-download;"/></member>
            <member>Somme de contrôle MD5 du téléchargement&nbsp;: &hotspot-md5sum;</member>
            <member>Téléchargement Size: &hotspot-size;</member>
          </simplelist>
        </para>
      </listitem>
      <listitem>
        <para>Source de construction de IcedTea
          <simplelist>
            <member>Téléchargement: <ulink url="&openjdk-download;"/></member>
            <member>Somme de contrôle MD5 du téléchargement&nbsp;: &openjdk-md5sum;</member>
            <member>Téléchargement Size: &openjdk-size;</member>
          </simplelist>
        </para>
      </listitem>
      <listitem>
        <para>Source de JAXP
          <simplelist>
            <member>Téléchargement: <ulink url="&jaxp-download;"/></member>
            <member>Somme de contrôle MD5 du téléchargement&nbsp;: &jaxp-md5sum;</member>
            <member>Téléchargement Size: &jaxp-size;</member>
          </simplelist>
        </para>
      </listitem>
      <listitem>
        <para>Source de JAXWS
          <simplelist>
            <member>Téléchargement: <ulink url="&jaxws-download;"/></member>
            <member>Somme de contrôle MD5 du téléchargement&nbsp;: &jaxws-md5sum;</member>
            <member>Téléchargement Size: &jaxws-size;</member>
          </simplelist>
        </para>
      </listitem>
      <listitem>
        <para>Source de Langtools
          <simplelist>
            <member>Téléchargement: <ulink url="&langtools-download;"/></member>
            <member>Somme de contrôle MD5 du téléchargement&nbsp;: &langtools-md5sum;</member>
            <member>Téléchargement Size: &langtools-size;</member>
          </simplelist>
        </para>
      </listitem>
      <listitem>
        <para>Source de OpenJDK
          <simplelist>
            <member>Téléchargement: <ulink url="&jdk-download;"/></member>
            <member>Somme de contrôle MD5 du téléchargement&nbsp;: &jdk-md5sum;</member>
            <member>Téléchargement Size: &jdk-size;</member>
          </simplelist>
        </para>
      </listitem>
      <listitem>
        <para>Estimation de l'espace disque requis&nbsp;: &openjdk-buildsize;</para>
      </listitem>
      <listitem>
        <para>Estimation du temps de construction&nbsp;: &openjdk-time;</para>
      </listitem>
    </itemizedlist>
    <bridgehead renderas="sect3">Téléchargements supplémentaires</bridgehead>
    <bridgehead renderas="sect4">Correctifs requis</bridgehead>
    <itemizedlist spacing='compact'>
      <listitem>
        <para><ulink
        url="&patch-root;/icedtea-&icedtea-version;-add_cacerts-1.patch"/></para>
      </listitem>
      <listitem>
        <para><ulink
        url="&patch-root;/icedtea-&icedtea-version;-fixed_paths-1.patch"/></para>
      </listitem>
       <listitem>
         <para><ulink
         url="&patch-root;/icedtea-&icedtea-version;-fix_new_giflib-1.patch"/></para>
      </listitem>
      <listitem>
        <para><ulink
        url="&patch-root;/icedtea-&icedtea-version;-fix_tests-1.patch"/></para>
      </listitem>
    </itemizedlist>
    <bridgehead renderas="sect4">Jar requis</bridgehead>
    <itemizedlist spacing='compact'>
      <listitem>
        <para>Rhino Java Script
          <simplelist>
            <member>Téléchargement: <ulink url="&rhino-download;"/></member>
            <member>Somme de contrôle MD5 du téléchargement&nbsp;: &rhino-md5sum;</member>
            <member>Téléchargement Size: &rhino-size;</member>
          </simplelist>
        </para>
      </listitem>
    </itemizedlist>
    <bridgehead renderas="sect4">Paquet facultatif (pour obtenir un icone pour le fichier
      <filename>openjdk-7-policytool.desktop</filename> )</bridgehead>
    <itemizedlist spacing='compact'>
      <listitem>
        <para>
          <ulink url="&icedtea-web-download;"/>
        </para>
      </listitem>
    </itemizedlist>
    <bridgehead renderas="sect3">Dépendances de OpenJDK</bridgehead>
    <bridgehead renderas="sect4">Dépendances requises</bridgehead>
    <para role="required">
     Un binaire existant ( <xref linkend="java"/> ou une version construite récente de ce paquet,
      <xref linkend="alsa-lib"/>,
      <xref linkend="apache-ant"/>,
       <xref linkend="cacerts"/>,
       <xref linkend="cpio"/>,
       <xref linkend="cups"/>,
      <xref linkend="gtk2"/>,
      <xref linkend="giflib"/>,
      <xref linkend="unzip"/>,
      <xref linkend="wget"/>,
      <xref linkend="which"/>,
      <xref linkend="xorg7-lib"/> et
      <xref linkend="zip"/>.
    </para>
    <bridgehead renderas="sect4">Recommandées</bridgehead>
    <para role="recommended">
       <xref linkend="junit"/> et
      <xref linkend="nss"/>
    </para>
    <bridgehead renderas="sect4">Facultatives</bridgehead>
    <para role="optional">
      <xref linkend="libxslt"/>,
       <xref linkend="lsb-release"/>,
       <xref linkend="mercurial"/>,
      <xref linkend="mitkrb"/>,
      et
      <xref linkend="xorg-server"/> (pour les tests)
    </para>
    <para condition="html" role="usernotes">Notes utilisateur&nbsp;:
    <ulink url="&blfs-wiki;/openjdk"/></para>
  </sect2>
  <sect2 role="installation">
    <title>Installation de OpenJDK</title>
   <note><para>La construction des sources de OpenJDK demande <xref
    linkend="apache-ant"/>.  Vus aurez besoin de le construire afin de satisfaire la dépendance circulaire, et revenir à cette section pour continuer
    la construction de
     OpenJDK.</para></note>
     <para>Contrairement aux autres paquets dans BLFS, les sources de <application>OpenJDK</application>
    sont distribuées dans de multiples téléchargements. Depuis que le harnais de construction de IcedTea
    doit être utilisé pour construire <application>OpenJDK</application>,
    commencez par extraire le paquet IcedTea et allez dans le répertoire d'extraction.</para>
    <para>La distribution de IcedTea <application>OpenJDK</application> demande que
    <filename>js.jar</filename> (du paquet Rhino) soit en place pour fournir une implémentation
    java-script pour le JDK libre. Si vous n'avez pas installé le fichier
    js.jar, faite le avec les commandes suivantes en tant qu'utilisateur
    <systemitem class="username">root</systemitem>&nbsp;:</para>
<screen role="root">
<userinput>unzip ../rhino1_7R4.zip             &amp;&amp;
install -v -d -m755 /usr/share/java &amp;&amp;
install -v -m755 rhino1_7R4/*.jar /usr/share/java</userinput>
</screen>
    <para>Comme mentionné précédemment, <application>OpenJDK</application> est
    composé de plusieurs projets individuels de la version propriétaire de
    <application>JDK</application> qui ont été relicencié en une licence open-source.
    Si vous avez téléchargé précédemment pour les composants individuels, mettez tous les composants individuels dans l'arbre des sources avec les commandes suivantes </para>
<screen>
<userinput>cp -v ../corba.tar.bz2     . &amp;&amp;
cp -v ../hotspot.tar.bz2   . &amp;&amp;
cp -v ../jaxp.tar.bz2      . &amp;&amp;
cp -v ../jaxws.tar.bz2     . &amp;&amp;
cp -v ../jdk.tar.bz2       . &amp;&amp;
cp -v ../langtools.tar.bz2 . &amp;&amp;
cp -v ../openjdk.tar.bz2   .</userinput>
</screen>
 
    <para>Appliquez un correctif pour générer un fichier cacerts valide en utilisant le système de certificats CA:</para>
<screen>
<userinput>patch -Np1 -i ../icedtea-&icedtea-version;-add_cacerts-1.patch</userinput>
</screen>
    <para>Appliquez un correctif pour remplacer les chemins corrigés par des plus appropriée pour 
    BLFS:</para>
<screen>
<userinput>patch -Np1 -i ../icedtea-&icedtea-version;-fixed_paths-1.patch</userinput>
</screen>
    <para>Appliquez un correctif pour adapter le code à la nouvelle API de giflib :</para>
<screen>
<userinput>patch -Np1 -i ../icedtea-&icedtea-version;-fix_new_giflib-1.patch</userinput>
</screen>
 
    <para>Appliquez un correctif pour exclure des tests connus pour échouer de la suite de testse:</para>
<screen>
<userinput>patch -Np1 -i ../icedtea-&icedtea-version;-fix_tests-1.patch</userinput>
</screen>
    <note>
      <para>
         Avant de continuer, vous devez vous assurer que votre environnement est correctement
         initialisé pour construire <application>OpenJDK</application>. D'abord,
         vérifiez le contenu de la variable <envar>ANT_HOME</envar>.
         En second, la variable <envar>PATH</envar> doit contenir le chemin pour les exécutables
         <command>java</command> et <command>ant</command>.
         Enfin, la variable <envar>CLASSPATH</envar> doit être initialisée comme expliqué
         dans les pages 
         <xref linkend="java"/> et <xref linkend="junit"/>.
       </para>
    </note>
    <para>Configurez et construisez le paquet avec les commandes suivantes 
   (les valeurs de with-pkgversion et de with-version-suffix peuvent être modifiées selon les préférences
   de l'utilisateur):
 </para>
<screen>
<userinput>unset JAVA_HOME                                               &amp;&amp;
./autogen.sh                                                  &amp;&amp;
./configure --with-jdk-home=/opt/OpenJDK-&openjdk-version;-bin                     --with-version-suffix=BLFS                                    --enable-nss                                                  --disable-system-kerberos                                     --with-parallel-jobs                              &amp;&amp;
make</userinput>
</screen>
    <note><para>Si vous n'avez pas installé l'archive spécifiée précédemment,
    elle sera automatiquement téléchargée ici.</para></note>
     <para>Pour tester le résultat, tapez&nbsp;: <command>make jtregcheck</command>. La version
    incluse dans <application>jtreg</application> est ancienne, et la suite de tests
    est également très dépendante du système hôte et de l'environnement qui la lance.
    Vous devez vous attendre à voir n'importe où entre 40 et 100 échecs dans jdk avec plus de
    10 erreurs dans les tests eux-mêmes.
    La majorité des plus de 6000 tests doivent réussir. La raison pour la grande
    variété des résultats est dû à comment l'environnement doit être strict.
    Des architectures différentes, des versions différentes des bibliothèques dépendantes,
    un environnement X Window et un gestionnaire de fenêtres inattendus, le certificat utilisé
    pour générer le fichier <filename>cacerts</filename>, et
    même toutes les entrées de l'utilisateur, ou la gestion de l'énergie, ou les interruptions de
    l'économiseur d'écrans pendant les tests peuvent créer de nombreux échecs. Comme les tests cassés connus
    ont été enlevé, avec le correctif fix_tests, les échecs aux tests graphiques ne peuvent pas être prévues
    (sauf à les enlever tous). La meilleure façon pour un résultat complètement propre
    est de lancer la suite de tests dans un  sur un écran différent (Xvfb).
    Et même encore, les I/O du disque peuvent créer des échecs.</para>
 
<screen role='nodump'>
<userinput>export DISPLAY=:20     &amp;&amp;
Xvfb :20 -screen 0 1x1x24 -ac&amp;
echo $!>  Xvfb.pid     &amp;&amp;
make -k jtregcheck     &amp;&amp;
kill -9 `cat Xvfb.pid` &amp;&amp;
unset DISPLAY          &amp;&amp;
rm -f Xvfb.pid</userinput>
</screen>
<para>Installez le paquet avec les commandes suivantes en tant qu'utilisateur
    <systemitem class="username">root</systemitem>&nbsp;:</para>
<screen role="root">
<userinput>chmod 0644 openjdk.build/j2sdk-image/lib/sa-jdi.jar   &amp;&amp;
cp -R openjdk.build/j2sdk-image /opt/OpenJDK-&openjdk-version; &amp;&amp;
chown -R root:root /opt/OpenJDK-&openjdk-version;</userinput>
</screen>
    <para>si vous le souhaitez, vous pouvez installer un fichier .desktop
correspondant à une netrée dans le menu du bureau pour <command>policytool</command>. En premier,
vous devez obtenir un icone de <xref linkend="icedtea-web"/>:</para>
<screen>
<userinput>tar -xf ../icedtea-web-&icedtea-web-version;.tar.gz          icedtea-web-&icedtea-web-version;/javaws.png         --strip-components=1</userinput>
</screen>
<para>
Maintenant, en tant
qu'utilisateur <systemitem class="username">root</systemitem> :</para>
<screen role="root">
<userinput>mkdir -pv /usr/share/applications &amp;&amp;
cat &gt; /usr/share/applications/openjdk-7-policytool.desktop &lt;&lt; "EOF" &amp;&amp;
<literal>[Desktop Entry]
Name=OpenJDK Java 7 Policy Tool
Name[pt_BR]=OpenJDK Java 7 - Ferramenta de Pol&#237;tica
Comment=OpenJDK Java 7 Policy Tool
Comment[pt_BR]=OpenJDK Java 7 - Ferramenta de Pol&#237;tica
Exec=/opt/jdk/bin/policytool
Terminal=false
Type=Application
Icon=javaws
Categories=Settings;</literal>
EOF
install -v -Dm0644 javaws.png /usr/share/pixmaps/javaws.png</userinput>
</screen>
    <para>Le choix de pt_BR est juste un exemple. Vous pouvez ajouter des traductions en ajoutant
    les lignes correspondantes à votre locale, par exemple
    fr_FR, avec les valeurs 
    <quote>Name[fr_FR]=</quote> et <quote>Comment[fr_FR]=</quote> données par votre traduction. </para>
</sect2>
  <sect2 role="commands">
    <title>Explications des commandes</title>
    <para><command>./autogen.sh</command>&nbsp;: Cette commande force la reconstruction des fichiers
    auto-générés pour tenir compte des nouvelles options ajoutés dans
    <filename>configure</filename>.</para>
    <para><parameter>--with-jdk-home</parameter>&nbsp;: Ce paramètre fournit l'emplacement
    du <application>JDK</application> temporaire.</para>
    <para><option>--with-pkgversion</option>: Ce paramètre peut être utilisé
    pour modifier la chaîne de version en supplément de "IcedTea".</para>
    <para><parameter>--with-version-suffix</parameter>: Ce paramètre ajoute
    le texte donné dans la chaîne de version de JDK.</para>
    <para><parameter>--enable-nss</parameter>: Active l'inclusion du fournisseur de sécurité NSS.</para>
    <para><parameter>--disable-system-kerberos</parameter>: Enlevez cette option
    si <xref linkend="mitkrb"/> est installé.</para>
    <para><parameter>--with-parallel-jobs</parameter>: Permet d'initialiser le nombre de travaux
    pour <command>make</command> égal au nombre de processeurs plus un. Notez que par défaut la valeur est 2
     si cette option n'est pas spécifiée. Vous devez explicitement initialiser
    <option>--with-parallel-jobs=1</option> pour désactiver les travaux parallèles. La SBU donné est avec les
    travaux parallèles désactivés.
    </para>
    <para><command>chmod -v 0644 ...sa-jdi.jar</command>&nbsp;: Corrige les permissions
    dans un fichier généré pour que tous les utilisateurs puissent y accéder.</para>
    
  </sect2>
  <sect2 role="configuration" id="openjdk-config" xreflabel="Configuration d'OpenJDK" >
    <title>Configuration de OpenJDK</title>
    <sect3>
      <title>Information de configuration</title>
      <para>Il y a maintenant deux SDK <application>OpenJDK</application> installés dans
      <filename>/opt</filename>. Vous devez décider lequel vous voulez utiliser par défaut.
      Par exemple, si vous décidez d'utiliser la version précompilée de
      <application>OpenJDK</application>, faite les commandes suivantes en tant qu'utilisateur
      <systemitem class="username">root</systemitem>&nbsp;:</para>
<screen role="root">
<userinput>ln -v -nsf OpenJDK-&openjdk-version;-bin /opt/jdk</userinput>
</screen>
    <para>L'information ci dessous suppose que votre système est initialisé en utilisant les
       instructions trouvées à <quote><xref linkend="postlfs-config-profile"/></quote>.
       Vous devez extraire l'information pertinente dessous et l'incorporer dans votre fichier
       de démarrage du système si votre système est initialisé différemment.</para>
    <para>Ajoutez le fichier suivant de démarrage de <filename>openjdk.sh</filename> dans le répertoire
    <filename>/etc/profile.d</filename> avec les commandes suivantes en tant qu'utilisateur
    <systemitem class="username">root</systemitem>&nbsp;:</para>
<screen role="root">
<userinput>cat &gt; /etc/profile.d/openjdk.sh &lt;&lt; "EOF"
<literal># Begin /etc/profile.d/openjdk.sh
# Set JAVA_HOME directory
JAVA_HOME=/opt/jdk
# Set ANT_HOME directory
ANT_HOME=/opt/ant
# Adjust PATH
pathappend $JAVA_HOME/bin PATH
pathappend $ANT_HOME/bin PATH
# Auto Java CLASSPATH
# Copy jar files to, or create symlinks in this directory
AUTO_CLASSPATH_DIR=/usr/share/java
pathprepend . CLASSPATH
for dir in `find ${AUTO_CLASSPATH_DIR} -type d 2>/dev/null`; do
    pathappend $dir CLASSPATH
done
for jar in `find ${AUTO_CLASSPATH_DIR} -name "*.jar" 2>/dev/null`; do
    pathappend $jar CLASSPATH
done
export JAVA_HOME ANT_HOME CLASSPATH
unset AUTO_CLASSPATH_DIR dir jar
# End /etc/profile.d/openjdk.sh</literal>
EOF</userinput>
</screen>
    <para>Finalement, ajoutez les pages de man dans la configuration de <application>man_db</application>.
    En tant qu'utilisateur <systemitem class="username">root</systemitem>&nbsp;:</para>
<screen role="root">
<userinput>cat >> /etc/profile.d/extrapaths.sh &lt;&lt; "EOF" &amp;&amp;
# Begin Java addition
<literal>pathappend /opt/jdk/man       MANPATH
# End Java addition</literal>
EOF
cat &gt;&gt; /etc/man_db.conf &lt;&lt; "EOF" &amp;&amp;
<literal># Begin Java addition
MANDATORY_MANPATH     /opt/jdk/man
MANPATH_MAP           /opt/jdk/bin     /opt/jdk/man
MANDB_MAP             /opt/jdk/man     /var/cache/man/jdk
# End Java addition</literal>
EOF
mandb -c /opt/jdk/man</userinput>
</screen>
<para>Pour tester que les pages de man sont correctement installées, tapez <command>source /etc/profile</command> et <command>man java</command> pour afficher les pages de man respectives.</para>
 
    </sect3>
    
    <sect3 id='ojdk-certs'>
      <title>Installez ou mettez à jour les fichiers "JRE Certificate Authority Certificates" (cacerts)</title>
      <para>Utilisez la procédure suivante pour vérifier si le fichier <filename>cacerts</filename> a été correctement
	installé pendant l'installation de OpenJDK ou si <xref
      linkend="cacerts"/> a été mis à jour, les instructions suivantes généreront un nouveau fichier JRE de 
      <filename>cacerts</filename>. En premier, vérifiez si 
      <filename>cacerts</filename> a été correctement installé: </para>
<screen role="root">
<userinput>cd /opt/jdk
bin/keytool -list -keystore jre/lib/security/cacerts</userinput>
</screen>
      <para>A l'invite "Enter keystore password:", appuyez sur "Enter" s'il n'y a pas de mot de passe de défini. Si 
      <filename>cacerts</filename> a été installé correctement, vous allez voir une liste de certificats avec des informations relatives
      à chacun d'eux. Si non, vous devrez les installer manuellement. En premier, génèrez le script
      <command>mkcacerts</command> en tant qu'utilisateur 
      <systemitem class="username">root</systemitem> :</para>
<screen role="root">
<userinput>cat &gt; /opt/jdk/bin/mkcacerts &lt;&lt; "EOF"
<literal>#!/bin/sh
# Simple script to extract x509 certificates and create a JRE cacerts file.
function get_args()
    {
        if test -z "${1}" ; then
            showhelp
            exit 1
        fi
        while test -n "${1}" ; do
            case "${1}" in
                -f | --cafile)
                    check_arg $1 $2
                    CAFILE="${2}"
                    shift 2
                    ;;
                -d | --cadir)
                    check_arg $1 $2
                    CADIR="${2}"
                    shift 2
                    ;;
                -o | --outfile)
                    check_arg $1 $2
                    OUTFILE="${2}"
                    shift 2
                    ;;
                -k | --keytool)
                    check_arg $1 $2
                    KEYTOOL="${2}"
                    shift 2
                    ;;
                -s | --openssl)
                    check_arg $1 $2
                    OPENSSL="${2}"
                    shift 2
                    ;;
                -h | --help)
                    showhelp
                    exit 0
                    ;;
                *)
                    showhelp
                    exit 1
                    ;;
            esac
        done
    }
function check_arg()
    {
        echo "${2}" | grep -v "^-" > /dev/null
        if [ -z "$?" -o ! -n "$2" ]; then
            echo "Error:  $1 requires a valid argument."
            exit 1
        fi
    }
# The date binary is not reliable on 32bit systems for dates after 2038
function mydate()
    {
        local y=$( echo $1 | cut -d" " -f4 )
        local M=$( echo $1 | cut -d" " -f1 )
        local d=$( echo $1 | cut -d" " -f2 )
        local m
        if [ ${d} -lt 10 ]; then d="0${d}"; fi
        case $M in
            Jan) m="01";;
            Feb) m="02";;
            Mar) m="03";;
            Apr) m="04";;
            May) m="05";;
            Jun) m="06";;
            Jul) m="07";;
            Aug) m="08";;
            Sep) m="09";;
            Oct) m="10";;
            Nov) m="11";;
            Dec) m="12";;
        esac
        certdate="${y}${m}${d}"
    }
function showhelp()
    {
        echo "`basename ${0}` creates a valid cacerts file for use with IcedTea."
        echo ""
        echo "        -f  --cafile     The path to a file containing PEM"
        echo "                         formated CA certificates. May not be"
        echo "                         used with -d/--cadir."
        echo ""
        echo "        -d  --cadir      The path to a directory of PEM formatted"
        echo "                         CA certificates. May not be used with"
        echo "                         -f/--cafile."
        echo ""
        echo "        -o  --outfile    The path to the output file."
        echo ""
        echo "        -k  --keytool    The path to the java keytool utility."
        echo ""
        echo "        -s  --openssl    The path to the openssl utility."
        echo ""
        echo "        -h  --help       Show this help message and exit."
        echo ""
        echo ""
    }
# Initialize empty variables so that the shell does not pollute the script
CAFILE=""
CADIR=""
OUTFILE=""
OPENSSL=""
KEYTOOL=""
certdate=""
date=""
today=$( date +%Y%m%d )
# Process command line arguments
get_args ${@}
# Handle common errors
if test "${CAFILE}x" == "x" -a "${CADIR}x" == "x" ; then
    echo "ERROR!  You must provide an x509 certificate store!"
    echo "'$(basename ${0}) --help' for more info."
    echo ""
    exit 1
fi
if test "${CAFILE}x" != "x" -a "${CADIR}x" != "x" ; then
    echo "ERROR!  You cannot provide two x509 certificate stores!"
    echo "'$(basename ${0}) --help' for more info."
    echo ""
    exit 1
fi
if test "${KEYTOOL}x" == "x" ; then
    echo "ERROR!  You must provide a valid keytool program!"
    echo "'$(basename ${0}) --help' for more info."
    echo ""
    exit 1
fi
if test "${OPENSSL}x" == "x" ; then
    echo "ERROR!  You must provide a valid path to openssl!"
    echo "'$(basename ${0}) --help' for more info."
    echo ""
    exit 1
fi
if test "${OUTFILE}x" == "x" ; then
    echo "ERROR!  You must provide a valid output file!"
    echo "'$(basename ${0}) --help' for more info."
    echo ""
    exit 1
fi
# Get on with the work
# If using a CAFILE, split it into individual files in a temp directory
if test "${CAFILE}x" != "x" ; then
    TEMPDIR=`mktemp -d`
    CADIR="${TEMPDIR}"
    # Get a list of staring lines for each cert
    CERTLIST=`grep -n "^-----BEGIN" "${CAFILE}" | cut -d ":" -f 1`
    # Get a list of ending lines for each cert
    ENDCERTLIST=`grep -n "^-----END" "${CAFILE}" | cut -d ":" -f 1`
    # Start a loop
    for certbegin in `echo "${CERTLIST}"` ; do
        for certend in `echo "${ENDCERTLIST}"` ; do
            if test "${certend}" -gt "${certbegin}"; then
                break
            fi
        done
        sed -n "${certbegin},${certend}p" "${CAFILE}" > "${CADIR}/${certbegin}.pem"
        keyhash=`${OPENSSL} x509 -noout -in "${CADIR}/${certbegin}.pem" -hash`
        echo "Generated PEM file with hash:  ${keyhash}."
    done
fi
# Write the output file
for cert in `find "${CADIR}" -type f -name "*.pem" -o -name "*.crt"`
do
    # Make sure the certificate date is valid...
    date=$( ${OPENSSL} x509 -enddate -in "${cert}" -noout | sed 's/^notAfter=//' )
    mydate "${date}"
    if test "${certdate}" -lt "${today}" ; then
        echo "${cert} expired on ${certdate}! Skipping..."
        unset date certdate
        continue
    fi
    unset date certdate
    ls "${cert}"
    tempfile=`mktemp`
    certbegin=`grep -n "^-----BEGIN" "${cert}" | cut -d ":" -f 1`
    certend=`grep -n "^-----END" "${cert}" | cut -d ":" -f 1`
    sed -n "${certbegin},${certend}p" "${cert}" > "${tempfile}"
    echo yes | env LC_ALL=C "${KEYTOOL}" -import                                                              -alias `basename "${cert}"`                                          -keystore "${OUTFILE}"                                               -storepass 'changeit'                                                -file "${tempfile}"
    rm "${tempfile}"
done
if test "${TEMPDIR}x" != "x" ; then
    rm -rf "${TEMPDIR}"
fi
exit 0</literal>
EOF
chmod -c 0755 /opt/jdk/bin/mkcacerts</userinput>
</screen>
 
  <note>
    <para>
      Faire un très grand copier/coller directement dans un terminal peut donner un fichier corrompu.Copier depuis un éditeur peut contourner ce problème.
    </para>
  </note>
    <para>Si vous avez besoin de générer un fichier <filename>cacerts</filename>,
    et qu'il y en a déjà un dans 
    <filename class="directory">/opt/jdk/jre/lib/security</filename>, il est mieux de faire une sauvegarde.
    Ensuite vous pouvez en créer un nouveau, en tant qu'utilisateur
    <systemitem class="username">root</systemitem> :</para>
<screen role="root">
<userinput>/opt/jdk/bin/mkcacerts                    -d "/etc/ssl/certs/"              -k "/opt/jdk/bin/keytool"         -s "/usr/bin/openssl"             -o "/opt/jdk/jre/lib/security/cacerts"</userinput>
</screen>
    </sect3> 
  </sect2>
  <sect2 role="content">
    <title>Contenu</title>
    <segmentedlist>
      <segtitle>Programmes installés</segtitle>
      <segtitle>Bibliothèques installées</segtitle>
      <segtitle>Répertoire installé</segtitle>
      <seglistitem>
        <seg>appletviewer, apt, extcheck, idlj, jar,
        jarsigner, java, javac, javadoc, javah, javap, java-rmi.cgi,
        jcmd, jconsole, jdb, jhat, jinfo, jmap, jps,
        jrunscript, jsadebugd, jstack, jstat, jstatd, keytool,
        native2ascii, orbd, pack200, policytool, rmic, rmid, rmiregistry,
        schemagen, serialver, servertool, tnameserv, unpack200,
        wsgen, wsimport, et xjc</seg>
        <seg>/opt/OpenJDK-&openjdk-version;/lib/*, and
        /opt/OpenJDK-&openjdk-version;/jre/lib/*</seg>
        <seg>/opt/OpenJDK-&openjdk-version;</seg>
      </seglistitem>
    </segmentedlist>
    <variablelist>
      <bridgehead renderas="sect3">Description courte</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>
      <varlistentry id="appletviewer">
        <term><command>appletviewer</command></term>
        <listitem>
          <para>autorise de lancer des applets en dehors du navigateur web.</para>
          <indexterm zone="openjdk appletviewer">
            <primary sortas="b-appletviewer">appletviewer</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="apt">
        <term><command>apt</command></term>
        <listitem>
          <para>est un outil de traitement des annotations.</para>
          <indexterm zone="openjdk apt">
            <primary sortas="b-apt">apt</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="extcheck">
        <term><command>extcheck</command></term>
        <listitem>
          <para>vérifie un fichier jar spécifié pour les conflits de titre et de version avec toutes les extensions installés dans
          le logiciel <application>OpenJDK</application>.</para>
          <indexterm zone="openjdk extcheck">
            <primary sortas="b-extcheck">extcheck</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="idlj">
        <term><command>idlj</command></term>
        <listitem>
          <para>génère les liaisons Java depuis un fichier IDL donné.</para>
          <indexterm zone="openjdk idlj">
            <primary sortas="b-idlj">idlj</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="jar">
        <term><command>jar</command></term>
        <listitem>
          <para>combine des fichiers différents en une seule archive jar.</para>
          <indexterm zone="openjdk jar">
            <primary sortas="b-jar">jar</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="jarsigner">
        <term><command>jarsigner</command></term>
        <listitem>
          <para>signe les fichiers jar et vérifie la signature et l'intégrité d'un fichier jar signé.</para>
          <indexterm zone="openjdk jarsigner">
            <primary sortas="b-jarsigner">jarsigner</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="java-prog">
        <term><command>java</command></term>
        <listitem>
          <para>lance une application Java en démarrant l'environnement d'exécution Java,
             chargeant une classe spécifiée et invoquant sa méthode main.</para>
          <indexterm zone="openjdk java-prog">
            <primary sortas="b-java-prog">java</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="javac">
        <term><command>javac</command></term>
        <listitem>
          <para>lit les définitions de classe et d'interface, écrit un langage de programmation Java,
             et les compiles en des fichiers de classe bytecode.</para>
          <indexterm zone="openjdk javac">
            <primary sortas="b-javac">javac</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="javadoc">
        <term><command>javadoc</command></term>
        <listitem>
          <para>analyse les déclarations et les commentaires de documentation dans un ensemble de fichiers
             source Java et produit l'ensemble correspondant des pages HTML décrivant les classes, les interfaces
             les méthodes de constructions et les champs.</para>
          <indexterm zone="openjdk javadoc">
            <primary sortas="b-javadoc">javadoc</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="javah">
        <term><command>javah</command></term>
        <listitem>
          <para>génère les entêtes C et les fichiers sources qui sont nécéssaires pour implémenter
             des méthodes natives.</para>
          <indexterm zone="openjdk javah">
            <primary sortas="b-javah">javah</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="javap">
        <term><command>javap</command></term>
        <listitem>
          <para>désassemble un fichier de classe Java.</para>
          <indexterm zone="openjdk javap">
            <primary sortas="b-javap">javap</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="java-rmi.cgi">
        <term><command>java-rmi.cgi</command></term>
        <listitem>
          <para>est le client RMI de Java.</para>
          <indexterm zone="openjdk java-rmi.cgi">
            <primary sortas="b-java-rmi.cgi">java-rmi.cgi</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="jcmd">
        <term><command>jcmd</command></term>
        <listitem>
          <para>est un utilitaire pour envoyer les demandes de diagnostique à une machine virtuelle Java.</para>
          <indexterm zone="openjdk jcmd">
            <primary sortas="b-jcmd">jcmd</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="jconsole">
        <term><command>jconsole</command></term>
        <listitem>
          <para>est un outil graphique de la console pour surveiller et gérer les applications Java locales et distantes et les machines virtuelles.</para>
          <indexterm zone="openjdk jconsole">
            <primary sortas="b-jconsole">jconsole</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="jdb">
        <term><command>jdb</command></term>
        <listitem>
          <para>est un simple débogueur en ligne de commande pour les classes Java.</para>
          <indexterm zone="openjdk jdb">
            <primary sortas="b-jdb">jdb</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="jhat">
        <term><command>jhat</command></term>
        <listitem>
          <para>analyse un fichier Java de heap dump et permet de le voir dans un navigateur web.</para>
          <indexterm zone="openjdk jhat">
            <primary sortas="b-jhat">jhat</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="jinfo">
        <term><command>jinfo</command></term>
        <listitem>
          <para>affiche les informations de configuration de Java pour un processus Java donné,
             un fichier core, ou un serveur de déboguage distant.</para>
          <indexterm zone="openjdk jinfo">
            <primary sortas="b-jinfo">jinfo</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="jmap">
        <term><command>jmap</command></term>
        <listitem>
          <para>affiche les cartes mémoires des objets partagés ou les détails mémoire d'un processus donné, d'un fichier core, ou d'un serveur de déboguage distant.</para>
          <indexterm zone="openjdk jmap">
            <primary sortas="b-jmap">jmap</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="jps">
        <term><command>jps</command></term>
        <listitem>
          <para>liste les JVM instrumenté sur le système cible.</para>
          <indexterm zone="openjdk jps">
            <primary sortas="b-jps">jps</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="jrunscript">
        <term><command>jrunscript</command></term>
        <listitem>
          <para>est un script shell en ligne de commandes.</para>
          <indexterm zone="openjdk jrunscript">
            <primary sortas="b-jrunscript">jrunscript</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="jsadebugd">
        <term><command>jsadebugd</command></term>
        <listitem>
          <para>s'attache à un processus Java ou à un fichier core et agit en tant que serveur de déboguage.</para>
          <indexterm zone="openjdk jsadebugd">
            <primary sortas="b-jsadebugd">jsadebugd</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="jstack">
        <term><command>jstack</command></term>
        <listitem>
          <para>affiche la pile des traces JAVA, des treads Java pour pour un processus Java donné,
             un fichier core, ou un serveur de déboguage distant.</para>
          <indexterm zone="openjdk jstack">
            <primary sortas="b-jstack">jstack</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="jstat">
        <term><command>jstat</command></term>
        <listitem>
          <para>affiche les statistiques de performance pour une JVM instrumentée.</para>
          <indexterm zone="openjdk jstat">
            <primary sortas="b-jstat">jstat</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="jstatd">
        <term><command>jstatd</command></term>
        <listitem>
          <para>est une application serveur RMI qui surveille la création et l'arrêt des JVM instrumentés.</para>
          <indexterm zone="openjdk jstatd">
            <primary sortas="b-jstatd">jstatd</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="keytool">
        <term><command>keytool</command></term>
        <listitem>
          <para>est un utilitaire de gestion des clés et certificats.</para>
          <indexterm zone="openjdk keytool">
            <primary sortas="b-keytool">keytool</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="mkcacerts">
        <term><command>mkcacerts</command></term>
        <listitem>
          <para> est un script simple pour extraire les certificats x509 et créer
           un fichier cacerts JRE en utilisant 
          <command>keytool</command>.</para>
          <indexterm zone="openjdk mkcacerts">
            <primary sortas="b-mkcacerts">mkcacerts</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="native2ascii">
        <term><command>native2ascii</command></term>
        <listitem>
          <para> converti les fichiers qui contiennent des caractères non-supporté par l'encodage en des fichiers
             contenant des caractères Latin-1 ou Unicode.</para>
          <indexterm zone="openjdk native2ascii">
            <primary sortas="b-native2ascii">native2ascii</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="orbd">
        <term><command>orbd</command></term>
        <listitem>
          <para>est utilisé pour activer les clients pour trouver de façon transparente et invoquer
             les objets persistants sur les serveurs dans un environnement CORBA.</para>
          <indexterm zone="openjdk orbd">
            <primary sortas="b-orbd">orbd</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="pack200">
        <term><command>pack200</command></term>
        <listitem>
          <para>est une application Java qui transforme un fichier jar en un fichier compressé pack200
             un utilisant un comptacteur gzip.</para>
          <indexterm zone="openjdk pack200">
            <primary sortas="b-pack200">pack200</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="policytool">
        <term><command>policytool</command></term>
        <listitem>
          <para>crée et gère les fichiers de politique graphiquement.</para>
          <indexterm zone="openjdk policytool">
            <primary sortas="b-policytool">policytool</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="rmic">
        <term><command>rmic</command></term>
        <listitem>
          <para>génère des fichiers de classes tampon et squelette pour des objets distants depuis le nom des classes JAVA compilées qui
             contiennent des implémentations d'objets distants.</para>
          <indexterm zone="openjdk rmic">
            <primary sortas="b-rmic">rmic</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="rmid">
        <term><command>rmid</command></term>
        <listitem>
          <para>démarre le démon d'activation du système.</para>
          <indexterm zone="openjdk rmid">
            <primary sortas="b-rmid">rmid</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="rmiregistry">
        <term><command>rmiregistry</command></term>
        <listitem>
          <para>crée et démarre un registre d'objet distant sur le port spécifié de l'hôte actuel.</para>
          <indexterm zone="openjdk rmiregistry">
            <primary sortas="b-rmiregistry">rmiregistry</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="schemagen">
        <term><command>schemagen</command></term>
        <listitem>
          <para>est un générateur de schéma de liaison Java XML.</para>
          <indexterm zone="openjdk schemagen">
            <primary sortas="b-schemagen">schemagen</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="serialver">
        <term><command>serialver</command></term>
        <listitem>
          <para>retourne l'UID pour une ou plusieurs classes sous une forme appropriée pour la copie dans une classe évolutive.</para>
          <indexterm zone="openjdk serialver">
            <primary sortas="b-serialver">serialver</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="servertool">
        <term><command>servertool</command></term>
        <listitem>
          <para>fournit une interface facile à utiliser pour les programmeurs d'applications pour
             inscrire, désinscrire, démarrer et arrêter un serveur.</para>
          <indexterm zone="openjdk servertool">
            <primary sortas="b-servertool">servertool</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="tnameserv">
        <term><command>tnameserv</command></term>
        <listitem>
          <para>démarre le serveur de nom Java IDL.</para>
          <indexterm zone="openjdk tnameserv">
            <primary sortas="b-tnameserv">tnameserv</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="unpack200">
        <term><command>unpack200</command></term>
        <listitem>
          <para>est une implémentation native qui transforme un fichier produit par <application>pack200</application>
          en un fichier jar.</para>
          <indexterm zone="openjdk unpack200">
            <primary sortas="b-unpack200">unpack200</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="wsgen">
        <term><command>wsgen</command></term>
        <listitem>
          <para>génère des artifactes portables JAX-WS  utilisés dans les services web JAX-WS.</para>
          <indexterm zone="openjdk wsgen">
            <primary sortas="b-wsgen">wsgen</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="wsimport">
        <term><command>wsimport</command></term>
        <listitem>
          <para>génère des artifactes JAX-WS portables.</para>
          <indexterm zone="openjdk wsimport">
            <primary sortas="b-wsimport">wsimport</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="xjc">
        <term><command>xjc</command></term>
        <listitem>
          <para>est un compilateur de liaison Java XML.</para>
          <indexterm zone="openjdk xjc">
            <primary sortas="b-xjc">xjc</primary>
          </indexterm>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect2>
</sect1>
