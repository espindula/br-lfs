<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
  <!ENTITY anduin-download             "http://anduin.linuxfromscratch.org/files/BLFS/OpenJDK-&openjdk-version;">
  <!ENTITY openjdk-download-binary-x86 "&anduin-download;/OpenJDK-&openjdk-version;-i686-bin.tar.xz">
  <!ENTITY openjdk-bin-md5sum-x86      "c4a5097fe08dc95defa65d1eb072752f">
  <!ENTITY openjdk-bin-size-x86        "174 Mo">
  <!ENTITY openjdk-bin-buildsize-x86   "547 Mo">
  <!ENTITY openjdk-download-binary-x64 "&anduin-download;/OpenJDK-&openjdk-version;-x86_64-bin.tar.xz">
  <!ENTITY openjdk-bin-md5sum-x64      "cbd28cd7f89dadb6534b87ed712aedea">
  <!ENTITY openjdk-bin-size-x64        "146 Mo">
  <!ENTITY openjdk-bin-buildsize-x64   "424 Mo">
]>
<sect1 id="java">
  <?dbhtml filename="java.html"?>
  <sect1info>
    <othername>$LastChangedBy: bdubbs $</othername>
    <date>$Date: 2013-07-16 22:07:29 +0200 (mar. 16 juil. 2013) $</date>
  </sect1info>
  <title>About Java</title>
  <indexterm zone="java">
    <primary sortas="a-java">Binaire JDK</primary>
  </indexterm>
  <para>Java est différent de la plupart des paquets LFS et BLFS. C'est un langage de programmation
  qui fonctionne avec des fichiers binaires pour obtenir les instructions
  et exécuter ensuite dans un machine virtuelle Java (JVM). une introduction
  à un programme java ressemble à :</para>
<screen>
<literal>public class HelloWorld 
{
    public static void main(String[] args) 
    {
        System.out.println("Hello, World");
    }
}</literal>
</screen>
  <para>Ce programme est enregistré en tant que <filename>HelloWorld.java</filename>.  Le nom du fichier,
  <emphasis>HelloWorld</emphasis>, doit correspondre au nom de la classe. il est ensuite convertit en code binaire
  avec <command>javac HelloWorld.java</command>.
  Le fichier de sortie est <filename>HelloWorld.class</filename>.  Le programme est exécuté avec
  <command>java HelloWorld</command>.  Cela crée une JVM et
  lance le code.  L'extension 'class' ne doit pas être spécifiée.</para>
  <para>Plusieurs fichiers class peuvent être combiné en un seul fichier avec la commande
  <command>jar</command>. C'est similaire à la commande standard 
  <command>tar</command>. Par exemple, la commande <command>jar cf myjar.jar
  *.class</command> combinera tous les fichiers de classes d'un répertoire dans un seul fichier. Ce qui fait des fichiers de bibliothèque.</para>
  <para>La JVM peut chercher et utiliser les classes des fichiers jar automatiquement. Il utilise
  la variable d'environnement <envar>CLASSPATH</envar> pour cherches les fichiers jar.
  C'est une liste standard de noms de répertoires séparés en colonnes comme la variable d'environnement
  <envar>PATH</envar>.</para>
 
  &lfs74_checked;
  <sect2 id="java-bin" xreflabel="Java Binary">
    <title>Installation d'un binaire JDK</title>
    <para>La création d'une JVM depuis les sources demande un ensemble de dépendances circulaires.
    LA première chose nécessaire est un ensemble de programmes appelé Java Development
    Kit (JDK). Cet ensemble de programmes inclus <command>java</command>,
    <command>javac</command>, <command>jar</command>, et plusieurs autres. Il 
    inclut également plusieurs fichiers <emphasis>jar</emphasis> de base.</para>
    <para>Pour commencer, nous initialisons une installation binaire de JDK créée
    par les auteurs de BLFS. Elle est installée dans le répertoire <filename>/opt</filename>
    pour permettre plusieurs installations, en incluant une version basée sur les sources.
    </para>
    <bridgehead renderas="sect3">Information binaire sur le paquet </bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>Téléchargement du binaire (x86):
        <ulink url="&openjdk-download-binary-x86;"/></para>
      </listitem>
      <listitem>
        <para>Somme de contrôle MD5 du téléchargement : &openjdk-bin-md5sum-x86;</para>
      </listitem>
      <listitem>
        <para>Taille du téléchargement  (binaire): &openjdk-bin-size-x86;</para>
      </listitem>
      <listitem>
        <para>Estimation de l'espace disque requis : &openjdk-bin-buildsize-x86;</para>
      </listitem>
    </itemizedlist>
    <itemizedlist spacing="compact">
      <listitem>
        <para>Téléchargement du binaire (x86_64):
        <ulink url="&openjdk-download-binary-x64;"/></para>
      </listitem>
      <listitem>
        <para>Somme de contrôle MD5 du téléchargement : &openjdk-bin-md5sum-x64;</para>
      </listitem>
      <listitem>
        <para>Taille du téléchargement  (binaire): &openjdk-bin-size-x64;</para>
      </listitem>
      <listitem>
        <para>Estimation de l'espace disque requis : &openjdk-bin-buildsize-x64;</para>
      </listitem>
    </itemizedlist>
    <bridgehead renderas="sect3">Dépendances d'exécution du binaire Java</bridgehead>
    <para role="required">
      <xref linkend="atk"/>,
      <xref linkend="cairo"/>,
      <xref linkend="cups"/>,
      <xref linkend="gdk-pixbuf"/>,
      <xref linkend="giflib"/>,
      <xref linkend="gtk2"/>,
      <xref linkend="lcms2"/>,
      <xref linkend="pulseaudio"/>, et
      <xref linkend="xorg7-lib"/>
    </para>
   <para>Commencez par extraire l'archive du binaire approprié pour votre architecture et allé dans le répertoire extrait. Installez
    le binaire <application>OpenJDK</application> avec les commandes suivants en tant qu'utilisateur
    <systemitem class="username">root</systemitem>:</para>
<screen role="root">
<userinput>install -vdm755 /opt/OpenJDK-&openjdk-version;-bin &amp;&amp;
mv -v * /opt/OpenJDK-&openjdk-version;-bin         &amp;&amp;
chown -R root:root /opt/OpenJDK-&openjdk-version;-bin</userinput>
</screen>
    <para>Configure the temporary <application>OpenJDK</application>
    installation with the following </para>
<screen>
<userinput>export CLASSPATH=.:/usr/share/java &amp;&amp;
export PATH="$PATH:/opt/OpenJDK-&openjdk-version;-bin/bin"</userinput>
</screen>
    <para>LA version binaire est maintenant installée. Si vous ne voulez par compiler les sources, passez la section
    <xref linkend='openjdk-config'/>.
    Sinon, continuez par les sections <xref linkend='junit'/>, <xref
    linkend='apache-ant'/>, et <xref linkend='openjdk'/>.</para>
    
  </sect2>
</sect1>
