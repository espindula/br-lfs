<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
  <!ENTITY gcc-download-http  "http://ftpmirror.gnu.org/gcc/gcc-&gcc-version;/gcc-&gcc-version;.tar.bz2">
  <!ENTITY gcc-download-ftp   "ftp://ftp.gnu.org/gnu/gcc/gcc-&gcc-version;/gcc-&gcc-version;.tar.bz2">
  <!ENTITY gcc-md5sum         "a51bcfeb3da7dd4c623e27207ed43467">
  <!ENTITY gcc-size           "91 Mo">
  <!ENTITY gcc-buildsize      "5.9 Go">
  <!ENTITY gcc-time           "132 SBU (including 82 SBU for tests)">
]>
<sect1 id="gcc" xreflabel="GCC-&gcc-version;">
  <?dbhtml filename="gcc.html" ?>
  
<sect1info>
    <othername>$LastChangedBy&nbsp;: bdubbs $</othername>
    <date>$Date&nbsp;: 2013-03-14 02:26:59 +0100 (Thu, 14 Mar 2013) $</date>
  </sect1info>
  
<title>GCC-&gcc-version;</title>
  <indexterm zone="gcc">
    <primary sortas="a-gcc-5-0">GCC-&gcc-version;</primary>
  </indexterm>
  
<sect2 role="package">
    
<title>Introduction à GCC</title>
    
<para>Le paquet <application>GCC</application> contient une collection de compilateurs
    GNU. Cette page décrit l'installation des compilateurs pour les langages suivants:
    C, C++, Fortran, Objective C, Objective C++, et Go. Deux langages supplémentaires, Ada et Java
    sont disponibles dans cette collection. Il y a des impositions spécifiques, donc ils sont 
    décrits dans des pages séparées (<xref linkend="gcc-ada"/> et <xref linkend="gcc-java"/>).
    Comme C et C++ sont installés dans LFS, cette page est soit pour mettre à
    jour C et C++, ou pour installer des compilateurs supplémentaires.
    </para>
    &lfs78_checked;
    
<caution>
      
<para>Si vous mettez à jour depuis une version de <application>GCC</application> 
      antérieure à &gcc-version;, vous devez faire attention en compilant les 
      modules externes au noyau. Vous devriez vous assurer que le noyau et tous 
      ses modules natifs sont aussi compilés en utilisant la même version de
      <application>GCC</application> que celle utilisée pour construire les 
      modules externes. Ce problème ne touche pas les mises à jour du noyau natif
      (et des modules du noyau), car les instructions ci-dessous sont une réinstallation 
      complète de <application>GCC</application>. Si vous avez installé des 
      modules externes, assurez-vous qu'ils sont recompilés en utilisant la
      version mise à jour de
      <application>GCC</application>. Comme toujours, ne mettez jamais à jour 
      les en-têtes du noyau à partir de celles utilisées quand on a compilé 
      <application>Glibc</application> dans LFS.</para>
    </caution>
    
<bridgehead renderas="sect3">Informations sur le paquet</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        
<para>Téléchargement (HTTP)&nbsp;: <ulink url="&gcc-download-http;"/></para>
      </listitem>
      <listitem>
        
<para>Téléchargement (FTP)&nbsp;: <ulink url="&gcc-download-ftp;"/></para>
      </listitem>
      <listitem>
        
<para>Somme de contrôle MD5 du téléchargement&nbsp;: &gcc-md5sum;</para>
      </listitem>
      <listitem>
        
<para>Taille du téléchargement&nbsp;: &gcc-size;</para>
      </listitem>
      <listitem>
        
<para>Estimation de l'espace disque requis&nbsp;: &gcc-buildsize;</para>
      </listitem>
      <listitem>
        
<para>Estimation du temps de construction&nbsp;: &gcc-time;</para>
      </listitem>
    </itemizedlist>
    
<bridgehead renderas="sect3">Dépendances de GCC</bridgehead>
    
    
    <bridgehead renderas="sect4">Recommandées</bridgehead>
    <para role="recommended">
      <xref linkend="dejagnu"/> pour les tests
    </para>     
    
<para condition="html" role="usernotes">Notes utilisateur&nbsp;:
    <ulink url="&blfs-wiki;/gcc"/></para>
  </sect2>
  
<sect2 role="installation">
    
<title>Installation de GCC</title>
    
    <important>
      
<para>Sauf si vous spécifiez des langages autre que C et C++ à la commande
<command>./configure</command> dessous, processus d'installation écrasera les compilateurs C et C++
      et les bibliothèques existants 
      de  <application>GCC</application>. Avoir
      les paquets <application>Tcl</application>,
      <application>Expect</application> et <application>DejaGnu</application> d'installés avant de
      commencer la construction est hautement recommandé afin que vous puissiez lancer la suite de
      tests complète.</para>
      
<para>Ne continuez pas avec la commande <command>make install</command> avant
      d'être sûr que la construction a réussi. Vous pouvez comparer vos
      résultats de test avec ceux qui se trouvent sur
      <ulink url="http://gcc.gnu.org/ml/gcc-testresults/"/>. Il se peut
      que vous vouliez également vous reporter aux informations qui se trouvent dans la section
      <application>GCC</application> du chapitre 6 du livre LFS (<ulink url="&lfs-root;/chapter06/gcc.html"/>).</para>
    </important>
    
    <para>Les instructions dessous utilisent intentionnellement le processus <quote>bootstrap</quote>.
    Le bootstrap est utile pour la robustesse et est fortement recommandé pour un changement de version
    des compilateurs.
    Pour désactiver, passez <parameter>--disable-bootstrap</parameter> dans les options
    <command>./configure</command> ci-dessous.</para>
   <para>Installez <application>GCC</application> en lançant les commandes suivantes:</para>
<screen>
<userinput>mkdir ../gcc-build                                   &amp;&amp;
cd    ../gcc-build                                   &amp;&amp;
../gcc-&gcc-version;/configure                               \
    --prefix=/usr                                    \
    --disable-multilib                               \
    --with-system-zlib                               \
    --enable-languages=c,c++,fortran,go,objc,obj-c++ &amp;&amp;
make</userinput>
</screen>
<para>Si vous avez installé des paquets supplémentaires comme <application>Valgrind</application> et <application>GDB</application>,
    la partie de <application>GCC</application> de la suite de tests lancera plus de tests que dans LFS. 
    Certain d'entre eux signaleront des FAIL et d'autres XPASS (passage quand
    échec attendu).  Pour lancer les vérifications:</para>
 
<screen>
<userinput>ulimit -s 32768 &amp;&amp;
make -k check</userinput>
</screen>
    <para>Les tests sont très longs, et les résultats peuvent être très difficiles
    à trouver dans les logs, spécialment si vous utilisez des travaux en parallèle avec make. Vous pouvez
    avoir un résumé des tests avec:</para>
<screen>
<userinput>../gcc-&gcc-version;/contrib/test_summary</userinput>
</screen>
    
<para>Maintenant, en tant qu'utilisateur <systemitem class="username">root</systemitem>&nbsp;:</para>
<screen role="root">
<userinput>make install &amp;&amp;
mkdir -pv /usr/share/gdb/auto-load/usr/lib              &amp;&amp;
mv -v /usr/lib/*gdb.py /usr/share/gdb/auto-load/usr/lib &amp;&amp;
chown -v -R root:root \
    /usr/lib/gcc/*linux-gnu/&gcc-version;/include{,-fixed}</userinput>
</screen>
    
    <para>Quelques paquets veulent trouver le préprocesseur C dans
    <filename class="directory">/lib</filename> ou peuvent se référer au compilateur C
    sous le nom de 
    <command>cc</command>. Les liens symboliques suivants ne sont pas utiles si vous avez
    suivi les instructions LFS, depuis qu'ils sont déjà créés. Si vous ne les avez pas sur
    votre système, tapez en tant qu'utilisateur 
    <systemitem class="username">root</systemitem> :</para>
  
<screen role="root">
<userinput>ln -v -sf ../usr/bin/cpp /lib          &amp;&amp;
ln -v -sf gcc /usr/bin/cc              &amp;&amp;
install -v -dm755 /usr/lib/bfd-plugins &amp;&amp;
ln -sfv ../../libexec/gcc/$(gcc -dumpmachine)/&gcc-version;/liblto_plugin.so /usr/lib/bfd-plugins/</userinput>
</screen>
  
</sect2>
  
<sect2 role="commands">
    
<title>Explication des commandes</title>
    
    
<para><command>mkdir ../gcc-build; cd ../gcc-build</command>&nbsp;: La
    documentation de <application>GCC</application> recommande de construire
    le paquet dans un répertoire de construction dédié.</para>
    
   <para>
   <parameter>--disable-multilib</parameter>&nbsp;: Ce paramètre assure 
    que les fichiers sont créés pour l'architecture spécifique à votre ordinateur.</para>
    <para>
      <parameter>--with-system-zlib</parameter>: Utilise la version système de
      <application>zlib</application> au lieu de la version fournie.
      <application>zlib</application> est utilisé pour compresser et décompresser
      les langages intermédiares de <application>GCC</application> dans les fichiers objets LTO
      "(Link Time Optimization)".
    </para>
  
    
<para>
    
<parameter>--enable-languages=c,c++,fortran,go,objc,obj-c++</parameter>&nbsp;:
    Cette commande identifie les langages à construire. Il se peut que vous modifiez
    cette commande pour supprimer des langages non désirés.</para>
     <para>
      <option>--with-default-libstdcxx-abi=c++98</option>: Utilisez ce paramètre si vous mettez à jour
      depuis une version de <application>GCC</application> inférieure à 5.1.0,
      et que vous ne voulez pas recompiler toutes les biblitohèques écrites en C++.
    </para>
    
<para><command>ulimit -s 32768</command>: Cette commande empêche plusieurs scripts de 
    se lancer en dehors de l'espace de la pile.</para>
    
<para><command>make -k check</command>&nbsp;: Cette commande lance une
    suite de tests sans s'arrêter si une erreur est rencontrée.</para>
    
<para><command>../gcc-&gcc-version;/contrib/test_summary</command>&nbsp;: Cette
    commande produira un résumé des résultats de la suite de tests. Vous pouvez ajouter
    <command>| grep -A7 Summ</command> à la commande pour produire ue version
    du résumé encore plus condensée. Il se peut que vous souhaitiez aussi rediriger
    la sortie vers un fichier pour visualiser et comparer à l'avenir.</para>
    
    <para>
      <command>mv -v /usr/lib/*gdb.py ...</command>: Le processus d'installation
      mets quelques fichiers utilisé par 
      <application>gdb</application> sous le répertoire
      <filename class="directory">/usr/lib</filename>. Cela génère des messages d'erreur
      curieux quand <command>ldconfig</command> est utilisé. cette commande déplace les fichiers
       à un autre endroit.
    </para>
    
<para><command>chown -v -R root:root
    /usr/lib/gcc/*linux-gnu/...</command>&nbsp;: Si le paquet
    est construit par un utilisateur différent de root, le propriétaire du
    répertoire <filename class='directory'>include</filename>
    installé sera incorrect. Ces commandes modifient l'appartenance vers
    l'utilisateur et le groupe <systemitem class="username">root</systemitem>. 
</para>
  </sect2>
  
<sect2 role="content">
    
<title>Contenu</title>
    <para>Plusieurs noms de programmes et de bibliothèques et des descriptions ne sont pas listés ici, mais
     peuvent être trouvé dans
    <ulink url="&lfs-root;/chapter06/gcc.html#contents-gcc"/> depuis qu'ils sont initialement
     installés dans LFS.</para>
    <segmentedlist>
      <segtitle>Programmes installés</segtitle>
      <segtitle>Bibliothèques installées</segtitle>
      <segtitle>Répertoires installés</segtitle>
      <seglistitem>
        <seg>
          gccgo, go, gofmt et gfortran,
          lié en dur à des noms spécifiques à l'architecture
        </seg>
        <seg>
          libgfortran.{so,a},
          libgo.{so,a}, libgobegin.a, libgolibbegin.a, libnetgo.a,
          libobjc.{so,a}, et de nombreuses autres bibliothèques et exécutables dans
           <filename class="directory">/usr/lib/gcc</filename>,
          <filename class="directory">/usr/libexec/gcc</filename>, et
          <filename class="directory">/usr/lib/go</filename>
        </seg>
        <seg>
          /usr/lib/gcc/&lt;arch-triplet&gt;/&gcc-version;/include/objc et
          /usr/lib/go
        </seg>
      </seglistitem>
    </segmentedlist>
    
    <variablelist>
      
<bridgehead renderas="sect3">Descriptions courtes</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>
 
      <varlistentry id="gccgo">
        <term><command>gccgo</command></term>
        <listitem>
          
<para>est un compilateur basé sur GCC pour le langage
          <application>Go</application>.</para>
          <indexterm zone="gcc gccgo">
            <primary sortas="b-gccgo">gccgo</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="go">
        <term><command>go</command></term>
        <listitem>
          <para>
            est un outil pour la gestion du code source <application>Go</application>.
          </para>
          <indexterm zone="gcc go">
            <primary sortas="b-go">go</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="gofmt">
        <term><command>gofmt</command></term>
        <listitem>
          <para>
            est un outil pour le formatage du code source <application>Go</application>.
          </para>
          <indexterm zone="gcc gofmt">
            <primary sortas="b-gofmt">gofmt</primary>
          </indexterm>
        </listitem>
      </varlistentry>
       
      <varlistentry id="gfortran">
        <term><command>gfortran</command></term>
        <listitem>
          <para>est un compilateur basé sur GCC pour le langage <application>Fortran</application>.</para>
          <indexterm zone="gcc gfortran">
            <primary sortas="b-gfortran">gfortran</primary>
          </indexterm>
        </listitem>
      </varlistentry>
       </variablelist>
       </sect2>
</sect1>
