<sect2>
<title>Contents</title>

<para>The j2sdk package contains <userinput>appletviewer</userinput>,
<userinput>extcheck</userinput>, <userinput>idlj</userinput>,
<userinput>jar</userinput>, <userinput>jarsigner</userinput>,
<userinput>java</userinput>, <userinput>javac</userinput>,
<userinput>javadoc</userinput>, <userinput>javah</userinput>,
<userinput>javap</userinput>, <userinput>jdb</userinput>,
<userinput>keytool</userinput>, <userinput>native2ascii</userinput>,
<userinput>orbd</userinput>, <userinput>policytool</userinput>,
<userinput>rmic</userinput>, <userinput>rmid</userinput>,
<userinput>rmiregistry</userinput>, <userinput>rmiregistry</userinput>,
<userinput>serialver</userinput>, <userinput>servertool</userinput> and
<userinput>tnameserv</userinput>.</para>

</sect2>

<sect2><title>Description</title>

<sect3><title>appletviewer</title> 
<para>appletviewer runs Java applets outside of the context of a
browser.</para></sect3>

<sect3><title>extcheck</title>
<para>extcheck checks a specified jar file for title and version
conflicts with any extensions installed in the JDK software.</para></sect3>

<sect3><title>idlj</title>
<para>idlj generates Java bindings from a given IDL file.</para></sect3>

<sect3><title>jar</title>
<para>jar combines multiple files into a single JAR archive file.</para></sect3>

<sect3><title>jarsigner</title>
<para>jarsigner signs JAR (Java ARchive) files and verifys the
signatures and integrity of a signed JAR.</para></sect3>

<sect3><title>java</title>
<para>java launches a Java application by starting a Java runtime
environment, loading a specified class and invoking that class's main
method.</para></sect3>

<sect3><title>javac</title>
<para>javac reads class and interface definitions, written in the Java
programming language, and compiles them into bytecode class files.</para></sect3>

<sect3><title>javadoc</title>
<para>javadoc parses the declarations anddocumentation comments in a set
of Java source files and produces a corresponding set of HTML pages
describing the classes, interfaces, constructors, methods, and fields.</para></sect3>

<sect3><title>javah</title>
<para>javah generates C header and source files that are needed to
implement native methods.</para></sect3>

<sect3><title>javap</title>
<para>javap disassembles a Java class file.</para></sect3>

<sect3><title>jdb</title>
<para>jdb is a simple command-line debugger for Java classes.</para></sect3>

<sect3><title>keytool</title>
<para>keytool is a key and certificate management utility.</para></sect3>

<sect3><title>native2ascii</title>
<para>native2ascii converts files that contain non-supported character encoding
into files containing Latin-1 or Unicode-encoded charaters.</para></sect3>

<sect3><title>orbd</title>
<para>orbd is used to enable clients to transparently locate and invoke
persistent objects on servers in the CORBA environment.</para></sect3>

<sect3><title>policytool</title>
<para>policytool creates and manages a policy file graphically.</para></sect3>

<sect3><title>rmic</title>
<para>rmic generates stub and skeleton class files for remote objects
from the names of compiled Java classes that contain remote object
implementations.</para></sect3>

<sect3><title>rmid</title>
<para>rmid starts the activation system daemon.</para></sect3>

<sect3><title>rmiregistry</title>
<para>rmiregistry creates and starts a remote object registry on the
specified port on the current host.</para></sect3>

<sect3><title>serialver</title>
<para>serialver returns the serialVersionUID for one or more classes in
a form suitable for copying into an evolving class.</para></sect3>

<sect3><title>servertool</title>
<para>servertool provides an ease-of-use interface for application
programmers to register, unregister, startup and shutdown a server.</para></sect3>

<sect3><title>tnameserv</title>
<para>tnameserv starts the Java IDL name server.</para></sect3>


</sect2>

