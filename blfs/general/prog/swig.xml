<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
  <!ENTITY swig-download-http "&sourceforge-repo;/swig/swig-&swig-version;.tar.gz">
  <!ENTITY swig-download-ftp  " ">
  <!ENTITY swig-md5sum        "dcb9638324461b9baba8e044fe59031d">
  <!ENTITY swig-size          "5.60 Mo">
  <!ENTITY swig-buildsize     "80 Mo (up to 1.1 Go for tests)">
  <!ENTITY swig-time          "0.4 SBU (22 SBU for tests of Guile, Go, Java, Lua, Perl, PHP, Python 2 and 3, Ruby, and Tcl)">
]>
<sect1 id="swig" xreflabel="SWIG-&swig-version;">
  <?dbhtml filename="swig.html"?>
  <sect1info>
    <othername>$LastChangedBy: pierre $</othername>
    <date>$Date: 2013-12-14 20:03:50 +0100 (sam. 14 déc. 2013) $</date>
  </sect1info>
  
  <title>SWIG-&swig-version;</title>
  <indexterm zone="swig">
    <primary sortas="a-swig">SWIG</primary>
  </indexterm>
  
  <sect2 role="package">
    <title>Introduction à SWIG</title>
    <para>
       <application>SWIG</application> (Simplified Wrapper et Interface
       Generator) est un compilateur qui intègre <application>C</application>
       et <application>C++</application> avec des languages incluant
       <application>Perl</application>, <application>Python</application>,
       <application>Tcl</application>, <application>Ruby</application>,
       <application>PHP</application>, <application>Java</application>,
       <application>C#</application>, <application>D</application>,
       <application>Go</application>, <application>Lua</application>,
       <application>Octave</application>, <application>R</application>,
       <application>Scheme</application>, <application>Ocaml</application>,
       <application>Modula-3</application>,
       <application>Common Lisp</application>, et
       <application>Pike</application>. <application>SWIG</application> peut aussi 
       exporter ses arbres ad'analyse en s-expressions <application>Lisp</application>
       et <application>XML</application>.
    </para>
    <para>
       <application>SWIG</application> lit les fichiers d'entête annotés
       <application>C/C++</application> et crée un code enveloppe (code glue) afin de faire correspondre
       les bibliothèques disponibls
       <application>C/C++</application> dans les languages listés, ou pour 
       completer les programmes  <application>C/C++</application> avec un langage de script.
    </para>
        &lfs77_checked;
    <bridgehead renderas="sect3">Information sur le paquet </bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Téléchargement (HTTP) : <ulink url="&swig-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Téléchargement (FTP) : <ulink url="&swig-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Somme de contrôle MD5 du téléchargement : &swig-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Taille du téléchargement : &swig-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation de l'espace disque requis : &swig-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation du temps de construction : &swig-time;
        </para>
      </listitem>
    </itemizedlist>
    <bridgehead renderas="sect3">Dépendances de SWIG</bridgehead>
    <bridgehead renderas="sect4">Requises</bridgehead>
    <para role="required">
      <xref linkend="pcre"/>
    </para>
    <bridgehead renderas="sect4">Facultative</bridgehead>
    <para role="optional">
      <xref linkend="boost"/> pour les tests, et tous les langages mentionnés dans l'introduction, en tant que
      dépendances d'éxécution.
    </para>
    <para condition="html" role="usernotes">
      Notes utilisateur : <ulink url="&blfs-wiki;/swig"/>
    </para>
  </sect2>
  <sect2 role="installation">
    <title>Installation de SWIG</title>
    <para>
      Corrige un problème avec gccgo-4.9.2:
    </para>
<screen>
<userinput>sed -e 's/"\.")/"_")/' -i Source/Modules/go.cxx</userinput>
</screen>
    <para>
      Installez <application>SWIG</application> en lançant les commandes suivantes :
       
    </para>
<screen>
<userinput>./configure --prefix=/usr                      \
            --without-clisp                    \
            --without-maximum-compile-warnings &amp;&amp;
make</userinput>
</screen>
    <para>
      Pour tester le résultat, tapez : <command>make -k check</command>.
      Si vous avez
      <xref linkend="python2"/> et <xref linkend="python3"/>
      d'installés, seulement les tests Python-2 seront lancés. Vous pouvez lancer les tests pour
      Python-3 en tapant <command>PY3=1 make check-python-examples</command>
      suivi  par <command>PY3=1 make check-python-test-suite</command>.
      Selon la documentation de <application>SWIG</application>, l'échec de quelques tests ne doit
      pas être considéré comme alarmant.
    </para>
    <para>
      Maintenant, en tant qu'utilisateur <systemitem class="username">root</systemitem> :
    </para>
<screen role="root">
<userinput>make install &amp;&amp;
install -v -m755 -d /usr/share/doc/swig-&swig-version; &amp;&amp;
cp -v -R Doc/* /usr/share/doc/swig-&swig-version;</userinput>
</screen>
  </sect2>
  
  <sect2 role="commands">
    <title>Explications des commandes</title>
     <para>
      <parameter>--without-maximum-compile-warnings</parameter>: désactive la compatibilité
      renforcée ansi du compilateur, qui génère des erreurs dans les entêtes
      <application>Lua</application> (depuis Lua 5.3).
    </para>
    <para>
      <option>--without-&lt;language&gt;</option> : permet de désactiver la construction
      des tests et exemples pour
      &lt;language&gt;, mais tous les possibilités des langages de
      <application>SWIG</application> sont toujours construites.
    </para>
  </sect2>
  <sect2 role="content">
    <title>Contenu</title>
    <segmentedlist>
      <segtitle>Programmes installés</segtitle>
      <segtitle>Bibliothèque installée</segtitle>
      <segtitle>Répertoires installés</segtitle>
      <seglistitem>
        <seg>
          swig et ccache-swig
        </seg>
        <seg>
          Aucun
        </seg>
        <seg>
          /usr/share/swig/&swig-version; et
          /usr/share/doc/swig-&swig-version;
        </seg>
      </seglistitem>
    </segmentedlist>
    <variablelist>
      <bridgehead renderas="sect3">Description courte</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>
      
      <varlistentry id="swig-prog">
        <term><command>swig</command></term>
        <listitem>
          <para>
            prend un fichier d'interface contenant des déclarations C/C++ et
            des instructions spécifiques à SWIG, et génère le code enveloppe correspondant pour construire
            les modules d'extension.
          </para>
          <indexterm zone="swig swig-prog">
            <primary sortas="b-swig">swig</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="ccache-swig">
        <term><command>ccache-swig</command></term>
        <listitem>
          <para>
            est un cache de compilation, qui augmente la recompilation
            du code C/C++/SWIG.
          </para>
          <indexterm zone="swig ccache-swig">
            <primary sortas="b-ccache-swig">ccache-swig</primary>
          </indexterm>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect2>
</sect1>
