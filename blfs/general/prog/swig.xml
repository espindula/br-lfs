<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
  <!ENTITY swig-download-http "&sourceforge-repo;/swig/swig-&swig-version;.tar.gz">
  <!ENTITY swig-download-ftp  " ">
  <!ENTITY swig-md5sum        "62f9b0d010cef36a13a010dc530d0d41">
  <!ENTITY swig-size          "5.42 Mo">
  <!ENTITY swig-buildsize     "77 Mo (up to 1.1 Go for tests)">
  <!ENTITY swig-time          "0.4 SBU (24 SBU for tests of Guile, Go, Java, Lua, Perl, PHP, Python, Ruby, and tcl)">
]>
<sect1 id="swig" xreflabel="SWIG-&swig-version;">
  <?dbhtml filename="swig.html"?>
  <sect1info>
    <othername>$LastChangedBy: pierre $</othername>
    <date>$Date: 2013-12-14 20:03:50 +0100 (sam. 14 déc. 2013) $</date>
  </sect1info>
  
  <title>SWIG-&swig-version;</title>
  <indexterm zone="swig">
    <primary sortas="a-swig">SWIG</primary>
  </indexterm>
  
  <sect2 role="package">
    <title>Introduction à SWIG</title>
    <para>
       <application>SWIG</application> (Simplified Wrapper et Interface
       Generator) is a compiler that integrates <application>C</application>
       et <application>C++</application> with languages including
       <application>Perl</application>, <application>Python</application>,
       <application>Tcl</application>, <application>Ruby</application>,
       <application>PHP</application>, <application>Java</application>,
       <application>C#</application>, <application>D</application>,
       <application>Go</application>, <application>Lua</application>,
       <application>Octave</application>, <application>R</application>,
       <application>Scheme</application>, <application>Ocaml</application>,
       <application>Modula-3</application>,
       <application>Common Lisp</application>, et
       <application>Pike</application>. <application>SWIG</application> can
       also export its parse tree into <application>Lisp</application>
       s-expressions et <application>XML</application>.
    </para>
    <para>
       <application>SWIG</application> reads annotated
       <application>C/C++</application> header files et creates wrapper
       code (glue code) in order to make the corresponding
       <application>C/C++</application> libraries available to the listed
       languages, or to extend <application>C/C++</application> programs
       with a scripting language.
    </para>
    &lfs76_checked;
    <bridgehead renderas="sect3">Information sur le paquet </bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Téléchargement (HTTP) : <ulink url="&swig-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Téléchargement (FTP) : <ulink url="&swig-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Somme de contrôle MD5 du téléchargement : &swig-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Taille du téléchargement : &swig-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation de l'espace disque requis : &swig-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation du temps de construction : &swig-time;
        </para>
      </listitem>
    </itemizedlist>
    <bridgehead renderas="sect3">Dépendances de SWIG</bridgehead>
    <bridgehead renderas="sect4">Requises</bridgehead>
    <para role="required">
      <xref linkend="pcre"/>
    </para>
    <bridgehead renderas="sect4">Facultative</bridgehead>
    <para role="optional">
      <xref linkend="boost"/> for tests, et any of the languages mentionned
      in the introduction, as run-time dependencies
    </para>
    <para condition="html" role="usernotes">
      Notes utilisateur : <ulink url="&blfs-wiki;/swig"/>
    </para>
  </sect2>
  <sect2 role="installation">
    <title>Installation de SWIG</title>
    <para>
      Installez <application>SWIG</application> en lançant les commandes suivantes :
       
    </para>
<screen>
<userinput>./configure --prefix=/usr &amp;&amp;
make</userinput>
</screen>
    <para>
      Pour tester le résultat, tapez : <command>make -k check</command>. According to
      <application>SWIG</application>'s documentation, the failure of some
      tests should not be considered harmful.
    </para>
    <para>
      Maintenant, en tant qu'utilisateur <systemitem class="username">root</systemitem> :
    </para>
<screen role="root">
<userinput>make install &amp;&amp;
install -v -m755 -d /usr/share/doc/swig-&swig-version; &amp;&amp;
cp -v -R Doc/* /usr/share/doc/swig-&swig-version;</userinput>
</screen>
  </sect2>
  
  <sect2 role="commands">
    <title>Explications des commandes</title>
    <para>
      <option>--without-&lt;language&gt;</option> : allows disabling the
      building of tests et examples for &lt;language&gt;, but all the
      languages capabilities of <application>SWIG</application> are always
      built.
    </para>
  </sect2>
  <sect2 role="content">
    <title>Contenu</title>
    <segmentedlist>
      <segtitle>Programmes installés</segtitle>
      <segtitle>Bibliothèque installée</segtitle>
      <segtitle>Répertoires installés</segtitle>
      <seglistitem>
        <seg>
          swig et ccache-swig
        </seg>
        <seg>
          Aucun
        </seg>
        <seg>
          /usr/share/swig/&swig-version; et
          /usr/share/doc/swig-&swig-version;
        </seg>
      </seglistitem>
    </segmentedlist>
    <variablelist>
      <bridgehead renderas="sect3">Description courte</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>
      
      <varlistentry id="swig-prog">
        <term><command>swig</command></term>
        <listitem>
          <para>
            takes an interface file containing C/C++ declarations et
            SWIG special instructions, et generates the corresponding
            wrapper code needed to build extension modules.
          </para>
          <indexterm zone="swig swig-prog">
            <primary sortas="b-swig">swig</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="ccache-swig">
        <term><command>ccache-swig</command></term>
        <listitem>
          <para>
            is a compiler cache, which speeds up re-compilation of
            C/C++/SWIG code.
          </para>
          <indexterm zone="swig ccache-swig">
            <primary sortas="b-ccache-swig">ccache-swig</primary>
          </indexterm>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect2>
</sect1>
