<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
  <!ENTITY boost-download-http "&sourceforge-repo;/boost/boost_&boost-dl-version;.tar.bz2">
  <!ENTITY boost-download-ftp  " ">
  <!ENTITY boost-md5sum        "b8839650e61e9c1c0a89f371dd475546">
  <!ENTITY boost-size          "68 Mo">
  <!ENTITY boost-buildsize     "884 Mo (additional 1 Mo for Boost.Build's regression test)">
  <!ENTITY boost-time          "3.9 SBU (additional 1.5 SBU for Boost.Build's regression test)">
]>
<sect1 id="boost" xreflabel="boost-&boost-version;">
  <?dbhtml filename="boost.html"?>
  <sect1info>
    <othername>$LastChangedBy&nbsp;: bdubbs $</othername>
    <date>$Date&nbsp;: 2013-03-15 17:26:39 +0100 (Fri, 15 Mar 2013) $</date>
  </sect1info>
  <title>Boost-&boost-version;</title>
  <indexterm zone="boost">
    <primary sortas="a-boost">boost</primary>
  </indexterm>
  <sect2 role="package">
    <title>Introduction à Boost</title>
    <para><application>Boost</application> offre un ensemble de bibliothèques sources 
    libres, lues par les autres et portables en C++. Il inclut des bibliothèques
    d'algèbre linéaire, de génération de nombres pseudo-aléatoires, de 
    multithreading, de traitement d'images, d'expressions régulières et de tests
    d'unités.</para>
    &lfs77_checked;
    <bridgehead renderas="sect3">Package Information</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>Téléchargement (HTTP)&nbsp;: <ulink url="&boost-download-http;"/></para>
      </listitem>
      <listitem>
        <para>Téléchargement (FTP)&nbsp;: <ulink url="&boost-download-ftp;"/></para>
      </listitem>
      <listitem>
        <para>Somme de contrôle MD5 du téléchargement&nbsp;: &boost-md5sum;</para>
      </listitem>
      <listitem>
        <para>Taille du téléchargement&nbsp;: &boost-size;</para>
      </listitem>
      <listitem>
        <para>Estimation de l'espace disque requis&nbsp;: &boost-buildsize;</para>
      </listitem>
      <listitem>
        <para>Estimation du temps de construction&nbsp;: &boost-time;</para>
      </listitem>
    </itemizedlist>
   <bridgehead renderas="sect3">Dépendances de boost</bridgehead>
    <bridgehead renderas="sect4">Facultatives</bridgehead>
    <para role="Optional">
      <xref linkend="icu"/> et
      <xref linkend="python2"/>
    </para>
    <para condition="html" role="usernotes">Notes utilisateurs :
    <ulink url="&blfs-wiki;/boost"/></para>
  </sect2>
  <sect2 role="installation">
    <title>Installation de Boost</title>
    <para>Installez <application>boost</application> en lançant les commandes
    suivantes&nbsp;:</para>
<screen>
<userinput>sed -e '1 i#ifndef Q_MOC_RUN'     -e '$ a#endif'                -i boost/type_traits/detail/has_binary_operator.hpp &amp;&amp;
./bootstrap.sh --prefix=/usr &amp;&amp;
./b2 stage threading=multi link=shared</userinput>
</screen>
    <para>
       Pour lancer les tests de regression de la construction de Boost (<xref linkend="python2"/> requis),
       tapez <command>pushd tools/build/test; python test_all.py;
      popd</command>
    </para>
    <para>
      Pour lancer tous les tests de regression de chaque bibliothèque, tapez <command>pushd status; ../b2; popd</command>.
      Quelques tests peuvent échouer. Ils prennent beaucoup de temps (plus de 120/50 SBU sur un/quatre coeurs) et
       utilisent un espace disque volumineux (plus de 40Go).
      Vous pouvez utiliser le paramètre <parameter>-jN</parameter> pour les accélérer.
     </para>

    <para>
      Maintenant en tant qu'utilisateur <systemitem class="username">root</systemitem>&nbsp;:
    </para>
	
<screen role="root">
<userinput>./b2 install threading=multi link=shared</userinput>
</screen>
   </sect2>
  <sect2 role="commands">
    <title>Explications des commandes</title>
     <para>
      <command>sed ... has_binary_operator.hpp</command>: Cette commande
      corrige un entête pour contourner un problem avec la commande moc de QT. C'est nécessaire
      pour construire quelques paquets de KDE.
    </para>
    <para>
      <parameter>threading=multi</parameter>&nbsp;: ce paramètre fait que
      <application>Boost</application> est construit avec le support multithread.
    </para>
    <para><parameter>link=shared</parameter>&nbsp;: Ce paramètre fait que seulement les bibliothèques partagées
    sont créées, excepté pour libboost_exception et libboost_test_exec_monitor
    qui sont créés statiquement. La plupart des personnes n'auront pas besoin des bibliothèques statiques.
    En effet la plupart des programmes utilisant  <application>Boost</application> se servent uniquement des en-têtes, vous pouvez omettre ce paramètre si vous n'en n'avez pas besoin.</para>
 
    <para>
       <option>-jN</option>: CE paramètre peut être utilisé dans la ligne de commande
       <command>b2</command>, pour lancez N processus en parallèle.
    </para>
 </sect2>
<sect2 role="content">
    <title>Contenu</title>
    <segmentedlist>
      <segtitle>Programmes installés</segtitle>
	<segtitle>Bibliothèques installées</segtitle>
      <segtitle>Répertoire installé</segtitle>
      <seglistitem>
	<seg>Aucun</seg>
        <seg>
          libboost_atomic.so, libboost_chrono.so, libboost_container.so,
          libboost_context.so, libboost_coroutine.so, libboost_date_time.so,
          libboost_exception.a, libboost_filesystem.so, libboost_graph.so,
          libboost_iostreams.so, libboost_locale.so, libboost_log_setup.so,
          libboost_log.so, libboost_math_c99.so, libboost_math_c99f.so,
          libboost_math_c99l.so, libboost_math_tr1.so, libboost_math_tr1f.so,
          libboost_math_tr1l.so, libboost_prg_exec_monitor.so,
          libboost_program_options.so, libboost_python.so, libboost_random.so,
          libboost_regex.so, libboost_serialization.so, libboost_signals.so,
          libboost_system.so, libboost_test_exec_monitor.a, libboost_thread.so,
          libboost_timer.so, libboost_unit_test_framework.so, libboost_wave.so,
          et libboost_wserialization.so
        </seg>
        <seg>
          /usr/include/boost
        </seg>
      </seglistitem>
    </segmentedlist>
  </sect2>
</sect1>
