<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY curl-download-http "https://curl.se/download/curl-&curl-version;.tar.xz">
  <!ENTITY curl-download-ftp  "">
  <!ENTITY curl-md5sum        "cf9f8553762150ef0ebcd5ee412737f5">
  <!ENTITY curl-size          "2.4&nbsp;Mo">
  <!ENTITY curl-buildsize     "98&nbsp;Mo (plus 20&nbsp;Mo pour les tests)">
  <!ENTITY curl-time          "0.3 SBU (with parallelism=4; add 19 SBU for tests)">
]>

<sect1 id="curl" xreflabel="cURL-&curl-version;">
  <?dbhtml filename="curl.html"?>

  <sect1info>
<date>$Date$</date></sect1info>

  <title>cURL-&curl-version;</title>

  <indexterm zone="curl">
    <primary sortas="a-cURL">cURL</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction à cURL</title>

    <para>
      Le paquet <application>cURL</application> contient un utilitaire et une
bibliothèque utilisés pour le transfert de fichiers avec la syntaxe URL vers
les protocoles suivants&nbsp;: FTP, FTPS, HTTP, HTTPS, SCP, SFTP, TFTP,
TELNET, DICT, LDAP, LDAPS et FILE. Cette capacité de télécharger et de
téléverser des fichiers peut être incorporée à d'autres programmes pour
supporter des fonctions comme le streaming de média.
    </para>

    &lfs110a_checked;

    <bridgehead renderas="sect3">Informations sur le paquet</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Téléchargement (HTTP)&nbsp;: <ulink url="&curl-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Téléchargement (FTP)&nbsp;: <ulink url="&curl-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Somme de contrôle MD5 du téléchargement&nbsp;: &curl-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Taille du téléchargement&nbsp;: &curl-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation de l'espace disque requis&nbsp;: &curl-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation du temps de construction&nbsp;: &curl-time;
        </para>
      </listitem>
    </itemizedlist>


    <!--
    <bridgehead renderas="sect3">
Additional Downloads</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Required patch:
          <ulink url="&patch-root;/curl-&curl-version;-function_naming-1.patch"/>
        </para>
      </listitem>
    </itemizedlist>
-->
<bridgehead renderas="sect3">Dépendances de cURL</bridgehead>

    <bridgehead renderas="sect4">Recommandées</bridgehead>
    <para role="recommended">
      <xref role="runtime" linkend="make-ca"/> (exécution)
    </para>

    <bridgehead renderas="sect4">Facultatives</bridgehead>
    <para role="optional">
      <!--<ulink url="https://tls.mbed.org/">
mbed TLS</ulink> (formerly known as
      PolarSSL), and -->
<!-- mbedTLS/PolarSSL support was removed in 7.65.1 -->
<xref linkend="brotli"/>, <xref linkend="c-ares"/>, <xref
linkend="gnutls"/>, <xref linkend="libidn2"/>, <xref linkend="libpsl"/>,
<xref linkend="libssh2"/>, <xref linkend="mitkrb"/>, <xref
linkend="nghttp2"/>, <xref linkend="openldap"/>, <xref linkend="samba"/>,
<ulink
url="https://www.secureauth.com/labs/open-source-tools/impacket/">impacket</ulink>,
<ulink url="https://launchpad.net/libmetalink/">libmetalink</ulink>, <ulink
url="http://rtmpdump.mplayerhq.hu/">librtmp</ulink>, <ulink
url="https://github.com/ngtcp2/ngtcp2/">ngtcp2</ulink>, <ulink
url="https://github.com/cloudflare/quiche">quiche</ulink> et <ulink
url="http://spnego.sourceforge.net/">SPNEGO</ulink>
    </para>

    <bridgehead renderas="sect4">Facultatives pour lancer la suite de tests</bridgehead>
    <para role="optional">
      
      <!-- stunnel is still listed in the docs as required, but 7.58.0
       tests completed happily without it, although the test for unit1323
       reported that the tool set in the test case does not exist - ken -->
<xref linkend="stunnel"/> (pour les tests HTTPS et FTPS) et <xref
linkend="valgrind"/> (ralenti les tests et peut causer des échecs)
    </para>

    <para condition="html" role="usernotes">Notes utilisateur&nbsp;: <ulink url="&blfs-wiki;/curl"/>
    </para>
  </sect2>

  <sect2 role="installation">
    <title>Installation de cURL</title>

    <para>
      Installez <application>cURL</application> en lançant les commandes
suivantes&nbsp;:
    </para>

<!--
   For version 7.54.1 I got:
   TESTDONE: 869 tests out of 869 reported OK: 100%
   TESTDONE: 1092 tests were considered during 1080 seconds

    <para>

      Running the test suite is optional. About 2% of the tests fail. Increase
      in test time by each failed test is about 10%. Tests SBU above was
      obtained disabling failing tests, with:
    </para>

    2017-10-29 - bdubbs
    For version 7.56.1 I had a lot of test failures which included long
    timeouts.  Could not determine the cause of the timeouts or failures,
    but I was missing c-ares, MIT Kerberos, ldap, samba, and the six
    external packages.

    2017-12-01 - bdubbs
    Still a lot of test failures.  I did have c-ares, Kerberos, and ldap
    installed this time.  Best guess is that servers are not available.

    2018-08-01 - renodr
    No test failures, but I didn't have any of the optional dependencies except
    for c-ares and libidn2. I might re-run this test suite before release with
    all of the optional deps, but right now, it isn't a priority - rather
    the security fix is.
-->
<screen><userinput>./configure --prefix=/usr                           \
            --disable-static                        \
            --with-openssl                          \
            --enable-threaded-resolver              \
            --with-ca-path=/etc/ssl/certs &amp;&amp;
make</userinput></screen>



    <para>
       <!--       Four tests, 1139, 1140, 1173, and 1177, are known to fail due to
       missing executables from the optional dependencies.-->
Pour lancer la suite de tests, tapez&nbsp;: <command>make test</command>.

    </para>


    <!-- Two (of 857) tests
fail for unknown reasons, and all tests fail is valgrind is installed. Moving
valgrind out of $PATH is recommended if you wish to run the test suite while
it is installed.

Added by Pierre for curl-7.59.0:
no stunnel, no valgrind, no options
Warning: smb server unexpectedly alive
Warning: dict server unexpectedly alive
TESTDONE: 950 tests out of 951 reported OK: 99%
TESTFAIL: These test cases failed: 1148
TESTDONE: 1189 tests were considered during 362 seconds.
__________

         if stunnel and valgrind are not installed, and also most options
         (I had rtmpdump), the tests complete without problems.
Warning: smb server unexpectedly alive
Warning: dict server unexpectedly alive
TESTDONE: 938 tests out of 938 reported OK: 100%
TESTDONE: 1175 tests were considered during 355 seconds.
         and no. I don't have smb - so commenting the rest of this:
      To run the test suite, issue: <command>make test</command>. Many tests
      may fail that depend on optional dependencies that may not be installed
      or upstream servers that may not be available, especially for tests
      numbered 700 and above.
      Test time may be significantly increase due to hanging tests that fail.
__________
Added by Bruce for curl-7.60.0:
TESTDONE: 957 tests out of 959 reported OK: 99%
TESTFAIL: These test cases failed: 1139 1140
TESTDONE: 1196 tests were considered during 1184 seconds.
From the logs, both appear to be ipv6 releated.

==========
Added by Douglas for curl-7.61.0:
TESTDONE: 961 tests out of 961 reported OK: 100%
TESTDONE: 1202 tests were considered during 338 seconds.
I only have c-ares and libidn2 installed, I will likely try before release
with all optional dependencies in the book installed.

=========
7.61.1 NOTE: The test suite is extremely noisy, complaining about verification errors.
It's possible this is due to openssl-1.1.1, BUT 79/79 tests report as 100% OK. I had
c-ares, libpsl, and libidn1/2 installed. - Doug

========
7.62.0: All tests passed. libpsl, c-ares, libssh2, libidn2 installed.
All 1098 tests report OK.

=======
Added by Douglas for curl-7.64.0:
TESTDONE: 1022 tests out of 1023 reported OK: 99%
TESTFAIL: These tests cases failed: 323
TESTDONE: 1235 tests were considered during 1279 seconds.
For dependencies, I had c-ares, gnutls, libidn2, libpsl, krb5, libssh2, nghttp2,
OpenLDAP, Samba, stunnel, and Valgrind installed.
=======
Added by bdubbs for curl-7.64.1:
TESTDONE: 1022 tests out of 1025 reported OK: 99%
TESTFAIL: These test cases failed: 323 1139 1140
TESTDONE: 1242 tests were considered during 1483 seconds

=======
Added by renodr for curl-7.65.1:
TESTDONE: 996 tests out of 997 reported OK: 99%
TESTFAIL: These test cases failed: 1560
TESTDONE: 1249 tests were considered during 1091 seconds.
All dependencies except for externals installed.
=======
Added by bdubbs for curl-7.65.2:
TESTDONE: 1034 tests out of 1036 reported OK: 99%
TESTFAIL: These test cases failed: 323 1560
TESTDONE: 1254 tests were considered during 1362 seconds.
Time above does not include test build time.
All dependencies except for externals installed.
=======
Added by bdubbs for curl-7.65.3:
TESTDONE: 1031 tests out of 1036 reported OK: 99%
TESTFAIL: These test cases failed: 323 1139 1140 1173 1560
TESTDONE: 1254 tests were considered during 1364 seconds.

The tests that fail seem to be somewhat random.  What happened between
yesterday and today that that tests 1139 1140 1173 now fail?

=======
Added by bdubbs for curl-7.68.0:
TESTDONE: 1066 tests out of 1071 reported OK: 99%
TESTFAIL: These test cases failed: 323 1139 1140 1173 1560
TESTDONE: 1290 tests were considered during 1515 seconds.

=======
Added by bdubbs for curl-7.69.0:
TESTDONE: 074 tests out of 1079 reported OK: 99%
TESTFAIL: These test cases failed: 323 1139 1140 1173 1560
TESTDONE: 1320 tests were considered during 1514 seconds.

For curl-7.69.1, 1082 tests out of 1086 reported OK.  1560 now passes.
1330 tests were considered during 1528 seconds.

======
Added by renodr for curl-7.70.0:
TESTDONE: 1062 tests out of 1062 reported OK: 100%
TESTDONE: 1352 tests were considered during 1218 seconds.
Tests were ran with all dependencies present except for stunnel.
impacket only seems to add one extra test to the mix as well.

======
Added by renodr for curl-7.71.0:
TESTDONE: 1072 tests out of 1072 reported OK: 100%
TESTDONE: 1364 tests were considered during 1202 seconds.
Tests were run similarly to 7.70.0 - all deps except for stunnel.

======
Added by renodr for curl-7.71.1:
TESTDONE: 1076 tests out of 1076 reported OK: 100%
TESTDONE: 1368 tests were considered during 1207 seconds.
Tests were run similarly to 7.71.0, including impacket, but no stunnel.

======
Added by renodr for curl-7.72.0:
TESTDONE: 1094 tests out of 1097 reported OK: 99%
TESTFAIL: These test cases failed: 1700 1701 1702
TESTDONE: 1374 tests were considered during 1285 seconds.
Tests have all BLFS dependencies with the exception of stunnel;
and the optional impacket python module was installed.
Tests seem to be failing due to a missing 'nghttpx' executable
used to start a test server.

======
Added by renodr for curl-7.73.0:
TESTDONE: 1121 tests out of 1121 reported OK: 100%
TESTDONE: 1387 tests were considered during 1303 seconds.
Tests have all BLFS dependencies installed with the exception of stunnel,
as well as the optional impacket installed.

======
Added by renodr for curl-7.74.0:
TESTDONE: 1119 tests out of 1119 reported OK: 100%
TESTDONE: 1388 tests were considered during 1370 seconds.
Tests have all BLFS dependencies installed, as well as impacket.
stunnel not installed.

======
Added by bdubbs for curl-7.79.0:
TESTDONE: 1432 tests were considered during 1543 seconds.
TESTDONE: 1208 tests out of 1212 reported OK: 99%

Tests have all BLFS dependencies installed but without impacket.

======
Added by plabs for curl-7.79.1:
TESTDONE: 1434 tests were considered during 1652 seconds.
TESTDONE: 1171 tests out of 1171 reported OK: 100%

Tests have all BLFS dependencies installed except stunnel but without impacket.
-->
<para>
      Maintenant, en tant qu'utilisateur <systemitem
class="username">root</systemitem>&nbsp;:
    </para>

<screen role="root"><userinput>make install &amp;&amp;

rm -rf docs/examples/.deps &amp;&amp;

find docs \( -name Makefile\* -o -name \*.1 -o -name \*.3 \) -exec rm {} \; &amp;&amp;

install -v -d -m755 /usr/share/doc/curl-&curl-version; &amp;&amp;
cp -v -R docs/*     /usr/share/doc/curl-&curl-version;</userinput></screen>

    <para>
      Des tests simples pour le <command>curl</command> nouvellement
installé&nbsp;: <command>curl --trace-ascii debugdump.txt
http://www.example.com/</command> et <command>curl --trace-ascii d.txt
--trace-time http://example.com/</command>. Inspectez les fichiers de traces
locaux <filename>debugdump.txt</filename> et <filename>d.txt</filename>, qui
contiennent la version téléchargée, les informations des fichiers, etc. Un
fichier dispose du temps pour chaque action loguée.
    </para>
  </sect2>

  <sect2 role="commands">
    <title>Explication des commandes</title>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../../xincludes/static-libraries.xml"/>

    <para>
      <parameter>--enable-threaded-resolver</parameter>&nbsp;: Ce paramètre active
le résolveur DNS construit dans <application>cURL</application>.
    </para>

    <para>
      <parameter>--with-ca-path=/etc/ssl/certs</parameter>&nbsp;: Ce paramètre met
en place l'emplacement de l'ensemble des certificats d'autorité de BLFS.
    </para>

    <para>
      <parameter>--with-openssl</parameter>&nbsp;: ce paramètre choisit
<application>OpenSSL</application> comme implémentation SSL/TLS. Cela a
maintenant l'air obligatoire.
    </para>

    <para>
      <option>--with-gssapi</option>&nbsp;: Ce paramètre ajoute le support de
<application>Kerberos 5</application> à <filename
class="libraryfile">libcurl</filename>.
    </para>

    <para>
      <option>--without-ssl --with-gnutls</option>&nbsp;: Utilisez-le pour
compiler avec le support de <application>GnuTLS</application> à la place de
<application>OpenSSL</application> pour SSL/TLS.
    </para>

    <para>
      <option>--with-ca-bundle=/etc/pki/tls/certs/ca-bundle.crt</option>&nbsp;:
Utilisez ce paramètre plutôt que <parameter>--with-ca-path</parameter> si
vous construisez avec le support de <application>GnuTLS</application> au
lieu de <application>OpenSSL</application> pour SSL/TLS.
    </para>

    <para>
      <option>--with-libssh2</option>&nbsp;: ce paramètre ajoute la prise en
charge de <application>SSH</application> à cURL. Elle est désactivée par
défaut.
    </para>

    <para>
      <option>--enable-ares</option>&nbsp;: ce paramètre ajoute la prise en charge
de la résolution DNS à travers la bibliothèque c-ares. Cela est désactivé
par défaut, mais améliore la vitesse de résolution des requêtes DNS.
    </para>

    <para>
      <command>find docs ... -exec rm {} \;</command>&nbsp;: Cette commande
supprime les <filename>Makefiles</filename> et les fichiers de manuel du
répertoire de documentation qui seraient sinon installés par la commande
suivante.
    </para>

  </sect2>

  <sect2 role="content">
    <title>Contenu</title>

    <segmentedlist>
      <segtitle>Programmes installés</segtitle>
      <segtitle>Bibliothèque installée</segtitle>
      <segtitle>Répertoires installés</segtitle>

      <seglistitem>
        <seg>
           curl et curl-config
        </seg>
        <seg>
           libcurl.so
        </seg>
        <seg>
          /usr/include/curl et /usr/share/doc/curl-&curl-version;
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descriptions courtes</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="curl-prog">
        <term><command>curl</command></term>
        <listitem>
         <para>
           est un outil en ligne de commande pour transférer des fichiers à syntaxe
d'URL
         </para>
          <indexterm zone="curl curl-prog">
            <primary sortas="b-curl">curl</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="curl-config">
        <term><command>curl-config</command></term>
        <listitem>
          <para>
            affiche les informations sur la dernière compilation, comme les
bibliothèques liées et le réglage du préfixe
          </para>
          <indexterm zone="curl curl-config">
            <primary sortas="b-curl-config">curl-config</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libcurl">
        <term><filename class="libraryfile">libcurl.so</filename></term>
        <listitem>
          <para>
            fournit les fonctions de l'API requises par <command>curl</command> et
d'autres programmes
          </para>
          <indexterm zone="curl libcurl">
            <primary sortas="c-libcurl">libcurl.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
