<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY falkon-download-http "&kf5apps-download-http;/falkon-&kf5apps-version;.tar.xz">
  <!ENTITY falkon-download-ftp  "">
  <!ENTITY falkon-md5sum        "d86443f954c7f02f90abb349fa91163b">
  <!ENTITY falkon-size          "2,5&nbsp;Mo">
  <!ENTITY falkon-buildsize     "130&nbsp;Mo">
  <!ENTITY falkon-time          "1,1&nbsp;SBU (avec parallélisme = 4)">
]>

<sect1 id="falkon" xreflabel="falkon-&kf5apps-version;">
  <?dbhtml filename="falkon.html"?>


  <title>Falkon-&kf5apps-version;</title>

  <indexterm zone="falkon">
    <primary sortas="a-falkon">falkon</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction à falkon</title>

    <para>
      <application>Falkon</application> est un navigateur web pour KDE qui utilise
le moteur de rendu QtWebEngine. Il était connu sous le nom de
<application>QupZilla</application>. Il se veut un navigateur web léger
disponible sur toutes les plateformes majeures.
    </para>

    <para>
      Bien que <application>falkon</application> fasse maintenant partie de KDE,
il peut être installé sans KDE (au prix de la fonctionnalité
<application>kwallet</application>).
    </para>

    <warning>
      <para>
        Falkon s'appuie sur QtWebEngine. Il utilise une copie forkée de chromium, et
est donc vulnérable à plusieurs problèmes qui y ont été trouvés. Les
développeurs de Qt ont toujours préféré publier en même temps que le reste
de Qt (plutôt que d'ajouter des corrections en urgence). Maintenant qu'ils
se préparent à passer à Qt6, les version 5.15.3 et les versions suivantes de
Qt-5.15 ne sont initialement disponibles que pour leurs clients. QtWebEngine
est un peu une exception avec sa licence LGPL, mais récupérer les sources
git (avec le sous-module chromium forké) et l'amener à un point où il est
possible de le compiler sur un système BLFS récent peut demander beaucoup
d'effort. Soyez conscient que les futures corrections de sécurité peuvent
être retardées, au point où vous pourriez vouloir utiliser un autre
navigateur.
      </para>
    </warning>

    &lfs120_checked;

    <bridgehead renderas="sect3">Informations sur le paquet</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Téléchargement (HTTP)&nbsp;: <ulink url="&falkon-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Téléchargement (FTP)&nbsp;: <ulink url="&falkon-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Somme de contrôle MD5&nbsp;: &falkon-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Taille du téléchargement&nbsp;: &falkon-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation de l'espace disque requis&nbsp;: &falkon-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation du temps de construction&nbsp;: &falkon-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Dépendances de falkon</bridgehead>

    <bridgehead renderas="sect4">Requises</bridgehead>
    <para role="required">
      <xref linkend="extra-cmake-modules"/>, <xref linkend="kf5-frameworks"/>
(pour karchive) et <xref linkend="qtwebengine"/>
    </para>

    <note>
      <para>
        Strictement parlant, seul karchive est nécessaire pour construire falkon,
mais plusieurs autres paquets de KF5 peuvent être utilisés s'ils sont
présents. Pour ne construire que karchive, téléchargez ce paquet à partir du
répertoire spécifié dans <xref linkend="kf5-frameworks"/> et utilisez les
instructions de construction de cette page en change $KF5_PREFIX par /usr.
      </para>
    </note>

    <bridgehead renderas="sect4">Facultatives</bridgehead>
    <para role="optional">
      <xref linkend="gnome-keyring"/>, <ulink
url="https://pypi.org/project/PySide2/">PySide2</ulink> et <ulink
url="https://pypi.org/project/shiboken2/">Shiboken2</ulink>
    </para>

    <para condition="html" role="usernotes">
      Notes des rédacteurs&nbsp;: <ulink url="&blfs-wiki;/falkon"/>
    </para>
  </sect2>

  <sect2 role="installation">
    <title>Installation de falkon</title>

    <para>
      Installez <application>falkon</application> en exécutant les commandes
suivantes&nbsp;:
    </para>

<screen><userinput>mkdir build &amp;&amp;
cd    build &amp;&amp;

cmake -DCMAKE_INSTALL_PREFIX=/usr \
      -DCMAKE_BUILD_TYPE=Release  \
      .. &amp;&amp;

make</userinput></screen>

    <para>
      Pour tester les résultats, lancez&nbsp;: <command>make test</command>. Tous
les tests devraient passer. Si l'un d'entre eux échoue, les résultats
complets seront dans <filename>Testing/Temporary/LastTest.log</filename>.
    </para>

    <para>
      Maintenant, en tant qu'utilisateur <systemitem
class="username">root</systemitem>&nbsp;:
    </para>

<screen role="root"><userinput>make install</userinput></screen>

    <para>
      Si vous avez installé <application>Pyside2</application> vous voudrez
examiner <command>hellopython.py</command> qui se trouve dans le répertoire
<filename class="directory">scripts/</filename> et peut-être le copier dans
votre répertoire personnel.
    </para>

  </sect2>

  <sect2 role="commands">
    <title>Explication des commandes</title>

    <para>
      <option>-DBUILD_TESTING=OFF</option>&nbsp;: Cela économisera un peu de temps
et d'espace disque en ne construisant pas les programmes de tests. Utilisez
cela si vous ne souhaitez pas lancer les tests.
    </para>

  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Programmes installés</segtitle>
      <segtitle>Bibliothèque installée</segtitle>
      <segtitle>Répertoire installé</segtitle>

      <seglistitem>
        <seg>
          falkon
        </seg>
        <seg>
          libFalkonPrivate.so.3
        </seg>
        <seg>
          /usr/share/falkon
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descriptions courtes</bridgehead>
      <?dbfo list-presentation="list"?> <?dbhtml list-presentation="table"?>

      <varlistentry id="falkon-prog">
        <term><command>falkon</command></term>
        <listitem>
          <para>
            est un navigateur web qui utilise qtwebengine
          </para>
          <indexterm zone="falkon falkon-prog">
            <primary sortas="b-falkon">falkon</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libFalkonPrivate.so.3">
        <term><filename class="libraryfile">libFalkonPrivate.so.3</filename></term>
        <listitem>
          <para>
            contient les fonctions utilisées par falkon
          </para>
          <indexterm zone="falkon libFalkonPrivate.so.3">
            <primary sortas="c-libFalkonPrivate.so.3">libFalkonPrivate.so.3</primary>
          </indexterm>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect2>

</sect1>
