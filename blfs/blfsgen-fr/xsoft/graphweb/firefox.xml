<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY firefox-download-http "&mozilla-http;/firefox/releases/&firefox-version;esr/source/firefox-&firefox-version;esr.source.tar.xz">
  <!ENTITY firefox-download-ftp  "">
  <!ENTITY firefox-md5sum        "&firefox-md5;">
  <!ENTITY firefox-size          "457&nbsp;Mo">
  <!-- NB with stylo, much of the build uses rust, and therefore cargo files.
    But the extra cached cargo files, if any, seem to be minimal -->
  <!ENTITY firefox-buildsize     "7,0&nbsp;Go (197&nbsp;Mo installés) sans les tests">
  <!-- editors: with ff63 and rust-1.29, ./mach build -j4 is probably the
   most practical way to get a timing on a machine with more cores, if taking
   cores offline is not practical. If in doubt, round up -->
  <!ENTITY firefox-time          "20&nbsp;SBU avec -j4, sans les tests">
]>

<sect1 id="firefox" xreflabel="Firefox-&firefox-version;">
  <!-- indicate this is the ESR variant,
  The point was that the 102.0 stable release differed slightly.
  <title>
Firefox-&firefox-version;</title>-->
<?dbhtml filename="firefox.html" ?>



  <title>Firefox-&firefox-version;esr</title>

  <indexterm zone="firefox">
    <primary sortas="a-Firefox">Firefox</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction à Firefox</title>

    <para>
      <application>Firefox</application> est un navigateur autonome basé sur la
base de code de <application>Mozilla</application>.
    </para>

    &lfs113_checked;

    <bridgehead renderas="sect3">Informations sur le paquet</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Téléchargement (HTTP)&nbsp;: <ulink url="&firefox-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Téléchargement (FTP)&nbsp;: <ulink url="&firefox-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Somme de contrôle MD5&nbsp;: &firefox-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Taille du téléchargement&nbsp;: &firefox-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation de l'espace disque requis&nbsp;: &firefox-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation du temps de construction&nbsp;: &firefox-time;
        </para>
      </listitem>
    </itemizedlist>



    <!--<bridgehead renderas="sect3">
Additional Downloads</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Required patch:
          <ulink url="&patch-root;/firefox-&firefox-version;esr-gcc12_fix-1.patch"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Recommended patch:
          <ulink url="&patch-root;/firefox-&firefox-version;esr-disable_rust_test-1.patch"/>
        </para>
      </listitem>
    </itemizedlist>-->
<note>
      <para>
        Le nom du répertoire est firefox-&firefox-version;
      </para>

      <para>
        L'extraction de l'archive réinitialisera les permissions du répertoire
courant à 0755 si vous avez la permission de faire cela. Si vous le faites
dans un répertoire où le droit sticky est activé, comme <filename
class="directory">/tmp</filename> l'opération se terminera avec les messages
d'erreur&nbsp;:
      </para>

<literallayout>tar: .: Cannot utime: Operation not permitted
tar: .: Cannot change mode to rwxr-xr-t: Operation not permitted
tar: Exiting with failure status due to previous errors
</literallayout>

      <para>
        Elle termine avec un statut différent de zéro, mais cela ne signifie
<emphasis>PAS</emphasis> qu'il y a un vrai problème. Ne décompressez pas en
tant que <systemitem class="username">root</systemitem> dans un répertoire
où le droit sticky est activé - cela le désactiverait.
      </para>

      <para>
        Comme avec les autres gros paquets qui utilisent C++ (ou rust), le temps en
SBU pour le construire peut varier plus grandement que vous ne vous y
attendez. Le temps de construction peut augmenter significativement si la
machine doit utiliser l'espace d'échange pour cela.
      </para>

      <para>
        Bien qu'en amont on préfère utiliser <application>PulseAudio</application>,
pour le moment <application>Alsa</application> peut toujours être
utilisé. Les deux ont besoin de configuration à l'exécution pour que le son
fonctionne.
      </para>
    </note>

    <bridgehead renderas="sect3">Dépendances de Firefox</bridgehead>

    <bridgehead renderas="sect4">Requises</bridgehead>
    <para role="required">
      <xref linkend="autoconf213"/>, <xref linkend="cbindgen"/>, <xref
linkend="dbus-glib"/>, <xref linkend="gtk3"/>, <xref linkend="libnotify"/>,
<xref linkend="llvm"/> (clang, utilisé pour bindgen même si vous utilisez
gcc), <xref linkend="nodejs"/>, <xref linkend="pulseaudio"/> (ou <xref
linkend="alsa-lib"/> si vous modifiez le mozconfig&nbsp;; maintenant rendu
obsolète par mozilla), dans tous les cas lisez les informations de
configuration, <xref linkend="python3"/> (reconstruit après l'installation
de <xref linkend="sqlite"/>), <xref linkend="startup-notification"/>, <xref
linkend="unzip"/>, <xref linkend="yasm"/> et <xref linkend="zip"/>
    </para>

    <bridgehead renderas="sect4">Recommandées</bridgehead>
    <para role="recommended">
      <xref linkend="icu"/>, <xref linkend="libevent"/>, <xref linkend="libvpx"/>,
<xref linkend="libwebp"/>, <xref linkend="nasm"/>, <xref linkend="nss"/>
    </para>

    <note>
      <para>
        Si vous n'installez pas les dépendances recommandées, alors les versions
internes de ces paquets seront utilisés. Elles peuvent être testées pour
fonctionner, mais elles peuvent être dépassées ou contenir des trous de
sécurité.
      </para>
    </note>

    <bridgehead renderas="sect4">Facultatives</bridgehead>
    <para role="optional">
      <xref linkend="curl"/>, <xref linkend="doxygen"/>, <xref role="runtime"
linkend="ffmpeg"/> (à l'exécution, pour jouer des fichiers mov, mp3 ou mp4),
<xref linkend="liboauth"/>, <xref linkend="valgrind"/>, <xref
linkend="wget"/>, <xref linkend="wireless_tools"/>, <ulink
url="https://github.com/libproxy/libproxy">libproxy</ulink>
    </para>

    <para condition="html" role="usernotes">
      Notes utilisateur&nbsp;: <ulink url="&blfs-wiki;/firefox"/>
    </para>
  </sect2>

  <sect2 role="installation">
    <title>Installation de Firefox</title>

    <para>
      La configuration de <application>Firefox</application> se fait en créant un
fichier <filename>mozconfig</filename> contenant les options de
configuration désirées. Un <filename>mozconfig</filename> par défaut est
créé ci-dessous. Pour voir toute la liste des options de configuration
disponibles, (et une description abrégée de chacune), faites <command>./mach
configure &amp;&amp; ./configure --help | less</command>. Il se peut que
vous vouliez aussi relire tout le fichier et dé-commenter les autres options
souhaitées. Créez le fichier en tapant la commande suivante&nbsp;:
    </para>

<screen><userinput>cat &gt; mozconfig &lt;&lt; "EOF"
<literal># If you have a multicore machine, all cores will be used by default.

# If you have installed (or will install) wireless-tools, and you wish
# to use geolocation web services, comment out this line
ac_add_options --disable-necko-wifi

# API Keys for geolocation APIs - necko-wifi (above) is required for MLS
# Uncomment the following line if you wish to use Mozilla Location Service
#ac_add_options --with-mozilla-api-keyfile=$PWD/mozilla-key

# Uncomment the following line if you wish to use Google's geolocation API
# (needed for use with saved maps with Google Maps)
#ac_add_options --with-google-location-service-api-keyfile=$PWD/google-key

# startup-notification is required since firefox-78

# Uncomment the following option if you have not installed PulseAudio and
# want to use alsa instead
#ac_add_options --enable-audio-backends=alsa

# Comment out following options if you have not installed
# recommended dependencies:
ac_add_options --with-system-icu
ac_add_options --with-system-libevent
ac_add_options --with-system-libvpx
ac_add_options --with-system-nspr
ac_add_options --with-system-nss
ac_add_options --with-system-webp

# Unlike with thunderbird, although using the gold linker can
# save four megabytes in the installed file it does not make
# the build faster.

# libdavid (av1 decoder) requires nasm. Uncomment this if nasm
# has not been installed. Do not uncomment this if you have
# ffmpeg-5 installed.
#ac_add_options --disable-av1

# You cannot distribute the binary if you do this
ac_add_options --enable-official-branding

# Stripping is now enabled by default.
# Uncomment these lines if you need to run a debugger:
#ac_add_options --disable-strip
#ac_add_options --disable-install-strip

# Disabling debug symbols makes the build much smaller and a little
# faster. Comment this if you need to run a debugger. Note: This is
# required for compilation on i686.
ac_add_options --disable-debug-symbols

# The elf-hack is reported to cause failed installs (after successful builds)
# on some machines. It is supposed to improve startup time and it shrinks
# libxul.so by a few MB - comment this if you know your machine is not affected.
ac_add_options --disable-elf-hack

# The BLFS editors recommend not changing anything below this line:
ac_add_options --prefix=/usr
ac_add_options --enable-application=browser
ac_add_options --disable-crashreporter
ac_add_options --disable-updater
# enabling the tests will use a lot more space and significantly
# increase the build time, for no obvious benefit.
ac_add_options --disable-tests

# The default level of optimization again produces a working build with gcc.
ac_add_options --enable-optimize

ac_add_options --enable-system-ffi
ac_add_options --enable-system-pixman

ac_add_options --with-system-jpeg
ac_add_options --with-system-png
ac_add_options --with-system-zlib

# Using sandboxed wasm libraries has been moved to all builds instead
# of only mozilla automation builds. It requires extra llvm packages
# and was reported to seriously slow the build. Disable it.
ac_add_options --without-wasm-sandboxed-libraries

# The following option unsets Telemetry Reporting. With the Addons Fiasco,
# Mozilla was found to be collecting user's data, including saved passwords and
# web form data, without users consent. Mozilla was also found shipping updates
# to systems without the user's knowledge or permission.
# As a result of this, use the following command to permanently disable
# telemetry reporting in Firefox.
unset MOZ_TELEMETRY_REPORTING

mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/firefox-build-dir</literal>
EOF</userinput></screen>

    <para>
      Compilez <application>Firefox</application> en exécutant les commandes
suivantes&nbsp;:
    </para>

    <para>
      Un changement dans cbindgen-0.24.2 fait maintenant créer un symbole à
cbindgen, mais il a déjà été défini dans un en-tête. Ce sed empêche la
construction d'échouer&nbsp;:
    </para>

<!-- Not needed with clang. Upstream bug at
     https://bugzilla.mozilla.org/show_bug.cgi?id=1729459

    <para>

      If building on a 32 bit machine, the following sed works around
      an issue with an incompatible <quote>double</quote> type in one
      header file:
    </para>

<screen><userinput>case "$(uname -m)" in
    i?86) sed -e '/typedef[ ]*double/s/double/long double/' \
              -i modules/fdlibm/src/math_private.h ;;
esac</userinput></screen>
-->
<screen><userinput>sed -i '/ROOT_CLIP_CHAIN/d' gfx/webrender_bindings/webrender_ffi.h</userinput></screen>


    <para>
      Si vous avez besoin des API de géolocalisation&nbsp;:
    </para>

    <note>
      <para>
        
        <!-- Taken from Arch Linux - an immensely helpful link - Thanks -->
<!-- BLFS Devs, register an account at Google with your
        @linuxfromscratch.org email address, and I'll make you an administrator
        for the 'Google APIs for LFS' project (where the API and OAuth keys
        were created for use in the book).-->
Les clefs d'API de Google et Mozilla ci-dessous sont spécifiques à LFS. Si
vous utilisez ces instructions pour une autre distribution, ou si vous avez
l'intention de distribuer des copies binaires en utilisant ces directives,
obtenez vos propres clefs en suivant les instructions de <ulink
url="https://www.chromium.org/developers/how-tos/api-keys"/> et <ulink
url="https://location.services.mozilla.com/api"/>.
        
      </para>
    </note>

<screen><userinput>echo "AIzaSyDxKL42zsPjbke5O8_rPVpVrLrJ8aeE9rQ" > google-key
echo "613364a7-9418-4c86-bcee-57e32fd70c23" > mozilla-key</userinput></screen>

    <note>

      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
       href="../../xincludes/mozshm.xml"/>

      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
       href="../../xincludes/mozmach.xml"/>

    </note>

    <para>
      Tout d'abord, supprimez un drapeau obsolète dans le code python, qui a été
supprimé dans python-3.11&nbsp;:
    </para>

<screen><userinput>grep -rl \"rU\" | xargs sed -i 's/"rU"/"r"/'</userinput></screen>

    <para>
      Ensuite corrigez un problème avec les expressions régulières dans
python-3.11&nbsp;:
    </para>

<screen><userinput>sed -e 's/?s)\./?s:.)/'               \
    -e '/?m)/{s/?m)/?m:/;s/\$"/$)"/}' \
    -e '/?s)%/{s/?s)/?s:/;s/?"/?)"/}' \
    -i xpcom/idl-parser/xpidl/xpidl.py</userinput></screen>

    <para>
      Invoquez maintenant le script Python <command>mach</command> pour compiler
le paquet.
    </para>

<screen><userinput>export MACH_BUILD_PYTHON_NATIVE_PACKAGE_SOURCE=none &amp;&amp;
export MOZBUILD_STATE_PATH=${PWD}/mozbuild          &amp;&amp;
./mach configure                                    &amp;&amp;
./mach build</userinput></screen>

    <para>
      Le fichier <filename>mozconfig</filename> ci-dessus désactive les tests car
ils prennent beaucoup plus de temps et d'espace disque sans bénéfice
évident. Si vous les avez tout de même activés, vous pouvez lancer les tests
en exécutant <command>./mach gtest</command>. Cela requiert une connexion
internet et d'être lancé dans un environnement Xorg - il y a une boîte de
dialogue lorsque la connexion à ALSA échoue (ce qui ne fait pas échouer le
test). Un ou deux tests échoueront. Pour voir les détails des échecs, vous
devrez enregistrer la sortie de la commande pour pouvoir la revoir.
    </para>

    <para>
      Maintenant, en tant qu'utilisateur <systemitem
class="username">root</systemitem>&nbsp;:
    </para>

<screen role="root"><userinput>MACH_BUILD_PYTHON_NATIVE_PACKAGE_SOURCE=none ./mach install</userinput></screen>

    <para>
      Videz les variables d'environnement qui ont été définies plus haut&nbsp;:
    </para>

<screen><userinput>unset MACH_BUILD_PYTHON_NATIVE_PACKAGE_SOURCE MOZBUILD_STATE_PATH</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Explication des commandes</title>



    <!--<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../../xincludes/SIOCGSTAMP.xml"/>
-->
<para>
      <command>export MOZBUILD_STATE_PATH=${PWD}/mowbuild</command>&nbsp;: La
construction est maintenant supposée vous dire qu'elle souhaite créer
<filename class="directory">~/.mozbuld</filename> et vous offre l'option
d'appuyer sur «&nbsp;ENTRÉE&nbsp;» pour accepter cela, ou Ctrl-C pour
annuler et recommencer la construction après avoir spécifié le
répertoire. En pratique, le message peut ne pas apparaître après avoir tapé
«&nbsp;ENTRÉE&nbsp;», c.-à-d. que la construction échoue.
    </para>

    <para>
      Ce répertoire est utilisé pour un identifiant (probablement aléatoire) de
télémétrie. Créez-le dans le répertoire de construction et supprimez-le
après l'installation pour éviter qu'il ne soit utilisé. Si vous souhaitez
participer à la télémétrie, exportez MOZBUILD_STATE_PATH et faites-le
pointer vers le répertoire par défaut et supprimez l'entrée de
<filename>mozconfig</filename>.
    </para>

    <para>
      <command>MACH_BUILD_PYTHON_NATIVE_PACKAGE_SOURCE=none</command>&nbsp;:
utilise le python du système pour créer un environnement virtuel pour
<command>mach</command> sans télécharger de wheel python ni utiliser les
modules python du système. Cela évite les incohérences de version entre les
modules du système et les modules inclus.
    </para>

    <para>
      <command>./mach configure</command>&nbsp;: cela valide les dépendances
fournies et le <filename>mozconfig</filename>.
    </para>

    <para>
      <option>./mach build --verbose</option>&nbsp;: utilisez cette alternative si
vous avez besoin de détails sur les fichiers qui sont compilés, ainsi que
sur les drapeaux C ou C++ utilisés. Mais n'ajoutez pas
«&nbsp;--verbose&nbsp;» à la commande d'installation, elle n'est pas
acceptée.
    </para>

    <para>
      <option>./mach build -jN</option>&nbsp;: la construction devrait par défaut
utiliser tous les cœurs de CPU en ligne. Si utiliser tous les cœurs fait que
la construction utilise la mémoire d'échange parce que vous n'avez pas assez
de RAM, utiliser moins de cœurs peut être plus rapide.
    </para>

    <para>
      <option><envar>CC=gcc CXX=g++</envar></option>&nbsp;: BLFS préférait
utiliser gcc et g++ au lieu des programmes <application>clang</application>
par défaut en amont. Avec la publication de gcc-12 la construction prend
plus de temps avec gcc et g++, surtout à cause d'avertissements
supplémentaires, et est plus grosse. Initialisez ces variables
d'environnement <emphasis>avant de lancer le script configure</emphasis> si
vous voulez continuer à utiliser gcc et g++. La construction avec GCC sur
i?86 est actuellement cassée.
    </para>

  </sect2>

  <sect2 role="configuration">
    <title>Configuration de Firefox</title>

    <para>
      Si vous utilisez un environnement de bureau comme
<application>Gnome</application> ou <application>KDE</application> vous
voudrez peut-être créer un fichier <filename>firefox.desktop</filename> pour
que <application>Firefox</application> apparaisse dans les menus du
bureau. En tant qu'utilisateur &root;&nbsp;:
    </para>

<screen role="root"><userinput>mkdir -pv /usr/share/applications &amp;&amp;
mkdir -pv /usr/share/pixmaps      &amp;&amp;

MIMETYPE="text/xml;text/mml;text/html;"                            &amp;&amp;
MIMETYPE+="application/xhtml+xml;application/vnd.mozilla.xul+xml;" &amp;&amp;
MIMETYPE+="x-scheme-handler/http;x-scheme-handler/https"           &amp;&amp;

cat &gt; /usr/share/applications/firefox.desktop &lt;&lt; EOF &amp;&amp;
<literal>[Desktop Entry]
Encoding=UTF-8
Name=Firefox Web Browser
Comment=Browse the World Wide Web
GenericName=Web Browser
Exec=firefox %u
Terminal=false
Type=Application
Icon=firefox
Categories=GNOME;GTK;Network;WebBrowser;
MimeType=$MIMETYPE
StartupNotify=true</literal>
EOF

unset MIMETYPE &amp;&amp;

ln -sfv /usr/lib/firefox/browser/chrome/icons/default/default128.png \
        /usr/share/pixmaps/firefox.png</userinput></screen>

    <sect3><title>Informations sur la configuration</title>

      <para>
        Les paramètres applicatifs pour firefox sont accessibles en entrant
<command>about:config</command> dans la barre d'adresse.
      </para>

      <para>
        Parfois, avoir du son qui fonctionne dans <application>firefox</application>
peut être difficile. Bien qu'en amont pulseaudio soit préféré, utiliser
<application>Alsa</application> peut être plus facile.
      </para>

      <para>
        Si vous avez activé <application>Alsa</application> pour le son, vous
pourriez avoir besoin de modifier une variable pour qu'il fonctionne. Si
vous lancez <command>firefox</command> depuis un terminal et essayez de
jouer quelque chose avec du son, vous pouvez trouver des messages d'erreur
tels que&nbsp;:
      </para>

      <para>
         <literal>Sandbox: seccomp sandbox violation: pid 3941, tid 4030, syscall 16,
args 48 2147767296 139909894784796 0 0 0.</literal>
      </para>

      <para>
        C'était sur x86_64, sur i686 le numéro d'appel système est 54. Pour
permettre cet appel système, dans <command>about:config</command>, modifiez
<command>security.sandbox.content.syscall_whitelist</command> à 16 (ou 54 en
i686).
      </para>

      <para>
        Si vous utilisez <command>pulseaudio</command> dans un environnement de
bureau, il est peut-être déjà démarré par celui-ci. Mais si ce n'est pas le
cas, bien que firefox-57 arrivait à le démarrer, firefox-58 n'y arrivait
pas. Si vous lancez <command>firefox</command> depuis un terminal et que ce
problème est présent, essayer de jouer un son produira des avertissements
<literal>Impossible de trouver le contexte cubeb !</literal>
      </para>

    <para>
      La solution est de fermer firefox, démarrer pluseaudio pour vérifier qu'il
démarre (sinon voir les information de configuration dans <xref
linkend="pulseaudio"/>) et redémarrez firefox pour vérifier que ça
fonctionne. Si maintenant ça fonctionne, ajoutez ce qui suit à voutr
<filename>~/.xinitrc</filename>&nbsp;: <phrase revision="sysv">
<literal>pulseaudio --verbose --log-target=syslog&amp;</literal></phrase>
<phrase revision="systemd"> <literal>pulseaudio --verbose
--log-target=journald&amp;</literal></phrase> (malheureusement, sur certains
systèmes cela ne fonctionne pas).
      </para>

      <para>
        Vous pouvez souhaiter utiliser plusieurs profils dans firefox. Pour cela,
invoquez firefox avec <command>firefox --ProfileManager</command>. Vous
pouvez aussi vérifier le profil actuellement utilisé avec
<command>about:profiles</command>.
      </para>

      <para>
        Bien que WebRender (avec le GPU pour la composition) ne soit pas utilisé par
défaut, il a maintenant l'air de bien marcher sur les matériels pris en
charge (les GPU ATI, Nvidia et Intel avec Mesa-18 et supérieur). Pour une
explication, regardez <ulink
url="https://hacks.mozilla.org/2017/10/the-whole-web-at-maximum-fps-how-webrender-gets-rid-of-jank/">hacks.mozilla.org</ulink>.
Le seul inconvénient semble être une utilisation plus élevée de la RAM sur
les machines avec peu de RAM.
     </para>

    <para>
      Pour vérifier si WebRender est utilisé, regardez dans about:support. Dans la
section Graphique, Composition montrera soit «&nbsp;Basic&nbsp;» (inutilisé)
soit «&nbsp;WebRender&nbsp;». Pour l'activer, allez dans about:config et
changez gfx.webrender.all à True. Vous devrez redémarrer firefox.
    </para>

    <para>
      Il peut être utile de mentionner les processus de firefox qui peuvent
apparaître dans <command>top</command> — en plus de firefox lui-même, il y a
plusieurs processus Web Content, et maintenant un processus RDD (Remote Data
Decoder) qui apparaît lors de la lecture de vidéos web encodées avec av1
(libdav1d). Si WebRender est activé, un processus GPU apparaîtra aussi
lorsque firefox doit rafraîchir l'écran (p. ex. pendant le défilement,
l'ouverture d'un nouvel onglet, ou à la lecture d'une vidéo).
    </para>

    </sect3>
  </sect2>

  <sect2 role="content">
    <title>Contenu</title>

    <segmentedlist>
      <segtitle>Programmes installés</segtitle>
      <segtitle>Bibliothèques installées</segtitle>
      <segtitle>Répertoire installé</segtitle>

      <seglistitem>
        <seg>
          firefox
        </seg>
        <seg>
          De nombreuses bibliothèques, composants du navigateur, greffons, extensions
et modules d'aide dans /usr/lib/firefox
        </seg>
        <seg>
          /usr/lib/firefox
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descriptions courtes</bridgehead>
      <?dbfo list-presentation="list"?> <?dbhtml list-presentation="table"?>

      <varlistentry id="firefox-prog">
        <term><command>firefox</command></term>
        <listitem>
          <para>
            est un navigateur internet <application>GTK+-3</application> qui utilise le
moteur de rendu Mozilla Gecko
          </para>
          <indexterm zone="firefox firefox-prog">
            <primary sortas="b-firefox">firefox</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
