<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY mesa-download-http "https://mesa.freedesktop.org/archive/mesa-&mesa-version;.tar.xz">
  <!ENTITY mesa-download-ftp  "ftp://ftp.freedesktop.org/pub/mesa/mesa-&mesa-version;.tar.xz">
  <!ENTITY mesa-md5sum        "ff03f3494b87186a15996bafe74ed929">
  <!ENTITY mesa-size          "16&nbsp;Mo">
  <!ENTITY mesa-buildsize     "588 MB (with docs, add 389 MB for tests)">
  <!ENTITY mesa-time          "3.4 SBU (Using parallelism=4; with docs, add 0.5 SBU for tests)">
]>

<sect1 id="mesa" xreflabel="Mesa-&mesa-version;">
  <?dbhtml filename="mesa.html"?>

  <sect1info>
<date>$Date$</date></sect1info>

  <title>Mesa-&mesa-version;</title>

  <indexterm zone="mesa">
    <primary sortas="a-Mesa">Mesa</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction à Mesa</title>

    <para>
      <application>Mesa</application> est une bibliothèque graphique 3D compatible
avec OpenGL.
    </para>

    <note>
      <para>
        <application>Mesa</application> est mis à jour régulièrement. Vous pourriez
vouloir utiliser la dernière version &mesa-major-minor;.x disponible.
      </para>
    </note>

    &lfs110a_checked;

    <bridgehead renderas="sect3">Informations sur le paquet</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Téléchargement (HTTP)&nbsp;: <ulink url="&mesa-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Téléchargement (FTP)&nbsp;: <ulink url="&mesa-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Somme de contrôle MD5 du téléchargement&nbsp;: &mesa-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Taille du téléchargement&nbsp;: &mesa-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation de l'espace disque requis&nbsp;: &mesa-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation du temps de construction&nbsp;: &mesa-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Téléchargements supplémentaires</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Correctif recommandé&nbsp;: <ulink
url="&patch-root;/mesa-&mesa-version;-add_xdemos-1.patch"/> (installe 2
programmes de démo pour tester Mesa - pas nécessaire si vous installez le
paquet <ulink
url="ftp://ftp.freedesktop.org/pub/mesa/demos/">mesa-demos</ulink>)
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Dépendances de Mesa</bridgehead>

    <bridgehead renderas="sect4">Requises</bridgehead>
    <para role="required">
      <xref linkend="xorg7-lib"/>, <xref linkend="libdrm"/> et <xref
linkend="Mako"/>
    </para>

    <bridgehead renderas="sect4">Recommandées</bridgehead>
    <para role="recommended">

      <!-- <xref role="nodep" linkend='lxqt'/>
, -->
<xref role="first" linkend="libva"/> (pour construire les pilotes VA-API
pour certains pilotes gallium, remarquez qu'il y a une dépendance
circulaire. Vous devez construire <application>libva</application> d'abord
sans la prise en charge d'EGL et GLX, installer ce paquet puis reconstruire
<application>libva</application>), <xref linkend="libvdpau"/> (pour
construire les pilotes VDPAU), <xref linkend="llvm"/> (requis pour les
pilotes Gallium3D, nouveau, r300 et radeonsi et pour swrast, le rasteriseur
logiciel souvent appelé llvmpipe. Voir <ulink role="nodep"
url="https://docs.mesa3d.org/systems.html"/> pour plus d'information) et
<xref linkend="wayland-protocols"/> (requis pour <xref role="nodep"
linkend='plasma5-build'/>, GNOME et recommandé pour <xref role="nodep"
linkend='gtk3'/>)
    </para>

    <bridgehead renderas="sect4">Facultatives</bridgehead>
    <para role="optional">
      <!-- for libsensors according to Meson -->
<xref linkend="libgcrypt"/>, <xref linkend="lm_sensors"/>, <xref
linkend="nettle"/>, <xref linkend="valgrind"/>, <ulink
url="ftp://ftp.freedesktop.org/pub/mesa/demos/">mesa-demos</ulink> (fournit
plus de 300 démos supplémentaires pour tester
<application>Mesa</application>&nbsp;; ceci inclut les même programmes que
ceux ajoutés par le correctif ci-dessus), <ulink
url="http://omxil.sourceforge.net/">Bellagio OpenMAX Integration
Layer</ulink> (pour les plateformes mobiles), <ulink
url="http://www.nongnu.org/libunwind/">libunwind</ulink>, <ulink
url="https://github.com/tizonia/tizonia-openmax-il/wiki/Tizonia-OpenMAX-IL/">libtizonia</ulink>
et <ulink url="https://www.vulkan.org/">libvulkan</ulink> (pour le pilote
zink)
    </para>

    <note>
      <para>
        Les instructions considèrent que <application>LLVM</application> avec les
moteurs hôte et r600/amdgpu et les informations de type à l'exécution (RTTI,
requis pour nouveau) sont installés. Vous devrez modifier les instructions
si vous choisissez de ne pas tous les installer. Pour une explication de
Gallium3D lisez  <ulink url="https://en.wikipedia.org/wiki/Gallium3D"/>.
      </para>
    </note>

    <para condition="html" role="usernotes">Notes utilisateur&nbsp;: <ulink url="&blfs-wiki;/mesalib"/>
    </para>
  </sect2>

  <sect2 role="installation">
    <title>Installation de Mesa</title>

    <para>
      Si vous avez téléchargé le correctif xdemos (nécessaire pour tester
l'installation de Xorg par les instructions de BLFS), appliquez-le en
lançant la commande suivante&nbsp;:
    </para>

<!-- Note that freedreno, vc4, and virgl all need special support from
        libdrm - renodr
        For me, libdrm does not mention virgl, but mesa accepts it. AFAICS
        freedreno is for qualcom hardware, libdrm will build for it on suitable
        systems. VC4 is for the Broadcom VC4 used in the raspberry pi - ken -->
<screen><userinput>patch -Np1 -i ../mesa-&mesa-version;-add_xdemos-1.patch</userinput></screen>

   

    <note>
      <para>
        Les mesures ci-dessus, et le contenu plus bas sont pour la construction
complète. En général, les gens n'ont pas envie d'installer les pilotes
qu'ils n'utilisent pas, donc les paragraphes suivants expliquent comment
limiter les pilotes et donnent un exemple qui peut être réduit ou modifié si
nécessaire.
      </para>
    </note>

    <para>
      <!-- If you wish to build all available gallium drivers,
      use 'auto'. FIXME : does not build crocus in 21.2.1 -->
<!-- crocus was added to the default x86/x86_64 drivers for meson in the
      master branch on 2021-08-31, at some point it will appear in a stable release -->
Now, select the drivers you wish to install. For the X86 architecture, the
available gallium drivers are auto (<emphasis>in 21.2.1 this does not select
crocus </emphasis>), <emphasis>or alternatively a choice from</emphasis>
crocus, i915, iris, nouveau, r300, r600, radeonsi, svga, swrast, and virgl.
The latter can provide acceleration in <xref linkend="qemu"/> if that has
been linked against <ulink
url="https://gitlab.freedesktop.org/virgl/virglrenderer/~/releases/">virglrenderer</ulink>
(you will need a freedesktop.org account to get to that page, you can
download the 0.9.1 release without an account from <ulink
url="https://gitlab.freedesktop.org/virgl/virglrenderer/-/archive/0.9.1/virglrenderer-0.9.1.tar.bz2">virglrenderer-0.9.1</ulink>).


      
    </para>

    <para>
      Les pilotes (non-gallium) DRI disponibles sous X86 sont auto, <emphasis>ou
un seul au choix parmi</emphasis> i915, i965, nouveau, r100, r200 et
swrast. Utilisez «&nbsp;auto&nbsp;» pour construire tous les pilotes DRI ou
utilisez une chaîne vide (DRI_DRIVERS="") si vous voulez seulement
construire des pilotes gallium.
    </para>

    <para>
      <!--drm,-->
Les plateformes («&nbsp;systèmes de fenêtrages&nbsp;») disponibles pour
linux sous X86 sont x11, wayland et surfaceless. En ne spécifiant rien, le
système de construction meson construira pour toutes ces plateformes si vous
avez les dépendances, comme si vous aviez spécifié
«&nbsp;-Dplatforms=auto&nbsp;».
    </para>

    <para>
      <!-- these two don't seem to be mentioned in that mesa link -->
Modifiez les commandes ci-dessous pour indiquer les pilotes que vous
souhaitez. Les pilotes listés ci-dessous couvriront les cartes vidéos les
plus modernes et les machines virtuelles. Pour trouver de l'aide à la
sélection des pilotes lisez <ulink
url="https://docs.mesa3d.org/systems.html"/>. Pour les pilotes intel,
spécifiez crocus pour i965 gen 4 jusqu'à haswell, iris pour broadwell et
supérieur.
    </para>

    <note>
      <para>
        Bien que les pilotes nouveau puissent être construits pour gallium et dri,
le pilote i915 ne peut être construit que pour l'un des deux.
      </para>
    </note>

<screen><userinput>GALLIUM_DRV="crocus,i915,iris,nouveau,r600,radeonsi,svga,swrast,virgl"
DRI_DRIVERS="i965,nouveau"</userinput></screen>

    <para>
      Installez <application>Mesa</application> en lançant les commandes
suivantes&nbsp;:
    </para>

<screen><userinput>mkdir build &amp;&amp;
cd    build &amp;&amp;

meson --prefix=$XORG_PREFIX          \
      --buildtype=release            \
      -Ddri-drivers=$DRI_DRIVERS     \
      -Dgallium-drivers=$GALLIUM_DRV \
      -Dgallium-nine=false           \
      -Dglx=dri                      \
      -Dvalgrind=disabled            \
      -Dlibunwind=disabled           \
      ..                             &amp;&amp;

unset GALLIUM_DRV DRI_DRIVERS &amp;&amp;

ninja</userinput></screen>

    <para>
      <!-- All tests passed for me for 21.2.4 [pierre]
      All 33 subtests tests in the mesa:compiler+glsl / glsl compiler warnings
      suite are known to fail.-->
If you built the tests (see 'Command Explanations'), to run them issue:
<command>ninja test</command>.

    </para>

    <para>
      Maintenant, en tant qu'utilisateur <systemitem
class="username">root</systemitem>&nbsp;:
    </para>

<screen role="root"><userinput>ninja install</userinput></screen>

    <para>
      Si vous le désirez, installez la documentation facultative en lançant les
commandes suivantes en tant qu'utilisateur <systemitem
class="username">root</systemitem>&nbsp;:
    </para>

<screen role="root"
        remap="doc"><userinput>install -v -dm755 /usr/share/doc/mesa-&mesa-version; &amp;&amp;
cp -rfv ../docs/* /usr/share/doc/mesa-&mesa-version;</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Explication des commandes</title>

    <para>
      <parameter>--buildtype=release</parameter>&nbsp;: ce paramètre s'assure que
la construction est complètement optimisée et désactive les assertions de
débogage qui ralentiraient sévèrement les bibliothèques pour certains
usages. Sans ce paramètre, la construction peut prendre dans les 2 Go.
    </para>

    <para>
      <parameter>-Ddir-drivers="..."</parameter>&nbsp;: Ce paramètre contrôle
quels pilotes dri (non-gallium) doivent être construits.
    </para>

    <para>
      <parameter>-Dgallium-drivers="..."</parameter>&nbsp;: Ce paramètre contrôle
quels pilotes Gallium3D doivent être construits.
    </para>

    <para>
      <parameter>-Dgallium-nine=false</parameter>&nbsp;: évite de construire la
prise en charge des jeux (Windows) conçus pour DX9. Indiquez true si vous
voulez cette prise en charge.
    </para>


    <!--
    <para>

      <parameter>-Dosmesa=true</parameter>: This switch enables building
      the <filename class="libraryfile">libOSMesa</filename> library and
      provides Gallium3D support in it. It requires the swrast gallium driver.
    </para>
-->
<!--
    <para>

      <parameter>-Dplatforms="..."</parameter>: This parameter
      controls which platforms EGL will be built for. Available
      linux X86 platforms are drm, x11, wayland, and surfaceless.
    </para>
-->
<para>
      <parameter>-Dvalgrind=disabled</parameter>&nbsp;: Ce paramètre désactive
l'utilisation de Valgrind pendant le processus de construction. Supprimez ce
paramètre si vous avez installé Valgrind et souhaitez vérifier les fuites
mémoire.
    </para>

    <para>
      <parameter>-Dlibunwind=disabled</parameter>&nbsp;: ce paramètre désactive
l'utilisation de libunwind.
    </para>


    <!--
    <para>

      <parameter>- -enable-xa</parameter>: This switch enables building the
      XA X Acceleration API (Required for VMware 3D Driver).
    </para>

    <para>
      <parameter>- -enable-gbm</parameter>: This switch enables building the
      <application>Mesa</application> Graphics Buffer Manager library.
    </para>
    These two seem to be automatic in 19.0 - ken

    <para>
      <parameter>- -enable-glx-tls</parameter>: This switch enables TLS (Thread Local
      Storage) support in GLX.
    </para>
-->
<para>
      <option>-Dbuild-tests=true</option>&nbsp;: cette option activera le code de
test. Pour lancer les tests, lancez&nbsp;: <command>ninja test</command>.
    </para>

    <para>
      <option>-Dvulkan-drivers=...</option>: This option allows choosing which
Vulkan drivers are built. Since those drivers depend on the corresponding
Gallium3D drivers, do not enable drivers that are not enabled in Gallium3D
drivers. Furthermore, since BLFS does not use Vulkan, it is safe to leave
the list of Vulkan drivers empty.
    </para>

  </sect2>

  <sect2 role="content">
    <title>Contenu</title>

    <segmentedlist>
      <segtitle>Programmes installés</segtitle>
      <segtitle>Bibliothèques installées</segtitle>
      <!-- in /usr/lib -->
<segtitle>Pilotes installés</segtitle>
      <!-- in /usr/lib/<subdir>
 -->
<segtitle>Répertoires installés</segtitle>

      <seglistitem>
        <seg>
          glxgears et glxinfo
        </seg>
        <seg>
          <!--          libOSMesa.so,-->
<!-- Begin Vulkan drivers -->
<!-- End Vulkan drivers -->
libEGL.so, libGL.so, libGLESv1_CM.so, libGLESv2.so, libXvMCnouveau.so,
libXvMCr600.so, libgbm.so, libglapi.so, libvulkan_intel.so,
libvulkan_lvp.so, libvulkan_radeon.so, and libxatracker.so,
        </seg>
        <seg>
          
          <!-- Begin gallium DRI drivers : this is the full set -->
<!-- For Windows games. This is DirectX's
                                          Direct3D -->
<!--          i830_dri.so,-->
<!-- End DRI Drivers -->
<!-- Begin VDPAU drivers -->
<!-- End VDPAU drivers -->
d3dadapter9.so (optional), crocus_dri.so, i915_dri.so, i965_dri.so,
iris_dri.so, kms_swrast_dri.so, nouveau_dri.so, nouveau_drv_video.so,
nouveau_vieux_dri.so, r200_dri.so (optional), r300_dri.so (optional),
r600_dri.so, r600_drv_video.so, radeon_dri.so (optional), radeonsi_dri.so,
radeonsi_drv_video.so, swrast_dri.so, virtio_gpu_dri.so, vmwgfx_dri.so,
libvdpau_nouveau.so, libvdpau_r300.so (optional), libvdpau_r600.so, and
libvdpau_radeonsi.so (Many of these drivers are hard-linked).
        </seg>
        <seg>
          $XORG_PREFIX/{include/{EGL,GL,GLES,GLES2,GLES3,KHR},lib/{dri,vdpau}},
$XORG_PREFIX/include/d3adapter (optional), $XORG_PREFIX/lib/d3d (optional),
$XORG_PREFIX/share/drirc.d (contains workarounds for various applications,
particularly browsers and games), $XORG_PREFIX/share/vulkan/icd.d, and
/usr/share/doc/mesa-&mesa-version; (optional)
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descriptions courtes</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="glxgears">
        <term><command>glxgears</command></term>
        <listitem>
          <para>
            est une démo GL utile pour dépanner des problèmes graphiques
          </para>
          <indexterm zone="mesa glxgears">
            <primary sortas="b-glxgears">glxgears</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="glxinfo">
        <term><command>glxinfo</command></term>
        <listitem>
          <para>
            est un programme de diagnostic affichant des informations sur le matériel
graphique et les bibliothèques GL installées
          </para>
          <indexterm zone="mesa glxinfo">
            <primary sortas="b-glxinfo">glxinfo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libEGL">
        <term><filename class="libraryfile">libEGL.so</filename></term>
        <listitem>
          <para>
            fournit nativement une interface de plate-forme graphique qui est définie
avec les spécifications EGL-1.4
          </para>
          <indexterm zone="mesa libEGL">
            <primary sortas="c-libGL">libEGL.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libgbm">
        <term><filename class="libraryfile">libgbm.so</filename></term>
        <listitem>
          <para>
            est la bibliothèque de gestion du tampon graphique de
<application>Mesa</application>
          </para>
          <indexterm zone="mesa libgbm">
            <primary sortas="c-libgbm">libgbm.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libGLESv1_CM">
        <term><filename class="libraryfile">libGLESv1_CM.so</filename></term>
        <listitem>
          <para>
            est la bibliothèque OpenGL ES 1.1 de <application>Mesa</application>
          </para>
          <indexterm zone="mesa libGLESv1_CM">
            <primary sortas="c-libGLESv1_CM">libGLESv1_CM.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libGLES2">
        <term><filename class="libraryfile">libGLES2.so</filename></term>
        <listitem>
          <para>
            est la bibliothèque OpenGL ES 2.0 de <application>Mesa</application>
          </para>
          <indexterm zone="mesa libGLES2">
            <primary sortas="c-libGLES2">libGLES2.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libGL">
        <term><filename class="libraryfile">libGL.so</filename></term>
        <listitem>
          <para>
            est la bibliothèque OpenGL principale de <application>Mesa</application>
          </para>
          <indexterm zone="mesa libGL">
            <primary sortas="c-libGL">libGL.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>
<!--
      <varlistentry id="libOSMesa">

        <term><filename class="libraryfile">libOSMesa.so</filename></term>
        <listitem>
          <para>
            is the <application>Mesa</application> Off-screen Rendering library
          </para>
          <indexterm zone="mesa libOSMesa">
            <primary sortas="c-libOSMesa">libOSMesa.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>
-->

    </variablelist>

  </sect2>

</sect1>
