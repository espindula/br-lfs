<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY mutter-download-http "&gnome-download-http;/mutter/&gnome-43;/mutter-&mutter-version;.tar.xz">
  <!ENTITY mutter-download-ftp  "&gnome-download-ftp;/mutter/&gnome-43;/mutter-&mutter-version;.tar.xz">
  <!ENTITY mutter-md5sum        "2aa9fae86f51490b419e747885069e96">
  <!ENTITY mutter-size          "2.7 Mo">
  <!ENTITY mutter-buildsize     "150&nbsp;Mo (sans les tests)">
  <!ENTITY mutter-time          "0,6&nbsp;SBU (avec parallélisme = 4)">
  <!ENTITY mutter-time-systemd  "0,6&nbsp;SBU (avec parallélisme = 4, plus 1,0&nbsp;SBU pour les tests)">
]>

<sect1 id="mutter" xreflabel="Mutter-&mutter-version;">
  <?dbhtml filename="mutter.html"?>


  <title>Mutter-&mutter-version;</title>

  <indexterm zone="mutter">
    <primary sortas="a-Mutter">Mutter</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction à Mutter</title>

    <para>
      <application>Mutter</application> est le gestionnaire de fenêtres de
<application>GNOME</application>. Il n'est pas invoqué directement, mais
depuis <application>GNOME Session</application> (sur une machine avec un
pilote d'accélération vidéo).
    </para>

    &lfs112_checked;

    <bridgehead renderas="sect3">Informations sur le paquet</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Téléchargement (HTTP)&nbsp;: <ulink url="&mutter-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Téléchargement (FTP)&nbsp;: <ulink url="&mutter-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Somme de contrôle MD5&nbsp;: &mutter-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Taille du téléchargement&nbsp;: &mutter-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation de l'espace disque requis&nbsp;: &mutter-buildsize;
        </para>
      </listitem>
      <listitem revision='sysv'>
        <para>
          Estimation du temps de construction&nbsp;: &mutter-time;
        </para>
      </listitem>
      <listitem revision='systemd'>
        <para>
          Estimation du temps de construction&nbsp;: &mutter-time-systemd;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Dépendances de Mutter</bridgehead>

    <bridgehead renderas="sect4">Requises</bridgehead>
    <para role="required">
      <xref linkend="gnome-settings-daemon"/>, <xref linkend="graphene"/>, <xref
linkend="libxcvt"/>, <xref linkend="libxkbcommon"/> et <xref
linkend="pipewire"/>
    </para>

    <bridgehead renderas="sect4">Recommandées</bridgehead>
    <para role="recommended">
      <xref linkend="desktop-file-utils"/>, <xref
linkend="gobject-introspection"/>, <xref linkend="startup-notification"/> et
<xref linkend="sysprof"/>
    </para>

    <bridgehead renderas="sect4">Recommandées (Requises pour construire le compositeur Wayland)</bridgehead>
    <para role="recommended">
      <xref linkend="libinput"/>, <xref linkend="wayland"/>, <xref
linkend="wayland-protocols"/> et <xref linkend="xwayland"/>. En plus, <xref
linkend="gtk3"/> doivent être construit avec le support de
<application>Wayland</application>.
    </para>

    <bridgehead renderas="sect4"
                revision="sysv">Recommandées (à l'exécution)</bridgehead>
    <para role="recommended" revision="sysv">
      <xref linkend="blocaled" role="runtime"/>
    </para>

    <bridgehead renderas="sect4">Facultatives</bridgehead>
    <para role="optional">
      <xref linkend="python-dbusmock"/> (required for tests), <xref
linkend="xorg-server"/> (for X11 sessions)
    </para>

    

    <!-- NOTE: Mutter compiles git versions of COGL and Clutter for it's own
    internal use. This is because the wayland support upstream isn't advanced
    enough for the graphics stack used in Mutter. -->
<para condition="html" role="usernotes">Notes utilisateur&nbsp;: <ulink url="&blfs-wiki;/mutter"/>
    </para>

  </sect2>

  <sect2 role="installation">
    <title>Installation de Mutter</title>

    <para>
      Installez <application>Mutter</application> en exécutant les commandes
suivantes&nbsp;:
    </para>

<!--
    <para>

      To test the results, issue:
      <command>dbus-run-session ninja test</command>. The tests
      require an active X session to run correctly. It is not necessary to
      run a  separate D-bus session if not in a GNOME session, but it
      provides a clean environment in any case. One test,
      <filename>native-headless</filename>, is known to fail.
    </para>
    -->
<!-- there are no added problems in sysv, AFAICT. Running the tests is
    not easy whatever the init system. But using the instructions below in
    a gnome session on sysv works (no test failure)...
    <para revision='sysv'>

       This package does not come with a test suite that runs properly in the
       SystemV environment.
    </para>
    -->
<screen><userinput>mkdir build &amp;&amp;
cd    build &amp;&amp;

meson --prefix=/usr --buildtype=debugoptimized -Dtests=false .. &amp;&amp;
ninja</userinput></screen>


    

    <para>
      La suite de tests nécessite que des fonctions de débogage soient activées
dans la construction ainsi qu'un programme externe nommé
<command>xvfb-run</command>. Si vous souhaitez lancer les tests, vous
devriez le télécharger et l'installer avant de lancer
<command>meson</command>. Vous pouvez le récupérer sur <ulink
url="&sources-anduin-http;/mutter/xvfb-run">xvfb-run</ulink>, et l'installer
avec les permissions d'exécution dans <filename
class="directory">/usr/bin</filename>. <command>xvfb-run</command> nécessite
<command>Xvfb</command> à l'exécution, et <command>Xvfb</command> peut être
installé avec <xref linkend='xorg-server'/> ou avec <xref
linkend='xwayland'/>. Vous devriez aussi remplacer
<parameter>-Dtests=false</parameter> dans la commande
<command>meson</command> par <parameter>-Dtests=true</parameter>. La suite
de tests nécessite l'installation des schémas de mutter sur le système, donc
il vaut mieux lancer les tests après l'installation du paquet.
    </para>

    <para>
      Vous pouvez aussi tester les fonctionnalité de base de
<application>Mutter</application> en suivant <xref
linkend='mutter-starting'/>, après l'installation.
    </para>

    <para>
      Maintenant, en tant qu'utilisateur <systemitem
class="username">root</systemitem>&nbsp;:
    </para>

<!-- Without "HOME=" one test can fail with certain monitor
         configuration in $HOME/.config/monitors.xml. -->
<screen role="root"><userinput>ninja install</userinput></screen>

    
    <para>
      The tests can now be run: issue <command>sed 's/zenity --[a-z]*/gtk3-demo/'
-i ../src/tests/x11-test.sh</command> to remove the reference to
<application>Zenity</application> (it's no longer a part of BLFS) from one
test, then issue <command>HOME= ninja test</command>. The tests require an
active X or wayland session.  The <filename>native-unit</filename> test is
known to fail.  A lot of tests will fail if the opengl rendering is not done
in hardware.  Don't make any mouse or keyboard input while the test suite is
running or some tests may fail.
    </para>
  </sect2>

  <sect2 role="commands">
    <title>Explication des commandes</title>

    
    <!-- https://gitlab.gnome.org/GNOME/gnome-shell/-/issues/5512
         If debug is disabled, the "assertion 'CLUTTER_IS_ACTOR (self)'
         failed" message will turn into a crash.  Enabling debug is just a
         work around, it's not a proper fix.  -->
<para>
      <parameter>--buildtype=debugoptimized</parameter>&nbsp;: remplace le type de
construction par défaut (<quote>debug</quote>), ce qui produirait des
binaires non optimisés. Ce type de construction est utilisé au lieu de
<option>--buildtype=release</option> pour contourner un problème qui fait
crasher gnome-shell.
    </para>

    <!--
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="../../xincludes/meson-buildtype-release.xml"/>

-->
<para>
      <parameter>-Dtests=false</parameter>&nbsp;: évite la construction des tests
et supprime le prérequis à <command>xvfb-run</command>.
    </para>

    <para>
      <option>-Dprofiler=false</option>&nbsp;: utilisez cette si
<application>Sysprof</application> et pas installé, et que vous ne voulez
pas que meson ne télécharge les sources de
<application>Sysprof</application>.
    </para>

  </sect2>

  <sect2 role="starting" id="mutter-starting">
    <title>Démarrer Mutter</title>

    

    <!-- Mutter as a Wayland compositor Works with mutter-42.4 and 43.0.
         IIRC mutter can also be used as a X window manager: just replace
         "twm" with "mutter &dash;&dash;x11" in xinitrc. But I've not tested
         such a configuration recently (I don't build Xorg Server or xinit
         these days.  -->
<para>
      <application>Mutter</application> est habituellement utilisé comme composant
de <application>gnome-shell</application>, mais il peut aussi être utilisé
en tant que compositeur Wayland seul. Pour lancer
<application>Mutter</application> en tant que compositeur Wayland, dans une
console virtuelle, lancez&nbsp;:
    </para>

    <screen role='nodump'><userinput>mutter --wayland -- vte-2.91</userinput></screen>

    <para>
      Remplacez <command>vte-2.91</command> pour la ligne de commande pour la
première application que vous voulez dans la session Wayland. Remarquez
qu'une fois que l'application termine, la session Wayland est aussi
terminée.
    </para>

    <para>
      <application>Mutter</application> peut aussi fonctionner en tant que
compositeur imbriqué dans une autre session Wayland. Dans un émulateur de
terminal, tapez&nbsp;:
    </para>

    <screen role='nodump'><userinput>MUTTER_DEBUG_DUMMY_MODE_SPECS=1920x1080 mutter --wayland --nested -- vte-2.91</userinput></screen>

    <para>
      Replacez <replaceable>1920x1080</replaceable> par la taille que vous voulez
pour la session Wayland imbriquée.
    </para>
  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Programmes installés</segtitle>
      <segtitle>Bibliothèques installées</segtitle>
      <segtitle>Répertoires installés</segtitle>

      <seglistitem>
        <seg>
          mutter
        </seg>
        <seg>
          libmutter-11.so
        </seg>
        <seg>
          /usr/{lib,include,libexec/installed-tests,share/{,installed-tests}}/mutter-11
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descriptions courtes</bridgehead>
      <?dbfo list-presentation="list"?> <?dbhtml list-presentation="table"?>

      <varlistentry id="mutter-prog">
        <term><command>mutter</command></term>
        <listitem>
          <para>
            est un gestionnaire de fenêtre <application>GTK+</application> composant
basé sur <application>Clutter</application>
          </para>
          <indexterm zone="mutter mutter-prog">
            <primary sortas="b-mutter">mutter</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libmutter">
        <term><filename class="libraryfile">libmutter-11.so</filename></term>
        <listitem>
          <para>
            contient les fonctions de l'API de <application>Mutter</application>
          </para>
          <indexterm zone="mutter libmutter">
            <primary sortas="c-libmutter">libmutter-11.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
