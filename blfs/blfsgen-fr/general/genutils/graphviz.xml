<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY graphviz-download-http "https://gitlab.com/graphviz/graphviz/-/archive/&graphviz-version;/graphviz-&graphviz-version;.tar.bz2">
  <!ENTITY graphviz-download-ftp  "">
  <!ENTITY graphviz-md5sum        "495f7da354be58309d91a2e0d377ae3b">
  <!ENTITY graphviz-size          "26&nbsp;Mo">
  <!ENTITY graphviz-buildsize     "193&nbsp;Mo">
  <!ENTITY graphviz-time          "0,6&nbsp;SBU (avec parallélisme = 4)">
]>

<sect1 id="graphviz" xreflabel="Graphviz-&graphviz-version;">
  <?dbhtml filename="graphviz.html"?>


  <title>Graphviz-&graphviz-version;</title>

  <indexterm zone="graphviz">
    <primary sortas="a-Graphviz">Graphviz</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction à Graphviz</title>

    <para>
      Le paquet <application>Graphviz</application> contient le logiciel de
visualisation de graphes. La visualisation de Graphes est une manière de
représenter des informations structurelles dans des diagrammes de graphes
abstraits et de réseaux. <application>Graphviz</application> a plusieurs
programmes principaux de présentation de graphes. Il contient aussi des
interfaces graphiques interactives et Web, des outils, des bibliothèques et
des bindings dans certains langages.
    </para>

    &lfs113_checked;

    <bridgehead renderas="sect3">Informations sur le paquet</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Téléchargement (HTTP)&nbsp;: <ulink url="&graphviz-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Téléchargement (FTP)&nbsp;: <ulink url="&graphviz-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Somme de contrôle MD5&nbsp;: &graphviz-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Taille du téléchargement&nbsp;: &graphviz-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation de l'espace disque requis&nbsp;: &graphviz-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation du temps de construction&nbsp;: &graphviz-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Dépendances de Graphviz</bridgehead>

    <note>
      <para>
        Pour l'utilisation basique de <application>Graphviz</application> vous
n'avez besoin d'aucune bibliothèque en dehors de ce qui se trouve dans le
livre LFS. Son moteur de rendu de <quote>cœur</quote> permet de générer
différent formats graphiques comme Postscript, SVG, VML, .fig, et Tk. Ces
formats peuvent être convertis en presque n'importe quoi d'autre à l'aide
d'outils comme <xref role="nodep" linkend="imagemagick"/>. Les dépendances
ci-dessous ajoutent la possibilité de générer des images de graphes au
format bitmap, d'afficher le graphe à l'écran, de modifier un graphe en
visionnant directement l'image finale ou de visionner de très grands
graphes. Comme <application>Graphviz</application> est une dépendance de
plusieurs autres paquets dans ce livre, nous vous conseillons de le
construire d'abord sans la plupart de ces dépendances puis de le
reconstruire lorsque vous aurez assez de paquets pour vos besoins.
      </para>
    </note>

    <bridgehead renderas="sect4">Facultatives, pour diverses sorties bitmap</bridgehead>
    <para role="optional">
      <xref linkend="pango"/> avec <xref linkend="cairo"/>, <xref
linkend="xorg7-lib"/>, <xref linkend="fontconfig"/> et <xref
linkend="libpng"/>, pour générer des images aux formats bitmap SVG,
postscript, PNG et PDF, ou pour afficher l'image à l'écran. La sortie PNG
est requise pour construire <xref role="nodep" linkend="gegl"/>
    </para>

    <para role="optional">
      Ajouter <xref linkend="gtk2"/> avec <xref linkend="libjpeg"/> permet
d'ajouter la prise en charge des formats JPEG, BMP, TIF et ICO et d'afficher
l'image dans une fenêtre GTK+
    </para>

    <para role="optional">
      On peut utiliser la <ulink url="https://www.libgd.org/">bibliothèque
GD</ulink> à la place de <application>Pango</application>. Elle ajoute la
possibilité de générer des images aux formats GIF, VRML et GD, mais
<application>Pango</application> fournie une meilleure sortie pour les
autres formats et est requis pour afficher les images
    </para>

    <para role="optional">
      <!-- deprecated <ulink url="http://www.libming.org/">
libming</ulink> (Adobe
      Flash)-->
On peut ajouter d'autres formats avec <xref linkend="libwebp"/> (la prise en
charge de WebP est considérée comme étant expérimentale), <ulink
url="https://openil.sourceforge.net/projects.php">DevIL</ulink>, <ulink
url="https://sourceforge.net/projects/lasi/">libLASi</ulink> et <ulink
url="https://www.freedesktop.org/wiki/Software/glitz">glitz</ulink>

    </para>

    <bridgehead renderas="sect4">Facultatives, pour charger des images graphique qui peuvent être affichées à
l'intérieur des nœuds du graphe</bridgehead>

    <para role="optional">
      <filename class="libraryfile">libgs.so</filename> de <xref linkend="gs"/>,
<xref linkend="librsvg"/> et <xref linkend="poppler"/>
    </para>

    <bridgehead renderas="sect4">Facultatives, pour construire plus d'outils</bridgehead>

    <para role="optional">
      <xref linkend="freeglut"/> (avec <xref linkend="libglade"/>, <ulink
url="https://sourceforge.net/projects/gtkglext/">GtkGLExt</ulink> et <ulink
url="https://gts.sourceforge.net/">libGTS</ulink> pour construire le
visualiseur de très grands graphes <command>smyrna</command>, considéré
comme expérimental), <xref linkend="qt5"/> pour construire l'éditeur de
graphes <command>gvedit</command>.
    </para>

    <bridgehead renderas="sect4">Facultatives (Pour construire les liaisons de certains langages)</bridgehead>
    <para role="optional">
      <xref linkend="swig"/> (<application>SWIG</application> doit être installé,
ou aucune liaison ne sera construite), <xref linkend="gcc"/> (pour le
compilateur go), <xref linkend="guile"/>, <xref linkend="openjdk"/>, <xref
linkend="lua"/>, <xref linkend="php"/>, <xref linkend="ruby"/>, <xref
linkend="tk"/>, <ulink url="https://iolanguage.org/">Io</ulink>, <ulink
url="https://www.mono-project.com/Main_Page">Mono</ulink>, <ulink
url="https://ocaml.org/">OCaml</ulink> et <ulink
url="https://www.r-project.org/">R</ulink>
    </para>

    <bridgehead renderas="sect4">Facultatives (outils de construction)</bridgehead>
    <para role="optional">
      <ulink url="https://github.com/Snaipe/Criterion">Criterion</ulink> (boîte à
outils pour les tests) et <ulink
url="https://linux.softpedia.com/get/Programming/Debuggers/Electric-Fence-3305.shtml/">Electric
Fence</ulink>,
    </para>

    <bridgehead renderas="sect4">Facultatives (pour construire la documentation pdf)</bridgehead>
    <para role="optional">
      <xref linkend="gs"/> (pour la commande <command>ps2pdf</command>)
    </para>

    <para condition="html" role="usernotes">Notes utilisateur&nbsp;: <ulink url="&blfs-wiki;/graphviz"/>
    </para>
  </sect2>

  <sect2 role="installation">
    <title>Installation de Graphviz</title>

    <para>
      Installez <application>Graphviz</application> en exécutant les commandes
suivantes&nbsp;:
    </para>

<screen><userinput>sed -i '/LIBPOSTFIX="64"/s/64//' configure.ac &amp;&amp;

./autogen.sh              &amp;&amp;
./configure --prefix=/usr \
            --docdir=/usr/share/doc/graphviz-&graphviz-version;</userinput></screen>

    <note>
      <para>
        Un avertissement est généré par <command>autogen.sh</command> parce que
l'arborescence de construction n'est pas un dépôt git. En conséquence, la
date est mise à 0. Pour avoir une date qui a du sens dans la chaine de
version, vous pouvez lancer&nbsp;:
      </para>

<screen><userinput>sed -i "s/0/$(date +%Y%m%d)/" builddate.h</userinput></screen>
    </note>

    <para>
      Que vous fixiez une date ou non, continuez la compilation du paquet&nbsp;:
    </para>

<screen><userinput>make</userinput></screen>

    <para>
      Ce paquet n'a pas de suite de test fournissant des résultats significatifs.
    </para>

    <para>
      Maintenant, en tant qu'utilisateur <systemitem
class="username">root</systemitem>&nbsp;:
    </para>

<screen role="root"><userinput>make install</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Explication des commandes</title>

    <para>
      <command>sed ... configure.ac</command>&nbsp;: Cette commande est requise
pour éviter d'installer des fichiers dans /usr/lib64.
    </para>
    <para>
      <option>--with-javaincludedir="$JAVA_HOME/include
-I$JAVA_HOME/include/linux"</option>&nbsp;: Si vous avez construit <xref
linkend="openjdk"/> dans /opt, et que vous souhaitez construire les liaisons
JAVA, vous devez spécifier l'emplacement des fichiers d'en-tête JAVA pour
configurer ce paquet. L'option de configure n'est destinée à recevoir qu'un
répertoire, mais deux répertoires doivent être inclus. C'est tout de même
possible en utilisant l'option -l dans la variable.
    </para>

    <para>
      <option>--with-webp</option>&nbsp;: Même si <xref linkend="libwebp"/> est
installé, il n'est pas inclus dans la construction sans cette option.
    </para>

    <para>
      <option>--with-smyrna</option>&nbsp;: Même si les dépendances requises sont
installées, le visualiseur de graphe interactif <command>smyrna</command>
n'est pas construit sans cette option.
    </para>

  </sect2>

  <sect2 role="configuration">
    <title>Configuration de Graphviz</title>

    <sect3 id="graphviz-config">
      <title>Fichiers de configuration</title>

      <para>
        <filename>/usr/lib/graphviz/config</filename>
      </para>

      <indexterm zone="graphviz graphviz-config">
        <primary sortas="e-usr-share-graphviz-config">/usr/share/graphviz/config</primary>
      </indexterm>

    </sect3>

    <sect3>
      <title>Informations sur la configuration</title>

      <para>
        Il n'y a besoin d'aucune configuration particulière pour
<application>Graphviz</application>. Vous pourriez envisager d'installer des
greffons et des outils supplémentaires disponibles sur la page de
téléchargements (<ulink url="https://graphviz.org/download/source/"/>) pour
des fonctionnalités supplémentaires. Si vous installez des greffons
supplémentaires, vous pouvez lancer <command>dot -c</command> (en tant
qu'utilisateur <systemitem class="username">root</systemitem>) pour mettre à
jour le fichier <filename>config</filename> dans <filename
class="directory">/usr/lib/graphviz</filename>.
      </para>

    </sect3>

  </sect2>

  <sect2 role="content">
    <title>Contenu</title>

    <segmentedlist>
      <segtitle>Programmes installés</segtitle>
      <segtitle>Bibliothèques installées</segtitle>
      <segtitle>Répertoires installés</segtitle>

      <seglistitem>
        <seg>
          <!--diffimg,-->
acyclic, bcomps, ccomps, circo, cluster, dijkstra, dot, dot2gxl,
dot_builtins, edgepaint, fdp, gc, gml2gv, graphml2gv, gv2gml, gv2gxl,
gvcolor, gvedit, gvgen, gvmap, gvmap.sh, gvpack, gvpr, gxl2dot, gxl2gv,
mm2gv, neato, nop, osage, patchwork, prune, sccmap, sfdp, tred, twopi,
unflatten et vimdot
        </seg>
        <seg>
          libcdt.so, libcgraph.so, libgvc.so, libgvpr.so, liblab_gamut.so,
libpathplan.so, libxdot.so et plusieurs greffons dans /usr/lib/graphviz.  Il
y en a aussi plusieurs dans les sous-répertoires de
/usr/lib/{lua,perl5,php,python&python3-majorver;,tcl8.6}.  Malheureusement
certaines bibliothèques sont dupliquées.
        </seg>
        <seg>
          /usr/include/graphviz, /usr/lib/graphviz, /usr/lib/tcl8.6/graphviz,
/usr/share/doc/graphviz-&graphviz-version; et /usr/share/graphviz
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descriptions courtes</bridgehead>
      <?dbfo list-presentation="list"?> <?dbhtml list-presentation="table"?>

      <varlistentry id="acyclic">
        <term><command>acyclic</command></term>
        <listitem>
          <para>
            est un filtre qui prend un graphe orienté en entrée et sort une copie du
graphe avec le minimum d’arêtes inversées pour en faire un graphe acyclique
          </para>
          <indexterm zone="graphviz acyclic">
            <primary sortas="b-acyclic">acyclic</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="bcomps">
        <term><command>bcomps</command></term>
        <listitem>
          <para>
            décompose des graphes dans leurs composants biconnexes, en affichant les
composants sur la sortie standard
          </para>
          <indexterm zone="graphviz bcomps">
            <primary sortas="b-bcomps">bcomps</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ccomps">
        <term><command>ccomps</command></term>
        <listitem>
          <para>
            décompose des graphes dans leurs composants connexes, en affichant les
composants sur la sortie standard
          </para>
          <indexterm zone="graphviz ccomps">
            <primary sortas="b-ccomps">ccomps</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="circo">
        <term><command>circo</command></term>
        <listitem>
          <para>
            dessine des graphes en utilisant une présentation circulaire
          </para>
          <indexterm zone="graphviz circo">
            <primary sortas="b-circo">circo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="cluster">
        <term><command>cluster</command></term>
        <listitem>
          <para>
            prend en entrée un graphique au format DOT, trouve les groupes de nœuds et
ajoute ces informations au graphe
          </para>
          <indexterm zone="graphviz cluster">
            <primary sortas="b-cluster">cluster</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="diffimg">
        <term><command>diffimg</command></term>
        <listitem>
          <para>
            (nécessite la <ulink url="https://www.libgd.org/">bibliothèque GD</ulink>)
génère une image où chaque pixel est la différence entre les pixels
correspondants dans chacune des 2 images sources
          </para>
          <indexterm zone="graphviz diffimg">
            <primary sortas="b-diffimg">diffimg</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="dijkstra">
        <term><command>dijkstra</command></term>
        <listitem>
          <para>
            lit un flux de graphes et calcule pour chacun d'eux la distance entre chaque
nœud et l'origine
          </para>
          <indexterm zone="graphviz dijkstra">
            <primary sortas="b-dijkstra">dijkstra</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="dot">
        <term><command>dot</command></term>
        <listitem>
          <para>
            dessine des graphes orientés. Il fonctionne bien sur des graphes acycliques
orientés et autres qui peuvent être dessinés sous une forme hiérarchisée. Il
lit les fichiers de graphes avec des attributs et il écrit les dessins. Par
défaut, le format de sortie de dot est le fichier d'entrée assorti des
coordonnées pour la mise en page
          </para>
          <indexterm zone="graphviz dot">
            <primary sortas="b-dot">dot</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="dot2gxl">
        <term><command>dot2gxl</command></term>
        <listitem>
          <para>
            fait des conversions de graphes représentés en GXL et dans le langage
DOT. Sauf si vous spécifier un type de conversion en utilisant un drapeau,
<command>gxl2dot</command> déduira le type de conversion à partir de
l'extension du fichier d'entrée, une extension<filename
class='extension'>.dot</filename> donnant une conversion de DOT en GXL, et
une extension <filename class='extension'>.gxl</filename>  donnant une
conversion de GXL en DOT
          </para>
          <indexterm zone="graphviz dot2gxl">
            <primary sortas="b-dot2gxl">dot2gxl</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      
      <!--
      <varlistentry id="dotty">

        <term><command>dotty</command></term>
        <listitem>
          <para>
            is a graph editor for the X Window System. It may be run as a
            standalone editor, or as a front end for applications that use
            graphs. It can control multiple windows viewing different graphs
          </para>
          <indexterm zone="graphviz dotty">
            <primary sortas="b-dotty">dotty</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      -->
<varlistentry id="edgepaint">
        <term><command>edgepaint</command></term>
        <listitem>
          <para>
            effectue la coloration des arêtes pour distinguer les arêtes qui se croisent
          </para>
          <indexterm zone="graphviz edgepaint">
            <primary sortas="b-edgepaint">edgepaint</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="fdp">
        <term><command>fdp</command></term>
        <listitem>
          <para>
            dessine des graphes non droits en utilisant un modèle
<quote>spring</quote>. Il utilise un algorithme basé sur les forces, dans
l'esprit de Fruchterman et de Reingold
          </para>
          <indexterm zone="graphviz fdp">
            <primary sortas="b-fdp">fdp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gc-graphviz">
        <term><command>gc</command></term>
        <listitem>
          <para>
            est un graphe analogue à <command>wc</command> dans le sens où il affiche
sur la sortie standard le nombre de nœuds, de bords, de composants connexes
ou de clusters contenus dans les fichiers d'entrée. Il affiche aussi un
résultat total de tous les graphes si vous donnez plus d'un graphe
          </para>
          <indexterm zone="graphviz gc-graphviz">
            <primary sortas="b-gc">gc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gml2gv">
        <term><command>gml2gv</command></term>
        <listitem>
          <para>
            convertit le graphe spécifiés dans le format GML vers un graphe dans le
format GV (anciennement DOT)
          </para>
          <indexterm zone="graphviz gml2gv">
            <primary sortas="b-gml2gv">gml2gv</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="graphml2gv">
        <term><command>graphml2gv</command></term>
        <listitem>
          <para>
            convertit le graphe spécifié dans le format GRAPHML vers un graphe dans le
format GV (anciennement DOT)
          </para>
          <indexterm zone="graphviz graphml2gv">
            <primary sortas="b-graphml2gv">graphml2gv</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gv2gml">
        <term><command>gv2gml</command></term>
        <listitem>
          <para>
            convertit un graphe spécifié dans le format GV vers un graphe dans le format
GML
          </para>
          <indexterm zone="graphviz gv2gml">
            <primary sortas="b-gv2gml">gv2gml</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gv2gxl">
        <term><command>gv2gxl</command></term>
        <listitem>
          <para>
            convertit un graphe spécifié dans le format GV vers un graphe dans le format
GXL
          </para>
          <indexterm zone="graphviz gv2gxl">
            <primary sortas="b-gv2gxl">gv2gxl</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gvcolor">
        <term><command>gvcolor</command></term>
        <listitem>
          <para>
            est un filtre qui règle les couleurs des nœuds à partir valeurs d'une graine
initiale. Les couleurs s'étendent le long des bords des pieds à la tête et
sont moyennées (en tant que vecteurs HSB) au niveau des nœuds
          </para>
          <indexterm zone="graphviz gvcolor">
            <primary sortas="b-gvcolor">gvcolor</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gvedit">
        <term><command>gvedit</command></term>
        <listitem>
          <para>
            fournit un éditeur et une visionneuse de graphes simple. Il permet de voir
beaucoup de graphes en même temps. Le texte de chaque graphe est affiché
dans sa propre fenêtre
          </para>
          <indexterm zone="graphviz gvedit">
            <primary sortas="b-gvedit">gvedit</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gvgen">
        <term><command>gvgen</command></term>
        <listitem>
          <para>
            génère différents graphes abstraits simples à structure régulière
          </para>
          <indexterm zone="graphviz gvgen">
            <primary sortas="b-gvgen">gvgen</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gvmap">
        <term><command>gvmap</command></term>
        <listitem>
          <para>
            prend un graphe en entrée dans le format DOT, trouve les clusters de nœuds
et produit un rendu du graphe dans le style d'une carte géographique, avec
les clusters mis en relief, dans le format xdot
          </para>
          <indexterm zone="graphviz gvmap">
            <primary sortas="b-gvmap">gvmap</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gvmap.sh">
        <term><command>gvmap.sh</command></term>
        <listitem>
          <para>
            est un tunnel pour le lancement de gvmap
          </para>
          <indexterm zone="graphviz gvmap.sh">
            <primary sortas="b-gvmap.sh">gvmap.sh</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gvpack">
        <term><command>gvpack</command></term>
        <listitem>
          <para>
            lit un flux de graphes, combine les graphes dans une seule présentation et
produit un graphe unique représentant l'union des graphes de l'entrée
          </para>
          <indexterm zone="graphviz gvpack">
            <primary sortas="b-gvpack">gvpack</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gvpr">
        <term><command>gvpr</command></term>
        <listitem>
          <para>
            est un éditeur de flux de graphes inspiré d'<command>awk</command>. Il copie
les graphes en entrée vers sa sortie, en transformant éventuellement leur
structure et leurs attributs et en créant de nouveaux graphes, ou en
affichant des informations arbitraires
          </para>
          <indexterm zone="graphviz gvpr">
            <primary sortas="b-gvpr">gvpr</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gxl2dot">
        <term><command>gxl2dot</command></term>
        <listitem>
          <para>
            fait des conversions de graphes représentés en GXL et dans le langage
DOT. Sauf si vous spécifier un type de conversion en utilisant un drapeau,
<command>gxl2dot</command> déduira le type de conversion à partir de
l'extension du fichier d'entrée, une extension<filename
class='extension'>.dot</filename> donnant une conversion de DOT en GXL, et
une extension <filename class='extension'>.gxl</filename>  donnant une
conversion de GXL en DOT
          </para>
          <indexterm zone="graphviz gxl2dot">
            <primary sortas="b-gxl2dot">gxl2dot</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gxl2gv">
        <term><command>gxl2gv</command></term>
        <listitem>
          <para>
            convertit des graphes représentés en GXL en langage GV ou inversement
          </para>
          <indexterm zone="graphviz gxl2gv">
            <primary sortas="b-gxl2gv">gxl2gv</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      
      <!--
      <varlistentry id="lefty">

        <term><command>lefty</command></term>
        <listitem>
          <para>
            is a two-view graphics editor for technical pictures
          </para>
          <indexterm zone="graphviz lefty">
            <primary sortas="b-lefty">lefty</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lneato">
        <term><command>lneato</command></term>
        <listitem>
          <para>
            is a graph editor for the X Window System. It may be run as a
            standalone editor, or as a front end for applications that use
            graphs. It can control multiple windows viewing different graphs
          </para>
          <indexterm zone="graphviz lneato">
            <primary sortas="b-lneato">lneato</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      -->
<varlistentry id="mm2gv">
        <term><command>mm2gv</command></term>
        <listitem>
          <para>
            convertit une matrice creuse du format Matrix Market en un graphe dans le
format GV (anciennement DOT)
          </para>
          <indexterm zone="graphviz mm2gv">
            <primary sortas="b-mm2gv">mm2gv</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="neato">
        <term><command>neato</command></term>
        <listitem>
          <para>
            dessine un graphe non orienté en utilisant les modèles
<quote>spring</quote>. Les fichiers d’entrée doivent être formatés dans le
langage de graphe <command>dot</command>. Par défaut, la sortie de
<command>neato</command> est le graphe en entrée assorti de coordonnées pour
la mise en page
          </para>
          <indexterm zone="graphviz neato">
            <primary sortas="b-neato">neato</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nop">
        <term><command>nop</command></term>
        <listitem>
          <para>
            lit un flux de graphes et affiche chacun d'eux sur la sortie standard de
manière agréable (canonique). Si aucun fichier n'est donné, il lit l'entrée
standard
          </para>
          <indexterm zone="graphviz nop">
            <primary sortas="b-nop">nop</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="osage">
        <term><command>osage</command></term>
        <listitem>
          <para>
            dessine des graphes groupés. En entrée, il prend n'importe quel graphe au
format DOT
          </para>
          <indexterm zone="graphviz osage">
            <primary sortas="b-osage">osage</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="patchwork">
        <term><command>patchwork</command></term>
        <listitem>
          <para>
            dessine des graphes groupés en utilisant une disposition d'arborescence en
grille. En entrée, il prend n'importe quel graphe au format DOT
          </para>
          <indexterm zone="graphviz patchwork">
            <primary sortas="b-patchwork">patchwork</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="prune">
        <term><command>prune</command></term>
        <listitem>
          <para>
            lit des graphes orientés dans le même format que celui utilisé par
<command>dot</command> et supprime les sous-graphes enracinées dans les
nœuds spécifiés sur la ligne de commande avec les options
          </para>
          <indexterm zone="graphviz prune">
            <primary sortas="b-prune">prune</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sccmap">
        <term><command>sccmap</command></term>
        <listitem>
          <para>
            décompose des graphes orientés (digraph) en composants fortement connexes et
une carte auxiliaire des relations entre les composants. Sur cette carte,
chaque composant est réduit à un nœud. Les graphes qui en résultent sont
affichés sur la sortie standard
          </para>
          <indexterm zone="graphviz sccmap">
            <primary sortas="b-sccmap">sccmap</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sfdp">
        <term><command>sfdp</command></term>
        <listitem>
          <para>
            dessine des graphes non orientés en utilisant le modèle
<quote>spring</quote>, mais il utilise une approche multi-échelle pour
produire les calques des grands graphiques en un temps raisonnable
          </para>
          <indexterm zone="graphviz sfdp">
            <primary sortas="b-sfdp">sfdp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="tred">
        <term><command>tred</command></term>
        <listitem>
          <para>
            calcule la réduction transitive des graphes orientés et affiche les graphes
qui en résultent sur la sortie standard. Ceci supprime les arêtes
qu'implique la transitivité. Les nœuds et les sous-graphes ne sont pas
affectés autrement
          </para>
          <indexterm zone="graphviz tred">
            <primary sortas="b-tred">tred</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="twopi">
        <term><command>twopi</command></term>
        <listitem>
          <para>
            dessine des graphes en utilisant une présentation en
rayons. Essentiellement, un nœud est choisi comme le centre et placé à
l'origine. Les nœuds restants sont placés sur une suite de cercles
concentriques focalisés autour de l'origine, chacun étant à une distance de
rayon fixe du cercle précédent
          </para>
          <indexterm zone="graphviz twopi">
            <primary sortas="b-twopi">twopi</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="unflatten">
        <term><command>unflatten</command></term>
        <listitem>
          <para>
            est un préprocesseur de <command>dot</command> utilisé pour améliorer le
rapport d'aspect des graphes ayant beaucoup de blancs ou de nœuds
déconnectés. La présentation normale d'un tel graphique est en général très
large ou haute
          </para>
          <indexterm zone="graphviz unflatten">
            <primary sortas="b-unflatten">unflatten</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="vimdot">
        <term><command>vimdot</command></term>
        <listitem>
          <para>
            est un script simple qui lance <command>gvim</command> ou l'éditeur
<command>vim</command> ainsi qu'une fenêtre GUI pour voir la sortie de
<command>dot</command> du fichier édité
          </para>
          <indexterm zone="graphviz vimdot">
            <primary sortas="b-vimdot">vimdot</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libcdt">
        <term><filename class="libraryfile">libcdt.so</filename></term>
        <listitem>
          <para>
            gère les dictionnaires pendant l'exécution en utilisant les types de données
de contenu standards&nbsp;: set/multiset désordonné, set/multiset ordoné,
liste, pile, et queue
          </para>
          <indexterm zone="graphviz libcdt">
            <primary sortas="c-libcdt">libcdt.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libcgraph">
        <term><filename class="libraryfile">libcgraph.so</filename></term>
        <listitem>
          <para>
            supporte la programmation de graphes en maintenant les graphes en mémoire et
en lisant et écrivant les fichiers de graphes. Les graphs sont composés de
nœuds, arêtes, et de sous-graphes imbriqués
          </para>
          <indexterm zone="graphviz libcgraph">
            <primary sortas="c-libcgraph">libcgraph.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libgvc">
        <term><filename class="libraryfile">libgvc.so</filename></term>
        <listitem>
          <para>
            fournit un contexte pour les applications souhaitant manipuler et faire du
rendu de graphes. Il fournit un analyseur en ligne de commande, du code de
rendu commun, et un mécanisme de greffons pour les moteurs de rendu
          </para>
          <indexterm zone="graphviz libgvc">
            <primary sortas="c-libgvc">libgvc.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libpathplan">
        <term><filename class="libraryfile">libpathplan.so</filename></term>
        <listitem>
          <para>
            contient des fonctions pour trouver le chemin le plus court entre deux
points sur un simple polygone
          </para>
          <indexterm zone="graphviz libpathplan">
            <primary sortas="c-libpathplan">libpathplan.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libxdot">
        <term><filename class="libraryfile">libxdot.so</filename></term>
        <listitem>
          <para>
            fournit la prise en charge de l'analyse et de la désanalyse des opérations
spécifiées par le langage xdot
          </para>
          <indexterm zone="graphviz libxdot">
            <primary sortas="c-libxdot">libxdot.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
