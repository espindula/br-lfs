<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY boost-download-http "https://boostorg.jfrog.io/artifactory/main/release/&boost-version;/source/boost_&boost-dl-version;.tar.bz2">
  <!ENTITY boost-download-ftp  "">
  <!ENTITY boost-md5sum        "b45dac8b54b58c087bfbed260dbfc03a">
  <!ENTITY boost-size          "116&nbsp;Mo">
  <!ENTITY boost-buildsize     "1,1&nbsp;Go (195&nbsp;Mo installés)">
  <!ENTITY boost-time          "1.4 SBU (Using parallelism=4; add 0.9 SBU for tests)">
]>



<!-- Editors: Check test failures with python-3.11 -->
<sect1 id="boost" xreflabel="Boost-&boost-version;">
  <?dbhtml filename="boost.html"?>


  <title>Boost-&boost-version;</title>

  <indexterm zone="boost">
    <primary sortas="a-Boost">Boost</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction à Boost</title>

    <para>
      <application>Boost</application> offre un ensemble de bibliothèques sources
libres, revues par les pairs et portables en C++. Il inclut des
bibliothèques d'algèbre linéaire, de génération de nombres
pseudo-aléatoires, de multithreading, de traitement d'images, d'expressions
régulières et de tests d'unités.
    </para>

    &lfs113_checked;

    <bridgehead renderas="sect3">Informations sur le paquet</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Téléchargement (HTTP)&nbsp;: <ulink url="&boost-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Téléchargement (FTP)&nbsp;: <ulink url="&boost-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Somme de contrôle MD5&nbsp;: &boost-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Taille du téléchargement&nbsp;: &boost-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation de l'espace disque requis&nbsp;: &boost-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation du temps de construction&nbsp;: &boost-time;
        </para>
      </listitem>
    </itemizedlist>
    

    <!--
    <bridgehead renderas="sect3">
Additional Downloads</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Recommended patch, required to build <xref linkend="libreoffice"/>:
          <ulink url="&patch-root;/boost-&boost-version;-gcc_10-1.patch"/>
        </para>
      </listitem>
    </itemizedlist>
    -->
<bridgehead renderas="sect3">Dépendances de Boost</bridgehead>

    <bridgehead renderas="sect4">Recommandées</bridgehead>
    <para role="recommended">
      <xref linkend="which"/>
    </para>

    <bridgehead renderas="sect4">Facultatives</bridgehead>
    <para role="optional">
      <xref linkend="icu"/> et <ulink url="https://www.open-mpi.org/">Open
MPI</ulink>
    </para>

    <para condition="html" role="usernotes">Notes utilisateur&nbsp;: <ulink url="&blfs-wiki;/boost"/>
    </para>
  </sect2>

  <sect2 role="installation">
    <title>Installation de Boost</title>

    <para>
      Un changement dans cette version de <application>boost</application> casse
les quelques paquets qui utilisent le module
<application>phoenix</application> lors de la compilation avec la version
actuelle de <application>GCC</application>. Dans BLFS, cela affecte <xref
linkend="libreoffice"/>. Corrigez cela avec la commande suivante&nbsp;:
    </para>

<screen><userinput>sed -i '/#include.*phoenix.*tuple.hpp.*/d' \
  boost/phoenix/stl.hpp</userinput></screen>

    <para>
      On peut construire ce paquet avec plusieurs taches en parallèle. Dans les
instructions ci-dessous, <parameter>&lt;N&gt;</parameter> correspond au
nombre de taches. Installez <application>Boost</application> en exécutant
les commandes suivantes&nbsp;:
    </para>


<screen><userinput>./bootstrap.sh --prefix=/usr --with-python=python3 &amp;&amp;
./b2 stage -j<replaceable>&lt;N&gt;</replaceable> threading=multi link=shared</userinput></screen>

    <para>
      Pour lancer les tests de régression de Boost.Build, lancez <command>pushd
tools/build/test; python3 test_all.py; popd</command>. Avec python-3.10.x,
les 168 tests devraient tous réussir. Avec <xref linkend='python3'/>, 20
tests échouent pour des raisons indéterminées.
    </para>

    <para>
      Pour lancer tous les tests de régression de chaque bibliothèque, tapez
<command>pushd status; ../b2; popd</command>. Quelques tests peuvent
échouer. Ils prennent beaucoup de temps (plus de 119 SBU avec -j4) et
utilisent un espace disque volumineux (46 Go). Vous devriez utiliser le
paramètre <parameter>-jN</parameter> pour les accélérer.
    </para>

    <note>
      <para>
        Boost installe plusieurs répertoires versionnés dans /usr/lib/cmake. Si une
nouvelle version de <application>Boost</application> est installée
par-dessus une version précédente, les anciens répertoires cmake doivent
être explicitement supprimés. Pour cela, exécutez en tant qu'utilisateur
<systemitem class="username">root</systemitem>&nbsp;:
      </para>

<screen role="root"><userinput>rm -rf /usr/lib/cmake/[Bb]oost*</userinput></screen>

      <para>
        avant d'installer la nouvelle version.
      </para>
    </note>

    <para>
      Maintenant, en tant qu'utilisateur <systemitem
class="username">root</systemitem>&nbsp;:
    </para>



<screen role="root"><!-- dev note: ./b2 - -prefix=<DESTDIR>
/usr install threading=multi link=shared -->
<userinput>./b2 install threading=multi link=shared</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Explication des commandes</title>

    <para>
      <!-- FIXME: remove before 11.3 is we still use 1.81.0 and LO-7.4,
      this alternative is only for people working through the development book.-->
<parameter>sed -i '/#include ...</parameter>&nbsp;: cela supprime
l'inclusion de <filename>boost/phoenix/stl/tuple.hpp</filename> dans cette
bibliothèque d'en-têtes, ce qui permet aux applications qui l'utilisent de
se lier avec un C++ récent. Cela pourrait aussi se faire en modifiant
<filename>/usr/include/boost/phoenix/stl.hpp</filename> si cette version de
boost a déjà été installée sans ce <command>sed</command>.
    </para>

    <para>
      <parameter>threading=multi</parameter>&nbsp;: ce paramètre assure que
<application>Boost</application> soit bien construit avec le support du
multithreading.
    </para>

    <para>
      <parameter>link=shared</parameter>&nbsp;: Ce paramètre fait que seules les
bibliothèques partagées sont créées, excepté pour libboost_exception et
libboost_test_exec_monitor qui sont créés statiquement. La plupart des gens
n'auront pas besoin des bibliothèques statiques et la plupart des programmes
utilisant <application>Boost</application> se servent uniquement des
en-têtes. Vous pouvez omettre ce paramètre si vous avez besoin des
bibliothèques statiques.
    </para>

    <para>
      <parameter>--with-python=python3</parameter>&nbsp; ce paramètre s'assure que
Python 3 est utilisé si Python 2 est installé.
    </para>

    <para>
       <option>-jN</option>&nbsp;: Ce paramètre peut être utilisé dans la ligne de
commande <command>b2</command>, pour lancer N processus en parallèle.
    </para>

  </sect2>

  <sect2 role="content">
    <title>Contenu</title>

    <segmentedlist>
      <segtitle>Programmes installés</segtitle>
      <segtitle>Bibliothèques installées</segtitle>
      <segtitle>Répertoire installé</segtitle>

      <seglistitem>
        <seg>
          Aucun
        </seg>
        <seg>
          libboost_atomic.so, libboost_chrono.so, libboost_container.so,
libboost_context.so, libboost_contract.so, libboost_coroutine.so,
libboost_date_time.so, libboost_exception.a, libboost_fiber.so,
libboost_filesystem.so, libboost_graph.so, libboost_iostreams.so,
libboost_json.so, libboost_locale.so, libboost_log_setup.so,
libboost_log.so, libboost_math_c99.so, libboost_math_c99f.so,
libboost_math_c99l.so, libboost_math_tr1.so, libboost_math_tr1f.so,
libboost_math_tr1l.so, libboost_nowide.so, libboost_numpy39.so,
libboost_prg_exec_monitor.so, libboost_program_options.so,
libboost_python3&python3-minor;.so, libboost_random.so, libboost_regex.so,
libboost_serialization.so, libboost_stacktrace_addr2line.so,
libboost_stacktrace_basic.so, libboost_stacktrace_noop.so,
libboost_system.so, libboost_test_exec_monitor.a, libboost_thread.so,
libboost_timer.so, libboost_type_erasure.so,
libboost_unit_test_framework.so, libboost_wave.so et
libboost_wserialization.so
        </seg>
        <seg>
          /usr/include/boost
        </seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

</sect1>
