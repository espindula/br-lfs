<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY gcc-download-http  "&gnu-http;/gcc/gcc-&gcc-version;/gcc-&gcc-version;.tar.xz">
  <!ENTITY gcc-download-ftp   "&gnu-ftp;/gcc/gcc-&gcc-version;/gcc-&gcc-version;.tar.xz">
  <!-- Update this also on the grub-uefi page -->
  <!ENTITY gcc-md5sum         "43e4de77f2218c83ca675257ea1af9ef">
  <!ENTITY gcc-size           "83&nbsp;Mo">
  <!ENTITY gcc-buildsize      "9,6&nbsp;Go (2,4&nbsp;Go installé avec tous les langages listés, plus
1,4&nbsp;Go pour les tests)">
  <!ENTITY gcc-time           "32&nbsp;SBU (plus 55&nbsp;SBU pour les tests, tous deux avec parallélisme =
4)">
]>

<sect1 id="gcc" xreflabel="GCC-&gcc-version;">
  <?dbhtml filename="gcc.html" ?>


  <title>GCC-&gcc-version;</title>

  <indexterm zone="gcc">
    <primary sortas="a-gcc-5-0">GCC-&gcc-version;</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction à GCC</title>

    <para>
      Le paquet <application>GCC</application> contient la collection de
compilateurs GNU. Cette page décrit l'installation des compilateurs pour les
langages suivants&nbsp;: C, C++, D, Fortran, Objective C, Objective C++, Go
et Modula2. Comme C et C++ ont été installés dans LFS, cette page permet
soit de mettre à jour C et C++, soit d'installer des compilateurs
supplémentaires.
    </para>

    <note>
      <para>
        Additional languages, among which D and Ada, are available in the
collection. D and Ada have a binary bootstrap requirement for the first
installation, so their installation is not described here. To install them,
you can proceed along the same lines as below after installing the
corresponding compiler from a binary package, adding <option>ada</option> or
<option>d</option> to the <parameter>--enable-languages</parameter> line.
      </para>
    </note>

    &lfs113_checked;

    <caution>
      <para>
        Si vous mettez à jour depuis une version de <application>GCC</application>
antérieure à &gcc-version;, vous devez faire attention en compilant les
modules externes au noyau. Vous devriez vous assurer que le noyau et tous
ses modules natifs sont aussi compilés en utilisant la même version de
<application>GCC</application> que celle utilisée pour construire les
modules externes. Ce problème ne touche pas les mises à jour du noyau natif
(et des modules du noyau), car les instructions ci-dessous sont une
réinstallation complète de <application>GCC</application>. Si vous avez
installé des modules externes, assurez-vous qu'ils soient recompilés en
utilisant la version mise à jour de <application>GCC</application>. Comme
toujours, ne mettez jamais à jour les en-têtes du noyau à partir de celles
utilisées quand on a compilé <application>Glibc</application> dans LFS.
      </para>

    <!--
      <para>

        Some system headers need to be fixed to be used with GCC. This is done
        during the installation of GCC, and the <quote>fixed</quote> headers
        are installed in <filename class="directory">
        /usr/lib/gcc/&lt;machine triplet&gt;/&lt;GCC version&gt;/include-fixed
        </filename>. This is harmless if GCC is built during the LFS stage. But
        if you reinstall GCC in BLFS, some of the BLFS packages may be
        <quote>fixed</quote>. If one of those packages is reinstalled
        afterwards, the <quote>fixed</quote> headers are not updated, which may
        lead to version mismatches. In case that happens, the
        <quote>fixed</quote> headers must be updated by running (as
        <systemitem class="username">root</systemitem>):
        <command>
         /usr/libexec/gcc/x86_64-pc-linux-gnu/&gcc-version;/install-tools/mkheaders
        </command>. The machine triplet may be different on a 32-bit system.
      </para>
-->
</caution>

    <bridgehead renderas="sect3">Informations sur le paquet</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Téléchargement (HTTP)&nbsp;: <ulink url="&gcc-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Téléchargement (FTP)&nbsp;: <ulink url="&gcc-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Somme de contrôle MD5&nbsp;: &gcc-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Taille du téléchargement&nbsp;: &gcc-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation de l'espace disque requis&nbsp;: &gcc-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation du temps de construction&nbsp;: &gcc-time;
        </para>
      </listitem>
    </itemizedlist>

    <!--
    <bridgehead renderas="sect3">
Additional Downloads</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Optional patch when adding Go to the desired language list:
          <ulink url="&patch-root;/gcc-&gcc-version;-fix_go_version-1.patch"/>
        </para>
      </listitem>
    </itemizedlist>
-->
<bridgehead renderas="sect3">Dépendances de GCC</bridgehead>

    <bridgehead renderas="sect4">Facultatives</bridgehead>
    <para role="optional">
      <xref linkend="gdb"/>, <xref linkend="valgrind"/> (pour les tests) et <ulink
url="https://repo.or.cz/isl.git">ISL</ulink> (pour activer l'optimisation
graphite)
    </para>

    <para condition="html" role="usernotes">
      Notes utilisateur&nbsp;: <ulink url="&blfs-wiki;/gcc"/>
    </para>

  </sect2>

  <sect2 role="installation">
    <title>Installation de GCC</title>

    <important>
      <para>
        Même si vous ne spécifiez que des langages autres que C et C++ à la commande
<command>./configure</command> ci-dessous, le processus d'installation
écrasera les compilateurs C et C++ et les bibliothèques existantes de
<application>GCC</application>. Il est recommandé de lancer la suite de
tests complète.
      </para>

      <para>
        Ne continuez pas avec la commande <command>make install</command> avant
d'être sûr que la construction a réussi. Vous pouvez comparer vos résultats
de tests avec ceux qui se trouvent sur <ulink
url="https://gcc.gnu.org/ml/gcc-testresults/"/>. Il se peut que vous vouliez
également vous référer aux informations qui se trouvent dans la section
<application>GCC</application> du chapitre 8 du livre LFS (<ulink
url="&lfs-root;/chapter08/gcc.html"/>).
      </para>
    </important>

    <para>
      Les instructions ci-dessous utilisent intentionnellement le processus
<quote>d'amorçage</quote>
(<foreignphrase>bootstrap</foreignphrase>). L'amorçage est utile pour la
robustesse et est fortement recommandé pour la mise à jour des
compilateurs. Pour le désactiver quand même, passez
<parameter>--disable-bootstrap</parameter> dans les options de
<command>./configure</command> ci-dessous.
    </para>

    <!--
    <para>

      Some packages checks on the phrase <literal>gccgo</literal> in the output
      of <command>go version</command> to see which kind of Go compiler is
      installed (gcc-go or golang). The absence of <literal>gccgo</literal> in
      that string makes them to assume the compiler is the golang which is wrong.
      If Go isn't in the list of desired languages, this patch can be skipped
      while it does not harm if applied anyway. Fix the Go part of gcc to show
      a valid version string when calling <command>go version</command> by
      applying a patch:
    </para>

<screen><userinput>patch -Np1 -i ../gcc-&gcc-version;-fix_go_version-1.patch</userinput></screen>
-->
<para>
      Installez <application>GCC</application> en exécutant les commandes
suivantes&nbsp;:
    </para>

<screen><userinput>case $(uname -m) in
  x86_64)
    sed -i.orig '/m64=/s/lib64/lib/' gcc/config/i386/t-linux64
  ;;
esac

mkdir build               &amp;&amp;
cd    build               &amp;&amp;

../configure              \
    --prefix=/usr         \
    --disable-multilib    \
    --with-system-zlib    \
    --enable-default-pie  \
    --enable-default-ssp  \
    --disable-fixincludes \
    --enable-languages=c,c++,fortran,go,objc,obj-c++,m2 &amp;&amp;
make</userinput></screen>

    <para>
      If you have installed additional packages such as
<application>valgrind</application> and <application>gdb</application>, the
<application>gcc</application> part of the test suite will run more tests
than in LFS. Some of those will report FAIL and others XPASS (pass when
expected to FAIL). As of gcc-13.1.0, about 60 FAIL occur in the
<quote>guality</quote> suite, as well as miscellaneous failures throughout
the rest of the test suite.  If all the compilers above are built, there
will be a little over 80 unexpected failures out of over 478,000 tests. To
run the tests, issue:
    </para>

<!-- The command above may error out, so using && may prevent the summary
to be run. -->
<screen><userinput>ulimit -s 32768 &amp;&amp;
make -k check</userinput></screen>


    <para>
      Les tests sont très longs, et les résultats peuvent être très difficiles à
trouver dans les logs, en particulier si vous utilisez des travaux en
parallèle avec make. Vous pouvez avoir un résumé des tests avec&nbsp;:
    </para>

<screen><userinput>../contrib/test_summary</userinput></screen>

    <para>
      Maintenant, en tant qu'utilisateur <systemitem
class="username">root</systemitem>&nbsp;:
    </para>

<screen role="root"><userinput>make install &amp;&amp;

mkdir -pv /usr/share/gdb/auto-load/usr/lib              &amp;&amp;
mv -v /usr/lib/*gdb.py /usr/share/gdb/auto-load/usr/lib &amp;&amp;

chown -v -R root:root \
    /usr/lib/gcc/*linux-gnu/&gcc-version;/include{,-fixed}</userinput></screen>

    <para>
      Quelques paquets veulent trouver le préprocesseur C dans <filename
class="directory">/lib</filename> ou peuvent se référer au compilateur C
sous le nom de <command>cc</command>. Les liens symboliques suivants ne sont
pas utiles si vous avez suivi les instructions LFS, puisqu'ils sont déjà
créés. Si vous ne les avez pas sur votre système, tapez en tant
qu'utilisateur <systemitem class="username">root</systemitem>&nbsp;:
    </para>

<screen role="root"><userinput>ln -v -sf ../usr/bin/cpp /lib          &amp;&amp;
ln -v -sf gcc /usr/bin/cc              &amp;&amp;
install -v -dm755 /usr/lib/bfd-plugins &amp;&amp;
ln -sfv ../../libexec/gcc/$(gcc -dumpmachine)/&gcc-version;/liblto_plugin.so /usr/lib/bfd-plugins/</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Explication des commandes</title>

    <para>
      <command>mkdir build; cd build</command>&nbsp;: La documentation de
<application>GCC</application> recommande de construire le paquet dans un
répertoire de construction dédié.
    </para>

    <para>
      <parameter>--disable-multilib</parameter>&nbsp;: Ce paramètre assure que les
fichiers sont créés pour l'architecture spécifique à votre ordinateur.
    </para>

    <para>
      <parameter>--with-system-zlib</parameter>&nbsp;: utilise la version système
de <application>zlib</application> au lieu de la version fournie.
<application>zlib</application> est utilisé pour compresser et décompresser
les langages intermédiaires de <application>GCC</application> dans les
fichiers objets LTO (Link Time Optimization).
    </para>

    <para>
      <parameter>--enable-default-pie</parameter>&nbsp;: rend l'option
<option>-fpie</option> active par défaut lors de la compilation des
programmes. Avec la fonctionnalité <xref linkend="gASLR"/> activée dans le
noyau, cela empêche certains types d'attaques basées sur la connaissance de
la disposition de l'espace mémoire.
    </para>

    <para>
      <parameter>--enable-default-ssp</parameter>&nbsp;: rend l'option
<option>-fstack-protector-strong</option> active par défaut lors de la
compilation des programmes. <xref linkend="gSSP"/> est une technique qui
évite l'altération du flot des programmes en corrompant la pile des
paramètres.
    </para>

    <para>
      <parameter>--enable-languages=c,c++,fortran,go,objc,obj-c++,m2</parameter>:
This command identifies which languages to build. You may modify this
command to remove undesired languages.  GCC also supports Ada and D, but
building GCC with Ada (or D) support needs an existing Ada (or D) compiler.
So they are not enabled here.
    </para>

    <para>
      <command>ulimit -s 32768</command>&nbsp;: Cette commande empêche plusieurs
scripts de tomber à court d'espace dans la pile.
    </para>

    <para>
      <command>make -k check</command>&nbsp;: Cette commande lance une suite de
tests sans s'arrêter si une erreur est rencontrée.
    </para>

    <para>
      <command>../contrib/test_summary</command>&nbsp;: Cette commande produira un
résumé des résultats de la suite de tests. Vous pouvez ajouter <command>|
grep -A7 Summ</command> à la commande pour produire une version du résumé
encore plus condensée. Il se peut que vous souhaitiez aussi rediriger la
sortie vers un fichier pour visualiser et comparer à l'avenir.
    </para>

    <para>
      <command>mv -v /usr/lib/*gdb.py ...</command>&nbsp;: Le processus
d'installation met quelques fichiers utilisé par
<application>gdb</application> dans le répertoire <filename
class="directory">/usr/lib</filename>. Cela génère des messages d'erreur
curieux quand <command>ldconfig</command> est utilisé. Cette commande
déplace les fichiers à un autre endroit.
    </para>

    <para>
      <command>chown -v -R root:root /usr/lib/gcc/*linux-gnu/...</command>&nbsp;:
Si le paquet est construit par un utilisateur différent de root, le
propriétaire du répertoire <filename class='directory'>include</filename>
installé sera incorrect. Ces commandes modifient l'appartenance vers
l'utilisateur et le groupe <systemitem class="username">root</systemitem>.
    </para>

    <para>
      <!-- from Arch, not tested -->
<option>--enable-host-shared --enable-languages=jit</option>: Build
<systemitem class="library">libgccjit</systemitem>, a library for embedding
GCC inside programs and libraries for generating machine code.  Despite
<quote>JIT</quote> (just-in-time) in the name, the library can be used for
AOT (ahead-of-time) compilation as well.
<option>--enable-host-shared</option> is needed for building <systemitem
class="library">libgccjit</systemitem>, but it significantly slows down
GCC.  So <systemitem class="library">libgccjit</systemitem> should be built
and installed separately, not as a part of the <quote>main</quote> GCC
installation.  If you need this library, configure GCC with these two
options and install the library by running <command>make -C gcc
jit.install-common jit.install-info</command> as the &root; user.  This
library is not used by any BLFS package, nor tested by the BLFS developers.
    </para>

  </sect2>

  <sect2 role="content">
    <title>Contenu</title>

    <para>
      Certains noms de programmes et de bibliothèques et des descriptions ne sont
pas listés ici, mais peuvent être trouvé dans <ulink
url="&lfs-root;/chapter08/gcc.html#contents-gcc">la section GCC de
LFS</ulink> puisqu'ils sont initialement installés dans LFS.
    </para>

    <segmentedlist>
      <segtitle>Programmes installés</segtitle>
      <segtitle>Bibliothèques installées</segtitle>
      <segtitle>Répertoires installés</segtitle>

      <seglistitem>
        <seg>
          gccgo, gfortran, gm2, go, and gofmt, hard-linked to architecture specific
names
        </seg>
        <seg>
          libgfortran.{so,a}, libgm2.{so,a} libgo.{so,a}, libgobegin.a,
libgolibbegin.a, libobjc.{so,a}, and numerous other run-time libraries and
executables
        </seg>
        <seg>
          /usr/lib/go
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descriptions courtes</bridgehead>
      <?dbfo list-presentation="list"?> <?dbhtml list-presentation="table"?>

      <varlistentry id="gccgo">
        <term><command>gccgo</command></term>
        <listitem>
          <para>
            est un compilateur basé sur GCC pour le langage
<application>Go</application>
          </para>
          <indexterm zone="gcc gccgo">
            <primary sortas="b-gccgo">gccgo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gm2">
        <term><command>gm2</command></term>
        <listitem>
          <para>
            is a GCC-based compiler for the <application>Modula-2</application> language
          </para>
          <indexterm zone="gcc gm2">
            <primary sortas="b-gm2">gm2</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="go">
        <term><command>go</command></term>
        <listitem>
          <para>
            est un outil pour la gestion du code source <application>Go</application>
          </para>
          <indexterm zone="gcc go">
            <primary sortas="b-go">go</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gofmt">
        <term><command>gofmt</command></term>
        <listitem>
          <para>
            est un outil pour le formatage du code source <application>Go</application>
          </para>
          <indexterm zone="gcc gofmt">
            <primary sortas="b-gofmt">gofmt</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      
      <!--
      <varlistentry id="gdc">

        <term><command>gdc</command></term>
        <listitem>
          <para>
            is a GCC-based compiler for the <application>D</application>
            language
          </para>
          <indexterm zone="gcc gdc">
            <primary sortas="b-gdc">gdc</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      -->
<varlistentry id="gfortran">
        <term><command>gfortran</command></term>
        <listitem>
          <para>
            est un compilateur basé sur GCC pour le langage
<application>Fortran</application>
          </para>
          <indexterm zone="gcc gfortran">
            <primary sortas="b-gfortran">gfortran</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
