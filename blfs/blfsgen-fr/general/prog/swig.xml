<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY swig-download-http "&sourceforge-dl;/swig/swig-&swig-version;.tar.gz">
  <!ENTITY swig-download-ftp  "">
  <!ENTITY swig-md5sum        "7c3e46cb5af2b469722cafa0d91e127b">
  <!ENTITY swig-size          "7.7 Mo">
  <!ENTITY swig-buildsize     "118 Mo (1.3 Go avec les tests)">
  <!ENTITY swig-time          "0.2 SBU (plus 9.3 SBU pour les tests, avec parallélisme = 4 dans les deux
cas)">
]>

<sect1 id="swig" xreflabel="SWIG-&swig-version;">
  <?dbhtml filename="swig.html"?>

  <sect1info>
<date>$Date$</date></sect1info>

  <title>SWIG-&swig-version;</title>

  <indexterm zone="swig">
    <primary sortas="a-swig">SWIG</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction à SWIG</title>

    <para>
       <application>SWIG</application> (Simplified Wrapper and Interface Generator)
est un compilateur qui intègre le <application>C</application> et le
<application>C++</application> avec des langages comme
<application>Perl</application>, <application>Python</application>,
<application>Tcl</application>, <application>Ruby</application>,
<application>PHP</application>, <application>Java</application>,
<application>C#</application>, <application>D</application>,
<application>Go</application>, <application>Lua</application>,
<application>Octave</application>, <application>R</application>,
<application>Scheme</application> et <application>Ocaml</application>.
<application>SWIG</application> peut aussi exporter son arbre d'analyse en
s-expressions <application>Lisp</application> et en
<application>XML</application>.
    </para>
    <para>
       <application>SWIG</application> lit les en-têtes
<application>C/C++</application> annotées et crée un code enveloppe (code
glue) afin de faire les bibliothèques correspondantes en
<application>C/C++</application> disponibles aux programmes listés, ou pour
étendre des programmes <application>C/C++</application> avec un langage de
script.
    </para>

    &lfs101_checked;

    <bridgehead renderas="sect3">Informations sur le paquet</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Téléchargement (HTTP)&nbsp;: <ulink url="&swig-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Téléchargement (FTP)&nbsp;: <ulink url="&swig-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Somme de contrôle MD5 du téléchargement&nbsp;: &swig-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Taille du téléchargement&nbsp;: &swig-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation de l'espace disque requis&nbsp;: &swig-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation du temps de construction&nbsp;: &swig-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Dépendances de SWIG</bridgehead>

    <bridgehead renderas="sect4">Requises</bridgehead>
    <para role="required">
      <xref linkend="pcre"/>
    </para>

    <bridgehead renderas="sect4">Facultatives</bridgehead>
    <para role="optional">
      <xref linkend="boost"/> pour les tests, et les langages mentionnés en
introduction, en tant que dépendance à l'exécution
    </para>

    <para condition="html" role="usernotes">
      Notes utilisateur&nbsp;: <ulink url="&blfs-wiki;/swig"/>
    </para>
  </sect2>

  <sect2 role="installation">
    <title>Installation de SWIG</title>

    <para>
      Installez <application>SWIG</application> en lançant les commandes
suivantes&nbsp;:
    </para>

<screen><userinput>./configure --prefix=/usr \
            --without-maximum-compile-warnings &amp;&amp;
make</userinput></screen>

    <para>
      <!-- Phase out P2 support
      If you have <xref linkend="python2"/>
 installed, the Python-3
      tests are not run.  You can run tests for Python-3 by issuing
      <command>PY3=1 make check-python-examples</command> followed by
      <command>PY3=1 make check-python-test-suite</command>. -->
Pour tester le résultat, tapez&nbsp;: <command>PY3=1 make -k check
TCL_INCLUDE=</command>. L'effacement de la variable
<envar>TCL_INCLUDE</envar> est nécessaire car elle est incorrectement
initialisée par <emphasis>configure</emphasis>. Les tests ne sont lancés que
pour les langages installés sur votre machine, donc l'espace disque et les
valeurs de SBU pour les tests peuvent varier et ne doivent être considérées
que comme des indications d'ordre de grandeur. Selon la documentation de
<application>SWIG</application>, l'échec de quelques tests ne doit pas être
considéré comme alarmant. Les tests go sont bogués et peuvent générer
beaucoup de sortie inutile.
    </para>

    <para>
      Maintenant, en tant qu'utilisateur <systemitem
class="username">root</systemitem>&nbsp;:
    </para>

<screen role="root"><userinput>make install &amp;&amp;
install -v -m755 -d /usr/share/doc/swig-&swig-version; &amp;&amp;
cp -v -R Doc/* /usr/share/doc/swig-&swig-version;</userinput></screen>
  </sect2>

  <sect2 role="commands">
    <title>Explication des commandes</title>

    <para>
      <parameter>--without-maximum-compile-warnings</parameter>&nbsp;:  désactive
la compatibilité renforcée ansi du compilateur, qui génère des erreurs dans
les entêtes <application>Lua</application> (depuis Lua 5.3).
    </para>

    <para>
      <!--We use it for <application>
Clisp</application>, because the
      SWIG implementation is very incomplete and a lot of tests fail. -->
<option>--without-&lt;langage&gt;</option>&nbsp;: permet de désactiver la
construction des tests et exemples pour &lt;langage&gt;, mais toutes les
possibilités des langages de <application>SWIG</application> sont toujours
construites. 
    </para>

  </sect2>

  <sect2 role="content">
    <title>Contenu</title>

    <segmentedlist>
      <segtitle>Programmes installés</segtitle>
      <segtitle>Bibliothèque installée</segtitle>
      <segtitle>Répertoires installés</segtitle>

      <seglistitem>
        <seg>
          swig et ccache-swig
        </seg>
        <seg>
          Aucune
        </seg>
	<seg>
          /usr/share/doc/swig-&swig-version; et /usr/share/swig
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descriptions courtes</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="swig-prog">
        <term><command>swig</command></term>
        <listitem>
          <para>
            prend un fichier d'interface contenant des déclarations C/C++ et des
instructions spécifiques à SWIG, et génère le code enveloppe correspondant
pour construire les modules d'extension
          </para>
          <indexterm zone="swig swig-prog">
            <primary sortas="b-swig">swig</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ccache-swig">
        <term><command>ccache-swig</command></term>
        <listitem>
          <para>
            est un cache de compilation, qui accélère la re-compilation du code
C/C++/SWIG
          </para>
          <indexterm zone="swig ccache-swig">
            <primary sortas="b-ccache-swig">ccache-swig</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>
  </sect2>

</sect1>
