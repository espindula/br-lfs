<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY git-root "&kernel-dl;/software/scm/git" >

  <!ENTITY git-download-http "&git-root;/git-&git-version;.tar.xz">
  <!ENTITY git-download-ftp  "">
  <!ENTITY git-md5sum        "de30d259ad0f8f2ac22b0584e567daae">

  <!ENTITY git-size          "6.2&nbsp;Mo">
  <!-- using gcc-8.1 the build and install are much bigger than with gcc-7.3 -->
  <!-- but people keep forgetting that an install not only needs the nett build
       space, it also needs the install space (or DESTDIR) -->
  <!ENTITY git-buildsize     "213 MB (with downloaded documentation, add 16 MB to build documentation)">
  <!-- With 2.23.0, there was a large increase in time for tests. Possibly disk related? -->
  <!-- Confirmed that it is disk related.-->
  <!ENTITY git-time          "0.3 SBU (with parallelism=4; add 0.4 SBU for building documentation and 1.7
SBU for tests, both with parallelism=4)">
]>

<sect1 id="git" xreflabel="git-&git-version;">
  <?dbhtml filename="git.html"?>

  <sect1info>
<date>$Date$</date></sect1info>

  <title>Git-&git-version;</title>

  <indexterm zone="git">
    <primary sortas="a-Git">Git</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction à Git</title>

    <para>
      <application>Git</application> est un système de contrôle de versions
distribué librement et open-source, conçu pour gérer du plus petit au plus
gros projet rapidement et efficacement. Chaque clonage
<application>Git</application> est un dépôt complet avec l'historique et les
possibilités de poursuite des révisions, indépendamment de l'accès réseau ou
d'un serveur central. Le système de branches et de synchronisation est
rapide et facile à utiliser. <application>Git</application> est utilisé pour
le contrôle de la version de fichiers, un peu comme de nombreux outils comme
<xref linkend="mercurial"/>, <application>Bazaar</application>, <xref
linkend="subversion"/>, <ulink url="http://www.nongnu.org/cvs/">CVS</ulink>,
<application>Perforce</application> et <application>Team Foundation
Server</application>.
    </para>

    &lfs110_checked;

    <bridgehead renderas="sect3">Informations sur le paquet</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Téléchargement (HTTP)&nbsp;: <ulink url="&git-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Téléchargement (FTP)&nbsp;: <ulink url="&git-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Somme de contrôle MD5 du téléchargement&nbsp;: &git-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Taille du téléchargement&nbsp;: &git-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation de l'espace disque requis&nbsp;: &git-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation du temps de construction&nbsp;: &git-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Téléchargements supplémentaires</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          <ulink url="&git-root;/git-manpages-&git-version;.tar.xz">
&git-root;/git-manpages-&git-version;.tar.xz</ulink> (pas nécessaire si vous
avez installé <xref linkend="asciidoc"/> et <xref linkend="xmlto"/>, et
préférez les construire)
        </para>
      </listitem>
      <listitem>
        <para>
          <ulink url="&git-root;/git-htmldocs-&git-version;.tar.xz">
&git-root;/git-htmldocs-&git-version;.tar.xz</ulink> et d'autres docs (pas
nécessaire si vous avez installé <xref linkend="asciidoc"/> et préférez
reconstruire la documentation).
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Dépendances de Git</bridgehead>

    <bridgehead renderas="sect4">Recommandées</bridgehead>
    <para role="recommended">
      <xref linkend="curl"/> (nécessaire pour utiliser
<application>Git</application> par http, https, ftp ou ftps)
    </para>

    <bridgehead renderas="sect4">Facultatives</bridgehead>
    <para role="optional">
      <xref role="runtime" linkend="gnupg2"/> (runtime, may be used to sign
<application>Git</application> commits or tags, or verify th signatures of
them), <xref role="runtime" linkend="openssh"/> (runtime, needed to use
<application>Git</application> over ssh), <xref linkend="pcre2"/>
(<emphasis>or</emphasis> the deprecated <xref role="nodep"
linkend="pcre"/>), in either case configured with
<literal>--enable-jit</literal>, <xref role="runtime" linkend="subversion"/>
with Perl bindings (runtime, for <command>git svn</command>), <xref
role="runtime" linkend="tk"/> (gitk, a simple <application>Git</application>
repository viewer, uses <application>Tk</application> at runtime), <xref
linkend="valgrind"/>, <ulink
url="https://metacpan.org/pod/Authen::SASL">Authen::SASL</ulink> and <ulink
url="https://metacpan.org/pod/MIME::Base64">MIME::Base64</ulink> (both
runtime, for <command>git send-email</command>)
    </para>

    <bridgehead renderas="sect4">Facultatives (pour créer les pages de man, les docs html et les autres docs)</bridgehead>
    <para role="optional">
      <!-- or xref linkend="asciidoctor", doesn't work now because it needs docbook-xsl-ns -->
<xref linkend="xmlto"/> et <xref linkend="asciidoc"/>, et aussi <ulink
url="http://dblatex.sourceforge.net/">dblatex</ulink> (pour la version PDF
du manuel utilisateur) et <ulink
url="http://docbook2x.sourceforge.net/">docbook2x</ulink> pour créer les
pages info
    </para>

    <para condition="html" role="usernotes">Notes utilisateur&nbsp;: <ulink url="&blfs-wiki;/git"/>
    </para>
  </sect2>

  <sect2 role="installation">
    <title>Installation de Git</title>

    <para>
      Installez <application>Git</application> en lançant les commandes
suivantes&nbsp;:
    </para>

<screen><userinput>./configure --prefix=/usr \
            --with-gitconfig=/etc/gitconfig \
            --with-python=python3 &amp;&amp;
make</userinput></screen>

    <para>
      Vous pouvez construire les pages de manuel ou les docs html, ou utiliser les
versions téléchargées. Si vous choisissez de les construire, utilisez les
deux instructions suivantes.
    </para>

    <para>
      Si vous avez installé <xref linkend="asciidoc"/> vous pouvez créer la
version html des pages de manuel et des autres docs&nbsp;:
    </para>

<screen remap="doc"><userinput>make html</userinput></screen>

    <para>
      Si vous avez installé <xref linkend="asciidoc"/> et <xref linkend="xmlto"/>
vous pouvez créer les pages de man&nbsp;:
    </para>

<screen remap="doc"><userinput>make man</userinput></screen>

    <para>
      La suite de tests peut être lancée en parallèle. Pour lancer la suite de
tests, lancez&nbsp;: <command>make test</command>. Si vous la lancez en tant
qu'utilisateur normal, 0 tests devraient être rapporté comme échoué dans le
résumé final.
    </para>

    <para>
      Maintenant, en tant qu'utilisateur <systemitem
class="username">root</systemitem>&nbsp;:
    </para>

<!-- ==== Method 1 for docs ====== -->
<screen role="root"><userinput>make perllibdir=/usr/lib/perl5/&lfs-perl-version;/site_perl install</userinput></screen>


    <bridgehead renderas="sect3">Si vous créez les pages de man ou les docs html</bridgehead>

    <para>
      Installez les pages de manuel en tant qu'utilisateur <systemitem
class="username">root</systemitem>&nbsp;:
    </para>

<screen role="root"
        remap="doc"><userinput>make install-man</userinput></screen>

    <para>
      Installez les docs html en tant qu'utilisateur <systemitem
class="username">root</systemitem>&nbsp;:
    </para>

<!-- ==== Method 2 for docs ====== -->
<screen role="root"
        remap="doc"><userinput>make htmldir=/usr/share/doc/git-&git-version; install-html</userinput></screen>


    <bridgehead renderas="sect3">Si vous avez téléchargé les pages de man ou les docs html</bridgehead>

    <para>
      Si vous avez téléchargé les pages de manuel déballez les en tant
qu'utilisateur <systemitem class="username">root</systemitem>&nbsp;:
    </para>

<screen role="root"><userinput>tar -xf ../git-manpages-&git-version;.tar.xz \
    -C /usr/share/man --no-same-owner --no-overwrite-dir</userinput></screen>

    <para>
      Si vous avez téléchargé les documentations HTML déballez les en tant
qu'utilisateur <systemitem class="username">root</systemitem>&nbsp;:
    </para>

<!-- ==== Reorganize docs ====== -->
<screen role="root"><userinput>mkdir -vp   /usr/share/doc/git-&git-version; &amp;&amp;
tar   -xf   ../git-htmldocs-&git-version;.tar.xz \
      -C    /usr/share/doc/git-&git-version; --no-same-owner --no-overwrite-dir &amp;&amp;

find        /usr/share/doc/git-&git-version; -type d -exec chmod 755 {} \; &amp;&amp;
find        /usr/share/doc/git-&git-version; -type f -exec chmod 644 {} \;</userinput></screen>


    <bridgehead renderas="sect3">Réorganisez les versions texte et html dans html-docs (pour les deux
méthodes)</bridgehead>

    <para>
      Pour les deux méthodes, html-docs inclut beaucoup de fichiers en texte
brut. Réorganisez les fichiers, en tant qu'utilisateur <systemitem
class="username">root</systemitem>&nbsp;:
    </para>

<screen role="root"><userinput>mkdir -vp /usr/share/doc/git-&git-version;/man-pages/{html,text}         &amp;&amp;
mv        /usr/share/doc/git-&git-version;/{git*.txt,man-pages/text}     &amp;&amp;
mv        /usr/share/doc/git-&git-version;/{git*.,index.,man-pages/}html &amp;&amp;

mkdir -vp /usr/share/doc/git-&git-version;/technical/{html,text}         &amp;&amp;
mv        /usr/share/doc/git-&git-version;/technical/{*.txt,text}        &amp;&amp;
mv        /usr/share/doc/git-&git-version;/technical/{*.,}html           &amp;&amp;

mkdir -vp /usr/share/doc/git-&git-version;/howto/{html,text}             &amp;&amp;
mv        /usr/share/doc/git-&git-version;/howto/{*.txt,text}            &amp;&amp;
mv        /usr/share/doc/git-&git-version;/howto/{*.,}html               &amp;&amp;

sed -i '/^&lt;a href=/s|howto/|&amp;html/|' /usr/share/doc/git-&git-version;/howto-index.html &amp;&amp;
sed -i '/^\* link:/s|howto/|&amp;html/|' /usr/share/doc/git-&git-version;/howto-index.txt</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Explication des commandes</title>

    <para>
      <parameter>--with-gitconfig=/etc/gitconfig</parameter>&nbsp;: cela
initialise <filename>/etc/gitconfig</filename> comme le fichier où sont
enregistrées les valeurs par défaut de <application>Git</application> au
niveau du système.
    </para>

    <para>
      <parameter>--with-python=python3</parameter>&nbsp;: Utilisez ce paramètre
pour permettre l'utilisation de <application>Python 3</application> au lieu
de <application>Python 2</application> en fin de vie. Python est utilisé
pour l'interface <command>git p4</command> pour les dépôt perforce, et aussi
pour certains tests.
    </para>

    <para>
      <option>--with-libpcre2</option>&nbsp;: Utilisez cette option si
<application>PCRE2</application> est installé et a été construit avec
l'option JIT activée.
    </para>

    <para>
      <option>--with-libpcre</option>&nbsp;: Plutôt que PCRE2, utilisez ce
paramètre si l'obsèlete <application>PCRE</application> est installé et que
vous l'avez construit avec l'option JIT.
    </para>

    <para>
      <command>tar -xf ../git-manpages-&git-version;.tar.gz -C /usr/share/man
--no-same-owner</command>&nbsp;: Cela va déballer
<filename>git-manpages-&git-version;.tar.gz</filename>. L'option
<option>-C</option> fait que tar change de répertoire pour <filename
class="directory">/usr/share/man</filename> avant de commencer à
décompresser les docs. L'option <option>--no-same-owner</option> arrête tar
pour préserver les informations d'utilisateur et de groupe des
fichiers. Cela est utile quand l'utilisateur ou le groupe n'existe pas sur
votre système; Cela peut être (potentiellement) une faille de sécurité.
    </para>

    <para>
      <command>mv /usr/share/doc/git-&git-version; ...</command>&nbsp;: Ces
commandes déplacent certains des fichiers dans des sous-répertoires pour
rendre plus facile le tri des docs et trouver plus facilement ce que vous
cherchez.
    </para>

    <para>
      <command>find ... chmod ...</command>&nbsp;: Ces commandes corrigent les
permissions dans les fichiers tar de la documentation fournie.
    </para>

  </sect2>

  <sect2 role="configuration">
    <title>Configurer Git</title>

    <sect3 id="git-config">
      <title>Fichiers de configuration</title>
      <para>
        <filename>~/.gitconfig</filename> et <filename>/etc/gitconfig</filename>
      </para>

      <indexterm zone="git git-config">
        <primary sortas="e-AA.gitconfig">~/.gitconfig</primary>
      </indexterm>

      <indexterm zone="git git-config">
        <primary sortas="e-etc-gitconfig">/etc/gitconfig</primary>
      </indexterm>

    </sect3>

  </sect2>

  <sect2 role="content">
    <title>Contenu</title>

    <segmentedlist>
      <segtitle>Programmes installés</segtitle>
      <segtitle>Bibliothèques installées</segtitle>
      <segtitle>Répertoires installés</segtitle>

      <seglistitem>
        <seg>
          git, git-receive-pack, git-upload-archive et git-upload-pack (liés en dur
les uns aux autres), git-cvsserver, git-shell et gitk
        </seg>
        <seg>
          Aucune
        </seg>
        <seg>
          /usr/libexec/git-core et
/usr/share/{doc/git-&git-version;,git-core,git-gui,gitk,gitweb}
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descriptions courtes</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="git-prog">
        <term><command>git</command></term>
        <listitem>
          <para>
            est un stupide pourchasseur de contenu
          </para>
          <indexterm zone="git git-prog">
            <primary sortas="b-git">git</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="git-cvsserver">
        <term><command>git-cvsserver</command></term>
        <listitem>
          <para>
            est un émulateur de serveur CVS pour <application>Git</application>
          </para>
          <indexterm zone="git git-cvsserver">
            <primary sortas="b-git-cvsserver">git-cvsserver</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gitk">
        <term><command>gitk</command></term>
        <listitem>
          <para>
            est un navigateur graphique de dépôt <application>Git</application> (exige
<xref linkend="tk"/>)
          </para>
          <indexterm zone="git gitk">
            <primary sortas="b-gitk">gitk</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="git-receive-pack">
        <term><command>git-receive-pack</command></term>
        <listitem>
          <para>
            est appelé par <command>git send-pack</command> et met à jour le dépôt avec
les informations issue du dépôt distant
          </para>
          <indexterm zone="git git-receive-pack">
            <primary sortas="b-git-receive-pack">git-receive-pack</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="git-shell">
        <term><command>git-shell</command></term>
        <listitem>
          <para>
            est un shell de connexion pour que des comptes SSH donnent des accès Git
restreints
          </para>
          <indexterm zone="git git-shell">
            <primary sortas="b-git-shell">git-shell</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="git-upload-archive">
        <term><command>git-upload-archive</command></term>
        <listitem>
          <para>
            est appelé par <command>git archive --remote</command> et envoie une archive
générée à l'autre bout du protocole git
          </para>
          <indexterm zone="git git-upload-archive">
            <primary sortas="b-git-upload-archive">git-upload-archive</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="git-upload-pack">
        <term><command>git-upload-pack</command></term>
        <listitem>
          <para>
            est appelé par <command>git fetch-pack</command>, il détecte les objets
manquant à l'autre bout et il les envoie ensuite en paquets
          </para>
          <indexterm zone="git git-upload-pack">
            <primary sortas="b-git-upload-pack">git-upload-pack</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
