<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY iptables-download-http "https://www.netfilter.org/projects/iptables/files/iptables-&iptables-version;.tar.xz">
  <!ENTITY iptables-download-ftp  "ftp://ftp.netfilter.org/pub/iptables/iptables-&iptables-version;.tar.xz">
  <!ENTITY iptables-md5sum        "ffa00f68d63e723c21b8a091c5c0271b">
  <!ENTITY iptables-size          "633&nbsp;Ko">
  <!ENTITY iptables-buildsize     "16&nbsp;Mo">
  <!ENTITY iptables-time          "0.1&nbsp;SBU">
]>

<sect1 id="iptables" xreflabel="iptables-&iptables-version;">
  <?dbhtml filename="iptables.html"?>


  <title>iptables-&iptables-version;</title>

  <indexterm zone="iptables">
    <primary sortas="a-iptables">iptables</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction à iptables</title>

    <para>
      <application>iptables</application> est un programme en ligne de commande et
en espace utilisateur utilisé pour configurer l'ensemble de règles de
filtrage de paquets des noyaux Linux 2.4 et supérieurs
    </para>

    &lfs120_checked;

    <bridgehead renderas="sect3">Informations sur le paquet</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Téléchargement (HTTP)&nbsp;: <ulink url="&iptables-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Téléchargement (FTP)&nbsp;: <ulink url="&iptables-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Somme de contrôle MD5&nbsp;: &iptables-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Taille du téléchargement&nbsp;: &iptables-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation de l'espace disque requis&nbsp;: &iptables-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation du temps de construction&nbsp;: &iptables-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Dépendances de iptables</bridgehead>

    <bridgehead renderas="sect4">Facultatives</bridgehead>
    <para role="optional">

      <!--      <xref linkend="nftables"/>
, -->
<xref linkend="libpcap"/> (requis pour la prise en charge du compilateur BPF
et de nfsynproxy), <ulink
url="https://github.com/tadamdam/bpf-utils">bpf-utils</ulink> (requis pour
la prise en charge de Berkely Packet Filter), <ulink
url="https://netfilter.org/projects/libnfnetlink/">libnfnetlink</ulink>
(requis pour la prise en charge de connlabel), <ulink
url="https://netfilter.org/projects/libnetfilter_conntrack/">libnetfilter_conntrack"</ulink>
(requis pour la prise en charge de connlabel) et <ulink
url="https://netfilter.org/projects/nftables/">nftables</ulink>
    </para>

  </sect2>

  <sect2 role="kernel" id="iptables-kernel">
    <title>Configuration du noyau</title>

    <para>
      Sur Linux, on a un pare-feu via l'interface netfilter. Pour utiliser
<application>iptables</application> pour configurer netfilter, les
paramètres du noyau suivants sont requis&nbsp;:
    </para>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="iptables-kernel.xml"/>

    <para>
      Ajoutez tous les protocoles de suivi de connexion que vous utiliserez, ainsi
que tous les protocoles que vous voulez utiliser pour la prise en charge de
leur détection dans la section «&nbsp;Core Netfilter
Configuration&nbsp;». Les options ci-dessus sont suffisantes pour lancer
<xref linkend="fw-persFw-ipt"/>.
    </para>

    <indexterm zone="iptables iptables-kernel">
      <primary sortas="d-iptables">iptables</primary>
    </indexterm>

  </sect2>

    <sect2 role="installation">
      <title>Installation de iptables</title>

    <note>
      <para>
        L'installation ci-dessous n'inclut pas la construction de quelques
bibliothèques d'extension spécialisées qui exigent les en-têtes raw dans le
code source de <application>Linux</application>. Si vous souhaitez
construire des extensions supplémentaires (si vous n'êtes pas sûr, vous n'en
avez probablement pas besoin), vous pouvez regarder le fichier
<filename>INSTALL</filename> pour voir un exemple de la façon de modifier le
paramètre <parameter>KERNEL_DIR=</parameter> pour pointer vers le code
source de <application>Linux</application>. Remarquez que si vous mettez à
jour la version du noyau, il se peut que vous deviez aussi recompiler
<application>iptables</application> et que l'équipe BLFS n'a pas testé
l'utilisation des en-têtes du noyau raw.
      </para>
    </note>

    <para>
      Installez <application>iptables</application> en exécutant les commandes
suivantes&nbsp;:
    </para>

<screen><userinput>./configure --prefix=/usr      \
            --disable-nftables \
            --enable-libipq    &amp;&amp;
make</userinput></screen>

    <para>
      
      <!-- there is a iptables-test.py script which seems to run a
      lot of tests. Unfortunately, success rate is 50% only. Needs
      to be clarified how to use and which prerequisites are required
      to run to 100%. Contacted Shekhar Sharma for that (Dec'19),
      waiting for answer (thomas). -->
Ce paquet n'a pas de suite de tests.
    </para>

    <para>
      Maintenant, en tant qu'utilisateur <systemitem
class="username">root</systemitem>&nbsp;:
    </para>

<screen role="root"><userinput>make install</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Explication des commandes</title>

    <para>
      <!--Omit this switch if you have installed
      <xref linkend="nftables"/>
.-->
<parameter>--disable-nftables</parameter>&nbsp;: ce paramètre désactive la
construction de la compatibilité nftables. 
    </para>

    <para>
      <parameter>--enable-libipq</parameter>&nbsp;: Ce paramètre active la
construction de <filename class="libraryfile">libipq.so</filename> qui peut
être utilisé par certains paquets extérieurs à BLFS.
    </para>

    <para>
      <option>--enable-nfsynproxy</option>&nbsp;: Ce paramètre active
l'installation de l'outil de configuration SYNPROXY de
<application>nfsynproxy</application>.
    </para>

  </sect2>

  <sect2 role="configuration">
    <title>Configuration de iptables</title>

    <!--
    <note>

      <para>
        If you intend to use <xref linkend="firewalld"/> to configure your
        firewall rules, you should not use the example configurations provided
        here, nor should you enable the
        <phrase revision="sysv">bootscript.</phrase>
        <phrase revision="systemd">systemd unit.</phrase>
      </para>
    </note>
-->
<note>
      <para>
        Dans les exemples de configuration suivants, <emphasis
role="strong">LAN1</emphasis> est utilisé pour l'interface LAN et <emphasis
role="strong">WAN1</emphasis> pour l'interface externe connectée à
Internet. Vous devrez remplacer ces valeurs avec les noms d'interfaces
correspondants à votre système.
      </para>
    </note>

    <sect3 id="fw-persFw-ipt"
    xreflabel="Créer un pare-feu personnel avec iptables">
      <title>Pare-feu personnel</title>

      <para>
        Un pare-feu personnel est conçu pour vous permettre d'accéder à tous les
services offerts sur internet, mais de garder votre ordinateur sécurisé et
vos données privées.
      </para>

      <para>
        Voici une version légèrement modifiée de la recommandation de Rusty Russell
sur <ulink
url="https://www.netfilter.org/documentation/HOWTO/packet-filtering-HOWTO.html">le
guide de Packet Filter de Linux 2.4</ulink>. Elle est toujours d'actualité
pour les noyaux 5.x.
      </para>

<screen role="root" revision="sysv"><?dbfo keep-together="auto"?><userinput>cat &gt; /etc/rc.d/rc.iptables &lt;&lt; "EOF"
<literal>#!/bin/sh

# Begin rc.iptables

# Insert connection-tracking modules
# (not needed if built into the kernel)
modprobe nf_conntrack
modprobe xt_LOG

# Enable broadcast echo Protection
echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts

# Disable Source Routed Packets
echo 0 &gt; /proc/sys/net/ipv4/conf/all/accept_source_route
echo 0 &gt; /proc/sys/net/ipv4/conf/default/accept_source_route

# Enable TCP SYN Cookie Protection
echo 1 &gt; /proc/sys/net/ipv4/tcp_syncookies

# Disable ICMP Redirect Acceptance
echo 0 &gt; /proc/sys/net/ipv4/conf/default/accept_redirects

# Do not send Redirect Messages
echo 0 &gt; /proc/sys/net/ipv4/conf/all/send_redirects
echo 0 &gt; /proc/sys/net/ipv4/conf/default/send_redirects

# Drop Spoofed Packets coming in on an interface, where responses
# would result in the reply going out a different interface.
echo 1 &gt; /proc/sys/net/ipv4/conf/all/rp_filter
echo 1 &gt; /proc/sys/net/ipv4/conf/default/rp_filter

# Log packets with impossible addresses.
echo 1 &gt; /proc/sys/net/ipv4/conf/all/log_martians
echo 1 &gt; /proc/sys/net/ipv4/conf/default/log_martians

# be verbose on dynamic ip-addresses  (not needed in case of static IP)
echo 2 &gt; /proc/sys/net/ipv4/ip_dynaddr

# disable Explicit Congestion Notification
# too many routers are still ignorant
echo 0 &gt; /proc/sys/net/ipv4/tcp_ecn

# Set a known state
iptables -P INPUT   DROP
iptables -P FORWARD DROP
iptables -P OUTPUT  DROP

# These lines are here in case rules are already in place and the
# script is ever rerun on the fly. We want to remove all rules and
# pre-existing user defined chains before we implement new rules.
iptables -F
iptables -X
iptables -Z

iptables -t nat -F

# Allow local-only connections
iptables -A INPUT  -i lo -j ACCEPT

# Free output on any interface to any ip for any service
# (equal to -P ACCEPT)
iptables -A OUTPUT -j ACCEPT

# Permit answers on already established connections
# and permit new connections related to established ones
# (e.g. port mode ftp)
iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

# Drop any incoming MULTICAST or BROADCAST packet before logging:
# The box outputs several of them when using netbios or mDNS, and those
# appear immediately as incoming, which clutters the log.
iptables -A INPUT -m addrtype --dst-type BROADCAST,MULTICAST -j DROP

# Log everything else.
iptables -A INPUT -j LOG --log-prefix "FIREWALL:INPUT "

# End $rc_base/rc.iptables</literal>
EOF
chmod 700 /etc/rc.d/rc.iptables</userinput></screen>

<screen role="root" revision="systemd"><?dbfo keep-together="auto"?><userinput>install -v -dm755 /etc/systemd/scripts

cat &gt; /etc/systemd/scripts/iptables &lt;&lt; "EOF"
<literal>#!/bin/sh

# Début de /etc/systemd/scripts/iptables

# Insertion des modules de suivie de connection
# (inutile si vous les avez construit en dur dans le noyau)
modprobe nf_conntrack
modprobe xt_LOG

# Activation de la protection contre echo en broadcast
echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts

# Désactivation des paquets routés à la source
echo 0 &gt; /proc/sys/net/ipv4/conf/all/accept_source_route
echo 0 &gt; /proc/sys/net/ipv4/conf/default/accept_source_route

# Activation de la protection du cookie TCP SYN
echo 1 &gt; /proc/sys/net/ipv4/tcp_syncookies

# Désactivation de l'acceptation des redirections ICMP
echo 0 &gt; /proc/sys/net/ipv4/conf/default/accept_redirects

# Ne pas envoyer de messages de redirection
echo 0 &gt; /proc/sys/net/ipv4/conf/all/send_redirects
echo 0 &gt; /proc/sys/net/ipv4/conf/default/send_redirects

# Abandon des paquets spoofés qui arrivent sur une interface si une réponse
# demanderait d'envoyer la réponse sur une autre interface.
echo 1 &gt; /proc/sys/net/ipv4/conf/all/rp_filter
echo 1 &gt; /proc/sys/net/ipv4/conf/default/rp_filter

# Enregistrement des paquets avec des adresses impossibles.
echo 1 &gt; /proc/sys/net/ipv4/conf/all/log_martians
echo 1 &gt; /proc/sys/net/ipv4/conf/default/log_martians

# être verbeux pour les adresses dynamiques (inutile pour les adresses IP statiques)
echo 2 &gt; /proc/sys/net/ipv4/ip_dynaddr

# désactivation de la notification de congestion explicite
# trop de routeurs les ignorent encore
echo 0 &gt; /proc/sys/net/ipv4/tcp_ecn

# Appliquer un état connu
iptables -P INPUT   DROP
iptables -P FORWARD DROP
iptables -P OUTPUT  DROP

# Ces lignes se trouvent ici au cas où les règles seraient déjà mises en place et que le
# script est relancé à la volée. Nous voulons supprimer toutes les règles et
# les chaînes personnalisées préexistantes avant d'implanter de nouvelles règles.
iptables -F
iptables -X
iptables -Z

iptables -t nat -F

# Permettre les connections locales
iptables -A INPUT  -i lo -j ACCEPT

# Libère la sortie sur toutes les interfaces vers n'importe quelle IP pour n'importe quel service
# (équivalent à -P ACCEPT)
iptables -A OUTPUT -j ACCEPT

# Permet au réponses aux connections déjà établie et permet de nouvelles connections
# liées à celles qui sont déjà établies
# (p. ex. le mode port de ftp)
iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

# Enregistrer tout le reste.
iptables -A INPUT -j LOG --log-prefix "FIREWALL:INPUT "

# Fin de /etc/systemd/scripts/iptables</literal>
EOF
chmod 700 /etc/systemd/scripts/iptables</userinput></screen>

      <para>
        Ce script est assez simple, il jette tout le trafic entrant dans votre
ordinateur s'il n'a pas été initié par votre ordinateur, mais tant que vous
vous contentez de surfer sur internet, vous ne dépasserez pas les limites.
      </para>

      <para>
        Si vous rencontrez régulièrement des délais lors de l'accès à des serveurs
FTP, regardez <xref linkend="fw-BB-4-ipt"/>.
      </para>

      <para>
        Même si vous avez des démons ou des services qui tournent sur votre système,
ils seront inaccessibles de n'importe où en dehors de l'ordinateur
lui-même. Si vous voulez permettre l'accès aux services sur votre machine,
comme <command>ssh</command> ou <command>ping</command>, regardez <xref
linkend="fw-busybox-ipt"/>.
      </para>

    </sect3>

    <sect3 id="fw-masqRouter-ipt"
     xreflabel="Création d'un routeur masquant avec iptables">
      <title>Routeur masquant</title>

      <para>
        Un pare-feu réseau a deux interface, l'une connectée à un intranet, dans cet
exemple <emphasis role="strong">LAN1</emphasis> et l'autre connectée à
internet, ici <emphasis role="strong">WAN1</emphasis>. Pour fournir le plus
de sécurité au pare-feu lui-même, assurez-vous qu'il n'y a pas de serveurs
inutiles dessus comme <application>X11</application> et compagnie. En
général, le pare-feu lui-même ne devrait pas accéder à des services qui ne
sont pas de confiance (pensez à un serveur distant qui donne des réponses
qui font crasher un démon de votre système, ou pire, qui implémente un vers
via un dépassement de tampon).
      </para>

<screen role="root" revision="sysv"><?dbfo keep-together="auto"?><userinput>cat &gt; /etc/rc.d/rc.iptables &lt;&lt; "EOF"
<literal>#!/bin/sh

# Début de rc.iptables

echo
echo "Vous utilisez la configuration d'exemple de mise en place d'un pare-feu"
echo "de Beyond Linux From Scratch."
echo "Cet exemple est loin d'être complet, il n'est conçu que"
echo "pour référence."
echo "La sécurité des pare-feux est un problème complexe qui dépasse la portée"
echo "des règles de configuration ci-dessous."
echo "Vous trouverez des compléments d'information"
echo "sur les pare-feux au chapitre 4 du livre BLFS."
echo "https://www.&lfs-domainname;/blfs"
echo

# Insertion des modules iptables (inutile si vous les avez construits en dur dans le noyau).

modprobe nf_conntrack
modprobe nf_conntrack_ftp
modprobe xt_conntrack
modprobe xt_LOG
modprobe xt_state

# Activation de la protection contre echo en broadcast
echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts

# Désactivation des paquets routés à la source
echo 0 &gt; /proc/sys/net/ipv4/conf/all/accept_source_route

# Activation de la protection du cookie TCP SYN
echo 1 &gt; /proc/sys/net/ipv4/tcp_syncookies

# Désactivation de l'acceptation des redirections ICMP
echo 0 &gt; /proc/sys/net/ipv4/conf/all/accept_redirects

# Ne pas envoyer de messages de redirection
echo 0 &gt; /proc/sys/net/ipv4/conf/default/send_redirects

# Abandon des paquets spoofés qui arrivent sur une interface si une réponse
# demanderait d'envoyer la réponse sur une autre interface.
echo 1 &gt; /proc/sys/net/ipv4/conf/default/rp_filter

# Enregistrement des paquets avec des adresses impossibles.
echo 1 &gt; /proc/sys/net/ipv4/conf/all/log_martians

# être verbeux pour les adresses dynamiques (inutile pour les adresses IP statiques)
echo 2 &gt; /proc/sys/net/ipv4/ip_dynaddr

# désactivation de la notification de congestion explicite
# trop de routeurs les ignorent encore
echo 0 &gt; /proc/sys/net/ipv4/tcp_ecn

# Appliquer un état connu
iptables -P INPUT   DROP
iptables -P FORWARD DROP
iptables -P OUTPUT  DROP

# Ces lignes se trouvent ici au cas où les règles seraient déjà mises en place et que le
# script est relancé à la volée. Nous voulons supprimer toutes les règles et
# les chaînes personnalisées préexistantes avant d'implanter de nouvelles règles.
iptables -F
iptables -X
iptables -Z

iptables -t nat -F

# Permettre les connections locales
iptables -A INPUT  -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT

# Permettre le transfert s'il est initié par l'intranet
iptables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A FORWARD ! -i WAN1 -m conntrack --ctstate NEW       -j ACCEPT

# Effectuer le masquage
# (pas requis si l'intranet n'utilise pas des adresses IP privéesf intranet is not using private ip-addresses)
iptables -t nat -A POSTROUTING -o WAN1 -j MASQUERADE

# Tout enregistrer pour le débogage
# (dernière de toutes les règles, mais avant les règles de politique)
iptables -A INPUT   -j LOG --log-prefix "FIREWALL:INPUT "
iptables -A FORWARD -j LOG --log-prefix "FIREWALL:FORWARD "
iptables -A OUTPUT  -j LOG --log-prefix "FIREWALL:OUTPUT "

# Activation du transfert IP
echo 1 &gt; /proc/sys/net/ipv4/ip_forward</literal>
EOF
chmod 700 /etc/rc.d/rc.iptables</userinput></screen>

<screen role="root" revision="systemd"><?dbfo keep-together="auto"?><userinput>install -v -dm755 /etc/systemd/scripts

cat &gt; /etc/systemd/scripts/iptables &lt;&lt; "EOF"
<literal>#!/bin/sh

# Début de /etc/systemd/scripts/iptables

echo
echo "Vous utilisez la configuration d'exemple de mise en place d'un pare-feu"
echo "de Beyond Linux From Scratch."
echo "Cet exemple est loin d'être complet, il n'est conçu que"
echo "pour référence."
echo "La sécurité des pare-feux est un problème complexe qui dépasse la portée"
echo "des règles de configuration ci-dessous."

echo "Vous trouverez des compléments d'information"
echo "sur les pare-feux au chapitre 4 du livre BLFS."
echo "https://www.&lfs-domainname;/blfs"
echo

# Insertion des modules iptables (inutile si vous les avez construits en dur dans le noyau).

modprobe nf_conntrack
modprobe nf_conntrack_ftp
modprobe xt_conntrack
modprobe xt_LOG
modprobe xt_state

# Activation de la protection contre echo en broadcast
echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts

# Désactivation des paquets routés à la source
echo 0 &gt; /proc/sys/net/ipv4/conf/all/accept_source_route

# Activation de la protection du cookie TCP SYN
echo 1 &gt; /proc/sys/net/ipv4/tcp_syncookies

# Désactivation de l'acceptation des redirections ICMP
echo 0 &gt; /proc/sys/net/ipv4/conf/all/accept_redirects

# Ne pas envoyer de messages de redirection
echo 0 &gt; /proc/sys/net/ipv4/conf/default/send_redirects

# Abandon des paquets spoofés qui arrivent sur une interface si une réponse
# demanderait d'envoyer la réponse sur une autre interface.
echo 1 &gt; /proc/sys/net/ipv4/conf/default/rp_filter

# Enregistrement des paquets avec des adresses impossibles.
echo 1 &gt; /proc/sys/net/ipv4/conf/all/log_martians

# être verbeux pour les adresses dynamiques (inutile pour les adresses IP statiques)
echo 2 &gt; /proc/sys/net/ipv4/ip_dynaddr

# désactivation de la notification de congestion explicite
# trop de routeurs les ignorent encore
echo 0 &gt; /proc/sys/net/ipv4/tcp_ecn

# Appliquer un état connu
iptables -P INPUT   DROP
iptables -P FORWARD DROP
iptables -P OUTPUT  DROP

# Ces lignes se trouvent ici au cas où les règles seraient déjà mises en place et que le
# script est relancé à la volée. Nous voulons supprimer toutes les règles et
# les chaînes personnalisées préexistantes avant d'implanter de nouvelles règles.
iptables -F
iptables -X
iptables -Z

iptables -t nat -F

# Permettre les connections locales
iptables -A INPUT  -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT

# Permettre le transfert s'il est initié par l'intranet
iptables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A FORWARD ! -i WAN1 -m conntrack --ctstate NEW       -j ACCEPT

# Effectuer le masquage
# (pas requis si l'intranet n'utilise pas des adresses IP privéesf intranet is not using private ip-addresses)
iptables -t nat -A POSTROUTING -o WAN1 -j MASQUERADE

# Tout enregistrer pour le débogage
# (dernière de toutes les règles, mais avant les règles de politique)
iptables -A INPUT   -j LOG --log-prefix "FIREWALL:INPUT "
iptables -A FORWARD -j LOG --log-prefix "FIREWALL:FORWARD "
iptables -A OUTPUT  -j LOG --log-prefix "FIREWALL:OUTPUT "

# Activer le transfert IP
echo 1 &gt; /proc/sys/net/ipv4/ip_forward

# Les sections suivantes permettent les paquets entrants pour des exemples spécifiques
# Décommentez les lignes d'exemple et ajustez-les au besoin

# Permet le ping sur l'interface externe
#iptables -A INPUT  -p icmp -m icmp --icmp-type echo-request -j ACCEPT
#iptables -A OUTPUT -p icmp -m icmp --icmp-type echo-reply   -j ACCEPT

# Rejette les paquets ident avec un TCP reset pour éviter les délais avec FTP ou IRC
#iptables -A INPUT  -p tcp --dport 113 -j REJECT --reject-with tcp-reset

# Permet HTTP et HTTPS vers 192.168.0.2
#iptables -A PREROUTING -t nat -i WAN1 -p tcp --dport 80 -j DNAT --to 192.168.0.2
#iptables -A PREROUTING -t nat -i WAN1 -p tcp --dport 443 -j DNAT --to 192.168.0.2
#iptables -A FORWARD -p tcp -d 192.168.0.2 --dport 80 -j ACCEPT
#iptables -A FORWARD -p tcp -d 192.168.0.2 --dport 443 -j ACCEPT

# Fin de /etc/systemd/scripts/iptables</literal>
EOF
chmod 700 /etc/systemd/scripts/iptables</userinput></screen>

      <para>
        Avec ce script votre intranet devrait être raisonnablement sécurisé contre
les attaques externes. Personne ne devrait être capable d'initialiser une
nouvelle connexion vers un service interne et, s'il est masquant, le
pare-feu rend votre intranet invisible depuis internet. En plus, votre
pare-feu devrait être relativement sécurisé parce qu'aucun service
attaquable ne tourne dessus.
      </para>

    </sect3>

    <sect3 id="fw-busybox-ipt" xreflabel="Créer un BusyBox avec iptables">
      <title>BusyBox</title>

      <para>
        Ce scénario n'est pas très différent de <xref linkend="fw-masqRouter-ipt"/>,
mais en plus fournit des services à votre intranet. C'est le cas par exemple
si vous voulez administrer votre pare-feu depuis un autre hôte sur votre
intranet ou si vous voulez l'utiliser comme proxy ou serveur de nom.
      </para>

      <note>
        <para>
          Expliquer comment protéger un serveur qui offre des services sur internet
n'est pas du ressort de ce document. Consultez les références dans <xref
linkend="fw-extra-info"/> pour plus d'informations.
        </para>
      </note>

      <para>
        Soyez prudent. Chaque service activé rend votre configuration plus complexe
et votre pare-feu moins sécurisé. Vous vous exposez au risque d'avoir un
service mal configuré ou de lancer un service avec un bogue exploitable. Un
pare-feu ne devrait en général faire tourner aucun service
supplémentaire. Consultez l'introduction de <xref
linkend="fw-masqRouter-ipt"/> pour plus de détails.
      </para>

      <para>
        Si vous voulez ajouter un service interne comme un serveur Samba ou un
serveur de nom qui n'ont pas eux-même besoin d'accéder à internet, les
règles supplémentaires sont assez simples et devraient toujours être
acceptables du point de vue de la sécurité. Ajoutez simplement les lignes
suivantes au script <emphasis>avant</emphasis> les règles de journalisation.
      </para>

<screen><literal>iptables -A INPUT  -i ! WAN1  -j ACCEPT
iptables -A OUTPUT -o ! WAN1  -j ACCEPT</literal></screen>

      <para>
        Si des démons, comme squid, doivent accéder à internet, vous pouvez ouvrir
OUTPUT par défaut et restreindre INPUT.
      </para>

<screen><literal>iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A OUTPUT -j ACCEPT</literal></screen>

      <para>
        Cependant, il n'est généralement pas recommandé de laisser OUTPUT sans
restriction. Vous perdez le contrôle sur les chevaux de Troie qui aiment
«&nbsp;appeler la maison&nbsp;» et une redondance dans la sécurité au cas où
vous auriez mal configuré un service qui annoncerait sa présence au monde
entier.
      </para>

      <para>
        Pour cela, vous devriez restreindre INPUT et OUTPUT sur tous les ports sauf
ceux qui sont absolument nécessaires. Les ports à ouvrir dépendent de vos
besoins&nbsp;: vous les trouverez surtout en regardant les accès échoués
dans vos journaux.
      </para>

      <itemizedlist spacing="compact" role='iptables'>
        <title>Consultez les exemples suivants&nbsp;:</title>
        <listitem>
          <para>
            Squad crée un cache du web&nbsp;:
          </para>

<screen><literal>iptables -A OUTPUT -p tcp --dport 80 -j ACCEPT
iptables -A INPUT  -p tcp --sport 80 -m conntrack --ctstate ESTABLISHED \
  -j ACCEPT</literal></screen>

        </listitem>
        <listitem>
          <para>
            Votre serveur de cache de noms de domaines (p. ex. named) lance ses requêtes
en UDP&nbsp;:
          </para>

<screen><literal>iptables -A OUTPUT -p udp --dport 53 -j ACCEPT</literal></screen>

        </listitem>
        <listitem>
          <para>
            Si vous voulez pouvoir envoyer un ping à votre ordinateur pour vous assurer
qu'il est toujours lancé&nbsp;:
          </para>

<screen><literal>iptables -A INPUT  -p icmp -m icmp --icmp-type echo-request -j ACCEPT
iptables -A OUTPUT -p icmp -m icmp --icmp-type echo-reply   -j ACCEPT</literal></screen>

        </listitem>
        <listitem>
          <para id='fw-BB-4-ipt' xreflabel="Example de BusyBox avec iptables numéro 4">
            Si vous accéder souvent à des serveurs FTP ou que vous tchattez en ligne,
vous pourriez remarquer des délais à cause d'implémentations de ces démons
qui tentent d'accéder à un démon identd sur votre système pour obtenir des
noms d'utilisateur. Bien que se soit plutôt bénin, de nombreux experts en
sécurité recommandent de ne pas avoir un identd sur sa machine parce qu'ils
ont l'impression qu'il donne trop d'information.
          </para>

          <para>
            Pour éviter ces délais vous pouvez rejeter les requêtes avec une réponse
«&nbsp;tcp-reset&nbsp;»&nbsp;:
          </para>

<screen><literal>iptables -A INPUT  -p tcp --dport 113 -j REJECT --reject-with tcp-reset</literal></screen>

        </listitem>
        <listitem>
          <para>
            Pour enregistrer et jeter les paquets invalides (des paquets qui arrivent
après le délai d'attente de netfilter ou certains types de scan réseau)
ajoutez ces règles au début de la chaîne&nbsp;:
          </para>

<screen><literal>iptables -I INPUT 0 -p tcp -m conntrack --ctstate INVALID \
  -j LOG --log-prefix "FIREWALL:INVALID "
iptables -I INPUT 1 -p tcp -m conntrack --ctstate INVALID -j DROP</literal></screen>

        </listitem>
        <listitem>
          <para>
            Tout ce qui vient de l'extérieur ne devrait pas avoir une adresse privée,
c'est une attaque courante par usurpation d'IP&nbsp;:
          </para>

<screen><literal>iptables -A INPUT -i WAN1 -s 10.0.0.0/8     -j DROP
iptables -A INPUT -i WAN1 -s 172.16.0.0/12  -j DROP
iptables -A INPUT -i WAN1 -s 192.168.0.0/16 -j DROP</literal></screen>

          <para>
            Il y a d'autres adresses que vous pourriez vouloir jeter&nbsp;: 0.0.0.0/8,
127.0.0.0/8,224.0.0.0/3 (multicast et expérimental), 169.254.0.0/16 (réseaux
lien-local) et 192.0.2.0/24 (réseau de test défini par l'IANA).
          </para>
        </listitem>
        <listitem>
          <para>
            Si votre pare-feu est un client DHCP, vous devez autoriser ces
paquets&nbsp;:
          </para>

<screen><literal>iptables -A INPUT  -i WAN1 -p udp -s 0.0.0.0 --sport 67 \
   -d 255.255.255.255 --dport 68 -j ACCEPT</literal></screen>

        </listitem>
        <listitem>
          <para>
            Pour simplifier le débogage et être honnête avec ceux qui voudraient accéder
à un service que vous avez désactivé, à dessein ou par erreur, vous pouvez
utiliser REJECT pour les paquet qui sont jetés.
          </para>

          <para>
            Évidemment, vous devez faire cela directement après l'enregistrement dans
les journaux sur les toutes dernières lignes avant que les paquets ne soient
jetés par la politique.
          </para>

<screen><literal>iptables -A INPUT -j REJECT</literal></screen>

        </listitem>
      </itemizedlist>

      <para>
        Ce ne sont que des exemples pour vous montrer certaines possibilités du
pare-feu sur Linux. Consultez la page de manuel d'iptables. Vous y trouverez
bien plus d'informations. Les numéros de port requis pour cela se trouvent
dans <filename>/etc/services</filename> au cas où vous ne les trouviez pas
dans vos journaux par essai et erreur.
      </para>

    </sect3>

    <sect3  id="iptables-init">
      <title><phrase revision="sysv">Script de démarrage</phrase> <phrase
revision="systemd">Unité Systemd</phrase></title>

      <para revision="sysv">
        Pour paramétrer le pare-feu d'iptables au démarrage, installez le script
d'initialisation <filename>/etc/rc.d/init.d/iptables</filename> fourni dans
le paquet <xref linkend="bootscripts"/>.
      </para>

      <para revision="systemd">
        Pour paramétrer le pare-feu d'iptables au démarrage, installez l'unité
<filename>iptables.service</filename> fournie dans le paquet <xref
linkend="systemd-units"/>.
      </para>

      <indexterm zone="iptables iptables-init">
        <primary sortas="f-iptables">iptables</primary>
      </indexterm>

<screen role="root"><userinput>make install-iptables</userinput></screen>

    </sect3>

  </sect2>

  <sect2 role="content">
    <title>Contenu</title>

    <segmentedlist>
      <segtitle>Programmes installés</segtitle>
      <segtitle>Bibliothèques installées</segtitle>
      <segtitle>Répertoires installés</segtitle>

      <seglistitem>
        <seg>
          ip6tables, ip6tables-apply, ip6tables-legacy, ip6tables-legacy-restore,
ip6tables-legacy-save, ip6tables-restore, ip6tables-save, iptables,
iptables-apply, iptables-legacy, iptables-legacy-restore,
iptables-legacy-apply, iptables-restore, iptables-save, iptables-xml,
nfsynproxy (facultatif) et xtables-multi
        </seg>
        <seg>
          libip4tc.so, libip6tc.so, libipq.so, libiptc.so et libxtables.so
        </seg>
        <seg>
          /lib/xtables et /usr/include/libiptc
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descriptions courtes</bridgehead>
      <?dbfo list-presentation="list"?> <?dbhtml list-presentation="table"?>

      <varlistentry id="iptables-prog">
        <term><command>iptables</command></term>
        <listitem>
          <para>
            est utilisé pour paramétrer, maintenir et inspecter les tables de règles de
filtrage de paquets IP du noyau Linux
          </para>
          <indexterm zone="iptables iptables-prog">
            <primary sortas="b-iptables">iptables</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="iptables-apply">
        <term><command>iptables-apply</command></term>
        <listitem>
          <para>
            est une manière plus sure de mettre à jour iptables à distance
          </para>
          <indexterm zone="iptables iptables-apply">
            <primary sortas="b-iptables-apply">iptables-apply</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="iptables-legacy">
        <term><command>iptables-legacy</command></term>
        <listitem>
          <para>
            est utilisé pour interagir avec iptables par l'ensemble de commandes
obsolète
          </para>
          <indexterm zone="iptables iptables-legacy">
            <primary sortas="b-iptables-legacy">iptables-legacy</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="iptables-legacy-restore">
        <term><command>iptables-legacy-restore</command></term>
        <listitem>
          <para>
            est utilisé pour restaurer un ensemble de règles iptables obsolètes
          </para>
          <indexterm zone="iptables iptables-legacy-restore">
            <primary sortas="b-iptables-legacy-restore">iptables-legacy-restore</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="iptables-legacy-save">
        <term><command>iptables-legacy-save</command></term>
        <listitem>
          <para>
            est utilisé pour sauvegarder un ensemble de règles iptables obsolètes
          </para>
          <indexterm zone="iptables iptables-legacy-save">
            <primary sortas="b-iptables-legacy-save">iptables-legacy-save</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="iptables-restore">
        <term><command>iptables-restore</command></term>
        <listitem>
          <para>
            est utilisé pour restaurer des tables IP à partir de données spécifiées sur
STDIN. Utilise la redirection E/S fournie par votre shell pour lire un
fichier
          </para>
          <indexterm zone="iptables iptables-restore">
            <primary sortas="b-iptables-restore">iptables-restore</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="iptables-save">
        <term><command>iptables-save</command></term>
        <listitem>
          <para>
            est utilisé pour envoyer le contenu d'une table IP dans un format facilement
analysable vers STDOUT. Utilisez la redirection E/S fournie par votre shell
pour écrire dans un fichier
          </para>
          <indexterm zone="iptables iptables-save">
            <primary sortas="b-iptables-save">iptables-save</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="iptables-xml">
        <term><command>iptables-xml</command></term>
        <listitem>
          <para>
            est utilisé pour convertir la sortie de <command>iptables-save</command> au
format XML. L'utilisation de la feuille de style
<filename>iptables.xslt</filename> convertit le fond XML au format
<command>iptables-restore</command>
          </para>
          <indexterm zone="iptables iptables-xml">
            <primary sortas="b-iptables-xml">iptables-xml</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ip6tables">
        <term><command>ip6tables*</command></term>
        <listitem>
          <para>
            sont un ensemble de commandes pour IPV6 qui sont similaires aux commandes
iptables vu précédemment
          </para>
          <indexterm zone="iptables ip6tables">
            <primary sortas="b-ip6tables">ip6tables</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nfsynproxy">
        <term><command>nfsynproxy</command></term>
        <listitem>
          <para>
            (facultatif) outil de configuration.  La cible synproxy facilite la
manipulation des grands afflux de SYN sans les lourdes pertes de performance
imposées par le suivi des connexions dans de tels cas
          </para>
          <indexterm zone="iptables nfsynproxy">
            <primary sortas="b-nfsynproxy">nfsynproxy</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="xtables-multi">
        <term><command>xtables-multi</command></term>
        <listitem>
          <para>
            est un binaire qui se comporte en fonction du nom par lequel il est appelé
          </para>
          <indexterm zone="iptables xtables-multi">
            <primary sortas="b-xtables-multi">xtables-multi</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
