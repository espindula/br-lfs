<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

<!-- for when .0 is not part of the new tarball name, but always referenced -->
<!ENTITY nss-url "archive.mozilla.org/pub/security/nss/releases">

<!-- micro versions-->
<!--<!ENTITY nss-download-http "https://&nss-url;/NSS_3_&nss-minor-version;_&nss-micro-version;_RTM/src/nss-&nss-version;.tar.gz">-->

<!-- no micro versions -->
  <!ENTITY nss-download-http "https://&nss-url;/NSS_&nss-dir;_RTM/src/nss-&nss-version;.tar.gz">
  <!ENTITY nss-download-ftp  "">
  <!ENTITY nss-md5sum        "9d5b910dcec7ef8aeb88b53803454f63">
  <!ENTITY nss-size          "69&nbsp;Mo">
  <!ENTITY nss-buildsize     "297&nbsp;Mo (plus 139&nbsp;Mo pour les tests)">
  <!ENTITY nss-time          "1.1 SBU (with parallelism=4, add less than 20 SBU for tests on AMD ryzens or
at least 30 SBU on Intel machines)">
  <!-- On my system, I got 64.2 SBU, but Bruce gets 18 SBU. -renodr -->
  <!-- On my system, I got 63 SBU, but Xi gets ~18 SBU. -pierre (for 3.78) -->
  <!-- On my 3400G for 3.79 I got 16 SBU -ken -->
  <!-- Still 17 SBU for 3.81 - bdubbs -->
  <!-- 73 SBU but I'm on Intel. -renodr -->
  <!-- 3.86 amended the figures -ken
   3400G 14 SBU with 6.0.12, but the remeasured SBU has become very slow
   and maybe other people would see a ster SBU on a fresh build;
   i7-4790 35 SBU with 6.0.12, no failures
   Bruce's 3900X 19.3 SBU, his i7-12700K about 30 SBU, 12 failures -->
]>

<sect1 id="nss" xreflabel="nss-&nss-version;">
  <?dbhtml filename="nss.html"?>


  <title>NSS-&nss-version;</title>

  <indexterm zone="nss">
    <primary sortas="a-NSS">NSS</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction à NSS</title>

    <para>
      Le paquet Network Security Services (services de sécurité réseau)
(<application>NSS</application>) est un ensemble de bibliothèques conçues
pour supporter le développement en plate-forme croisée d'applications et de
serveurs sécurisés. Les applications construites avec NSS peuvent supporter
SSL v2 et v3, TLS, les certificats PKCS #5, PKCS #7, PKCS #11, PKCS #12,
S/MIME, X.509 v3 et d'autres standards de sécurité. C'est utile pour
implémenter SSL et S/MIME ou d'autres standards de sécurité sur Internet
dans une application.
    </para>

    &lfs113_checked;

    <bridgehead renderas="sect3">Informations sur le paquet</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Téléchargement (HTTP)&nbsp;: <ulink url="&nss-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Téléchargement (FTP)&nbsp;: <ulink url="&nss-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Somme de contrôle MD5&nbsp;: &nss-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Taille du téléchargement&nbsp;: &nss-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation de l'espace disque requis&nbsp;: &nss-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimation du temps de construction&nbsp;: &nss-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Téléchargements supplémentaires</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Correctif requis&nbsp;: <ulink
url="&patch-root;/nss-&nss-version;-standalone-1.patch"/>
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Dépendances de NSS</bridgehead>

    <bridgehead renderas="sect4">Requises</bridgehead>
    <para role="required">
      <xref linkend="nspr"/>
    </para>

    <bridgehead renderas="sect4">Recommandées</bridgehead>
    <para role="recommended">
      <xref linkend="sqlite"/> et <xref role="runtime" linkend="p11-kit"/>
(exécution)
    </para>

    <para condition="html" role="usernotes">
      Notes utilisateur&nbsp;: <ulink url="&blfs-wiki;/nss"/>
    </para>
  </sect2>

  <sect2 role="installation">
    <title>Installation de NSS</title>

    


    <!-- In 3.53.x, parallel build was possible.
         And with another rebuild of nss-3.54, all is well again, but
         broken in 3.60. Fixed again in 3.62. -->
<!--
    <note>

      <para>
        This package does not support parallel build.
      </para>
    </note>
-->
<para>
      Installez <application>NSS</application> en exécutant les commandes
suivantes&nbsp;:
    </para>

<screen><userinput>patch -Np1 -i ../nss-&nss-version;-standalone-1.patch &amp;&amp;

cd nss &amp;&amp;

make BUILD_OPT=1                  \
  NSPR_INCLUDE_DIR=/usr/include/nspr  \
  USE_SYSTEM_ZLIB=1                   \
  ZLIB_LIBS=-lz                       \
  NSS_ENABLE_WERROR=0                 \
  $([ $(uname -m) = x86_64 ] &amp;&amp; echo USE_64=1) \
  $([ -f /usr/include/sqlite3.h ] &amp;&amp; echo NSS_USE_SYSTEM_SQLITE=1)</userinput></screen>

    <para>
      
      <!-- the unittest files get compiled automatically since nss-3.31.0 -->
<!--(1 test is known to fail)-->
Pour lancer les tests, exécutez les commandes suivantes&nbsp;:
    </para>

<screen remap="test"><userinput>cd tests &amp;&amp;
HOST=localhost DOMSUF=localdomain ./all.sh
cd ../</userinput></screen>

    <note>
      <para>Quelques informations sur les tests&nbsp;:</para>
      <itemizedlist spacing="compact">
      <listitem>
        <para>
           HOST=localhost et DOMSUF=localdomain sont requis. Sans ces variables, un nom
de domaine pleinement qualifié doit être spécifié et cette manière générique
de faire devrait fonctionner pour tout le monde, tant que
<systemitem>localhost.localdomain</systemitem> est défini dans
<filename>/etc/hosts</filename>, comme on l'a fait dans <ulink
url="&lfs-root;/chapter09/network.html#ch-config-hosts">le livre
lfs</ulink>.
        </para>
      </listitem>
      <listitem>
        <para>
           Les tests prennent énormément de temps pour terminer. Si vous le souhaitez,
il y a des information dans le script all.sh pour lancer des sous-ensembles
de la suite de tests complète.
        </para>
      </listitem>
      <listitem>
        <para>
           Lorsque vous interrompez les tests, la suite de tests n'arrive pas à arrêter
les serveurs de tests qu'elle a lancés. Cela conduit à une boucle infinie
dans les tests où la suite de tests essaye de tuer un serveur qui n'existe
plus parce qu'elle récupère le mauvais PID.
        </para>
      </listitem>
      <listitem>
        <para>
           Les résultats de la suite de test (au format HTML !) se trouvent dans
../../test_results/security/localhost.1/results.html
        </para>
      </listitem>
      <listitem>
        <para>
           Quelques tests peuvent échouer sur certaines machines Intel pour des raisons
inconnues.
        </para>
      </listitem>
      </itemizedlist>
     </note>

    <para>
      Maintenant, en tant qu'utilisateur <systemitem
class="username">root</systemitem>&nbsp;:
    </para>

<screen role="root"><userinput>cd ../dist                                                          &amp;&amp;

install -v -m755 Linux*/lib/*.so              /usr/lib              &amp;&amp;
install -v -m644 Linux*/lib/{*.chk,libcrmf.a} /usr/lib              &amp;&amp;

install -v -m755 -d                           /usr/include/nss      &amp;&amp;
cp -v -RL {public,private}/nss/*              /usr/include/nss      &amp;&amp;
chmod -v 644                                  /usr/include/nss/*    &amp;&amp;

install -v -m755 Linux*/bin/{certutil,nss-config,pk12util} /usr/bin &amp;&amp;

install -v -m644 Linux*/lib/pkgconfig/nss.pc  /usr/lib/pkgconfig</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Explication des commandes</title>

    <para>
      <parameter>BUILD_OPT=1</parameter>&nbsp;: Cette variable est passée à
<command>make</command> pour que la construction s'effectue sans les
symboles de débogage intégré dans les binaires et que les optimisations du
compilateur par défaut soient utilisées.
    </para>

    <para>
      <parameter>NSPR_INCLUDE_DIR=/usr/include/nspr</parameter>&nbsp;: Cette
commande initialise l'emplacement des entêtes de nspr.
    </para>

    <para>
      <parameter>USE_SYSTEM_ZLIB=1</parameter>&nbsp;: Cette option est passée à
<command>make</command> pour garantir que la bibliothèque <filename
class="libraryfile">libssl3.so</filename> est liée au
<application>zlib</application> du système au lieu de la version incluse
dans l'arborescence.
    </para>

    <para>
      <parameter>ZLIB_LIBS=-lz</parameter>&nbsp;: Cette commande fournit le
drapeau nécessaire pour lier au système <application>zlib</application>.
    </para>

    <para>
      <command>$([ $(uname -m) = x86_64 ] &amp;&amp; echo
USE_64=1)</command>&nbsp;: L'option <parameter>USE_64=1</parameter> est
<emphasis>exigée sur un x86_64</emphasis>, sans quoi <command>make</command>
essaiera de créer des objets 32 bits (et échouera). Le test [ $(uname -m) =
x86_64 ] garantit que cela n'aura pas d'effet sur un système 32 bits.
    </para>

    <para>
      <command>([ -f /usr/include/sqlite3.h ] &amp;&amp; echo
NSS_USE_SYSTEM_SQLITE=1)</command>&nbsp;: Ceci teste si
<application>sqlite</application> est installé et, si tel est le cas, il
passe (<command>echo</command>) l'option NSS_USE_SYSTEM_SQLITE=1 à
<command>make</command> pour que <filename
class="libraryfile">libsoftokn3.so</filename> se lie à la version installée
sur le système de sqlite.
    </para>

    <para>
      <option>NSS_DISABLE_GTESTS=1</option>&nbsp;: si vous n'avez pas besoin de
lancer la suite de tests NSS, ajoutez cette option à la commande
<command>make</command>, pour éviter la compilation des tests et gagner du
temps de construction.
    </para>

  </sect2>

  <sect2 role="configuration">
    <title>Configuration de NSS</title>

    <para>
      Si <xref linkend="p11-kit"/> est installé, le module de confiance
<application>p11-kit</application>
(<filename>/usr/lib/pkcs11/libp11-kit.so</filename>) peut être utilisé comme
remplaçant de <filename>/usr/lib/libnssckbi.so</filename> pour rendre les CA
du système disponibles de manière transparente pour les applications
conscientes de <application>NSS</application>, plutôt qu'une liste statique
fournie par <filename>/usr/lib/libnssckbi.so</filename>. En tant
qu'utilisateur <systemitem class="username">root</systemitem>, exécutez les
commandes suivantes&nbsp;:
    </para>

<screen role="root"><userinput>ln -sfv ./pkcs11/p11-kit-trust.so /usr/lib/libnssckbi.so</userinput></screen>

    <para>
      De plus, pour les applications dépendantes qui n'utilisent pas la base
interne (<filename>/usr/lib/libnssckbi.so</filename>), le script
<filename>/usr/sbin/make-ca</filename> inclus dans la page <xref
linkend="make-ca"/> peut générer une base de données NSS pour le système
entier avec le paramètre <parameter>-n</parameter>, ou en modifiant le
fichier <filename>/etc/make-ca/make-ca.conf</filename>.
    </para>

  </sect2>

  <sect2 role="content">
    <title>Contenu</title>

    <segmentedlist>
      <segtitle>Programmes installés</segtitle>
      <segtitle>Bibliothèques installées</segtitle>
      <segtitle>Répertoires installés</segtitle>

      <seglistitem>
        <seg>
          certutil, nss-config et pk12util
        </seg>
        <seg>
          libcrmf.a, libfreebl3.so, libfreeblpriv3.so, libnss3.so, libnssckbi.so,
libnssckbi-testlib.so, libnssdbm3.so, libnsssysinit.so, libnssutil3.so,
libpkcs11testmodule.so, libsmime3.so, libsoftokn3.so et libssl3.so
        </seg>
        <seg>
          /usr/include/nss
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descriptions courtes</bridgehead>
      <?dbfo list-presentation="list"?> <?dbhtml list-presentation="table"?>

      <varlistentry id="certutil">
        <term><command>certutil</command></term>
        <listitem>
          <para>
            est l'outil de base de données de certificats de Mozilla. C'est un outil en
ligne de commande qui peut modifier les fichiers de base de données cert8.db
et key3.db de Netscape Communicator. Il peut aussi lister, générer, modifier
ou effacer les certificats d'un fichier cert8.db et créer ou modifier le mot
de passe, générer de nouveaux trousseaux de clés publiques et privées,
afficher le contenu de la base de données des clés ou effacer des trousseaux
de clés du fichier key3.db
          </para>
          <indexterm zone="nss certutil">
            <primary sortas="b-certutil">certutil</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nss-config">
        <term><command>nss-config</command></term>
        <listitem>
          <para>
            est utilisé pour déterminer les réglages de la bibliothèque NSS de la
version installée
          </para>
          <indexterm zone="nss nss-config">
            <primary sortas="b-nss-config">nss-config</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pk12util">
        <term><command>pk12util</command></term>
        <listitem>
          <para>
            est un outil pour importer des certificats et des clés depuis des fichiers
pkcs #12 en NSS ou pour les exporter. Il peut aussi lister les certificats
et les clés dans de tels fichiers
          </para>
          <indexterm zone="nss pk12util">
            <primary sortas="b-pk12util">pk12util</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
