<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../../general.ent">
  %general-entities;
]>

<sect1 id="grub-setup" xreflabel="Utiliser GRUB pour paramétrer le processus de démarrage avec UEFI">
  <?dbhtml filename="grub-setup.html"?>


  <title>Utiliser GRUB pour paramétrer le processus de démarrage avec UEFI</title>

  <sect2>
    <title>Désactiver le Secure Boot</title>

    <para>
      BLFS ne propose pas les paquets essentiels pour prendre en charge Secure
Boot. Pour paramétrer le processus de démarrage avec GRUB et UEFI dans BLFS,
Secure Boot doit être désactivé dans l'interface de configuration du
micrologiciel. Lisez la documentation fournie par le fabriquant de votre
système pour trouver comment faire.
    </para>
  </sect2>

  <sect2>
    <title>Créer un disque de démarrage d'urgence</title>

    <para>
      Assurez-vous qu'un disque de démarrage d'urgence est prêt pour
<quote>secourir</quote> le système au cas où le système ne puisse
démarrer. Pour créer un disque de démarrage d'urgence avec GRUB pour un
système EFI, trouvez un clé USB libre et créez un système de fichiers
<systemitem class="filesystem">vfat</systemitem> dessus. Installez d'abord
<xref linkend="dosfstools"/>, puis en tant qu'utilisateur <systemitem
class="username">root</systemitem>&nbsp;:
    </para>

    <warning>
      <para>
        La commande suivante supprimera tous les répertoires et fichiers de la
partition. Assurez-vous que votre clé USB ne contient aucune donnée requise,
et remplacez <userinput>sdx1</userinput> par le nœud de périphérique
correspondant à la première partition de la clé USB. Faites attention à ne
pas écraser votre disque dur à cause d'une coquille&nbsp;!
      </para>
    </warning>

    <screen role="nodump"><userinput>mkfs.vfat /dev/sdx1</userinput></screen>

    <para>
      Toujours en tant qu'utilisateur <systemitem
class="username">root</systemitem>, utilisez l'utilitaire
<command>fdisk</command> pour faire de la première partition de la clé USB
une partition <quote>EFI system</quote> (remplacez
<userinput>sdx</userinput> par le nœud de périphérique correspondant à votre
clé USB)&nbsp;:
    </para>

<screen role="nodump"><userinput>fdisk /dev/sdx</userinput>
<literal>
Welcome to fdisk (util-linux 2.38.1).
Changes will remain in memory only, until you decide to write them.
Be careful before using the write command.


Command (m for help): </literal><userinput>t</userinput>
<literal>Partition number (1-9, default 9): </literal><userinput>1</userinput>
<literal>Partition type or alias (type L to list all): </literal><userinput>uefi</userinput>
<literal>Changed type of partition 'Linux filesystem' to 'EFI System'.

Command (m for help): </literal><userinput>w</userinput>
<literal>The partition table has been altered.
Calling ioctl() to re-read partition table.
Syncing disks.</literal></screen>

    <para>
      Toujours en tant qu'utilisateur <systemitem
class="username">root</systemitem>, créez un point de montage pour la
partition EFI sur la clé USB et montez-la&nbsp;:
    </para>

<screen role="nodump"><userinput>mkdir -pv /mnt/rescue &amp;&amp;
mount -v -t vfat /dev/sdx1 /mnt/rescue</userinput></screen>

    <para>
      Installez GRUB pour EFI sur la partition&nbsp;:
    </para>

<screen role="nodump"><userinput>grub-install --target=x86_64-efi --removable --efi-directory=/mnt/rescue --boot-directory=/mnt/rescue</userinput></screen>

    <para>
      Démontez la partition&nbsp;:
    </para>

<screen role="nodump"><userinput>umount /mnt/rescue</userinput></screen>

    <para>
      Maintenant vous pouvez utiliser la clé USB comme un disque de démarrage
d'urgence sur la plateforme UEFI x86-64. Elle démarrera le système et
affichera le shell de GRUB. Ensuite vous pourrez taper des commandes pour
démarrer votre système d'exploitation sur votre disque dur. Pour apprendre à
choisir le périphérique de démarrage, lisez le manuel de votre carte mère ou
de votre ordinateur portable.
    </para>

  </sect2>

  <sect2 role="kernel" id="uefi-kernel">
    <title>Configuration du noyau pour la prise en charge de l'UEFI</title>

    <para>
      Activez les options suivantes dans la configuration du noyau et recompilez
le noyau si nécessaire&nbsp;:
    </para>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
      href="grub-setup-kernel.xml"/>

    <variablelist>
      <title>Voici la signification des options de configuration&nbsp;:</title>

      <varlistentry>
        <term><parameter>CONFIG_PARTITION_ADVANCED</parameter></term>
        <listitem>
          <para>If it's not enabled, <parameter>CONFIG_EFI_PARTITION</parameter> will be
enabled automatically.  But when it's enabled, you must set
<parameter>CONFIG_EFI_PARTITION</parameter> to enabled as well.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <parameter>CONFIG_SYSFB_SIMPLEFB</parameter>,
<parameter>CONFIG_DRM</parameter>,
<parameter>CONFIG_DRM_FBDEV_EMULATION</parameter>,
<parameter>CONFIG_DRM_SIMPLEDRM</parameter>,
<parameter>CONFIG_FB</parameter> et
<parameter>CONFIG_FRAMEBUFFER_CONSOLE</parameter></term>
        <listitem>
          <para>La combinaison de ces options fournit la prise en charge de la console linux
sur le framebuffer UEFI. Pour permettre au noyau d'afficher des messagesqde
débogage tôt dans le processus de démarrage, elles ne devraient pas être
construites en tant que modules à moins que vous n'utilisiez un initramfs.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <indexterm zone="grub-setup uefi-kernel">
      <primary sortas="d-uefi">UEFI</primary>
    </indexterm>
  </sect2>

  <sect2>
    <title>Trouver ou créer la partition EFI système</title>

    <para>
      Sur les systèmes EFI, les chargeurs d'amorçage sont installés dans une
partition FAT32 spéciale appelée <emphasis>partition EFI système</emphasis>
(ESP). Si votre système prend EFI en charge, et qu'une version récente de
Linux ou Windows est pré-installée, il est probable que l'ESP soit déjà
créée. En tant qu'utilisateur <systemitem
class="username">root</systemitem>, listez toutes les partitions de votre
disque dur (remplacez <userinput>sda</userinput> par le périphérique
correspondant au disque dur approprié)&nbsp;:
    </para>

    <screen role="nodump"><userinput>fdisk -l /dev/sda</userinput></screen>

    <para>
      La colonne <quote>Type</quote> de l'ESP devrait être <literal>EFI
System</literal>.
    </para>

    <para>
      If the system or the hard drive is new, or it's the first installation of a
UEFI-booted OS on the system, the ESP may not exist.  In that case, install
<xref linkend='dosfstools'/> first.  Then create a new partition, make a
<systemitem class="filesystem">vfat</systemitem> file system on it, and set
the partition type to <quote>EFI system</quote>.  See the instructions for
the emergency boot device above as a reference.
    </para>

    <warning>
      <para>
        Certaines (vieilles) implémentations UEFI peuvent demander que l'ESP soit la
première partition du disque.
      </para>
    </warning>

    <para>
      As the &root; user, add an entry for the ESP in
<filename>/etc/fstab</filename>, so it will be mounted automatically during
system boot (replace <userinput>sda1</userinput> with the device node
corresponding to the ESP):
    </para>

<screen role="nodump"><userinput>cat &gt;&gt; /etc/fstab &lt;&lt; EOF</userinput>
<literal>/dev/sda1 /boot/efi vfat codepage=437,iocharset=iso8859-1 0 1</literal>
<userinput>EOF</userinput></screen>

    <para>
      Still as the &root; user, create the mount point for the ESP and mount it:
    </para>

<screen role="nodump"><userinput>mount /boot/efi --mkdir</userinput></screen>

  </sect2>

  <sect2>
    <title>Configuration de démarrage minimale avec GRUB et EFI</title>

    <para>
      Sur les systèmes basés sur UEFI, GRUB fonctionne en installant une
application EFI (un type d'exécutable spécial) dans l'ESP. Le micrologiciel
EFI recherchera les chargeurs d'amorçage dans les applications EFI à partir
des entrées de démarrage enregistrées dans les variables EFI, en plus d'un
chemin codé en dur, <filename>EFI/BOOT/BOOTX64.EFI</filename>. Normalement,
un chargeur d'amorçage devrait être installé dans un chemin personnalisé et
le chemin devrait être enregistré dans les variables EFI. L'utilisation du
chemin codé en dur est à éviter le plus possible. Cependant, dans certains
cas nous devons utiliser le chemin codé en dur&nbsp;:
    </para>

    <itemizedlist>
      <listitem>
        <para>
          Le système n'est pas encore démarré avec EFI, ce qui rend les variables EFI
inaccessibles.
        </para>
      </listitem>
      <listitem>
        <para>
          Le micrologiciel EFI est en 64&nbsp;bits mais le système LFS en
32&nbsp;bits, ce qui rend les variables EFI inaccessibles car le noyau ne
peut pas invoquer les services EFI à l'exécution avec une longueur
d'adressage virtuel différente.
        </para>
      </listitem>
      <listitem>
        <para>
          LFS est construit pour une Live USB, donc nous ne pouvons pas nous reposer
sur les variables EFI qui sont stockées en NVRAM ou EEPROM sur la machine
locale.
        </para>
      </listitem>
      <listitem>
        <para>
          Vous ne pouvez pas ou ne voulez pas installer
<application>efibootmgr</application> pour manipuler les entrées de
démarrage dans les variables EFI.
        </para>
      </listitem>
    </itemizedlist>

    <para>
      Dans tous ces cas, suivez ces instructions pour installer l'application EFI
GRUB dans le chemin codé en dur et créer une configuration de démarrage
minimale. Sinon, il vaut mieux passer cette section et lire les sections
restantes pour paramétrer la configuration de démarrage normalement.
    </para>

    <para>
      Pour installer GRUB avec une application EFI installée dans le chemin codé
en dur <filename>EFI/BOOT/BOOTX64.EFI</filename>, assurez-vous d'abord que
la partition de démarrage est montée dans <filename
class="directory">/boot</filename> et l'ESP est monté dans <filename
class="directory">/boot/efi</filename>. Puis en tant qu'utilisateur &root;,
lancez la commande&nbsp;:
    </para>

    <note>
      <para>
        La commande remplacera
<filename>/boot/efi/EFI/BOOT/BOOTX64.EFI</filename>. Elle peut casser un
chargeur d'amorçage déjà installé. Sauvegardez-le si vous n'êtes pas sur·e.
      </para>
    </note>

    <screen role="nodump"><userinput>grub-install --target=x86_64-efi --removable</userinput></screen>

    <para>
      Cette commande installera l'application EFI GRUB dans le chemin codé en dur
<filename>/boot/efi/EFI/BOOT/BOOTX64.EFI</filename>, pour que le
micrologiciel EFI puisse le trouver et le charger. Les fichiers GRUB
restants sont installés dans le répertoire <filename
class="directory">/boot/grub</filename> et sera chargé par
<filename>BOOTX64.EFI</filename> au démarrage du système.
    </para>

    <note>
      <para>
        Le micrologiciel EFI préfère les applications EFI avec le chemin enregistré
dans les entrées de démarrage stockées dans les variables EFI à
l'application EFI dans le chemin codé en dur. Vous devrez alors peut-être
invoquer le menu de sélection de démarrage ou l'interface de configuration
du micrologiciel pour choisir le GRUB nouvellement installé au prochain
démarrage. Consultez le manuel de votre carte mère ou de votre ordinateur
portable pour trouver comment.
      </para>
    </note>

    <para>
      Si vous avez suivi les instructions de cette section et paramétrez une
configuration de démarrage minimale, sautez maintenant à <quote>Créer le
fichier de configuration GRUB</quote>.
    </para>
  </sect2>

  <sect2>
    <title>Monter le système de fichiers des variables EFI</title>

    <para>
      L'installation de GRUB sur une plateforme UEFI demande que le système de
fichiers des variables EFI, <systemitem
class="filesystem">efivarfs</systemitem> soit monté. En tant qu'utilisateur
<systemitem class="username">root</systemitem>, montez-le s'il n'est pas
encore monté&nbsp;:
    </para>

<screen role="nodump"><userinput>mountpoint /sys/firmware/efi/efivars || mount -v -t efivarfs efivarfs /sys/firmware/efi/efivars</userinput></screen>

    <note revision="systemd">
      <para>
        Si le système est démarré avec UEFI et systemd, <systemitem
class="filesystem">efivarfs</systemitem> sera monté
automatiquement. Cependant dans l'environnement chroot de LFS il faudra
toujours le monter manuellement.
      </para>
    </note>

    <para revision="sysv">
      Maintenant ajoutez une entrée pour <systemitem
class="filesystem">efivarfs</systemitem> dans
<filename>/etc/fstab</filename> pour qu'il soit monté automatiquement au
démarrage du système&nbsp;:
    </para>

<screen revision="sysv" role="nodump"><userinput>cat &gt;&gt; /etc/fstab &lt;&lt; EOF</userinput>
<literal>efivarfs /sys/firmware/efi/efivars efivarfs defaults 0 0</literal>
<userinput>EOF</userinput></screen>

    <warning>
      <para>
        Si le système n'est pas démarré avec UEFI, le répertoire <filename
class="directory">/sys/firmware/efi</filename> n'existera pas. Dans ce cas
vous devriez démarrer le système en mode UEFI avec le disque de démarrage
d'urgence ou en utilisant la configuration de démarrage minimale créée plus
haut, puis monter <systemitem class="filesystem">efivarfs</systemitem> et
continuer.
      </para>
    </warning>
  </sect2>

  <sect2>
    <title>Mettre en place la configuration</title>

    <para>
      Sur les systèmes UEFI, GRUB fonctionne en installant une application EFI (un
type d'exécutable spécial) dans <filename
class="directory">/boot/efi/EFI/[id]/grubx64.efi</filename>, où <filename
class="directory">/boot/efi</filename> est le point de montage de l'ESP et
<literal>[id]</literal> est remplacé par un identifiant spécifié à la ligne
de commande <command>grub-install</command>. GRUB créera une entrée dans les
variables EFI contenant le chemin <literal>EFI/[id]/grubx64.efi</literal>
pour que le micrologiciel puisse trouver <filename>grubx64.efi</filename> et
le charger.
    </para>

    <para>
      <filename>grubx64.efi</filename> est très léger (136&nbsp;Ko pour GRUB-2.06)
donc il n'utilisera pas beaucoup de place dans l'ESP. Une taille typique
d'ESP est 100&nbsp;Mo (pour le chargeur d'amorçage de Windows, qui prend
environ 50&nbsp;Mo dans l'ESP). Une fois <filename>grubx64.efi</filename>
chargé par le micrologiciel, il chargera les modules GRUB dans la partition
de démarrage. L'emplacement par défaut est <filename
class="directory">/boot/grub</filename>.
    </para>

    <para>
      En tant qu'utilisateur <systemitem class="username">root</systemitem>,
installez les fichiers de GRUB dans
<filename>/boot/efi/EFI/LFS/grubx64.efi</filename> et <filename
class="directory">/boot/grub</filename>. Ensuite paramétrez l'entrée de
démarrage dans les variables EFI&nbsp;:
    </para>

<screen role="nodump"><userinput>grub-install --bootloader-id=LFS --recheck</userinput></screen>

    <para>
      Si l'installation se passe correctement, la sortie devrait être&nbsp;:
    </para>

<screen role="nodump"><literal>Installing for x86_64-efi platform.
Installation finished. No error reported.</literal></screen>

    <para>
      Tapez <command>efibootmgr | cut -f 1</command> pour revérifier la
configuration de démarrage EFI. Voici un exemple de sortie&nbsp;:
    </para>

<screen role="nodump"><literal>BootCurrent: 0000
Timeout: 1 seconds
BootOrder: 0005,0000,0002,0001,0003,0004
Boot0000* ARCH
Boot0001* UEFI:CD/DVD Drive
Boot0002* Windows Boot Manager
Boot0003* UEFI:Removable Device
Boot0004* UEFI:Network Device
Boot0005* LFS</literal></screen>

    <para>
      Remarquez que <literal>0005</literal> est en premier dans
<literal>BootOrder</literal> et que <literal>Boot0005</literal> est
<literal>LFS</literal>. Cela signifie qu'au prochain démarrage, la version
de GRUB installée par LFS sera utilisée pour démarrer le système.
    </para>

  </sect2>

  <sect2>
    <title>Création du fichier de configuration de GRUB</title>

    <indexterm zone="grub-setup grub-video">
      <primary sortas="e-boot-grub-grub-cfg">/boot/grub/grub.cfg</primary>
    </indexterm>

    <para>
      Générez <filename>/boot/grub/grub.cfg</filename> pour configurer le menu de
démarrage de GRUB&nbsp;:
    </para>

<screen role="nodump"><userinput>cat &gt; /boot/grub/grub.cfg &lt;&lt; EOF</userinput>
<literal># Begin /boot/grub/grub.cfg
set default=0
set timeout=5

insmod part_gpt
insmod ext2
set root=(hd0,2)

insmod all_video
if loadfont /boot/grub/fonts/unicode.pf2; then
  terminal_output gfxterm
fi

menuentry "GNU/Linux, Linux 6.4.10-lfs-12.0"  {
  linux   /boot/vmlinuz-6.4.10-lfs-12.0 root=/dev/sda2 ro
}

menuentry "Firmware Setup" {
  fwsetup
}</literal>
<userinput>EOF</userinput></screen>

    <para>
      Vous devez remplacer <literal>(hd0,2)</literal>, <literal>sda2</literal> et
<literal>6.1.11-lfs-11.3</literal> pour correspondre à votre configuration.
    </para>

    <note>
      <para>
        Du point de vu de GRUB, les fichiers sont relatifs à la partition
utilisée. Si vous utilisez une partition /boot séparée, supprimez /boot dans
les chemins précédents (vers le noyau et vers
<filename>unicode.pf2</filename>). Vous devrez aussi changer la ligne
«&nbsp;set root&nbsp;» pour pointer vers la partition de démarrage.
      </para>
    </note>

    <para>
      L'entrée <literal>Firmware Setup</literal> peut être utilisée pour entrer
dans l'interface de configuration fournie par le micrologiciel (parfois
nommée <quote>configuration BIOS</quote>).
    </para>
  </sect2>

  <sect2>
    <title>Démarrage double avec Windows</title>

    <para>
      Ajoutew une entrée de menu pour Windows dans
<filename>grub.cfg</filename>&nbsp;:
    </para>

<screen role="nodump"><userinput>cat &gt;&gt; /boot/grub/grub.cfg &lt;&lt; EOF</userinput>
<literal># Begin Windows addition

menuentry "Windows 11" {
  insmod fat
  insmod chain
  set root=(hd0,1)
  chainloader /EFI/Microsoft/Boot/bootmgfw.efi
}</literal>
<userinput>EOF</userinput></screen>

    <para>
      Vous devriez remplacer <literal>(hd0,1)</literal> par le nom désigné par
GRUB pour l'ESP. Vous pouvez utiliser la directive
<literal>chainloader</literal> pour dire à GRUB de lancer un autre
exécutable EFI, dans ce cas le gestionnaire de démarrage de Windows. Vous
pouvez ajouter des outils supplémentaires au format exécutable EFI (par
exemple un shell EFI) dans l'ESP et leur créer des entrées GRUB.
    </para>

  </sect2>

</sect1>
