<sect3 id="postlfs-security-fw-masqRouter" xreflabel="Masquerading Router">
<title>Router Masquerading</title>

<para>Un vrai pare-feu a deux interfaces, une connectée à un intranet, dans
cette exemple, eth0, et une connectée à internet, ici, ppp0. Pour apporter le
maximum de sécurité sur cette machine, assurez-vous qu'aucun serveur ne tourne
dessus, et spécialement X11. Et, comme principe général, la machine elle-même
ne devrait accéder à aucun service<footnote><para>Pensez à un serveur de nom
donnant des réponses qui feront crasher bind, ou, même pire, qui implémente un
vers via un dépassement de tampon.</para></footnote> auquels vous ne faites pas
confiance.</para>

<para><screen><userinput>cat &gt; /etc/rc.d/init.d/firewall &lt;&lt; "EOF"</userinput>
#!/bin/sh

# Début $rc_base/init.d/firewall

echo
echo "You're using the example-config for a setup of a firewall"
echo "from the firewalling-hint written for LinuxFromScratch."
echo "This example is far from being complete, it is only meant"
echo "to be a reference."
echo "Firewall security is a complex issue, that exceeds the scope"
echo "of the quoted configuration rules."
echo "You can find some quite comprehensive information"
echo "about firewalling in Chapter 4 of the BLFS book."
echo "http://beyond.linuxfromscratch.org/"
echo

# Insert iptables modules (not needed if built into the kernel).

modprobe ip_tables
modprobe iptable_filter
modprobe ip_conntrack
modprobe ip_conntrack_ftp
modprobe ipt_state
modprobe iptable_nat
modprobe ip_nat_ftp
modprobe ipt_MASQUERADE
modprobe ipt_LOG
modprobe ipt_REJECT

# allow local-only connections
iptables -A INPUT  -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT

# allow forwarding
iptables -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT
iptables -A FORWARD -m state --state NEW -i ! ppp+	 -j ACCEPT

# do masquerading    (not needed if intranet is not using private ip-addresses)
iptables -t nat -A POSTROUTING -o ppp+ -j MASQUERADE

# Log everything for debugging (last of all rules, but before DROP/REJECT)
iptables -A INPUT   -j LOG --log-prefix "FIREWALL:INPUT  "
iptables -A FORWARD -j LOG --log-prefix "FIREWALL:FORWARD"
iptables -A OUTPUT  -j LOG --log-prefix "FIREWALL:OUTPUT "

# set a sane policy
iptables -P INPUT   DROP
iptables -P FORWARD DROP
iptables -P OUTPUT  DROP

# be verbose on dynamic ip-addresses (not needed in case of static IP)
echo 2 &gt; /proc/sys/net/ipv4/ip_dynaddr

# disable ExplicitCongestionNotification
echo 0 &gt; /proc/sys/net/ipv4/tcp_ecn

# activate TCPsyncookies
echo 1 &gt; /proc/sys/net/ipv4/tcp_syncookies

# activate Route-Verification = IP-Spoofing_protection
for f in /proc/sys/net/ipv4/conf/*/rp_filter; do
	echo 1 &gt; $f
done

# activate IP-Forwarding 
echo 1 &gt; /proc/sys/net/ipv4/ip_forward
<userinput>EOF</userinput></screen></para>

<para>Avec ce script, votre intranet devrait être suffisamment sécurisé contre
les attaques externes: personne ne pourra être capable de mettre en place une
connexion vers un service interne et, si il est masqueradé, il est même
invisible; de plus, votre pare-feu doit être pratiquement inattaquable car il
n'existe aucun service lancé qu'un cracker pourrait attaqué.</para>

<para>Note: si l'interface, par laquelle vous vous connectez à Internet, ne se
connecte pas via ppp, vous aurez besoin de changer <userinput>ppp+</userinput>
par le nom de l'interface que vous utilisez. Si vous utilisez le même type
d'interface pour vous connecter à l'intranet et à l'internet, vous devez
utiliser le nom actuel de l'interface tel que
<emphasis>eth<userinput>0</userinput></emphasis>, sur les deux interfaces.
</para>

<para>Si vous avez besoin d'une sécurité plus forte (c'est-à-dire DOS,
connexion highjacking, spoofing, etc.), jetez un oeil sur la liste de
<xref linkend="postlfs-security-fw-library"/> à la fin de cette section.</para>

</sect3>
