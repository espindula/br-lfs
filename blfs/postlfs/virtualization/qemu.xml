<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
  <!ENTITY qemu-download-http "http://wiki.qemu.org/download/qemu-&qemu-version;.tar.bz2">
  <!ENTITY qemu-download-ftp  " ">
  <!ENTITY qemu-md5sum        "6726977292b448cbc7f89998fac6983b">
  <!ENTITY qemu-size          "23 Mo">
  <!ENTITY qemu-buildsize     "287 Mo">
  <!ENTITY qemu-time          "1.4 SBU">
]>
<sect1 id="qemu" xreflabel="qemu-&qemu-version;">
  <?dbhtml filename="qemu.html"?>
  <sect1info>
    <othername>$LastChangedBy&nbsp;: bdubbs $</othername>
    <date>$Date&nbsp;: 2013-03-18 20:44:11 +0100 (Mon, 18 Mar 2013) $</date>
  </sect1info>
  <title>qemu-&qemu-version;</title>
  <indexterm zone="qemu">
    <primary sortas="a-qemu">qemu</primary>
  </indexterm>
  <sect2 role="package">
    <title>Introduction à qemu</title>
     <para><application>qemu-kvm</application> est une solution de virtualisation complète
    pour Linux avec un processeur x86 supportant les extensions de virtualisation (Intel VT ou
    AMD-V).</para>
    &lfs76_checked;
    <bridgehead renderas="sect3">Information sur le paquet </bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>Téléchargement (HTTP)&nbsp;: <ulink url="&qemu-download-http;"/></para>
      </listitem>
      <listitem>
        <para>Téléchargement (FTP)&nbsp;: <ulink url="&qemu-download-ftp;"/></para>
      </listitem>
      <listitem>
        <para>Somme de contrôle MD5 du téléchargement&nbsp;: &qemu-md5sum;</para>
      </listitem>
      <listitem>
        <para>Taille du téléchargement&nbsp;: &qemu-size;</para>
      </listitem>
      <listitem>
        <para>Estimation de l'espace disque requis&nbsp;: &qemu-buildsize;</para>
      </listitem>
      <listitem>
        <para>Estimation du temps de construction&nbsp;: &qemu-time;</para>
      </listitem>
    </itemizedlist>
    <bridgehead renderas="sect3">Dépendances de Qemu</bridgehead>
    <bridgehead renderas="sect4">Requises</bridgehead>
    <para role="required">
      <xref linkend="glib2"/>,
      <xref linkend="python2"/> et
      <xref linkend="x-window-system"/>
    </para>
    <bridgehead renderas="sect4">Recommandées</bridgehead>
    <para role="recommended">
      <xref linkend="sdl"/>
    </para>
    <bridgehead renderas="sect4">Facultative</bridgehead>
    <para role="optional">
      <xref linkend="alsa"/>,
      ,
      <xref linkend="check"/>,
      <xref linkend="curl"/>,
      <xref linkend="mesalib"/>, et
      <xref linkend="cyrus-sasl"/>.
    </para>
    <note>
      <para>
        La liste des dépendances facultatives n'est pas complète. 
	Regardez la sortie de 
        <command>./configure --help</command> pour une liste plus complète.
      </para>
    </note>
<para condition="html" role="usernotes">Notes utilisateur&nbsp;:
    <ulink url="&blfs-wiki;/qemu"/></para>
  </sect2>
  <sect2 id='qemu-prereq'>
    <title>Prérequis de KVM</title>
    <para>Avant de construite <application>qemu-kvm</application>, vérifier si votre processeur
    supporte la technologie de virtualisation&nbsp;:</para>
    
<screen>
<userinput>egrep '^flags.*(vmx|svm)' /proc/cpuinfo</userinput>
</screen>
    <para>Si vous avez une sortie, vous avez la technologie VT (vmx pour les processeurs Intel
    et svm pour les processeurs AMD). Vous devez également allez voir dans votre BIOS et vérifier
    qu'elle est activée. Après l'activation, rédémarrer sur votre LFS.</para>
  </sect2>
  <sect2 role="kernel" id='qemu-kernel'>
    <title>Configuration du noyau</title>
     <para>Activez les options suivantes dans la configuration du noyau
    et recompilez le noyau si nécessaire&nbsp;:</para>
<screen>
<literal>Virtualization:  ---&gt;
  Kernel-based Virtual Machine (KVM) support: Y or M
    KVM for Intel processors support: Y or M
    KVM for AMD processors support: Y or M</literal>
</screen>
    <indexterm zone="qemu qemu-kernel">
      <primary sortas="d-qemu">qemu</primary>
    </indexterm>
    <para>Les options Intel ou AMD ne sont pas toutes les deux nécessaire, mais celle correspondante à votre processeur
    est obligatoire.</para>
    <para>Pour le réseau, vérifiez que <xref linkend='bridgeutils'/> est installé et que les options
    suivantes dans la configuration du noyau sont actives :</para>
<screen>
<literal>Networking support  ---&gt;
  Networking options  ---&gt;
    802.1d Ethernet Bridging: Y or M
Device Drivers  ---&gt;
  Network device support  ---&gt;
    Universal TUN/TAP device driver support: Y or M</literal>
</screen>
   
  </sect2>
  <sect2 role="installation">
    <title>Installation de qemu</title>
    <para>Installez <application>qemu</application> en lançant les commandes suivantes&nbsp;:
    </para>
<screen>
<userinput>sed -e '/#include &lt;sys\/capability.h&gt;/ d' \
    -e '/#include "virtio-9p-marshal.h"/ i#include &lt;sys\/capability.h&gt;' \
    -i fsdev/virtfs-proxy-helper.c &amp;&amp;
./configure --prefix=/usr \
            --sysconfdir=/etc \
            --docdir=/usr/share/doc/qemu-&qemu-version; \
            --target-list=x86_64-softmmu &amp;&amp;
make</userinput>
</screen>
    <para>Pour lancer la construction en tests, lancez <command>make V=1 check</command>.</para>
<para>Maintenant, en tant qu'utilisateur <systemitem class="username">root</systemitem>&nbsp;:</para>
<screen role="root">
<userinput>make install &amp;&amp;
[ -e  /usr/lib/libcacard.so ] &amp;&amp; chmod -v 755 /usr/lib/libcacard.so</userinput>
</screen>
    <para>
      Vous pouvez avec besoin d'un groupe dédié qui contient les utilisateurs (autre que root)
      autorisé à accéder au périphérique KVM. Ajouter le groupe en lançant la commande suivante
      en tant qu'utilisateur <systemitem class="username">root</systemitem> :
    </para>
<screen role="root">
<userinput>groupadd -g 61 kvm</userinput>
</screen>
    <para>
      Ajoutez tous les utilisateurs qui peuvent utiliser le périphérique KVM dans ce groupe :
    </para>
<screen role="root">
<userinput>usermod -a -G kvm <replaceable>&lt;username&gt;</replaceable></userinput>
</screen>
    <para>
      Vous pouvez aussi avoir besoin d'ajouter une rêgle Udev pour que le périphérique KVM ai les bonnes
      permissions :
    </para>
<screen role="root">
<userinput>cat > /lib/udev/rules.d/65-kvm.rules &lt;&lt; "EOF"
<literal>KERNEL=="kvm", NAME="%k", GROUP="kvm", MODE="0660"</literal>
EOF</userinput>
</screen>
    <note>
    <para>Par confort vous pouvez vouloir créer un lien symbolique pour lancer
    <command>qemu-system-x86_64</command>&nbsp;:</para>
    
<screen role="root">
<userinput>ln -sv qemu-system-x86_64 /usr/bin/qemu</userinput>
</screen>
    </note>
  </sect2>
  <sect2 role="commands">
    <title>Explications des commandes</title>
    <para><command>sed -e '/#include ... fsdev/virtfs-proxy-helper.c</command>:
    Corrige <application>qemu-&qemu-version;</application> pour la construction avec
    <application>libcap-&libcap-version;</application>.</para>
    <para><parameter>--target-list=x86_64-softmmu</parameter>&nbsp;: This option
    limits the build target to the x86_64 architecture.  For other 
    hardware emulation see the --target-list list in <command>configure</command>'s
    help output.  Omitting this option will build all architectures.</para>
     <para>
      <option>--audio-drv-list=alsa</option>: Ce paramètre initialise
      le pilote audio pour ALSA. Pour les autres pilotes regardez la liste --audio-drv-list
      dans la sortie de l'aide de 
      <command>configure</command>. Le pilote audio par défaut est
      OSS.
    </para>
</sect2>
  <sect2 role="configuration">
    <title>Configuration qemu</title>
    <para>Pour générer une image, lancez&nbsp;:</para>
    
<screen>
<userinput>qemu-img create -f qcow2 vdisk.img 10G</userinput>
</screen>
    <para>Ajuster la taille du disque virtuel et le nom du fichier image comme souhaités. La taille
    réelle du fichier sera plus petite que spécifiée, mais s'agrandira quand il sera utilisé.</para>
    <note><para>Les instructions suivantes supposent que vous avez créé le lien symbolique facultatif,
    <userinput>qemu</userinput>. En supplément, vous devez exécuter
    <userinput>qemu</userinput> depuis un terminal d'une fenètre X.</para></note>
    <para>Pour installer un système d'exploitation, téléchargez un iso de votre choix ou utilisez un CD d'installation.
    Pour les besoins de cet exemple, nous utilisons une distribution
    Fedora 16 qui est téléchargée par l'iso
    <filename>Fedora-16-x86_64-Live-LXDE.iso</filename> dans le répertoire courant.
    Exécutez les commandes suivantes&nbsp;:</para>
<screen>
<userinput>qemu -enable-kvm -hda vdisk.img            \
     -cdrom Fedora-16-x86_64-Live-LXDE.iso \
     -boot d                               \
     -m 384</userinput>
</screen>
    <para>Suivre la procédure d'installation normal pour la distribution choisie.
    L'option boot spécifie l'ordre de démarrage des disques comme une chaîne de lettres de
    lecteur. Les lettres valides de lecteurs sont&nbsp;: a, b (lecteur de disquettes 1 et 2), c (premier disque dur
    ), d (premier lecteur CD-ROM).  l'option -m est la quantité de mémoire à utiliser pour la
    machine virtuelle. Si vous avez suffisament de mémoire (2G ou plus), 1G est une valeur correcte.
    Pour les ordinateurs avec 512Mo de RAM il est prudent d'utiliser -m 192, ou même -m 128 (la valeur par défaut).</para>
    <para>Pour exécuter le nouveau système d'exploitation, lancer&nbsp;:</para>
<screen>
<userinput>qemu -enable-kvm vdisk.img -m 384</userinput>
</screen>
    <para>Pour ajouter le réseau à la machine virtuelle ajoutez "-net nic -net user" à la commande précédente.
    qemu fournit un serveur DHCP pour les machines virtuelles et en fonction de votre système client,
    initialise le réseau au travers de l'hôte.</para>
    <para>un problème avec la solution réseau précédente est qu'elle ne fournit pas la possibilité de se connecter
    sur le réseau local. Pour faire cela, il y a quelques étapes supplémentaire qui doivent être faites,
    tout en tant qu'utilisateur <systemitem
    class="username">root</systemitem>&nbsp;:</para>
    <itemizedlist spacing="compact">
      <listitem>
        <para>Initialiser le mode pont avec <xref linkend='bridgeutils'/>.</para>
      </listitem>
      <listitem>
        <para>Autoriser le système hôte à transférer les paquets IP.</para>
<screen role="root">
<userinput>sysctl -w net.ipv4.ip_forward=1</userinput>
</screen>
        <para>Pour rendre cela permanent, ajoutez la commande dans le fichier
        <filename>/etc/syssysctl.conf</filename>&nbsp;:</para>
<screen role="root">
<userinput>cat &gt;&gt; /etc/sysctl.conf &lt;&lt; EOF
net.ipv4.ip_forward=1
EOF</userinput>
</screen>
      </listitem>
      <listitem>
        <para>Créez des scripts pour qemu pour lier les cartes réseau cliente,
        normalement visible en tant que tap0, dans le pont hôte.</para>
<screen role="root">
<userinput>cat &gt; /etc/qemu-ifup &lt;&lt; EOF
#!/bin/bash
switch=br0
if [ -n "\$1" ]; then
  # Add new tap0 interface to bridge
  /sbin/ip link set \$1 up
  sleep 0.5s
  /usr/sbin/brctl addif \$switch \$1
else
  echo "Error: no interface specified"
  exit 1
fi
exit 0
EOF
chmod +x /etc/qemu-ifup</userinput>
</screen>
<screen role="root">
<userinput>cat &gt; /etc/qemu-ifdown &lt;&lt; EOF
#!/bin/bash
switch=br0
if [ -n "\$1" ]; then
  # Remove tap0 interface from bridge
  /usr/sbin/brctl delif \$switch \$1
else
  echo "Error: no interface specified"
  exit 1
fi
exit 0
EOF
chmod +x /etc/qemu-ifdown</userinput>
</screen>
      </listitem>
    </itemizedlist>
      <note><para>Les antislashs dans le script précédent sont pour la cohérence des opérations
      de copier/coller. Les antislashs <emphasis>ne</emphasis>
      doivent pas apparaître dans le script final.</para></note>
    <itemizedlist spacing="compact">
      <listitem>
        <para>Démarrer qemu avec les options "-net nic -net tap".  </para>
      </listitem>
      <listitem>
        <para>Si une connexion, en ssh par exemple, depuis le réseau local vers la VM cliente est souhaitée,
        le client devra être surement configuré avec une adresse IP statique.</para>
      </listitem>
    </itemizedlist>
  </sect2>
  <sect2 role="content">
    <title>Contenu</title>
    <segmentedlist>
      <segtitle>Programme installé</segtitle>
      <segtitle>Bibliothèque installée</segtitle>
      <segtitle>Répertoires installés</segtitle>
      <seglistitem>
        <seg>
          qemu-ga,
          qemu-img,
          qemu-io,
          qemu-nbd,
          qemu-system-x86_64,
          virtfs-proxy-helper, et
          vscclient
        </seg>
        <seg>libcacard.so</seg>
        <seg>
          /etc/qemu,
          /usr/include/cacard,
          /usr/lib/qemu,
          /usr/share/qemu, et
          /usr/share/doc/qemu-&qemu-version;
        </seg>
      </seglistitem>
    </segmentedlist>
    <variablelist>
      <bridgehead renderas="sect3">Description courte</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>
      <varlistentry id="qemu-ga">
        <term><command>qemu-ga</command></term>
        <listitem>
         <para>implémente le support pour les commandes QMP (Protocole de surveillance QEMU) et
          les événements qui terminent et débutent respectivement au sein de l'invité à l'aide
          d'un agent intégré dans le cadre de QEMU.</para>
         <indexterm zone="qemu qemu-ga">
            <primary sortas="b-qemu-ga">qemu-ga</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="qemu-img">
        <term><command>qemu-img</command></term>
        <listitem>
          <para>fournit les commandes pour gérer les images disques QEMU.</para>
           <indexterm zone="qemu qemu-img">
            <primary sortas="b-qemu-img">qemu-img</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="qemu-io">
        <term><command>qemu-io</command></term>
        <listitem>
           <para>est un programme de diagnostique et de manipulation pour les médias (virtuels) en mémoire.
          Il est encore à un stade de développement précoce.</para>
            <indexterm zone="qemu qemu-io">
            <primary sortas="b-qemu-io">qemu-io</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="qemu-nbd">
        <term><command>qemu-nbd</command></term>
        <listitem>
          <para>exporte les images disque Qemu  en utilisant le protocole disque QEMU "Network Block
          Device" (NBD).</para>
          <indexterm zone="qemu qemu-nbd">
            <primary sortas="b-qemu-nbd">qemu-nbd</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="qemu-system">
        <term><command>qemu-system-x86_64</command></term>
        <listitem>
          <para>est l'émulateur QEMU de sytème PC.</para>
          <indexterm zone="qemu qemu-system">
            <primary sortas="b-qemu-system">qemu-system-x86_64</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="libcacard">
        <term><filename class="libraryfile">libcacard.so</filename></term>
        <listitem>
          <para>est une bibliothèque d'émulation pour une Smart Card virtuelle.</para>
          <indexterm zone="qemu libcacard">
            <primary sortas="c-libcacard">libcacard.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>
</variablelist>
  </sect2>
</sect1>
