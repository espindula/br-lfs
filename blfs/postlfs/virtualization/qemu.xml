<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
  <!ENTITY qemu-download-http "http://wiki.qemu.org/download/qemu-&qemu-version;.tar.bz2">
  <!ENTITY qemu-download-ftp  " ">
  <!ENTITY qemu-md5sum        "f469f2330bbe76e3e39db10e9ac4f8db">
  <!ENTITY qemu-size          "25 Mo">
  <!ENTITY qemu-buildsize     "419 Mo (avec les tests)">
  <!ENTITY qemu-time          "2.4 SBU (avec les tests)">
]>
<sect1 id="qemu" xreflabel="qemu-&qemu-version;">
  <?dbhtml filename="qemu.html"?>
  <sect1info>
    <othername>$LastChangedBy&nbsp;: bdubbs $</othername>
    <date>$Date&nbsp;: 2013-03-18 20:44:11 +0100 (Mon, 18 Mar 2013) $</date>
  </sect1info>
  <title>qemu-&qemu-version;</title>
  <indexterm zone="qemu">
    <primary sortas="a-qemu">qemu</primary>
  </indexterm>
  <sect2 role="package">
    <title>Introduction à qemu</title>
     <para><application>qemu-kvm</application> est une solution de virtualisation complète
    pour Linux avec un processeur x86 supportant les extensions de virtualisation (Intel VT ou
    AMD-V).</para>
    &lfs78_checked;
    <bridgehead renderas="sect3">Information sur le paquet </bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>Téléchargement (HTTP)&nbsp;: <ulink url="&qemu-download-http;"/></para>
      </listitem>
      <listitem>
        <para>Téléchargement (FTP)&nbsp;: <ulink url="&qemu-download-ftp;"/></para>
      </listitem>
      <listitem>
        <para>Somme de contrôle MD5 du téléchargement&nbsp;: &qemu-md5sum;</para>
      </listitem>
      <listitem>
        <para>Taille du téléchargement&nbsp;: &qemu-size;</para>
      </listitem>
      <listitem>
        <para>Estimation de l'espace disque requis&nbsp;: &qemu-buildsize;</para>
      </listitem>
      <listitem>
        <para>Estimation du temps de construction&nbsp;: &qemu-time;</para>
      </listitem>
    </itemizedlist>
    <bridgehead renderas="sect3">Dépendances de Qemu</bridgehead>
    <bridgehead renderas="sect4">Requises</bridgehead>
    <para role="required">
      <xref linkend="glib2"/>,
      <xref linkend="python2"/> et
      <xref linkend="x-window-system"/>
    </para>
    <bridgehead renderas="sect4">Recommandées</bridgehead>
    <para role="recommended">
      <xref linkend="sdl"/>
    </para>
    <bridgehead renderas="sect4">Facultative</bridgehead>
    <para role="optional">
      <xref linkend="alsa"/>,
      <xref linkend="bluez"/>,
      <xref linkend="check"/>,
      <xref linkend="curl"/>,
      <xref linkend="cyrus-sasl"/>,
      <xref linkend="gnutls"/>,
      <xref linkend="gtk2"/>,
      <xref linkend="gtk3"/>,
      <xref linkend="libusb"/>,
      <xref linkend="libgcrypt"/>,
      <xref linkend="lzo"/>,
      <xref linkend="nettle"/>,
      <xref linkend="nss"/> (pour libcacard.so),
      <xref linkend="mesa"/>,
      <xref linkend="sdl"/>,
      <xref linkend="vte"/>.
      <ulink url="http://www.libssh2.org">libssh2</ulink>
    </para>
    <note>
      <para>
        La liste des dépendances facultatives n'est pas complète.
	Regardez la sortie de
        <command>./configure --help</command> pour une liste plus complète.
      </para>
    </note>
<para condition="html" role="usernotes">Notes utilisateur&nbsp;:
    <ulink url="&blfs-wiki;/qemu"/></para>
  </sect2>
  <sect2 id='qemu-prereq'>
    <title>Prérequis de KVM</title>
    <para>Avant de construite <application>qemu-kvm</application>, vérifier si votre processeur
    supporte la technologie de virtualisation&nbsp;:</para>
<screen>
<userinput>egrep '^flags.*(vmx|svm)' /proc/cpuinfo</userinput>
</screen>
    <para>Si vous avez une sortie, vous avez la technologie VT (vmx pour les processeurs Intel
    et svm pour les processeurs AMD). Vous devez également allez voir dans votre BIOS et vérifier
    qu'elle est activée. Après l'activation, rédémarrer sur votre LFS.</para>
  </sect2>
  <sect2 role="kernel" id='qemu-kernel'>
    <title>Configuration du noyau</title>
     <para>Activez les options suivantes dans la configuration du noyau
    et recompilez le noyau si nécessaire&nbsp;:</para>
<screen>
<literal>[*] Virtualization:  ---&gt;                            [CONFIG_VIRTUALIZATION]
  &lt;*/M&gt;   Kernel-based Virtual Machine (KVM) support [CONFIG_KVM]
  &lt;*/M&gt;     KVM for Intel processors support         [CONFIG_KVM_INTEL]
  &lt;*/M&gt;     KVM for AMD processors support           [CONFIG_KVM_AMD]</literal>
</screen>
    <indexterm zone="qemu qemu-kernel">
      <primary sortas="d-qemu">qemu</primary>
    </indexterm>
    <para>Les options Intel ou AMD ne sont pas toutes les deux nécessaire, mais celle correspondante à votre processeur
    est obligatoire.</para>
    <para>Pour le réseau, vérifiez que <xref linkend="bridgeutils"/> est installé et que les options
    suivantes dans la configuration du noyau sont actives :</para>
<screen>
<literal>[*] Networking support  ---&gt;                         [CONFIG_NET]
  Networking options  ---&gt;
    &lt;*/M&gt; 802.1d Ethernet Bridging                   [CONFIG_BRIDGE]
Device Drivers  ---&gt;
  [*] Network device support  ---&gt;                   [CONFIG_NETDEVICES]
    &lt;*/M&gt;    Universal TUN/TAP device driver support [CONFIG_TUN]</literal>
</screen>
  </sect2>
  <sect2 role="installation">
    <title>Installation de qemu</title>
    <para>Installez <application>qemu</application> en lançant les commandes suivantes&nbsp;:
    </para>
    <note><para>Qemu est capable de lancer plusieurs cibles. Le processus de construction est aussi capable
    de construire des cibles multiples en même temps avec une liste délimitée par des virgules assignées à
    <option>--target-list</option>. Lancez
    <command>./configure --help</command> pour avoir une liste complète des cibles disponibles.</para></note>
<screen>
<userinput>if [ $(uname -m) = i686 ]; then
   QEMU_ARCH=i386-softmmu
else
   QEMU_ARCH=x86_64-softmmu
fi
./configure --prefix=/usr                        --sysconfdir=/etc                    --target-list=$QEMU_ARCH             --docdir=/usr/share/doc/qemu-&qemu-version; &amp;&amp;
unset QEMU_ARCH &amp;&amp;
make</userinput>
</screen>
    <para>Pour lancer la construction en tests, lancez <command>make V=1 check</command>.
     Un test est connu pour échouer.</para>
<para>Maintenant, en tant qu'utilisateur <systemitem class="username">root</systemitem>&nbsp;:</para>
<screen role="root">
<userinput>make install &amp;&amp;
[ -e  /usr/lib/libcacard.so ] &amp;&amp;
chmod -v 755 /usr/lib/libcacard.so</userinput>
</screen>
    <para>
      Vous pouvez avec besoin d'un groupe dédié qui contient les utilisateurs (autre que root)
      autorisé à accéder au périphérique KVM. Créez ce groupe en lançant la commande suivante
      en tant qu'utilisateur <systemitem class="username">root</systemitem> :
    </para>
<screen role="root">
<userinput>groupadd -g 61 kvm</userinput>
</screen>
    <para>
      Ajoutez tous les utilisateurs qui peuvent utiliser le périphérique KVM dans ce groupe :
    </para>
<screen role="root">
<userinput>usermod -a -G kvm <replaceable>&lt;username&gt;</replaceable></userinput>
</screen>
    <para>
      Vous pouvez aussi avoir besoin d'ajouter une rêgle Udev pour que le périphérique KVM ai les bonnes
      permissions :
    </para>
<screen role="root">
<userinput>cat > /lib/udev/rules.d/65-kvm.rules &lt;&lt; "EOF"
<literal>KERNEL=="kvm", GROUP="kvm", MODE="0660"</literal>
EOF</userinput>
</screen>
    <note>
    <para>Par confort vous pouvez vouloir créer un lien symbolique pour lancer
    le programme installé:</para>
<screen role="root">
<userinput>ln -sv qemu-system-x86_64 /usr/bin/qemu</userinput>
</screen>
    </note>
  </sect2>
  <sect2 role="commands">
    <title>Explications des commandes</title>
    <para>
      <parameter>--audio-drv-list=alsa</parameter>: Ce paramètre initialise
      le pilote audio pour ALSA. Pour les autres pilotes regardez la liste --audio-drv-list
      dans la sortie de l'aide de
      <command>configure</command>. Le pilote audio par défaut est
      OSS.
    </para>
</sect2>
  <sect2 role="configuration">
    <title>Configuration qemu</title>
    <para>Pour générer une image, lancez&nbsp;:</para>
<screen>
<userinput>qemu-img create -f qcow2 vdisk.img 10G</userinput>
</screen>
    <para>Ajuster la taille du disque virtuel et le nom du fichier image comme souhaités. La taille
    réelle du fichier sera plus petite que spécifiée, mais s'agrandira quand il sera utilisé.</para>
    <note><para>Les instructions suivantes supposent que vous avez créé le lien symbolique facultatif,
    <userinput>qemu</userinput>. En supplément, vous devez exécuter
    <userinput>qemu</userinput> depuis un terminal d'une fenètre X (soit en loal ou via ssh).</para></note>
    <para>Pour installer un système d'exploitation, téléchargez un iso de votre choix ou utilisez un CD d'installation.
    Pour les besoins de cet exemple, nous utilisons une distribution
    Fedora 16 qui est téléchargée par l'iso
    <filename>Fedora-16-x86_64-Live-LXDE.iso</filename> dans le répertoire courant.
    Exécutez les commandes suivantes&nbsp;:</para>
<screen>
<userinput>qemu -enable-kvm -hda vdisk.img                 -cdrom Fedora-16-x86_64-Live-LXDE.iso      -boot d                                    -m 384</userinput>
</screen>
    <para>Suivre la procédure d'installation normal pour la distribution choisie.
    L'option boot spécifie l'ordre de démarrage des disques comme une chaîne de lettres de
    lecteur. Les lettres valides de lecteurs sont&nbsp;: a, b (lecteur de disquettes 1 et 2), c (premier disque dur
    ), d (premier lecteur CD-ROM).  l'option -m est la quantité de mémoire à utiliser pour la
    machine virtuelle. Si vous avez suffisament de mémoire (2G ou plus), 1G est une valeur correcte.
    Pour les ordinateurs avec 512Mo de RAM il est prudent d'utiliser -m 192, ou même -m 128 (la valeur par défaut).</para>
    <para>Pour exécuter le nouveau système d'exploitation, lancer&nbsp;:</para>
<screen>
<userinput>qemu -enable-kvm vdisk.img -m 384</userinput>
</screen>
    <para>Vous pouvez avoir des problèmes avec <parameter>-enable-kvm</parameter>.  Alors, vous pouvez vouloir définir les pilotes audio et vidéo,
    le nombre de coeur du CPU et les threads. Une commande alternative pour installer le système d'exploitation est (voir les pages de man de qemu pour
    les définitions des paramètres):</para>
<screen><userinput>qemu -enable-kvm             \
     -cdrom /home/fernando/ISO/linuxmint-17.1-mate-32bit.iso \
     -boot order=d           \
     -m 1G,slots=3,maxmem=4G \
     -machine smm=off        \
     -soundhw es1370         \
     -cpu host               \
     -smp cores=4,threads=2  \
     -vga std                \
     vdisk.img</userinput></screen>
    <para>Un paramètre n'apparaît pas dans la page de man de qemu
    <parameter>-machine smm=off</parameter>, et il est utilisé pour permettre d'activer
    <parameter>-enable-kvm</parameter> sur certains systèmes. Afin de pouvoir lancer la machine, vous pouver taper alternativement:</para>
<screen><userinput>qemu -enable-kvm             \
     -machine smm=off        \
     -boot order=d           \
     -m 1G,slots=3,maxmem=4G \
     -soundhw es1370         \
     -cpu host               \
     -smp cores=4,threads=2  \
     -vga vmware             \
     -hda vdisk.img</userinput></screen>
    <para>Parfois, vous vouldrez que la machine aie une taille d'écran différente que celle offerte nativement par la carte graphique virtuelle. L'exemple suivant
    est pour la carte graphiqe vmware de qemu, qui utilise <xref
    linkend="xorg-vmmouse-driver"/> et qui initialise la taille maximale à
    1600x900. En tant qu'utilisateur <systemitem class="username">root</systemitem>,
    tapez:</para>
<screen role="root"><userinput>cat &gt; /usr/share/X11/xorg.conf.d/20-vmware.conf &lt;&lt; "EOF"
<literal>Section "Monitor"
    Identifier  "Monitor0"
    # cvt 1600 900
    # 1600x900 59.95 Hz (CVT 1.44M9) hsync: 55.99 kHz; pclk: 118.25 MHz
    Modeline    "1600x900"  118.25  1600 1696 1856 2112  900 903 908 934 -hsync +vsync
         Option      "PreferredMode" "1600x900"
         HorizSync   1-200
         VertRefresh 1-200
EndSection
Section "Device"
  Identifier    "VMware SVGA II Adapter"
  Option        "Monitor" "default"
  Driver        "vmware"
EndSection
Section "Screen"
  Identifier    "Default Screen"
  Device        "VMware SVGA II Adapter"
  Monitor       "Monitor0"
  SubSection    "Display"
    Depth       24
    Modes       "1600x900" "1440x900" "1366x768" "1280x720" "800x480"
  EndSubSection
EndSection</literal>
EOF</userinput></screen>
    <para>Les nouvelles tailles seront disponibles à coté des tailles natives. Vous devrez redémarrer X afin d'avoir les nouvelles tailles disponibles.
    </para>
    <para>
    qemu fournit un serveur DHCP pour les machines virtuelles et en fonction de votre système client,
    initialise le réseau au travers de l'hôte.</para>
    <para>un problème avec la solution réseau précédente est qu'elle ne fournit pas la possibilité de se connecter
    sur le réseau local. Pour faire cela, il y a quelques étapes supplémentaire qui doivent être faites,
    tout en tant qu'utilisateur <systemitem
    class="username">root</systemitem>&nbsp;:</para>
    <itemizedlist spacing="compact">
      <listitem>
        <para>Initialiser le mode pont avec <xref linkend="bridgeutils"/>.</para>
      </listitem>
      <listitem>
        <para>Autoriser le système hôte à transférer les paquets IP.</para>
<screen role="root">
<userinput>sysctl -w net.ipv4.ip_forward=1</userinput>
</screen>
        <para>Pour rendre cela permanent, ajoutez la commande dans le fichier
        <filename>/etc/sysctl.conf</filename>&nbsp;:</para>
<screen role="root">
<userinput>cat &gt;&gt; /etc/sysctl.conf &lt;&lt; EOF
net.ipv4.ip_forward=1
EOF</userinput>
</screen>
      </listitem>
      <listitem>
        <para>Permettre les connections réseaux quand l'exécution en tant que membre du groupe kvm:</para>
<screen role="root">
<userinput>chgrp kvm  /usr/libexec/qemu-bridge-helper &amp;&amp;
chmod 4750 /usr/libexec/qemu-bridge-helper</userinput>
</screen>
      </listitem>
      <listitem>
        <para>Initialisez un fichier de configuration requis:</para>
<screen role="root">
<userinput>echo 'allow br0' &gt; /etc/qemu/bridge.conf</userinput>
</screen>
      </listitem>
      <listitem>
        <para>Démarrer qemu avec les options "-net nic -net bridge".  </para>
      </listitem>
      <listitem>
        <para>Si une connexion, en ssh par exemple, depuis le réseau local vers la VM cliente est souhaitée,
        le client devra être configuré avec une adresse IP statique.</para>
      </listitem>
    </itemizedlist>
  </sect2>
  <sect2 role="content">
    <title>Contenu</title>
    <segmentedlist>
      <segtitle>Programmes installés</segtitle>
      <segtitle>Bibliothèque installée</segtitle>
      <segtitle>Répertoires installés</segtitle>
      <seglistitem>
        <seg>
          ivshmem-client,
          ivshmem-server,
          qemu (lien symbolique),
          qemu-ga,
          qemu-img,
          qemu-io,
          qemu-nbd,
          qemu-system-&lt;arch&gt;,
          virtfs-proxy-helper, et
          vscclient
        </seg>
        <seg>libcacard.so</seg>
        <seg>
          /etc/qemu, et
          /usr/share/doc/qemu-&qemu-version;
        </seg>
      </seglistitem>
    </segmentedlist>
    <variablelist>
      <bridgehead renderas="sect3">Description courte</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>
      <varlistentry id="qemu-ga">
        <term><command>qemu-ga</command></term>
        <listitem>
         <para>implémente le support pour les commandes QMP (Protocole de surveillance QEMU) et
          les événements qui terminent et débutent respectivement au sein de l'invité à l'aide
          d'un agent intégré dans le cadre de QEMU.</para>
         <indexterm zone="qemu qemu-ga">
            <primary sortas="b-qemu-ga">qemu-ga</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="qemu-img">
        <term><command>qemu-img</command></term>
        <listitem>
          <para>fournit les commandes pour gérer les images disques QEMU.</para>
           <indexterm zone="qemu qemu-img">
            <primary sortas="b-qemu-img">qemu-img</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="qemu-io">
        <term><command>qemu-io</command></term>
        <listitem>
           <para>est un programme de diagnostique et de manipulation pour les médias (virtuels) en mémoire.
          Il est encore à un stade de développement précoce.</para>
            <indexterm zone="qemu qemu-io">
            <primary sortas="b-qemu-io">qemu-io</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="qemu-nbd">
        <term><command>qemu-nbd</command></term>
        <listitem>
          <para>exporte les images disque Qemu  en utilisant le protocole disque QEMU "Network Block
          Device" (NBD).</para>
          <indexterm zone="qemu qemu-nbd">
            <primary sortas="b-qemu-nbd">qemu-nbd</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="qemu-system">
        <term><command>qemu-system-x86_64</command></term>
        <listitem>
          <para>est l'émulateur QEMU de sytème PC.</para>
          <indexterm zone="qemu qemu-system">
            <primary sortas="b-qemu-system">qemu-system-x86_64</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="virtfs-proxy-helper">
        <term><command>virtfs-proxy-helper</command></term>
        <listitem>
          <para>crée une paire de socket ou un socket nommé. Les communications de QEMU et proxy helper
           utilise ce socket. le pilote QEMU proxy fs envoit les requêtes du système de fichier à proxy helper
           et reçois les réponses de lui.</para>
          <indexterm zone="qemu virtfs-proxy-helper">
            <primary sortas="b-virtfs-proxy-helper">virtfs-proxy-helper</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="vscclient">
        <term><command>vscclient</command></term>
        <listitem>
          <para>implements a sockets interface to the virtual CCID reader
           on the guest.</para>
          <indexterm zone="qemu vscclient">
            <primary sortas="b-vscclient">vscclient</primary>
          </indexterm>
        </listitem>
      </varlistentry>
      <varlistentry id="libcacard">
        <term><filename class="libraryfile">libcacard.so</filename></term>
        <listitem>
          <para>est une bibliothèque d'émulation pour une Smart Card virtuelle.</para>
          <indexterm zone="qemu libcacard">
            <primary sortas="c-libcacard">libcacard.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>
</variablelist>
  </sect2>
</sect1>
