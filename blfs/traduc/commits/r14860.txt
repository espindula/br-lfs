Révision 14860

fichiers modifiés :
   general.ent
   xsoft/graphweb/seamonkey.xml
   xsoft/graphweb/firefox.xml
   introduction/welcome/changelog.xml

Log :
Fixes to seamonkey-2.30: number of threads, optimization and dependencies. Fixes to firefox-33.0.3: number of threads and optimization.

Le robot a traité 14 % du commit anglais
Index: introduction/welcome/changelog.xml
===================================================================
--- introduction/welcome/changelog.xml	(révision 14859)
+++ introduction/welcome/changelog.xml	(révision 14860)
@@ -45,6 +45,20 @@
 -->
 
     <listitem>
+      <para>November 9th, 2014</para>
+      <itemizedlist>
+        <listitem>
+          <para>[fernando] - Fixes to firefox-33.0.3: number of threads and
+          optimization.</para>
+        </listitem>
+        <listitem>
+          <para>[fernando] - Fixes to seamonkey-2.30: number of threads,
+          optimization and dependencies.</para>
+        </listitem>
+      </itemizedlist>
+    </listitem>
+    <listitem>
       <para>November 7th, 2014</para>
       <itemizedlist>
         <listitem>

Index: xsoft/graphweb/firefox.xml
===================================================================
--- xsoft/graphweb/firefox.xml	(révision 14859)
+++ xsoft/graphweb/firefox.xml	(révision 14860)
@@ -134,6 +134,7 @@
       <xref linkend="openjdk"/>,
       <xref linkend="pulseaudio"/>,
       <xref linkend="startup-notification"/>,
+      <xref linkend="valgrind"/>,
       <xref linkend="wget"/>,
       <xref linkend="wireless_tools"/>, and
       <ulink url="http://hunspell.sourceforge.net/">Hunspell</ulink>
@@ -159,12 +160,7 @@
     </para>
 
 <screen><userinput>cat &gt; mozconfig &lt;&lt; "EOF"
-<literal># If you have a multicore machine, firefox will now use all the cores by
-# default. Exceptionally, you can reduce the number of cores, e.g. to 1,
-# by uncommenting the next line and setting a valid number of CPU cores.
-#mk_add_options MOZ_MAKE_FLAGS="-j1"
-# If you have installed DBus-Glib comment out this line:
+<literal># If you have installed DBus-Glib comment out this line:
 ac_add_options --disable-dbus
 
 # If you have installed dbus-glib, and you have installed (or will install)
@@ -233,6 +229,17 @@
 EOF</userinput></screen>
 
     <para>
+      There is a problem in i686 systems, when build with
+      <application>gcc</application> ranging from 4.8 to 4.9.1, and using the
+      switch <quote>--enable-optimize</quote>. You have two alternatives, best
+      one being the upgrade of <application>gcc</application> to version 4.9.2,
+      because that switch implies better perfomance and smaller binaries.
+      However, if you do not wish to upgrade gcc, disable the switch with:
+    </para>
+<screen><userinput>test $(uname -m) = "i686" &amp;&amp; sed -i 's/enable-optimize/disable-optimize/' mozconfig || true</userinput></screen>
+    <para>
       Compile <application>Firefox</application> by issuing the following
       commands:
     </para>
@@ -240,12 +247,23 @@
     <note><para>
       If you are compiling <application>Firefox</application> in chroot, make
       sure you have <envar>$SHELL</envar> environment variable set or prepend
-<envar>SHELL=/bin/sh</envar> to the first make command below.
+      <envar>SHELL=/bin/sh</envar>.
     </para></note>
-<!--<screen><userinput>test $(uname -m) = "i686" &amp;&amp; sed -i 's/enable-optimize/disable-optimize/' mozconfig || true &amp;&amp;-->
-<screen><userinput>make -f client.mk</userinput></screen>
 
+<screen><userinput>MOZ_MAKE_FLAGS='<replaceable>&lt;number&gt;</replaceable>' \
+make -f client.mk</userinput></screen>
     <para>
+      where <replaceable>&lt;number&gt;</replaceable> is a integer between 1
+      and the number of threads of your processor. The variable
+      <envar>MOZ_MAKE_FLAGS</envar> governs the number of parallel processes
+      used by <command>make</command>. If it is not defined, the compilation
+      will use all threads of a multithread machine. If this is what you want,
+      just delete the line with <envar>MOZ_MAKE_FLAGS</envar> in the command
+      above.
+    </para>
+    <para>
       This package does not come with a test suite.
     </para>
 
@@ -253,22 +271,28 @@
       Now, as the <systemitem class="username">root</systemitem> user:
     </para>
 
-<screen role="root"><userinput>make -f client.mk install INSTALL_SDK= &amp;&amp;
+<screen role="root"><userinput>MOZ_MAKE_FLAGS='<replaceable>&lt;number&gt;</replaceable>' \
+make -f client.mk install INSTALL_SDK= &amp;&amp;
 
 mkdir -pv /usr/lib/mozilla/plugins &amp;&amp;
 ln -sfv ../../mozilla/plugins /usr/lib/firefox-&firefox-version;/browser</userinput></screen>
 
+    <para>
+      Here, the same comments about <envar>MOZ_MAKE_FLAGS</envar>, after the
+      compile command above, apply.
+    </para>
   </sect2>
 
   <sect2 role="commands">
     <title>Command Explanations</title>
     <para>
       <command>test $(uname -m) = "i686" &amp;&amp; sed ...</command>:
-On this version of firefox, an old bug has reappeared in 32-bit builds.
-With optimization, the install fails with a Python error.  This
+      On this version of seamonkey, an old bug has reappeared in 32-bit builds.
+      With optimization, the install fails<!-- with a Python error-->.  This
       command will fix i686 builds and preserve the optimization on x86_64.
    </para>
 

Index: xsoft/graphweb/seamonkey.xml
===================================================================
--- xsoft/graphweb/seamonkey.xml	(révision 14859)
+++ xsoft/graphweb/seamonkey.xml	(révision 14860)
@@ -94,16 +94,42 @@
 
     <bridgehead renderas="sect4">Recommended</bridgehead>
     <para role="recommended">
-<xref linkend="yasm"/> or <xref linkend="libvpx"/>
-(to allow <application>SeaMonkey</application> to play webm videos).
+      <xref linkend="icu"/>,
+      <xref linkend="libevent"/>,
+      <xref linkend="libvpx"/>,
+      <xref linkend="nspr"/>,
+      <xref linkend="nss"/>,
+      <xref linkend="sqlite"/> and
+      <xref linkend="yasm"/>
     </para>
 
+    <note>
+      <para>
+        If you don't install recommended dependencies, then internal copies of
+        those packages will be used. They might be tested to work, but they can
+        be out of date or contain security holes.
+      </para>
+    </note>
+    <note>
+      <para>
+        You must have installed <application>Openssl</application> before
+        <application>Python 2</application> or the build system will quickly
+        fail with output including "ImportError: cannot import name
+        HTTPSHandler". If you are in any doubt about this (e.g. upgrading from
+        an older version of Seamonkey), check if
+        <filename>/usr/lib/python2.7/lib-dynload/_ssl.so</filename> exists.  If
+        it does not, reinstall <xref linkend="python2"/> (after installing
+        <xref linkend="openssl"/>.  The latest version of any
+        <emphasis>currently maintained</emphasis> version of Openssl should be
+        satisfactory if already installed. 
+      </para>
+    </note>
     <bridgehead renderas="sect4">Optional</bridgehead>
     <para role="optional">
+      <xref linkend="curl"/>,
       <xref linkend="dbus-glib"/>,
-<xref linkend="startup-notification"/>,
-<xref linkend="sqlite"/>,
-<xref linkend="libevent"/>,
       <xref linkend="doxygen"/>,
       <xref linkend="gst-plugins-base"/> (with
       <xref linkend="gst-plugins-good"/> and
@@ -112,19 +138,19 @@
       <xref linkend="gst10-plugins-good"/> and
       <xref linkend="gst10-libav"/> at runtime),
       <xref linkend="libnotify"/>,
-<xref linkend="nspr"/>,
-<xref linkend="nss"/>,
       <xref linkend="openjdk"/>,
       <xref linkend="pulseaudio"/>,
-<xref linkend="wireless_tools"/>,
-<xref linkend="valgrind"/> (only for testing the jemalloc code),
-<xref linkend="wget"/>, and
+      <xref linkend="startup-notification"/>,
+      <xref linkend="valgrind"/>,
+      <xref linkend="wget"/>,
+      <xref linkend="wireless_tools"/>, and
       <ulink url="http://hunspell.sourceforge.net/">Hunspell</ulink>
     </para>
 
@@ -149,25 +175,22 @@
     </para>
 
 <screen><?dbfo keep-together="auto"?><userinput>cat &gt; mozconfig &lt;&lt; "EOF"
-<literal># If you have a multicore machine you can speed up the build by running
-# several jobs at once, but if you have a single core, delete this line:
-mk_add_options MOZ_MAKE_FLAGS="-j$(getconf _NPROCESSORS_ONLN)"
+<literal># If you have a multicore machine, all cores will be used by default.
+# Exceptionally, you can reduce the number used of cores, e.g. to 1, by
+# uncommenting the next line and setting a valid number of CPU cores.
+#mk_add_options MOZ_MAKE_FLAGS="-j1"
 
-# If you have installed Yasm delete this option:
-ac_add_options --disable-webm
-# If you have installed DBus-Glib delete this option:
+# If you have installed DBus-Glib comment out this line:
 ac_add_options --disable-dbus
 
-# If you have installed wireless-tools delete this option:
+# If you have installed dbus-glib, and you have installed (or will install)
+# wireless-tools, and you wish to use geolocation web services, comment out
+# this line
 ac_add_options --disable-necko-wifi
 
-# If you have installed libnotify delete this option:
+# If you have installed libnotify comment out this line:
 ac_add_options --disable-libnotify
 
-# Comment out following option if you have PulseAudio installed
-ac_add_options --disable-pulseaudio
 # GStreamer is necessary for H.264 video playback in HTML5 Video Player;
 # to be enabled, also remember to set "media.gstreamer.enabled" to "true"
 # in about:config. If you do *not* have GStreamer 0.x.y, uncomment this line:
@@ -175,36 +198,74 @@
 # or uncomment this line, if you have GStreamer 1.x.y
 #ac_add_options --enable-gstreamer=1.0
 
-# Uncomment these if you have installed them:
-# ac_add_options --enable-startup-notification
-# ac_add_options --enable-system-hunspell
-# ac_add_options --enable-system-sqlite
-# ac_add_options --with-system-libevent
-# ac_add_options --with-system-libvpx
-# ac_add_options --with-system-nspr
-# ac_add_options --with-system-nss
+# Uncomment these lines if you have installed optional dependencies:
+#ac_add_options --enable-system-hunspell
+#ac_add_options --enable-startup-notification
 
-mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/moz-build-dir
+# Comment out following option if you have PulseAudio installed
+ac_add_options --disable-pulseaudio
+# If you have not installed Yasm then uncomment this line:
+#ac_add_options --disable-webm
+# Comment out following options if you have not installed
+# recommended dependencies:
+ac_add_options --enable-system-sqlite
+ac_add_options --with-system-libevent
+ac_add_options --with-system-libvpx
+ac_add_options --with-system-nspr
+ac_add_options --with-system-nss
+ac_add_options --with-system-icu
+# The BLFS editors recommend not changing anything below this line:
+ac_add_options --prefix=/usr
+ac_add_options --enable-application=suite
 ac_add_options --disable-crashreporter
-ac_add_options --disable-debug
-ac_add_options --disable-debug-symbols
-ac_add_options --disable-installer
-ac_add_options --disable-static
+ac_add_options --disable-updater
 ac_add_options --disable-tests
-ac_add_options --disable-updater
-ac_add_options --enable-application=suite
 ac_add_options --enable-optimize
-ac_add_options --enable-shared
+ac_add_options --enable-strip
+ac_add_options --enable-install-strip
+ac_add_options --enable-gio
+ac_add_options --enable-official-branding
+ac_add_options --enable-safe-browsing
+ac_add_options --enable-url-classifier
 ac_add_options --enable-system-cairo
 ac_add_options --enable-system-ffi
-ac_add_options --prefix=/usr
+ac_add_options --enable-system-pixman
 ac_add_options --with-pthreads
+ac_add_options --with-system-bz2
 ac_add_options --with-system-jpeg
 ac_add_options --with-system-png
-ac_add_options --with-system-zlib</literal>
+ac_add_options --with-system-zlib
+mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/moz-build-dir</literal>
 EOF</userinput></screen>
 
     <para>
+      There is a problem in i686 systems, when build with
+      <application>gcc</application> ranging from 4.8 to 4.9.1, and using the
+      switch <quote>--enable-optimize</quote>. You have two alternatives, best
+      one being the upgrade of <application>gcc</application> to version 4.9.2,
+      because that switch implies better perfomance and smaller binaries.
+      However, if you do not wish to upgrade gcc, disable the switch with:
+    </para>
+<screen><userinput>test $(uname -m) = "i686" &amp;&amp; sed -i 's/enable-optimize/disable-optimize/' mozconfig || true</userinput></screen>
+    <note><para>
+      If you are compiling <application>SeaMonkey</application> in chroot, make
+      sure you have <envar>$SHELL</envar> environment variable set or prepend
+      <envar>SHELL=/bin/sh</envar> to the first make command below.
+    </para></note>
+    <para>
       The moz-build-dir directory needs to exist and match the value used in
       mozconfig (above) for the object directory (MOZ_OBJDIR):
     </para>
@@ -223,8 +284,7 @@
 export C_INCLUDE_PATH=$XORG_PREFIX/include</userinput></screen>
     </note>
 
-<screen><userinput>test $(uname -m) = "i686" &amp;&amp; sed -i 's/enable-optimize/disable-optimize/' mozconfig || true &amp;&amp;
-make -f client.mk</userinput></screen>
+<screen><userinput>make -f client.mk</userinput></screen>
 
     <para>
       This package does not come with a test suite.
@@ -258,7 +318,7 @@
     <para>
       <command>test $(uname -m) = "i686" &amp;&amp; sed ...</command>:
       On this version of seamonkey, an old bug has reappeared in 32-bit builds.
-With optimization, the install fails with a Python error.  This
+      With optimization, the install fails<!-- with a Python error-->.  This
       command will fix i686 builds and preserve the optimization on x86_64.
     </para>
 

