Révision 15991

fichiers modifiés :
M       scripts/blfs-chapter04.php
M       scripts/blfs-chapter25.php
M       scripts/blfs-chapter26.php
M       scripts/blfs-chapter27.php
M       scripts/blfs-chapter29.php

Log :
Currency scripts through Chapter 29 (kde apps)

Le robot a traité 13 % du commit anglais
Index: scripts/blfs-chapter25.php
===================================================================
--- scripts/blfs-chapter25.php	(révision 15990)
+++ scripts/blfs-chapter25.php	(révision 15991)
@@ -1,142 +1,51 @@
 #! /usr/bin/php
 <?php
 
-$CHAPTER       = 25;
-$START_PACKAGE ='atk';
-$STOP_PACKAGE  ='webkitgtk1';
-$start         = false;
+include 'blfs-include.php';
 
-$freedesk = "http://xorg.freedesktop.org/releases/individual";
-$sf       = 'sourceforge.net';
+$CHAPTER       = '25';
+$START_PACKAGE = 'atk';
+$STOP_PACKAGE  = 'webkitgtk-2.8';
 
-$book = array();
-$book_index = 0;
+$renames = array();
+$renames[ 'goffice'                        ] = 'goffice (gtk+2)';
+$renames[ 'gtk+'                           ] = 'gtk+2';
+$renames[ 'gtk+1'                          ] = 'gtk+3';
+$renames[ 'gtkmm'                          ] = 'gtkmm2';
+$renames[ 'gtkmm1'                         ] = 'gtkmm3';
+$renames[ 'qt-everywhere-opensource-src'   ] = 'qt4';
+$renames[ 'qt-everywhere-opensource-src1'  ] = 'qt5';
+$renames[ 'webkitgtk'                      ] = 'webkitgtk+-2.4';
+$renames[ 'webkitgtk1'                     ] = 'webkitgtk+-2.8';
 
-$vers = array();
+$ignores = array();
 
-date_default_timezone_set( "GMT" );
-$date = date( "Y-m-d (D) H:i:s" );
+//$current="libxklavier"; // For debugging
 
-// Special cases
-$exceptions = array();
 $regex = array();
-$regex[ 'agg'      ] = "/^.*agg-(\d[\d\.]+\d).tar.*$/";
 $regex[ 'freeglut' ] = "/^.*Download freeglut-(\d[\d\.]+\d).tar.*$/";
 
-//$current="goffice";
 $url_fix = array (
 
-array( 'pkg'     => 'agg',
-'match'   => '^.*$', 
-'replace' => "http://www.antigrain.com/download/index.html" ),
    array( 'pkg'     => 'clutter-gst',
           'match'   => '^.*$', 
-'replace' => "http://ftp.gnome.org/pub/gnome/sources/clutter-gst/2.0" ),
+          'replace' => "http://ftp.gnome.org/pub/gnome/sources/clutter-gst/3.0" ),
 
    array( 'pkg'     => 'freeglut',
           'match'   => '^.*$', 
-'replace' => "http://$sf/projects/freeglut/files" ),
+          'replace' => "http://sourceforge.net/projects/freeglut/files" ),
 
-array( 'pkg'     => 'hicolor-icon-theme',
-'match'   => '^.*$', 
-'replace' => "http://icon-theme.freedesktop.org/releases" ),
    array( 'pkg'     => 'imlib2',
           'match'   => '^.*$', 
-'replace' => "http://$sf/projects/enlightenment/files/imlib2-src" ),
+          'replace' => "http://sourceforge.net/projects/enlightenment/files/imlib2-src" ),
 );
-//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
-function find_max( $lines, $regex_match, $regex_replace )
-{
-global $book_index;
-$a = array();
-foreach ( $lines as $line )
-{
-// Ensure we skip verbosity of NcFTP
-if ( ! preg_match( $regex_match,   $line ) ) continue; 
-if (   preg_match( "/NcFTP/",      $line ) ) continue;
-if (   preg_match( "/Connecting/", $line ) ) continue;
-if (   preg_match( "/Current/",    $line ) ) continue;
 
-// Isolate the version and put in an array
-$slice = preg_replace( $regex_replace, "$1", $line );
-// Numbers and whitespace
-if ( "x$slice" == "x$line" && ! preg_match( "/^\d[\d\.P-]*$/", $slice ) ) continue; 
-// Skip minor versions in the 90s (most of the time)
-list( $major, $minor, $micro, $rest ) = explode( ".", $slice . ".0.0.0.0" );
-if ( $micro >= 90 ) continue;
-array_push( $a, $slice );     
-}
-// SORT_NATURAL requires php-5.4.0 or later
-rsort( $a, SORT_NATURAL );  // Max version is at the top
-return ( isset( $a[0] ) ) ? $a[0] : 0;
-}
-//----------------------------------------------------------
-function find_even_max( $lines, $regex_match, $regex_replace )
-{
-$a = array();
-foreach ( $lines as $line )
-{
-if ( ! preg_match( $regex_match, $line ) ) continue; 
-
-// Isolate the version and put in an array
-$slice = preg_replace( $regex_replace, "$1", $line );
-//echo "line=$line\n";
-if ( "x$slice" == "x$line" && ! preg_match( "/^[\d\.]+/", $slice ) ) continue; 
-//echo "A\n";
-// Skip odd numbered minor versions
-list( $major, $minor, $rest ) = explode( ".", $slice . ".0" );
-if ( $minor % 2 == 1  ) continue;
-//echo "B\n";
-if ( $minor     >= 90 ) continue;
-//echo "C\n";
-array_push( $a, $slice );     
-}
-// SORT_NATURAL requires php-5.4.0 or later
-rsort( $a, SORT_NATURAL );  // Max version is at the top
-return ( isset( $a[0] ) ) ? $a[0] : 0;
-}
-//===========================================
-function http_get_file( $url )
-{
-exec( "curl -L -s -m30 $url", $dir );
-$s   = implode( "\n", $dir );
-$dir = strip_tags( $s );
-return explode( "\n", $dir );
-}
-//=====================================================
-function max_parent( $dirpath, $prefix )
-{
-// First, remove a directory
-$dirpath  = rtrim  ( $dirpath, "/" );    // Trim any trailing slash
-$position = strrpos( $dirpath, "/" );
-$dirpath  = substr ( $dirpath, 0, $position );
-$lines = http_get_file( $dirpath );
-$regex_match   = "#${prefix}[\d\.]+/#";
-$regex_replace = "#^(${prefix}[\d\.]+)/.*$#";
-$max           = find_max( $lines, $regex_match, $regex_replace );
-return "$dirpath/$max"; 
-}
-/////////////////////////////////////////////////////////////////
 function get_packages( $package, $dirpath )
 {
-global $exceptions;
   global $regex;
   global $book_index;
   global $url_fix;
   global $current;
-global $freedesk;
 
   if ( isset( $current ) && $book_index != "$current" ) return 0;
 
@@ -174,7 +83,6 @@
          $book_index == "at-spi2-atk"  ||
          $book_index == "cogl"         ||
          $book_index == "clutter"      ||
-//$book_index == "clutter-gst"  ||
          $book_index == "clutter-gtk"  ||
          $book_index == "gdk-pixbuf"   ||
          $book_index == "gtk+1"        ||
@@ -189,11 +97,13 @@
       $dirpath  = rtrim  ( $dirpath, "/" );    // Trim any trailing slash
       $position = strrpos( $dirpath, "/" );
       $dirpath  = substr ( $dirpath, 0, $position );
-exec( "echo 'ls -1;bye' | ncftp $dirpath", $dirlines );
+      $dirlines = http_get_file( "$dirpath/" );
       if ( $book_index == "gdk-pixbuf" )
-$dir      = find_max( $dirlines, '/^[\d\.]+$/', '/^([\d\.]+)$/' );
+        $dir      = find_max( $dirlines, '/\d$/', '/^.* ([\d\.]+)$/' );
       else
-$dir      = find_even_max( $dirlines, '/^[\d\.]+$/', '/^([\d\.]+)$/' );
+        $dir      = find_even_max( $dirlines, '/\d$/', '/^.* ([\d\.]+)$/' );
       $dirpath .= "/$dir/";
     }
  
@@ -203,15 +113,14 @@
       $dirpath .= "/";
 
     if ( $book_index == "libnotify"     ||
-$book_index == "libxklavier"   ||
-$book_index == "pangox-compat"  )
+         $book_index == "libxklavier"   )
     {
       $dirpath  = rtrim  ( $dirpath, "/" );    // Trim any trailing slash
       $position = strrpos( $dirpath, "/" );
       $dirpath  = substr ( $dirpath, 0, $position );
-exec( "echo 'ls -1;bye' | ncftp $dirpath", $dirlines );
+      $dirlines = http_get_file( "$dirpath/" );
 
-$dir      = find_max( $dirlines, '/^[\d\.]+$/', '/^([\d\.]+)$/' );
+      $dir      = find_max( $dirlines, '/\d$/', '/^.* ([\d\.]+)$/' );
       $dirpath .= "/$dir/";
     }
 
@@ -226,7 +135,7 @@
     }
 
     // Get listing
-exec( "echo 'ls -1;bye' | ncftp $dirpath", $lines );
+    $lines = http_get_file( "$dirpath/" );
   }
   else // http
   {
@@ -253,7 +162,6 @@
       $dirpath  = rtrim  ( $dirpath, "/" );    // Trim any trailing slash
       $position = strrpos( $dirpath, "/" );
       $dirpath  = substr ( $dirpath, 0, $position ); // Up 1
-//echo "dirpath=$dirpath\n";
     }
 
     $lines = http_get_file( $dirpath );
@@ -261,7 +169,6 @@
     if ( ! is_array( $lines ) ) return $lines;
   } // End fetch
 
-//print_r($lines);
   if ( isset( $regex[ $package ] ) )
   {
      // Custom search for latest package name
@@ -314,14 +221,10 @@
   $max = find_max( $lines, "/$package/", "/^.*$package-([\d\.]*\d)\.tar.*$/" );
   return $max;
 }
-//********************************************************
-Function get_pattern( $line )
+function get_pattern( $line )
 {
-global $start;
    // Set up specific patter matches for extracting book versions
-$match = array();
    $match = array(
      array( 'pkg'   => 'at-spi', 
             'regex' => "/^.*at-spi2-.{3,4}-(\d[\d\.]+).*$/" ),
@@ -341,124 +244,6 @@
    return "/\D*(\d.*\d)\D*$/";
 }
 
-function get_current()
-{
-global $vers;
-global $book;
-global $freedesk;
-global $START_PACKAGE;
-global $STOP_PACKAGE;
-global $start;
-$wget_file = "/home/bdubbs/public_html/blfs-book-xsl/wget-list";
-$xorg_dir  = "/home/bdubbs/BLFS/x/installing";
-$contents = file_get_contents( $wget_file );
-$wget  = explode( "\n", $contents );
-foreach ( $wget as $line )
-{
-if ( $line == "" ) continue;
-$file = basename( $line );
-$url  = dirname ( $line );
-$file = preg_replace( "/\.tar\..z.*$/", "", $file ); // Remove .tar.?z*$
-$file = preg_replace( "/\.tar$/",       "", $file ); // Remove .tar$
-$file = preg_replace( "/\.gz$/",        "", $file ); // Remove .gz$
-$file = preg_replace( "/\.orig$/",      "", $file ); // Remove .orig$
-$file = preg_replace( "/\.src$/",       "", $file ); // Remove .src$
-$file = preg_replace( "/\.tgz$/",       "", $file ); // Remove .tgz$
-if ( preg_match( "/patch$/", $file         ) ) continue; // Skip patches
-$pattern = get_pattern( $line );
-
-$version = preg_replace( $pattern, "$1", $file );   // Isolate version
-$version = preg_replace( "/^-/", "", $version );    // Remove leading #-
-//if ( preg_match( "/^xf/", $file ))
-//   $basename = preg_replace( "/^(.+\-).*$/", "$1", $file );
-//else 
-$basename = strstr( $file, $version, true );
-
-$basename = rtrim( $basename, "-" );
-if ( $basename == $START_PACKAGE ) $start = true;
-if ( ! $start ) continue;
-$index = $basename;
-while ( isset( $book[ $index ] ) ) $index .= "1";
-
-$book[ $index ] = array( 'basename' => $basename,
-'url'      => $url, 
-'version'  => $version );
-if ( preg_match( "/$STOP_PACKAGE/", $line ) ) break;
-}
-}
-function html()
-{
-global $CHAPTER;
-global $book;
-global $date;
-global $vers;
-$leftnav = file_get_contents( 'leftnav.html' );
-$f = "<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Strict//EN'
-'http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd'>
-<html xmlns='http://www.w3.org/1999/xhtml' xml:lang='en' lang='en'>
-<head>
-<title>BLFS Chapter $CHAPTER Package Currency Check - $date</title>
-<link rel='stylesheet' href='currency.css' type='text/css' />
-</head>
-<body>
-$leftnav
-<h1>BLFS Chapter $CHAPTER Package Currency Check</h1>
-<h2>As of $date GMT</h2>
-<table>
-<tr><th>BLFS Package</th> <th>BLFS Version</th> <th>Latest</th> <th>Flag</th></tr>\n";
-// Get the latest version of each package
-foreach ( $vers as $pkg => $v )
-{
-$v    = $book[ $pkg ][ 'version' ];  // book version
-$cv   = $vers[ $pkg ];               // web version
-$flag = ( "x$cv" != "x$v" ) ? "*" : "";
-if ( $v == "" ) $vers[ $pkg ] = "";
-
-$name = $pkg;
-if ( $pkg == "goffice"                       ) $name = 'goffice (gtk+2)';
-if ( $pkg == "goffice1"                      ) $name = 'goffice (gtk+3)';
-if ( $pkg == "gtk+"                          ) $name = 'gtk+2';
-if ( $pkg == "gtk+1"                         ) $name = 'gtk+3';
-if ( $pkg == "gtkmm"                         ) $name = 'gtkmm2';
-if ( $pkg == "gtkmm1"                        ) $name = 'gtkmm3';
-if ( $pkg == "qt-everywhere-opensource-src"  ) $name = 'qt4';
-if ( $pkg == "qt-everywhere-opensource-src1" ) $name = 'qt5';
-if ( $pkg == "webkitgtk"                     ) $name = 'webkitgtk-2.4';
-if ( $pkg == "webkitgtk1"                    ) $name = 'webkitgtk-2.6';
-$classtype = isset( $book[ $pkg ][ 'indent' ] ) ? "indent" : "";
-$f .= "<tr><td class='$classtype'>$name</td>";
-$f .= "<td>$v</td>";
-$f .= "<td>${vers[ $pkg ]}</td>";
-$f .= "<td class='center'>$flag</td></tr>\n";
-}
-$f .= "</table>
-</body>
-</html>\n";
-file_put_contents( "/home/bdubbs/public_html/chapter$CHAPTER.html", $f );
-}
 get_current();  // Get what is in the book
 
 // Get latest version for each package 
@@ -466,24 +251,15 @@
 {
    $book_index = $pkg; 
 
-if ( $book_index == $START_PACKAGE ) $start = true;
-if ( ! $start ) continue;
-// Skip things we don't want
-//if ( preg_match( "/rpcnis-headers/", $pkg ) ) continue;
    $base = $data[ 'basename' ];
    $url  = $data[ 'url' ];
    $bver = $data[ 'version' ];
 
-echo "book index: $book_index  bver=$bver url=$url \n";
+   echo "book index: $book_index $bver $url\n";
 
    $v = get_packages( $book_index, $url );
 
    $vers[ $book_index ] = $v;
-// Stop at the end of the chapter 
-if ( $book_index == $STOP_PACKAGE ) break; 
 }
 
 html();  // Write html output

Index: scripts/blfs-chapter26.php
===================================================================
--- scripts/blfs-chapter26.php	(révision 15990)
+++ scripts/blfs-chapter26.php	(révision 15991)
@@ -1,25 +1,17 @@
 #! /usr/bin/php
 <?php
 
-$CHAPTER       = 26;
+include 'blfs-include.php';
+$CHAPTER       = '26';
 $START_PACKAGE ='fluxbox';
 $STOP_PACKAGE  ='sawfish';
-$start         = false;
 
-$freedesk = "http://xorg.freedesktop.org/releases/individual";
-$sf       = 'sourceforge.net';
+$renames = array();
+$renames[ 'sawfish_' ] = 'sawfish';
 
-$book = array();
-$book_index = 0;
+$ignores = array();
 
-$vers = array();
-date_default_timezone_set( "GMT" );
-$date = date( "Y-m-d (D) H:i:s" );
-// Special cases
-$exceptions = array();
 $regex = array();
 $regex[ 'fluxbox' ] = "/^.*current version of Fluxbox is (\d[\d\.]+\d).*$/";
 $regex[ 'icewm'   ] = "/^.*Download icewm-(\d[\d\.]+\d).*$/";
@@ -34,101 +26,19 @@
 
    array( 'pkg'     => 'icewm',
           'match'   => '^.*$', 
-'replace' => "http://$sf/projects/icewm/files" ),
+          'replace' => "http://sourceforge.net/projects/icewm/files" ),
 
    array( 'pkg'     => 'openbox',
           'match'   => '^.*$', 
           'replace' => "http://pkgs.fedoraproject.org/repo/pkgs/openbox" ),
 
 );
-//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
-function find_max( $lines, $regex_match, $regex_replace )
-{
-global $book_index;
-$a = array();
-foreach ( $lines as $line )
-{
-// Ensure we skip verbosity of NcFTP
-if ( ! preg_match( $regex_match,   $line ) ) continue; 
-if (   preg_match( "/NcFTP/",      $line ) ) continue;
-if (   preg_match( "/Connecting/", $line ) ) continue;
-if (   preg_match( "/Current/",    $line ) ) continue;
-// Isolate the version and put in an array
-$slice = preg_replace( $regex_replace, "$1", $line );
-// Numbers and whitespace
-if ( "x$slice" == "x$line" && ! preg_match( "/^\d[\d\.P-]*$/", $slice ) ) continue; 
-// Skip minor versions in the 90s (most of the time)
-list( $major, $minor, $micro, $rest ) = explode( ".", $slice . ".0.0.0.0" );
-if ( $micro >= 90 ) continue;
-array_push( $a, $slice );     
-}
-// SORT_NATURAL requires php-5.4.0 or later
-rsort( $a, SORT_NATURAL );  // Max version is at the top
-return ( isset( $a[0] ) ) ? $a[0] : 0;
-}
-//----------------------------------------------------------
-function find_even_max( $lines, $regex_match, $regex_replace )
-{
-$a = array();
-foreach ( $lines as $line )
-{
-if ( ! preg_match( $regex_match, $line ) ) continue; 
-
-// Isolate the version and put in an array
-$slice = preg_replace( $regex_replace, "$1", $line );
-if ( "x$slice" == "x$line" && ! preg_match( "/^[\d\.]+/", $slice ) ) continue; 
-
-// Skip odd numbered minor versions
-list( $major, $minor, $rest ) = explode( ".", $slice . ".0" );
-if ( $minor % 2 == 1  ) continue;
-if ( $minor     >= 90 ) continue;
-array_push( $a, $slice );     
-}
-// SORT_NATURAL requires php-5.4.0 or later
-rsort( $a, SORT_NATURAL );  // Max version is at the top
-return ( isset( $a[0] ) ) ? $a[0] : 0;
-}
-//===========================================
-function http_get_file( $url )
-{
-exec( "curl -L -s -m30 $url", $dir );
-$s   = implode( "\n", $dir );
-$dir = strip_tags( $s );
-return explode( "\n", $dir );
-}
-//=====================================================
-function max_parent( $dirpath, $prefix )
-{
-// First, remove a directory
-$dirpath  = rtrim  ( $dirpath, "/" );    // Trim any trailing slash
-$position = strrpos( $dirpath, "/" );
-$dirpath  = substr ( $dirpath, 0, $position );
-$lines = http_get_file( $dirpath );
-$regex_match   = "#${prefix}[\d\.]+/#";
-$regex_replace = "#^(${prefix}[\d\.]+)/.*$#";
-$max           = find_max( $lines, $regex_match, $regex_replace );
-return "$dirpath/$max"; 
-}
-/////////////////////////////////////////////////////////////////
 function get_packages( $package, $dirpath )
 {
-global $exceptions;
   global $regex;
   global $book_index;
   global $url_fix;
   global $current;
-global $freedesk;
 
   if ( isset( $current ) && $book_index != "$current" ) return 0;
 
@@ -183,17 +93,13 @@
      return 0;  // This is an error
   }
 
-//if ( $book_index == "sawfish" )
-//  return find_max( $lines, "/sawfish/", "/^.*sawfish_([\d\.]*\d)\.tar.*$/" );
   // Most packages are in the form $package-n.n.n
   // Occasionally there are dashes (e.g. 201-1)
-//print_r($lines);
-//$max = find_max( $lines, "/$package/", "/^.*${package}[_-]([\d\.]*\d)\.tar.*$/" );
   $max = find_max( $lines, "/$package/", "/^.*${package}-?([\d\.]*\d)\.tar.*$/" );
   return $max;
 }
-//********************************************************
 Function get_pattern( $line )
 {
    global $start;
@@ -217,149 +123,22 @@
    return "/\D*(\d.*\d)\D*$/";
 }
 
-function get_current()
-{
-global $vers;
-global $book;
-global $freedesk;
-global $START_PACKAGE;
-global $STOP_PACKAGE;
-global $start;
-$wget_file = "/home/bdubbs/public_html/blfs-book-xsl/wget-list";
-$xorg_dir  = "/home/bdubbs/BLFS/x/installing";
-$contents = file_get_contents( $wget_file );
-$wget  = explode( "\n", $contents );
-foreach ( $wget as $line )
-{
-if ( $line == "" ) continue;
-$file = basename( $line );
-$url  = dirname ( $line );
-$file = preg_replace( "/\.tar\..z.*$/", "", $file ); // Remove .tar.?z*$
-$file = preg_replace( "/\.tar$/",       "", $file ); // Remove .tar$
-$file = preg_replace( "/\.gz$/",        "", $file ); // Remove .gz$
-$file = preg_replace( "/\.orig$/",      "", $file ); // Remove .orig$
-$file = preg_replace( "/\.src$/",       "", $file ); // Remove .src$
-$file = preg_replace( "/\.tgz$/",       "", $file ); // Remove .tgz$
-if ( preg_match( "/patch$/", $file         ) ) continue; // Skip patches
-$pattern = get_pattern( $line );
-
-$version = preg_replace( $pattern, "$1", $file );   // Isolate version
-$version = preg_replace( "/^-/", "", $version );    // Remove leading #-
-//if ( preg_match( "/^xf/", $file ))
-//   $basename = preg_replace( "/^(.+\-).*$/", "$1", $file );
-//else 
-$basename = strstr( $file, $version, true );
-
-$basename = rtrim( $basename, "-" );
-if ( $basename == $START_PACKAGE ) $start = true;
-if ( ! $start ) continue;
-$index = $basename;
-while ( isset( $book[ $index ] ) ) $index .= "1";
-
-$book[ $index ] = array( 'basename' => $basename,
-'url'      => $url, 
-'version'  => $version );
-if ( preg_match( "/$STOP_PACKAGE/", $line ) ) break;
-}
-}
-function html()
-{
-global $CHAPTER;
-global $book;
-global $date;
-global $vers;
-$leftnav = file_get_contents( 'leftnav.html' );
-$f = "<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Strict//EN'
-'http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd'>
-<html xmlns='http://www.w3.org/1999/xhtml' xml:lang='en' lang='en'>
-<head>
-<title>BLFS Chapter $CHAPTER Package Currency Check - $date</title>
-<link rel='stylesheet' href='currency.css' type='text/css' />
-</head>
-<body>
-$leftnav
-<h1>BLFS Chapter $CHAPTER Package Currency Check</h1>
-<h2>As of $date GMT</h2>
-<table>
-<tr><th>BLFS Package</th> <th>BLFS Version</th> <th>Latest</th> <th>Flag</th></tr>\n";
-// Get the latest version of each package
-foreach ( $vers as $pkg => $v )
-{
-$v    = $book[ $pkg ][ 'version' ];  // book version
-$cv   = $vers[ $pkg ];               // web version
-$flag = ( "x$cv" != "x$v" ) ? "*" : "";
-if ( $v == "" ) $vers[ $pkg ] = "";
-
-$name = $pkg;
-if ( $pkg == "goffice"                      ) $name = 'goffice (gtk+2)';
-if ( $pkg == "goffice1"                     ) $name = 'goffice (gtk+3)';
-if ( $pkg == "gtk+"                         ) $name = 'gtk+2';
-if ( $pkg == "gtk+1"                        ) $name = 'gtk+3';
-if ( $pkg == "gtkmm"                        ) $name = 'gtkmm2';
-if ( $pkg == "gtkmm1"                       ) $name = 'gtkmm3';
-if ( $pkg == "webkitgtk"                    ) $name = 'webkitgtk+1';
-if ( $pkg == "webkitgtk1"                   ) $name = 'webkitgtk+2';
-if ( $pkg == "qt-everywhere-opensource-src" ) $name = 'qt';
-$classtype = isset( $book[ $pkg ][ 'indent' ] ) ? "indent" : "";
-$f .= "<tr><td class='$classtype'>$name</td>";
-$f .= "<td>$v</td>";
-$f .= "<td>${vers[ $pkg ]}</td>";
-$f .= "<td class='center'>$flag</td></tr>\n";
-}
-$f .= "</table>
-</body>
-</html>\n";
-file_put_contents( "/home/bdubbs/public_html/chapter$CHAPTER.html", $f );
-}
 get_current();  // Get what is in the book
 
 // Get latest version for each package 
@@     @@
 {
    $book_index = $pkg; 
 
-if ( $book_index == $START_PACKAGE ) $start = true;
-if ( ! $start ) continue;
-// Skip things we don't want
-//if ( preg_match( "/rpcnis-headers/", $pkg ) ) continue;
    $base = $data[ 'basename' ];
    $url  = $data[ 'url' ];
    $bver = $data[ 'version' ];
 
-echo "book index: $book_index  bver=$bver url=$url \n";
+   echo "book index: $book_index $bver $url \n";
 
    $v = get_packages( $book_index, $url );
 
    $vers[ $book_index ] = $v;
-// Stop at the end of the chapter 
-if ( $book_index == $STOP_PACKAGE ) break; 
 }
 
 html();  // Write html output

Index: scripts/blfs-chapter27.php
===================================================================
--- scripts/blfs-chapter27.php	(révision 15990)
+++ scripts/blfs-chapter27.php	(révision 15991)
@@ -1,108 +1,32 @@
 #! /usr/bin/php
 <?php
 
-$CHAPTER       = 27;
-$START_PACKAGE ='automoc4';
-$STOP_PACKAGE  ='kde-workspace';
-$start         = false;
+include 'blfs-include.php';
 
-$freedesk  = "http://xorg.freedesktop.org/releases/individual";
-$sf        = 'sourceforge.net';
-$kde_ver   = "";
-$kde_lines = "";
+$CHAPTER       = '27';
+$START_PACKAGE = 'automoc4';
+$STOP_PACKAGE  = 'kde-workspace';
 
-$book = array();
-$book_index = 0;
+$renames = array();
+$ignores = array();
 
-$vers = array();
+//$current="akonadi";
 
-date_default_timezone_set( "GMT" );
-$date = date( "Y-m-d (D) H:i:s" );
+$kde_ver   = "";
+$kde_lines = "";
 
-// Special cases
-$exceptions = array();
 $regex = array();
 //$regex[ 'agg'      ] = "/^.*agg-(\d[\d\.]+\d).tar.*$/";
-//$regex[ 'shared-desktop-ontologies' ] = 
-//   "/^.*Download shared-desktop-ontologies-(\d[\d\.]+\d).tar.*$/";
 
-//$current="akonadi";
 $url_fix = array (
    array( 'pkg'     => 'kde-workspace',
           'match'   => '^.*$', 
           'replace' => "http://http://download.kde.org/stable/4.14.2/src" ),
-// Sinece this is http, will strip off lat two
+          // Sinece this is http, will strip off last two
 );
-//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
-function find_max( $lines, $regex_match, $regex_replace )
-{
-global $book_index;
-$a = array();
-foreach ( $lines as $line )
-{
-// Ensure we skip verbosity of NcFTP
-if ( ! preg_match( $regex_match,   $line ) ) continue; 
-if (   preg_match( "/NcFTP/",      $line ) ) continue;
-if (   preg_match( "/Connecting/", $line ) ) continue;
-if (   preg_match( "/Current/",    $line ) ) continue;
 
-// Isolate the version and put in an array
-$slice = preg_replace( $regex_replace, "$1", $line );
-//echo "line=$line\n";
-//echo "regex=$regex_replace\n";
-//echo "slice=$slice\n";
-// Numbers and whitespace
-if ( "x$slice" == "x$line" && ! preg_match( "/^\d[\d\.P-]*$/", $slice ) ) continue; 
-// Skip minor versions in the 90s (most of the time)
-list( $major, $minor, $micro, $rest ) = explode( ".", $slice . ".0.0.0.0" );
-if ( $micro >= 80  &&  $book_index != "automoc4" ) continue;
-array_push( $a, $slice );     
-}
-// SORT_NATURAL requires php-5.4.0 or later
-rsort( $a, SORT_NATURAL );  // Max version is at the top
-return ( isset( $a[0] ) ) ? $a[0] : 0;
-}
-//----------------------------------------------------------
-function find_even_max( $lines, $regex_match, $regex_replace )
-{
-$a = array();
-foreach ( $lines as $line )
-{
-if ( ! preg_match( $regex_match, $line ) ) continue; 
-
-// Isolate the version and put in an array
-$slice = preg_replace( $regex_replace, "$1", $line );
-if ( "x$slice" == "x$line" && ! preg_match( "/^[\d\.]+/", $slice ) ) continue; 
-
-// Skip odd numbered minor versions
-list( $major, $minor, $rest ) = explode( ".", $slice . ".0" );
-if ( $minor % 2 == 1  ) continue;
-if ( $minor     >= 90 ) continue;
-array_push( $a, $slice );     
-}
-// SORT_NATURAL requires php-5.4.0 or later
-rsort( $a, SORT_NATURAL );  // Max version is at the top
-return ( isset( $a[0] ) ) ? $a[0] : 0;
-}
-//===========================================
-function http_get_file( $url )
-{
-exec( "curl -L -s -m30 $url", $dir );
-$s   = implode( "\n", $dir );
-$dir = strip_tags( $s );
-return explode( "\n", $dir );
-}
-/////////////////////////////////////////////////////////////////
 function get_packages( $package, $dirpath )
 {
-global $exceptions;
   global $regex;
   global $book_index;
   global $url_fix;
@@ -116,7 +40,7 @@
   if ( preg_match( "/ftp:..ftp.kde.org/", $dirpath ) )
     $dirpath = preg_replace( "/ftp:..ftp.kde.org.pub.kde/",  
                              "http://download.kde.org", $dirpath );
-//echo "dpath=$dirpath\n";
   // Fix up directory path
   foreach ( $url_fix as $u )
   {
@@ -167,8 +91,6 @@
 
     // Get listing
     $lines = http_get_file( "$dirpath/" );
-//print_r($lines);
-//exec( "echo 'ls -1;bye' | ncftp $dirpath", $lines );
   }
   else // http
   {
@@ -232,23 +154,6 @@
      //if ( ! is_array( $lines ) ) return $lines;
   } // End fetch
 
-/*  Not needed for kde
-if ( isset( $regex[ $package ] ) )
-{
-// Custom search for latest package name
-foreach ( $lines as $l )
-{
-if ( preg_match( '/^\h*$/', $l ) ) continue;
-$ver = preg_replace( $regex[ $package ], "$1", $l );
-if ( $ver == $l ) continue;
-return $ver;  // Return first match of regex
-}
-return 0;  // This is an error
-}
-*/
   // automoc4 and similar
   if ( $book_index == "automoc4" || 
        $book_index == "phonon"   ||
@@ -261,8 +166,8 @@
   $max = find_max( $lines, "/$package/", "/^.*$package-([\d\.]*\d)\.tar.*$/" );
   return $max;
 }
-//********************************************************
-Function get_pattern( $line )
+function get_pattern( $line )
 {
    global $start;
 
@@ -291,145 +196,22 @@
    return "/\D*(\d.*\d)\D*$/";
 }
 
-function get_current()
-{
-global $vers;
-global $book;
-global $freedesk;
-global $START_PACKAGE;
-global $STOP_PACKAGE;
-global $start;
-$wget_file = "/home/bdubbs/public_html/blfs-book-xsl/wget-list";
-$contents = file_get_contents( $wget_file );
-$wget  = explode( "\n", $contents );
-foreach ( $wget as $line )
-{
-if ( $line == "" ) continue;
-$file = basename( $line );
-$url  = dirname ( $line );
-$file = preg_replace( "/\.tar\..z.*$/", "", $file ); // Remove .tar.?z*$
-$file = preg_replace( "/\.tar$/",       "", $file ); // Remove .tar$
-$file = preg_replace( "/\.gz$/",        "", $file ); // Remove .gz$
-$file = preg_replace( "/\.orig$/",      "", $file ); // Remove .orig$
-$file = preg_replace( "/\.src$/",       "", $file ); // Remove .src$
-$file = preg_replace( "/\.tgz$/",       "", $file ); // Remove .tgz$
-if ( preg_match( "/patch$/", $file         ) ) continue; // Skip patches
-$pattern = get_pattern( $line );
-
-$version = preg_replace( $pattern, "$1", $file );   // Isolate version
-$version = preg_replace( "/^-/", "", $version );    // Remove leading #-
-$basename = strstr( $file, $version, true );
-
-$basename = rtrim( $basename, "-" );
-if ( $basename == $START_PACKAGE ) $start = true;
-if ( ! $start ) continue;
-$index = $basename;
-while ( isset( $book[ $index ] ) ) $index .= "1";
-
-$book[ $index ] = array( 'basename' => $basename,
-'url'      => $url, 
-'version'  => $version );
-if ( preg_match( "/$STOP_PACKAGE/", $line ) ) break;
-}
-}
-function html()
-{
-global $CHAPTER;
-global $book;
-global $date;
-global $vers;
-$leftnav = file_get_contents( 'leftnav.html' );
-$f = "<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Strict//EN'
-'http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd'>
-<html xmlns='http://www.w3.org/1999/xhtml' xml:lang='en' lang='en'>
-<head>
-<title>BLFS Chapter $CHAPTER-28 Package Currency Check - $date</title>
-<link rel='stylesheet' href='currency.css' type='text/css' />
-</head>
-<body>
-$leftnav
-<h1>BLFS Chapter $CHAPTER-28 Package Currency Check</h1>
-<h2>As of $date GMT</h2>
-<table>
-<tr><th>BLFS Package</th> <th>BLFS Version</th> <th>Latest</th> <th>Flag</th></tr>\n";
-// Get the latest version of each package
-foreach ( $vers as $pkg => $v )
-{
-$v    = $book[ $pkg ][ 'version' ];  // book version
-$cv   = $vers[ $pkg ];               // web version
-$flag = ( "x$cv" != "x$v" ) ? "*" : "";
-if ( $v == "" ) $vers[ $pkg ] = "";
-
-$name = $pkg;
-if ( $pkg == "goffice"                      ) $name = 'goffice (gtk+2)';
-if ( $pkg == "goffice1"                     ) $name = 'goffice (gtk+3)';
-if ( $pkg == "gtk+"                         ) $name = 'gtk+2';
-if ( $pkg == "gtk+1"                        ) $name = 'gtk+3';
-if ( $pkg == "gtkmm"                        ) $name = 'gtkmm2';
-if ( $pkg == "gtkmm1"                       ) $name = 'gtkmm3';
-if ( $pkg == "webkitgtk"                    ) $name = 'webkitgtk+1';
-if ( $pkg == "webkitgtk1"                   ) $name = 'webkitgtk+2';
-if ( $pkg == "qt-everywhere-opensource-src" ) $name = 'qt';
-$classtype = isset( $book[ $pkg ][ 'indent' ] ) ? "indent" : "";
-$f .= "<tr><td class='$classtype'>$name</td>";
-$f .= "<td>$v</td>";
-$f .= "<td>${vers[ $pkg ]}</td>";
-$f .= "<td class='center'>$flag</td></tr>\n";
-}
-$f .= "</table>
-</body>
-</html>\n";
-file_put_contents( "/home/bdubbs/public_html/chapter$CHAPTER.html", $f );
-}
 get_current();  // Get what is in the book
 
 // Get latest version for each package 
@@     @@
 {
    $book_index = $pkg; 
 
-if ( $book_index == $START_PACKAGE ) $start = true;
-if ( ! $start ) continue;
-// Skip things we don't want
-//if ( preg_match( "/rpcnis-headers/", $pkg ) ) continue;
    $base = $data[ 'basename' ];
    $url  = $data[ 'url' ];
    $bver = $data[ 'version' ];
 
-echo "book index: $book_index  bver=$bver url=$url \n";
+   echo "book index: $book_index $bver $url\n";
 
    $v = get_packages( $book_index, $url );
 
    $vers[ $book_index ] = $v;
-// Stop at the end of the chapter 
-if ( $book_index == $STOP_PACKAGE ) break; 
 }
 
 html();  // Write html output

Index: scripts/blfs-chapter29.php
===================================================================
--- scripts/blfs-chapter29.php	(révision 15990)
+++ scripts/blfs-chapter29.php	(révision 15991)
@@ -1,27 +1,18 @@
 #! /usr/bin/php
 <?php
 
-$CHAPTER       = 29;
+include 'blfs-include.php';
+$CHAPTER       = '29';
 $START_PACKAGE ='konsole';
 $STOP_PACKAGE  ='gwenview';
-$start         = false;
 
-$freedesk  = "http://xorg.freedesktop.org/releases/individual";
-$sf        = 'sourceforge.net';
+$renames = array();
+$ignores = array();
 $kde_ver   = "";
 $kde_lines = "";
 
-$book = array();
-$book_index = 0;
-$vers = array();
-date_default_timezone_set( "GMT" );
-$date = date( "Y-m-d (D) H:i:s" );
-// Special cases
-$exceptions = array();
 $regex = array();
 //$regex[ 'agg'      ] = "/^.*agg-(\d[\d\.]+\d).tar.*$/";
 
@@ -33,89 +24,9 @@
 //          'match'   => '^.*$', 
 //          'replace' => "http://$sf/projects/oscaf/files" ),
 );
-//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
-function find_max( $lines, $regex_match, $regex_replace )
-{
-global $book_index;
-$a = array();
-foreach ( $lines as $line )
-{
-// Ensure we skip verbosity of NcFTP
-if ( ! preg_match( $regex_match,   $line ) ) continue; 
-if (   preg_match( "/NcFTP/",      $line ) ) continue;
-if (   preg_match( "/Connecting/", $line ) ) continue;
-if (   preg_match( "/Current/",    $line ) ) continue;
 
-// Isolate the version and put in an array
-$slice = preg_replace( $regex_replace, "$1", $line );
-// Numbers and whitespace
-if ( "x$slice" == "x$line" && ! preg_match( "/^\d[\d\.P-]*$/", $slice ) ) continue; 
-// Skip minor versions in the 90s (most of the time)
-list( $major, $minor, $micro, $rest ) = explode( ".", $slice . ".0.0.0.0" );
-if ( $micro >= 80  &&  $book_index != "automoc4" ) continue;
-array_push( $a, $slice );     
-}
-// SORT_NATURAL requires php-5.4.0 or later
-rsort( $a, SORT_NATURAL );  // Max version is at the top
-return ( isset( $a[0] ) ) ? $a[0] : 0;
-}
-//----------------------------------------------------------
-function find_even_max( $lines, $regex_match, $regex_replace )
-{
-$a = array();
-foreach ( $lines as $line )
-{
-if ( ! preg_match( $regex_match, $line ) ) continue; 
-
-// Isolate the version and put in an array
-$slice = preg_replace( $regex_replace, "$1", $line );
-if ( "x$slice" == "x$line" && ! preg_match( "/^[\d\.]+/", $slice ) ) continue; 
-
-// Skip odd numbered minor versions
-list( $major, $minor, $rest ) = explode( ".", $slice . ".0" );
-if ( $minor % 2 == 1  ) continue;
-if ( $minor     >= 90 ) continue;
-array_push( $a, $slice );     
-}
-// SORT_NATURAL requires php-5.4.0 or later
-rsort( $a, SORT_NATURAL );  // Max version is at the top
-return ( isset( $a[0] ) ) ? $a[0] : 0;
-}
-//===========================================
-function http_get_file( $url )
-{
-exec( "curl -L -s -m30 $url", $dir );
-$s   = implode( "\n", $dir );
-$dir = strip_tags( $s );
-return explode( "\n", $dir );
-}
-//=====================================================
-function max_parent( $dirpath, $prefix )
-{
-// First, remove a directory
-$dirpath  = rtrim  ( $dirpath, "/" );    // Trim any trailing slash
-$position = strrpos( $dirpath, "/" );
-$dirpath  = substr ( $dirpath, 0, $position );
-$lines = http_get_file( $dirpath );
-$regex_match   = "#${prefix}[\d\.]+/#";
-$regex_replace = "#^(${prefix}[\d\.]+)/.*$#";
-$max           = find_max( $lines, $regex_match, $regex_replace );
-return "$dirpath/$max"; 
-}
-/////////////////////////////////////////////////////////////////
 function get_packages( $package, $dirpath )
 {
-global $exceptions;
   global $regex;
   global $book_index;
   global $url_fix;
@@ -152,18 +63,7 @@
   // Check for ftp
   if ( preg_match( "/^ftp/", $dirpath ) ) 
   { 
-/*  No ftp for kde apps
-if ( $book_index == "konsole" )
-{
-$dirpath  = rtrim  ( $dirpath, "/" );    // Trim any trailing slash
-$position = strrpos( $dirpath, "/" );
-$dirpath  = substr ( $dirpath, 0, $position ); // Up 1
-$position = strrpos( $dirpath, "/" );
-$dirpath  = substr ( $dirpath, 0, $position ); // Up 2
-}
-else
-return $kde_ver;
-*/
+    // No ftp for kde apps
     // Get listing
     $lines = http_get_file( "$dirpath/" );
   }
@@ -176,14 +76,6 @@
 
      if ( ! is_array($kde_lines) )
      {
-// All http for kde
-/*
-$dirpath   = rtrim  ( $dirpath, "/" );    // Trim any trailing slash
-$position  = strrpos( $dirpath, "/" );
-$dirpath   = substr ( $dirpath, 0, $position ); // Up 1
-$position  = strrpos( $dirpath, "/" );
-$dirpath   = substr ( $dirpath, 0, $position ); // Up 2
-*/
        $dirpath   = "http://download.kde.org/stable/applications/";
        $lines     = http_get_file( $dirpath );
        $kde_ver   = find_max( $lines, "/4\./", "/^.*;(1[\d\.]+\d)\/.*$/" );
@@ -194,35 +86,15 @@
      return find_max( $kde_lines, "/$package/", "/^.*$package-([\d\.]*\d)\.tar.*$/" );
   } // End fetch
 
-/*  Not applicble fo rkde apps
-if ( isset( $regex[ $package ] ) )
-{
-// Custom search for latest package name
-foreach ( $lines as $l )
-{
-if ( preg_match( '/^\h*$/', $l ) ) continue;
-$ver = preg_replace( $regex[ $package ], "$1", $l );
-if ( $ver == $l ) continue;
-return $ver;  // Return first match of regex
-}
-return 0;  // This is an error
-}
-*/
   // Most packages are in the form $package-n.n.n
   // Occasionally there are dashes (e.g. 201-1)
   $max = find_max( $lines, "/$package/", "/^.*$package-([\d\.]*\d)\.tar.*$/" );
   return $max;
 }
-//********************************************************
-Function get_pattern( $line )
+function get_pattern( $line )
 {
-global $start;
    // Set up specific patter matches for extracting book versions
-$match = array();
 
    $match = array(
      array( 'pkg'   => 'libkexiv', 
@@ -240,145 +112,22 @@
    return "/\D*(\d.*\d)\D*$/";
 }
 
-function get_current()
-{
-global $vers;
-global $book;
-global $freedesk;
-global $START_PACKAGE;
-global $STOP_PACKAGE;
-global $start;
-$wget_file = "/home/bdubbs/public_html/blfs-book-xsl/wget-list";
-$contents = file_get_contents( $wget_file );
-$wget  = explode( "\n", $contents );
-foreach ( $wget as $line )
-{
-if ( $line == "" ) continue;
-$file = basename( $line );
-$url  = dirname ( $line );
-$file = preg_replace( "/\.tar\..z.*$/", "", $file ); // Remove .tar.?z*$
-$file = preg_replace( "/\.tar$/",       "", $file ); // Remove .tar$
-$file = preg_replace( "/\.gz$/",        "", $file ); // Remove .gz$
-$file = preg_replace( "/\.orig$/",      "", $file ); // Remove .orig$
-$file = preg_replace( "/\.src$/",       "", $file ); // Remove .src$
-$file = preg_replace( "/\.tgz$/",       "", $file ); // Remove .tgz$
-if ( preg_match( "/patch$/", $file         ) ) continue; // Skip patches
-$pattern = get_pattern( $line );
-
-$version = preg_replace( $pattern, "$1", $file );   // Isolate version
-$version = preg_replace( "/^-/", "", $version );    // Remove leading #-
-$basename = strstr( $file, $version, true );
-
-$basename = rtrim( $basename, "-" );
-if ( $basename == $START_PACKAGE ) $start = true;
-if ( ! $start ) continue;
-$index = $basename;
-while ( isset( $book[ $index ] ) ) $index .= "1";
-
-$book[ $index ] = array( 'basename' => $basename,
-'url'      => $url, 
-'version'  => $version );
-if ( preg_match( "/$STOP_PACKAGE/", $line ) ) break;
-}
-}
-function html()
-{
-global $CHAPTER;
-global $book;
-global $date;
-global $vers;
-$leftnav = file_get_contents( 'leftnav.html' );
-$f = "<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Strict//EN'
-'http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd'>
-<html xmlns='http://www.w3.org/1999/xhtml' xml:lang='en' lang='en'>
-<head>
-<title>BLFS Chapter $CHAPTER Package Currency Check - $date</title>
-<link rel='stylesheet' href='currency.css' type='text/css' />
-</head>
-<body>
-$leftnav
-<h1>BLFS Chapter $CHAPTER Package Currency Check</h1>
-<h2>As of $date GMT</h2>
-<table>
-<tr><th>BLFS Package</th> <th>BLFS Version</th> <th>Latest</th> <th>Flag</th></tr>\n";
-// Get the latest version of each package
-foreach ( $vers as $pkg => $v )
-{
-$v    = $book[ $pkg ][ 'version' ];  // book version
-$cv   = $vers[ $pkg ];               // web version
-$flag = ( "x$cv" != "x$v" ) ? "*" : "";
-if ( $v == "" ) $vers[ $pkg ] = "";
-
-$name = $pkg;
-if ( $pkg == "goffice"                      ) $name = 'goffice (gtk+2)';
-if ( $pkg == "goffice1"                     ) $name = 'goffice (gtk+3)';
-if ( $pkg == "gtk+"                         ) $name = 'gtk+2';
-if ( $pkg == "gtk+1"                        ) $name = 'gtk+3';
-if ( $pkg == "gtkmm"                        ) $name = 'gtkmm2';
-if ( $pkg == "gtkmm1"                       ) $name = 'gtkmm3';
-if ( $pkg == "webkitgtk"                    ) $name = 'webkitgtk+1';
-if ( $pkg == "webkitgtk1"                   ) $name = 'webkitgtk+2';
-if ( $pkg == "qt-everywhere-opensource-src" ) $name = 'qt';
-$classtype = isset( $book[ $pkg ][ 'indent' ] ) ? "indent" : "";
-$f .= "<tr><td class='$classtype'>$name</td>";
-$f .= "<td>$v</td>";
-$f .= "<td>${vers[ $pkg ]}</td>";
-$f .= "<td class='center'>$flag</td></tr>\n";
-}
-$f .= "</table>
-</body>
-</html>\n";
-file_put_contents( "/home/bdubbs/public_html/chapter$CHAPTER.html", $f );
-}
 get_current();  // Get what is in the book
 
 // Get latest version for each package 
@@     @@
 {
    $book_index = $pkg; 
 
-if ( $book_index == $START_PACKAGE ) $start = true;
-if ( ! $start ) continue;
-// Skip things we don't want
-//if ( preg_match( "/rpcnis-headers/", $pkg ) ) continue;
    $base = $data[ 'basename' ];
    $url  = $data[ 'url' ];
    $bver = $data[ 'version' ];
 
-echo "book index: $book_index  bver=$bver url=$url \n";
+   echo "book index: $book_index $bver $url\n";
 
    $v = get_packages( $book_index, $url );
 
    $vers[ $book_index ] = $v;
-// Stop at the end of the chapter 
-if ( $book_index == $STOP_PACKAGE ) break; 
 }
 
 html();  // Write html output

