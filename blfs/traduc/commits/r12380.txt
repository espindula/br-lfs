Révision 12380

fichiers modifiés :
   introduction/welcome/changelog.xml
   general.ent
   x/lib/qt5.xml

Log :
Update Update to qt-5.2.0. Patch from Armin.

Le robot a traité 16 % du commit anglais
Index: introduction/welcome/changelog.xml
===================================================================
--- introduction/welcome/changelog.xml	(révision 12379)
+++ introduction/welcome/changelog.xml	(révision 12380)
@@ -47,6 +47,10 @@
       <para>December 12th, 2013</para>
       <itemizedlist>
         <listitem>
+          <para>[fernando] - Update to qt-5.2.0. Patch from Armin. Fix
+          <ulink url="&blfs-ticket-root;4447">#4447</ulink>.</para>
+        </listitem>
+        <listitem>
           <para>[igor] - Update to gdb-7.6.2. Fixes
           <ulink url="&blfs-ticket-root;4433">#4433</ulink>.</para>
         </listitem>

Index: x/lib/qt5.xml
===================================================================
--- x/lib/qt5.xml	(révision 12379)
+++ x/lib/qt5.xml	(révision 12380)
@@ -30,15 +30,16 @@
   </indexterm>
 
   <sect2 role="package">
-<title>Introduction to Qt</title>
+    <title>Introduction to Qt5</title>
 
     <para>
-<application>Qt</application> is a cross-platform application
+      <application>Qt5</application> is a cross-platform application
       framework that is widely used for developing application software
-with a graphical user interface (GUI) (in which cases Qt is classified
-as a widget toolkit), and also used for developing non-GUI programs such
-as command-line tools and consoles for servers. One of the major users
-of <application>Qt</application> is <application>KDE</application>.
+      with a graphical user interface (GUI) (in which cases
+      <application>Qt5</application> is classified as a widget toolkit), and
+      also used for developing non-GUI programs such as command-line tools
+      and consoles for servers. One of the major users of
+      <application>Qt5</application> is <application>KDE Frameworks 5</application>.
     </para>
 
     &lfs74_checked;
@@ -77,7 +78,7 @@
       </listitem>
     </itemizedlist>
 
-<bridgehead renderas="sect3">Qt Dependencies</bridgehead>
+    <bridgehead renderas="sect3">Qt5 Dependencies</bridgehead>
 
     <bridgehead renderas="sect4">Required</bridgehead>
     <para role="required">
@@ -113,69 +114,75 @@
       <ulink url="http://xkbcommon.org/">libxkbcommon</ulink>,
       <xref linkend="mariadb"/> or <xref linkend="mysql"/>,
       <xref linkend="postgresql"/>,
-<xref linkend="pulseaudio"/>, 
-<xref linkend="unixodbc"/>, and
-<xref linkend="qtchooser"/> (runtime, if also installing Qt4 and
-installing in /usr)
+      <xref linkend="pulseaudio"/>, and 
+      <xref linkend="unixodbc"/>
     </para>
 
+    <bridgehead renderas="sect4">Required (Runtime)</bridgehead>
+    <para role="required">
+      <xref linkend="qtchooser"/> (if installing both
+      <application>Qt4</application> and <application>Qt5</application>
+      and installing in <filename class="directory">/usr</filename>)
+    </para>
     <para condition="html" role="usernotes">User Notes:
       <ulink url="&blfs-wiki;/qt5"/>
     </para>
   </sect2>
 
   <sect2 role="installation">
-<title>Installation of Qt</title>
+    <title>Installation of Qt5</title>
 
     <para>
        There are several ways to install a complicated package such as
-<application>Qt</application>. The files are not completely position
+       <application>Qt5</application>. The files are not completely position
        independent. Installation procedures execute the program
        <command>pkg-config</command> to determine the location of package
        executables, libraries, headers, and other files. For
-<application>Qt</application>, <command>pkg-config</command> will look
-for the appropriate <filename>lib/pkgconfig/Qt*.pc</filename> files
+       <application>Qt5</application>, <command>pkg-config</command> will look
+       for the appropriate <filename>lib/pkgconfig/Qt5*.pc</filename> files
        which must be modified if relocating the package. These files are set up
        correctly by the build process.
     </para>
 
     <para>
        The default installation places the files in <filename
-class='directory'>/usr/local/qt/</filename>. Many commercial
+       class="directory">/usr/local/qt</filename>. Many
        distributions place the files in the system's <filename
-class='directory'>/usr</filename> hierarchy. The package can also be
-installed in an arbitrary directory.
+       class="directory">/usr</filename> hierarchy. The package can
+       also be installed in an arbitrary directory.
     </para>
 
     <para>
        The advantage of installing in <filename
-class='directory'>/usr</filename> is that no updates to the
+       class="directory">/usr</filename> is that no updates to the
        <filename>/etc/ld.so.conf</filename> or
        <filename>/etc/man_db.conf</filename> files are required. The package
        files are distributed within several subdirectories of the <filename
-class='directory'>/usr</filename> hierarchy.  This is the method that
-most commercial distributions use. 
+       class="directory">/usr</filename> hierarchy. This is the method that
+       most distributions use.
     </para>
 
     <para>
        The disadvantage of installing in <filename
-class='directory'>/usr</filename> is that the executable filenames 
+       class="directory">/usr</filename> is that the executable filenames 
        for  <application>Qt4</application> and <application>Qt5</application>
        conflict if both packages are installed in the 
-same directory.  The instructions below give a workaround for 
-this problem using the helper program <xref linkend='qtchooser'/>.
-This requires renaming the Qt executables with a version suffix.
+       same directory. The instructions below give a workaround for 
+       this problem using the helper programs from <xref linkend="qtchooser"/>.
+       <!-- renaming is not required because of this, only using a different
+       bindir is -->
     </para>
 
     <para>
-The advantage of installing <application>Qt4</application> in a custom
+       The advantage of installing <application>Qt5</application> in a custom
        directory such as <filename
-class='directory'>/opt/qt-&qt4-version;</filename> is that it keeps all
+       class="directory">/opt/qt-&qt5-version;</filename> is that it keeps all
        the package files consolidated in a dedicated directory hierarchy. By
        using this method, an update can be made without overwriting a previous
        installation and users can easily revert to a previous version by
-changing one symbolic link or merely changing the PATH variable.  It
-also allows a developer to maintain multiple versions of
+       changing one symbolic link or merely changing the <envar>PATH</envar>
+       variable.  It also allows a developer to maintain multiple versions of
        <application>Qt4</application> or <application>Qt5</application> 
        for testing.
     </para>
@@ -205,17 +212,17 @@
      </para>
    </note>
 
-<screen><userinput>sed -i "s:Context\* context}:&amp;\n%lex-param {YYLEX_PARAM}:" \
-qtwebkit/Source/ThirdParty/ANGLE/src/compiler/glslang.y &amp;&amp;
+<screen><userinput>sed -e "s:#if MNG:#if defined(MNG_VERSION_MAJOR)\n&amp;:" \
+    -e "s:#endif:&amp;\n#endif:" \
+    -i qtimageformats/config.tests/libmng/libmng.cpp
 
-sed -i -e "/#if/d" -e "/#error/d" -e "/#endif/d" \
-qtimageformats/config.tests/libmng/libmng.cpp &amp;&amp;
 ./configure -prefix         /usr               \
             -sysconfdir     /etc/xdg           \
             -bindir         /usr/lib/qt5/bin   \
@@ -269,13 +276,13 @@
     </para>
 
 <screen role="root"><userinput>sed -i -e "s:$PWD/qtbase:/usr/lib/qt5:g" \
-/usr/lib/qt5/mkspecs/modules/qt_lib_bootstrap.pri &amp;&amp;
+    /usr/lib/qt5/mkspecs/modules/qt_lib_bootstrap_private.pri &amp;&amp;
 find /usr/lib/lib{qgsttools_p,Qt5*}.prl -exec sed -i -e \
      '/^QMAKE_PRL_BUILD_DIR/d;s/\(QMAKE_PRL_LIBS =\).*/\1/' {} \;</userinput></screen>
 
     <para>
-If also installing Qt4 into /usr,
-Symlink the <application>Qt5</application> executables into
+      If you didn't modify the -bindir switch above, symlink the
+      <application>Qt5</application> executables into
       <filename class="directory">/usr/bin</filename> by running the
       following commands as the
       <systemitem class="username">root</systemitem> user:
@@ -289,20 +296,21 @@
   <bridgehead renderas="sect3">Method 2: Installing in /opt/qt-&qt5-version;</bridgehead>
 
     <para>
-This section provides an alternate way to install Qt4 by installing 
-almost all of the files in the <filename class="directory">/opt</filename>
-directory. This allows management of all Qt related files in one unit.
-For instance, a new version of Qt5 can be installed without over-writing 
-the existing installation and entire Qt5 instances can be easily removed.
-However, it has the disadvantage of needing some extra configuration.
+      This section provides an alternate way to install <application>Qt5</application>
+      by installing  almost all of the files in the <filename
+      class="directory">/opt</filename> directory. This allows management of all
+      <application>Qt5</application> related files in one unit. For instance, a new
+      version of <application>Qt5</application> can be installed without over-writing 
+      the existing installation and entire <application>Qt5</application> instances can
+      be easily removed. However, it has the disadvantage of needing some extra
+      configuration and you need to switch manually between <application>Qt4</application>
+      and <application>Qt5</application> executables when needed.
     </para>
 
-<screen><userinput>sed -i "s:Context\* context}:&amp;\n%lex-param {YYLEX_PARAM}:" \
-qtwebkit/Source/ThirdParty/ANGLE/src/compiler/glslang.y &amp;&amp;
+<screen><userinput>sed -e "s:#if MNG:#if defined(MNG_VERSION_MAJOR)\n&amp;:" \
+    -e "s:#endif:&amp;\n#endif:" \
+    -i qtimageformats/config.tests/libmng/libmng.cpp
 
-sed -i -e "/#if/d" -e "/#error/d" -e "/#endif/d" \
-qtimageformats/config.tests/libmng/libmng.cpp &amp;&amp;
 QT5DIR=/opt/qt-&qt5-version;
 
 ./configure -prefix     $QT5DIR  \
@@ -340,15 +348,17 @@
       <systemitem class="username">root</systemitem> user:
     </para>
 
-<screen role="root"><userinput>find $QT5DIR -name qt_lib_bootstrap.pri \
+<screen role="root"><userinput>find $QT5DIR -name qt_lib_bootstrap_private.pri \
    -exec sed -i -e "s:$PWD/qtbase:/$QT5DIR/lib/:g" {} \; &amp;&amp;
 
 find $QT5DIR -name \*.prl \
    -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;</userinput></screen>
 
+<!-- This is useful for packages looking explicitly for Qt apps with -qt5 suffix,
+     and is *required* for the desktop files below to work correctly. -->
     <para>
-Symlink the <application>Qt</application> executables into
+      Symlink the <application>Qt5</application> executables into
       <filename class="directory">/usr/bin</filename> by running the
       following commands as the
       <systemitem class="username">root</systemitem> user:
@@ -359,28 +369,15 @@
 for file in /opt/qt5/bin/*; do
   ln -sfv $file /usr/bin/$(basename $file)-qt5
 done</userinput></screen>
--->
-<para>
-At this point is is useful to add some configuration items as 
-the <systemitem class="username">root</systemitem> user:
-</para>
 
-<screen role="root"><userinput>echo /opt/qt5 &gt;&gt; /etc/ld.so.conf &amp;&amp;
-ldconfig                         &amp;&amp;
-cat &gt;&gt; /etc/profile.d/qt5.sh &lt;&lt; "EOF"
-pathappend /opt/qt5/lib/pkgconfig PKG_CONFIG_PATH
-EOF</userinput></screen>
   </sect2>
 
   <sect2 role="commands">
     <title>Command Explanations</title>
 
     <para>
-<command>sed -i "..." ...</command>: First command fixes
-building with <application>Bison</application> 3.0 and
-second command fixes detection of
+      <command>sed -e "..." -e "..." -i ...</command>: This
+      command fixes detection of
       <application>libmng</application> 2.0.
     </para>
 
@@ -422,13 +419,13 @@
       switches enable explicit linking of the
       <application>D-Bus</application> and
       <application>OpenSSL</application> libraries into
-<application>Qt</application> libraries instead of
+      <application>Qt5</application> libraries instead of
       <command>dlopen()</command>-ing them.
     </para>
 
     <para>
       <parameter>-opengl es2</parameter>: This switch enables OpenGL ES2
-support in <application>Qt</application>.
+      support in <application>Qt5</application>.
     </para>
 
     <para>
@@ -439,83 +436,17 @@
   </sect2>
 
   <sect2 role="configuration">
-<title>Configuring Qt</title>
+    <title>Configuring Qt5</title>
 
     <sect3 id="qt5-config">
       <title>Configuration Information</title>
 
       <para>
-If you installed <application>Qt</application> in /usr,
-create an environment variable needed by certain packages.
-As the <systemitem class="username">root</systemitem> user:
+        Create the menu entries for installed applications by running the
+        following commands <systemitem class="username">root</systemitem>
+        user:
       </para>
 
-<screen role="root"><userinput>cat &gt; /etc/profile.d/qt.sh &lt;&lt; EOF
-<literal># Begin /etc/profile.d/qt.sh
-QTDIR=/usr
-export QT5DIR
-# End /etc/profile.d/qt.sh</literal>
-EOF</userinput></screen>
-<para>
-If you installed <application>Qt5</application> in a location other
-than /usr, you need to update the following configuration files so
-that <application>Qt5</application> is correctly found by other packages
-and system processes.
-</para>
-<note><para>
-If you also installed Qt4 and need to use the Qt5 version of an
-executable such as qmake for building a program, make sure that 
-the Qt5 bin directory is listed prior to the Qt4 bin directory in
-the PATH variable.
-</para></note>
-<para>As the <systemitem class="username">root</systemitem> user, update
-the <filename>/etc/ld.so.conf</filename> file and the dynamic linker's
-run-time cache file:
-</para>
-<screen role="root"><userinput>cat &gt;&gt; /etc/ld.so.conf &lt;&lt; EOF
-<literal># Begin Qt addition
-/opt/qt5/lib
-# End Qt addition</literal>
-EOF
-ldconfig</userinput></screen>
-<indexterm zone="qt5 qt5-config">
-<primary sortas="e-etc-ld.so.conf">/etc/ld.so.conf</primary>
-</indexterm>
-<para>
-As the <systemitem class="username">root</systemitem> user, create
-the <filename>/etc/profile.d/qt.sh</filename> file:
-</para>
-<screen role="root"><userinput>cat &gt; /etc/profile.d/qt.sh &lt;&lt; EOF
-<literal># Begin /etc/profile.d/qt.sh
-QT5DIR=/opt/qt5
-pathappend /opt/qt5/bin           PATH
-pathappend /opt/qt5/lib/pkgconfig PKG_CONFIG_PATH
-export QT5DIR
-# End /etc/profile.d/qt.sh</literal>
-EOF</userinput></screen>
-<para>
-For all methods, create the menu entries for installed applications.
-As the <systemitem class="username">root</systemitem> user:
-</para>
 <screen role="root"><userinput>install -dm755 /usr/share/applications
 cat &gt; /usr/share/applications/assistant-qt5.desktop &lt;&lt; "EOF"
 <literal>[Desktop Entry]
@@ -566,6 +497,91 @@
 Categories=Qt;Development;Debugger;</literal>
 EOF</userinput></screen>
 
+<!-- No package uses this at the moment.
+      <para>
+        If you installed <application>Qt5</application> in
+        <filename class="directory">/usr</filename>, create an
+        environment variable needed by certain packages.
+        As the <systemitem class="username">root</systemitem> user:
+      </para>
+<screen role="root"><userinput>cat &gt; /etc/profile.d/qt5.sh &lt;&lt; EOF
+<literal># Begin /etc/profile.d/qt5.sh
+QTDIR=/usr
+export QT5DIR
+# End /etc/profile.d/qt5.sh</literal>
+EOF</userinput></screen>
+-->
+      <note>
+        <para>
+          If you have installed <application>Qt5</application> in
+          <filename class="directory">/usr</filename>, you can skip
+          rest of this section.
+        </para>
+      </note>
+      <para>
+        If you installed <application>Qt5</application> in a location other
+        than <filename class="directory">/usr</filename>, you need to update the
+        following configuration files so that <application>Qt5</application> is
+        correctly found by other packages and system processes.
+      </para>
+      <para>
+        As the <systemitem class="username">root</systemitem> user, update
+        the <filename>/etc/ld.so.conf</filename> file and the dynamic linker's
+        run-time cache file:
+      </para>
+<screen role="root"><userinput>cat &gt;&gt; /etc/ld.so.conf &lt;&lt; EOF
+<literal># Begin Qt addition
+/opt/qt5/lib
+# End Qt addition</literal>
+EOF
+ldconfig</userinput></screen>
+      <indexterm zone="qt5 qt5-config">
+        <primary sortas="e-etc-ld.so.conf">/etc/ld.so.conf</primary>
+      </indexterm>
+      <para>
+        As the <systemitem class="username">root</systemitem> user, create
+        the <filename>/etc/profile.d/qt5.sh</filename> file:
+      </para>
+<screen role="root"><userinput>cat &gt; /etc/profile.d/qt5.sh &lt;&lt; EOF
+<literal># Begin /etc/profile.d/qt5.sh
+QT5DIR=/opt/qt5
+pathappend /opt/qt5/bin           PATH
+pathappend /opt/qt5/lib/pkgconfig PKG_CONFIG_PATH
+export QT5DIR
+# End /etc/profile.d/qt5.sh</literal>
+EOF</userinput></screen>
+      <note>
+        <para>
+          If you also installed <application>Qt4</application> and need to use
+          the <application>Qt5</application> version of an executable such as
+          <command>qmake</command> for building a program, make sure that 
+          the <application>Qt5</application> bin directory is listed prior to
+          the <application>Qt5</application> bin directory in the
+          <envar>PATH</envar> variable.
+        </para>
+      </note>
     </sect3>
 
   </sect2>
@@ -581,24 +597,25 @@
       <seglistitem>
         <seg>
           assistant-qt5, designer-qt5, lconvert-qt5, linguist-qt5, lrelease-qt5,
-lupdate-qt5, moc-qt5, pixeltool-qt5, qcollectiongenerator-qt5,
-qdbuscpp2xml-qt5, qdbus-qt5, qdbusviewer-qt5, qdbusxml2cpp-qt5, qdoc-qt5,
-qhelpconverter-qt5, qhelpgenerator-qt5, qmake-qt5, qml1plugindump-qt5,
-qmlbundle-qt5, qmlmin-qt5, qmlplugindump-qt5, qmlprofiler-qt5, qmlscene-qt5,
-qmltestrunner-qt5, qmlviewer-qt5, rcc-qt5, syncqt.pl-qt5, uic-qt5,
-xmlpatterns-qt5, and xmlpatternsvalidator-qt5
+          lupdate-qt5, moc-qt5, pixeltool-qt5, qcollectiongenerator-qt5, qdbuscpp2xml-qt5,
+          qdbus-qt5, qdbusviewer-qt5, qdbusxml2cpp-qt5, qdoc-qt5, qhelpconverter-qt5,
+          qhelpgenerator-qt5, qmake-qt5, qml1plugindump-qt5, qmlbundle-qt5,
+          qmlimportscanner-qt5, qmlmin-qt5, qmlplugindump-qt5, qmlprofiler-qt5, qml-qt5,
+          qmlscene-qt5, qmltestrunner-qt5, qmlviewer-qt5, qtpaths-qt5, rcc-qt5,
+          syncqt.pl-qt5, uic-qt5, xmlpatterns-qt5, and xmlpatternsvalidator-qt5
         </seg>
         <seg>
-libqgsttools_p.so, libQt5Bootstrap.a, libQt5CLucene.so, libQt5Concurrent.so,
-libQt5Core.so, libQt5DBus.so, libQt5Declarative.so, libQt5DesignerComponents.so,
-libQt5Designer.so, libQt5Gui.so, libQt5Help.so, libQt5MultimediaQuick_p.so,
-libQt5Multimedia.so, libQt5MultimediaWidgets.so, libQt5Network.so,
-libQt5OpenGLExtensions.a, libQt5OpenGL.so, libQt5PlatformSupport.a,
-libQt5PrintSupport.so, libQt5QmlDevTools.a, libQt5Qml.so, libQt5QuickParticles.so,
-libQt5Quick.so, libQt5QuickTest.so, libQt5Script.so, libQt5ScriptTools.so,
-libQt5Sensors.so, libQt5SerialPort.so, libQt5Sql.so, libQt5Svg.so, libQt5Test.so,
-libQt5UiTools.a, libQt5V8.so, libQt5WebKit.so, libQt5WebKitWidgets.so,
-libQt5Widgets.so, libQt5X11Extras.so, libQt5XmlPatterns.so, and libQt5Xml.so
+          libqgsttools_p.so, libQt5Bluetooth.so, libQt5Bootstrap.a, libQt5CLucene.so,
+          libQt5Concurrent.so, libQt5Core.so, libQt5DBus.so, libQt5Declarative.so,
+          libQt5DesignerComponents.so, libQt5Designer.so, libQt5Gui.so, libQt5Help.so,
+          libQt5MultimediaQuick_p.so, libQt5Multimedia.so, libQt5MultimediaWidgets.so,
+          libQt5Network.so, libQt5Nfc.so, libQt5OpenGLExtensions.a, libQt5OpenGL.so,
+          libQt5PlatformSupport.a, libQt5Positioning.so, libQt5PrintSupport.so,
+          libQt5QmlDevTools.a, libQt5Qml.so, libQt5QuickParticles.so, libQt5Quick.so,
+          libQt5QuickTest.so, libQt5Script.so, libQt5ScriptTools.so, libQt5Sensors.so,
+          libQt5SerialPort.so, libQt5Sql.so, libQt5Svg.so, libQt5Test.so, libQt5UiTools.a,
+          libQt5WebKit.so, libQt5WebKitWidgets.so, libQt5Widgets.so, libQt5X11Extras.so,
+          libQt5XmlPatterns.so, and libQt5Xml.so
         </seg>
         <seg>
           /usr/include/qt5,

