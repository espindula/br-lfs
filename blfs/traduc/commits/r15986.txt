Révision 15986

fichiers modifiés :
M       scripts/blfs-include.php
M       scripts/blfs-chapter09.php
M       scripts/blfs-chapter10.php
M       scripts/blfs-chapter11.php
M       scripts/blfs-chapter12.php
M       scripts/blfs-chapter13.php

Log :
Currency scripts through Chapter 13

Le robot a traité 12 % du commit anglais
Index: scripts/blfs-chapter09.php
===================================================================
--- scripts/blfs-chapter09.php	(révision 15985)
+++ scripts/blfs-chapter09.php	(révision 15986)
@@ -272,6 +272,8 @@
     $xml_parser = xml_parser_create();
     xml_parse_into_struct( $xml_parser, $data[1], $values );
 
+    $lines = array();
     foreach ( $values as $v )
       if ( $v[ 'tag' ] == "KEY" ) array_push( $lines, $v[ 'value' ] );
     

Index: scripts/blfs-chapter10.php
===================================================================
--- scripts/blfs-chapter10.php	(révision 15985)
+++ scripts/blfs-chapter10.php	(révision 15986)
@@ -1,34 +1,27 @@
 #! /usr/bin/php
 <?php
 
-$CHAPTER=10;
-$START_PACKAGE='aalib';
-$STOP_PACKAGE='qpdf';
+include 'blfs-include.php';
 
-$book = array();
-$book_index = 0;
+$CHAPTER       = '10';
+$START_PACKAGE = 'aalib';
+$STOP_PACKAGE  = 'qpdf';
 
-$vers = array();
+$renames = array();
+$ignores = array();
 
-date_default_timezone_set( "GMT" );
-$date = date( "Y-m-d (D) H:i:s" );
+//$current="aalib";   // For debugging
 
-// Special cases
-$exceptions = array();
 $regex = array();
 $regex[ 'aalib'         ] = "/^.*Download aalib-([\d\.]+rc\d).tar.*$/";
-//$regex[ 'exiv2'         ] = "/^.*Exiv2 (\d[\d\.]*\d) released.*/";
 $regex[ 'freetype'      ] = "/^.*Download freetype-(\d[\d\.]*\d).tar.*/";
 $regex[ 'jasper'        ] = "/^.*JasPer version (\d[\d\.]+\d) source.*current.*$/";
 $regex[ 'lcms2'         ] = "/^.*Download lcms2-([\d\.]+\d).tar.*$/";
 $regex[ 'libexif'       ] = "/^.*Download libexif-(\d[\d\.]+\d).*$/";
-//$regex[ 'libjpeg-turbo' ] = "/^.*Download libjpeg-turbo-official-(\d[\d\.]+\d)-.*$/";
 $regex[ 'graphite2'     ] = "/^.*Download graphite2-(\d[\d\.]+\d).tgz.*$/";
 $regex[ 'libmng'        ] = "/^.*Download libmng-(\d[\d\.]+\d).tar.*$/";
 $regex[ 'libpng'        ] = "/^.*Download libpng-(\d[\d\.]+\d).tar.*$/";
 $regex[ 'LibRaw'        ] = "/^.*LibRaw-(\d[\d\.]+\d).tar.*$/";
-//$regex[ 'libwebp'       ] = "/^.*libwebp-(\d[\d\.]+\d).tar.*$/";
 $regex[ 'openjpeg1'     ] = "/^.*Download openjpeg-([\d\.]+\d).*$/";
 $regex[ 'poppler'       ] = "/^.*poppler-([\d\.]+\d).tar.*$/";
 $regex[ 'popplerdata'   ] = "/^.*poppler-data([\d\.]+\d).tar.*$/";
@@ -36,8 +29,6 @@
 
 $sf = 'sourceforge.net';
 
-//$current="openjpeg1";
 $url_fix = array (
 
  array( //'pkg'     => 'gnome',
@@ -126,96 +117,8 @@
 
 );
 
-function find_max( $lines, $regex_match, $regex_replace )
-{
-$a = array();
-foreach ( $lines as $line )
-{
-// Ensure we skip verbosity of NcFTP
-if ( ! preg_match( $regex_match,   $line ) ) continue; 
-if (   preg_match( "/NcFTP/",      $line ) ) continue;
-if (   preg_match( "/Connecting/", $line ) ) continue;
-if (   preg_match( "/Current/",    $line ) ) continue;
-
-// Isolate the version and put in an array
-$slice = preg_replace( $regex_replace, "$1", $line );
-// Numbers and whitespace
-if ( "x$slice" == "x$line" && ! preg_match( "/^\d[\d\.]*/", $slice ) ) continue; 
-// Skip minor versions in the 90s (most of the time)
-list( $major, $minor, $micro, $rest ) = explode( ".", $slice . ".0.0.0.0" );
-if ( $micro >= 80 ) continue;
-array_push( $a, $slice );     
-}
-// SORT_NATURAL requires php-5.4.0 or later
-rsort( $a, SORT_NATURAL );  // Max version is at the top
-return ( isset( $a[0] ) ) ? $a[0] : 0;
-}
-function find_even_max( $lines, $regex_match, $regex_replace )
-{
-$a = array();
-foreach ( $lines as $line )
-{
-if ( ! preg_match( $regex_match, $line ) ) continue; 
-// Isolate the version and put in an array
-$slice = preg_replace( $regex_replace, "$1", $line );
-if ( "x$slice" == "x$line" && ! preg_match( "/[\d\.]+/", $slice ) ) continue; 
-
-// Skip odd numbered minor versions
-list( $major, $minor, $rest ) = explode( ".", $slice . ".0" );
-if ( $minor % 2 == 1 ) continue;
-
-array_push( $a, $slice );     
-}
-// SORT_NATURAL requires php-5.4.0 or later
-rsort( $a, SORT_NATURAL );  // Max version is at the top
-return ( isset( $a[0] ) ) ? $a[0] : 0;
-}
-function http_get_file( $url )
-{
-//echo "start $url " . strftime("%c") . "\n";
-if (  ! preg_match( '/ijs/', $url ) )
-exec( "curl -L -s -tlsv1 -m30 -A Firefox $url", $dir );
-else
-exec( "wget -q --no-check-certificate -O - $url", $dir );
-//exec( "curl -L -s -m30 -1 $url", $dir );
-//echo "stop " . strftime("%c") . "\n";
-//print_r($dir);
-$s   = implode( "\n", $dir );
-$dir = strip_tags( $s );
-return explode( "\n", $dir );
-}
-function max_parent( $dirpath, $prefix )
-{
-// First, remove a directory
-$dirpath  = rtrim  ( $dirpath, "/" );    // Trim any trailing slash
-$position = strrpos( $dirpath, "/" );
-$dirpath  = substr ( $dirpath, 0, $position );
-$lines = http_get_file( $dirpath );
-$regex_match   = "#${prefix}[\d\.]+/#";
-$regex_replace = "#^(${prefix}[\d\.]+)/.*$#";
-$max           = find_max( $lines, $regex_match, $regex_replace );
-return "$dirpath/$max"; 
-}
 function get_packages( $package, $dirpath )
 {
-global $exceptions;
   global $regex;
   global $book_index;
   global $url_fix;
@@ -265,11 +168,8 @@
     }
 
     // Get listing
-//echo "dirpath=$dirpath\n";
-if ( $book_index == "tiff" ) { $dirpath .= "/"; }
-$lines = http_get_file( $dirpath );
-//exec( "echo 'ls -1;bye' | ncftp $dirpath", $lines );
-//print_r($lines);
+    //if ( $book_index == "tiff" ) { $dirpath .= "/"; }
+    $lines = http_get_file( "$dirpath/" );
   }
   else // http
   {
@@ -288,8 +188,6 @@
     // Customize http directories as needed
     $lines = http_get_file( $dirpath );
     if ( ! is_array( $lines ) ) return $lines;
-//echo "dirpath=$dirpath\n";
-//print_r($lines);
   } // End fetch
 
   if ( isset( $regex[ $package ] ) )
@@ -339,7 +237,7 @@
 
   // Most packages are in the form $package-n.n.n
   // Occasionally there are dashes (e.g. 201-1)
-$max = find_max( $lines, "/$package/", "/^.*$package-([\d\.]*\d).tar.*$/" );
+  $max = find_max( $lines, "/$package/", "/^.*$package-([\d\.]*\d).tar.*$/", TRUE );
   return $max;
 }
 
@@ -375,98 +273,6 @@
    return "/\D*(\d.*\d)\D*$/";
 }
 
-function get_current()
-{
-global $vers;
-global $book;
-$wget_file = "/home/bdubbs/public_html/blfs-book-xsl/wget-list";
-$contents = file_get_contents( $wget_file );
-$wget  = explode( "\n", $contents );
-foreach ( $wget as $line )
-{
-if ( $line == "" ) continue;
-$file = basename( $line );
-$url  = dirname ( $line );
-$file = preg_replace( "/\.tar\..z.*$/", "", $file ); // Remove .tar.?z*$
-$file = preg_replace( "/\.tar$/",       "", $file ); // Remove .tar$
-$file = preg_replace( "/\.gz$/",        "", $file ); // Remove .gz$
-$file = preg_replace( "/\.orig$/",      "", $file ); // Remove .orig$
-$file = preg_replace( "/\.src$/",       "", $file ); // Remove .src$
-$file = preg_replace( "/\.tgz$/",       "", $file ); // Remove .tgz$
-if ( preg_match( "/patch$/", $file ) ) continue;     // Skip patches
-$pattern = get_pattern( $line );
-
-$version = preg_replace( $pattern, "$1", $file );   // Isolate version
-$version = preg_replace( "/^-/", "", $version );    // Remove leading #-
-$basename = strstr( $file, $version, true );
-$basename = rtrim( $basename, "-" );
-$index = $basename;
-while ( isset( $book[ $index ] ) ) $index .= "1";
-
-$book[ $index ] = array( 'basename' => $basename,
-'url'      => $url, 
-'version'  => $version );
-if ( preg_match( "/^qpdf/", $line ) ) break;
-}
-}
-function html()
-{
-global $CHAPTER;
-global $book;
-global $date;
-global $vers;
-$leftnav = file_get_contents( 'leftnav.html' );
-$f = "<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Strict//EN'
-'http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd'>
-<html xmlns='http://www.w3.org/1999/xhtml' xml:lang='en' lang='en'>
-<head>
-<title>BLFS Chapter $CHAPTER Package Currency Check - $date</title>
-<link rel='stylesheet' href='currency.css' type='text/css' />
-</head>
-<body>
-$leftnav
-<h1>BLFS Chapter $CHAPTER Package Currency Check</h1>
-<h2>As of $date GMT</h2>
-<table>
-<tr><th>BLFS Package</th> <th>BLFS Version</th> <th>Latest</th> <th>Flag</th></tr>\n";
-// Get the latest version of each package
-foreach ( $vers as $pkg => $v )
-{
-$v    = $book[ $pkg ][ 'version' ];
-$flag = ( $vers[ $pkg ] != $v ) ? "*" : "";
-//$flag = ( $vers[ $pkg ] <  $v ) ? "D" : $flag;
-//if ( $vers[ $pkg ] == "0" ) $flag = "";
-
-$name = $pkg;
-if ( $pkg == "openjpeg1" ) $name = 'openjpeg2';
-$f .= "<tr><td>$name</td>";
-$f .= "<td>$v</td>";
-$f .= "<td>${vers[ $pkg ]}</td>";
-$f .= "<td class='center'>$flag</td></tr>\n";
-}
-$f .= "</table>
-</body>
-</html>\n";
-file_put_contents( "/home/bdubbs/public_html/chapter$CHAPTER.html", $f );
-}
 get_current();  // Get what is in the book
 
 $start = false;
@@ -476,22 +282,15 @@
 {
    $book_index = $pkg; 
 
-if ( $book_index == $START_PACKAGE ) $start = true;
-if ( ! $start ) continue;
    $base = $data[ 'basename' ];
    $url  = $data[ 'url' ];
    $bver = $data[ 'version' ];
 
-echo "book index: $book_index  bver=$bver url=$url \n";
+   echo "book index: $book_index $bver $url\n";
 
-//$v = get_packages( $base, $url );
    $v = get_packages( $book_index, $url );
 
    $vers[ $book_index ] = $v;
-// Stop at the end of the chapter 
-if ( $book_index == $STOP_PACKAGE ) break; 
 }
 
 html();  // Write html output

Index: scripts/blfs-chapter11.php
===================================================================
--- scripts/blfs-chapter11.php	(révision 15985)
+++ scripts/blfs-chapter11.php	(révision 15986)
@@ -1,29 +1,25 @@
 #! /usr/bin/php
 <?php
 
-$CHAPTER=11;
-$START_PACKAGE='compface';
-$STOP_PACKAGE='unixODBC';
+include 'blfs-include.php';
 
-$book = array();
-$book_index = 0;
+$CHAPTER       = '11';
+$START_PACKAGE = 'compface';
+$STOP_PACKAGE  = 'unixODBC';
 
-$vers = array();
+$renames = array();
+$renames[ 'lsof_'     ] = 'lsof';
+$renames[ 'rep-gtk_'  ] = 'rep-gtk';
+$renames[ 'tidy-cvs_' ] = 'tidy-cvs';
 
-date_default_timezone_set( "GMT" );
-$date = date( "Y-m-d (D) H:i:s" );
+$ignores = array();
 
-// Special cases
-$exceptions = array();
 $regex = array();
 $regex[ 'intltool'      ] = "/^.*Latest version is (\d[\d\.]+\d).*$/";
 $regex[ 'xscreensaver'  ] = "/^.*xscreensaver-(\d[\d\.]+\d).tar.*$/";
 
-$sf = 'sourceforge.net';
+//$current="ImageMagick";  // For debugging
 
-//$current="rep-gtk";
 $url_fix = array (
    array( //'pkg'     => 'gnome',
           'match'   => '^ftp:\/\/ftp.gnome',
@@ -42,82 +38,8 @@
           'replace' => "http://www.jwz.org/xscreensaver/download.html" ),
 );
 
-function find_max( $lines, $regex_match, $regex_replace )
-{
-$a = array();
-foreach ( $lines as $line )
-{
-// Ensure we skip verbosity of NcFTP
-if ( ! preg_match( $regex_match,   $line ) ) continue; 
-if (   preg_match( "/NcFTP/",      $line ) ) continue;
-if (   preg_match( "/Connecting/", $line ) ) continue;
-if (   preg_match( "/Current/",    $line ) ) continue;
-
-// Isolate the version and put in an array
-$slice = preg_replace( $regex_replace, "$1", $line );
-// Numbers and whitespace
-if ( "x$slice" == "x$line" && ! preg_match( "/^\d[\d\.]*/", $slice ) ) continue; 
-array_push( $a, $slice );     
-}
-// SORT_NATURAL requires php-5.4.0 or later
-rsort( $a, SORT_NATURAL );  // Max version is at the top
-return ( isset( $a[0] ) ) ? $a[0] : 0;
-}
-function find_even_max( $lines, $regex_match, $regex_replace )
-{
-$a = array();
-foreach ( $lines as $line )
-{
-if ( ! preg_match( $regex_match, $line ) ) continue; 
-
-// Isolate the version and put in an array
-$slice = preg_replace( $regex_replace, "$1", $line );
-if ( "x$slice" == "x$line" && ! preg_match( "/[\d\.]+/", $slice ) ) continue; 
-
-// Skip odd numbered minor versions
-list( $major, $minor, $rest ) = explode( ".", $slice . ".0" );
-if ( $minor % 2 == 1 ) continue;
-
-array_push( $a, $slice );     
-}
-// SORT_NATURAL requires php-5.4.0 or later
-rsort( $a, SORT_NATURAL );  // Max version is at the top
-return ( isset( $a[0] ) ) ? $a[0] : 0;
-}
-function http_get_file( $url )
-{
-exec( "curl -L -s -m30 -A Firefox/22.0 $url", $dir );
-$s   = implode( "\n", $dir );
-$dir = strip_tags( $s );
-return explode( "\n", $dir );
-}
-function max_parent( $dirpath, $prefix )
-{
-// First, remove a directory
-$dirpath  = rtrim  ( $dirpath, "/" );    // Trim any trailing slash
-$position = strrpos( $dirpath, "/" );
-$dirpath  = substr ( $dirpath, 0, $position );
-$lines = http_get_file( $dirpath );
-$regex_match   = "#${prefix}[\d\.]+/#";
-$regex_replace = "#^(${prefix}[\d\.]+)/.*$#";
-$max           = find_max( $lines, $regex_match, $regex_replace );
-return "$dirpath/$max"; 
-}
 function get_packages( $package, $dirpath )
 {
-global $exceptions;
   global $regex;
   global $book_index;
   global $url_fix;
@@ -177,8 +99,7 @@
     }
 
     // Get listing
-exec( "echo 'ls -1;bye' | ncftp $dirpath", $lines );
-//print_r($lines);
+    $lines = http_get_file( "$dirpath/" );
   }
   else // http
   {
@@ -254,123 +175,21 @@
    return "/\D*(\d.*\d)\D*$/";
 }
 
-function get_current()
-{
-global $vers;
-global $book;
-$wget_file = "/home/bdubbs/public_html/blfs-book-xsl/wget-list";
-$contents = file_get_contents( $wget_file );
-$wget  = explode( "\n", $contents );
-foreach ( $wget as $line )
-{
-if ( $line == "" ) continue;
-$file = basename( $line );
-$url  = dirname ( $line );
-$file = preg_replace( "/\.tar\..z.*$/", "", $file ); // Remove .tar.?z*$
-$file = preg_replace( "/\.tar$/",       "", $file ); // Remove .tar$
-$file = preg_replace( "/\.gz$/",        "", $file ); // Remove .gz$
-$file = preg_replace( "/\.orig$/",      "", $file ); // Remove .orig$
-$file = preg_replace( "/\.src$/",       "", $file ); // Remove .src$
-$file = preg_replace( "/\.tgz$/",       "", $file ); // Remove .tgz$
-if ( preg_match( "/patch$/", $file ) ) continue;     // Skip patches
-$pattern = get_pattern( $line );
-
-$version = preg_replace( $pattern, "$1", $file );   // Isolate version
-$version = preg_replace( "/^-/", "", $version );    // Remove leading #-
-$basename = strstr( $file, $version, true );
-$basename = rtrim( $basename, "-" );
-$basename = ( $basename == "hd" ) ? "hd2u" : $basename;
-$index = $basename;
-while ( isset( $book[ $index ] ) ) $index .= "1";
-
-$book[ $index ] = array( 'basename' => $basename,
-'url'      => $url, 
-'version'  => $version );
-//if ( preg_match( "/^xscreensaver/", $line ) ) break;
-}
-}
-function html()
-{
-global $CHAPTER;
-global $book;
-global $date;
-global $vers;
-$leftnav = file_get_contents( 'leftnav.html' );
-$f = "<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Strict//EN'
-'http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd'>
-<html xmlns='http://www.w3.org/1999/xhtml' xml:lang='en' lang='en'>
-<head>
-<title>BLFS Chapter $CHAPTER Package Currency Check - $date</title>
-<link rel='stylesheet' href='currency.css' type='text/css' />
-</head>
-<body>
-$leftnav
-<h1>BLFS Chapter $CHAPTER Package Currency Check</h1>
-<h2>As of $date GMT</h2>
-<table>
-<tr><th>BLFS Package</th> <th>BLFS Version</th> <th>Latest</th> <th>Flag</th></tr>\n";
-// Get the latest version of each package
-foreach ( $vers as $pkg => $v )
-{
-$v    = $book[ $pkg ][ 'version' ];
-$flag = ( $vers[ $pkg ] != $v ) ? "*" : "";
-
-$name = $pkg;
-if ( $pkg == "js"        ) $name = 'spidermonkey';
-if ( $pkg == "tidy-cvs_" ) $name = 'tidy';
-if ( $pkg == "lsof_"     ) $name = 'lsof';
-$f .= "<tr><td>$name</td>";
-$f .= "<td>$v</td>";
-$f .= "<td>${vers[ $pkg ]}</td>";
-$f .= "<td class='center'>$flag</td></tr>\n";
-}
-$f .= "</table>
-</body>
-</html>\n";
-file_put_contents( "/home/bdubbs/public_html/chapter$CHAPTER.html", $f );
-}
 get_current();  // Get what is in the book
 
-$start = false;
 // Get latest version for each package 
 foreach ( $book as $pkg => $data )
 {
    $book_index = $pkg; 
 
-if ( $book_index == $START_PACKAGE ) $start = true;
-if ( ! $start ) continue;
    $base = $data[ 'basename' ];
    $url  = $data[ 'url' ];
    $bver = $data[ 'version' ];
 
-echo "book index: $book_index  bver=$bver url=$url \n";
+   echo "book index: $book_index $bver $url\n";
 
    $v = get_packages( $book_index, $url );
    $vers[ $book_index ] = $v;
-// Stop at the end of the chapter 
-if ( $book_index == $STOP_PACKAGE ) break; 
 }
 
 html();  // Write html output

Index: scripts/blfs-chapter12.php
===================================================================
--- scripts/blfs-chapter12.php	(révision 15985)
+++ scripts/blfs-chapter12.php	(révision 15986)
@@ -1,20 +1,22 @@
 #! /usr/bin/php
 <?php
 
-$CHAPTER=12;
-$START_PACKAGE='acpid';
-$STOP_PACKAGE='zip';
+include 'blfs-include.php';
 
-$book = array();
-$book_index = 0;
+$CHAPTER       = '12';
+$START_PACKAGE = 'acpid';
+$STOP_PACKAGE  = 'zip';
 
-$vers = array();
+$renames = array();
+$renames[ 'at_'      ] = 'at';
+$renames[ 'udisks1'  ] = 'udisks2';
+$renames[ 'sg'       ] = 'sg3_utils';
+$renames[ 'unrarsrc' ] = 'unrar';
+$renames[ 'p7zip_'   ] = 'p7zip';
 
-date_default_timezone_set( "GMT" );
-$date = date( "Y-m-d (D) H:i:s" );
+$ignores = array();
 
-// Special cases
-$exceptions = array();
+//$current="obex-data-server";
 
 $regex = array();
 $regex[ 'acpid'   ] = "/^.*Download acpid-(\d[\d\.]+\d).tar.*$/";
@@ -25,21 +27,17 @@
 $regex[ 'sysstat' ] = "/^.*sysstat-(\d[\d\.]+\d).tar.*$/";
 $regex[ 'p7zip_'  ] = "/^.*Download p7zip_(\d[\d\.]+\d)_src.*$/";
 
-// p7zip_ is screwed up on SF.  wget fetch is different from lins or other browser
 $sf = 'sourceforge.net';
 
-#$$current="p7zip_";
 $url_fix = array (
 
    array( 'pkg'     => 'hdparm',
           'match'   => '^.*$', 
-'replace' => "http://$sf/projects/hdparm/files" ),
+          'replace' => "http://sourceforge.net/projects/hdparm/files" ),
    
    array( 'pkg'     => 'heirloom',
           'match'   => '^.*$', 
-'replace' => "http://$sf/projects/heirloom/files/heirloom" ),
+          'replace' => "http://sourceforge.net/projects/heirloom/files/heirloom" ),
    
    array( 'pkg'     => 'ibus',
           'match'   => '^.*$', 
@@ -63,102 +61,20 @@
    
    array( 'pkg'     => 'acpid',
           'match'   => '^.*$', 
-'replace' => "http://$sf/projects/acpid2/files" ),
+          'replace' => "http://sourceforge.net/projects/acpid2/files" ),
    
    array( 'pkg'     => 'p7zip_',
           'match'   => '^.*$', 
-'replace' => "http://$sf/projects/p7zip/files" ),
+          'replace' => "http://sourceforge.net/projects/p7zip/files" ),
 
    array( 'pkg'     => 'fcron',
           'match'   => '^.*$', 
           'replace' => "http://fcron.free.fr" ),
 
-array( 'pkg'     => 'gpm',
-'match'   => '^.*$', 
-'replace' => "http://www.ar.linux.it/pub/gpm" ),
 );
 
-function find_max( $lines, $regex_match, $regex_replace )
-{
-global $book_index;
-$a = array();
-foreach ( $lines as $line )
-{
-// Ensure we skip verbosity of NcFTP
-if ( ! preg_match( $regex_match,   $line ) ) continue; 
-// Isolate the version and put in an array
-$slice = preg_replace( $regex_replace, "$1", $line );
-// Numbers and whitespace
-if ( "x$slice" == "x$line" && 
-! preg_match( "/^\d[\d\.]*/", $slice ) ) continue; 
-// Skip minor versions in the 90s
-list( $major, $minor, $rest ) = explode( ".", $slice . ".0.0" );
-if ( $minor >= 90  &&  $book_index != "dbus-glib" ) continue;
-if ( $minor >= 90  &&  $book_index != "gpm" ) continue;
-array_push( $a, $slice );     
-}
-// SORT_NATURAL requires php-5.4.0 or later
-rsort( $a, SORT_NATURAL );  // Max version is at the top
-return ( isset( $a[0] ) ) ? $a[0] : 0;
-}
-function find_even_max( $lines, $regex_match, $regex_replace )
-{
-$a = array();
-foreach ( $lines as $line )
-{
-if ( ! preg_match( $regex_match, $line ) ) continue; 
-
-// Isolate the version and put in an array
-$slice = preg_replace( $regex_replace, "$1", $line );
-if ( "x$slice" == "x$line" && ! preg_match( "/^[\d\.]+/", $slice ) ) continue; 
-
-// Skip odd numbered minor versions
-list( $major, $minor, $rest ) = explode( ".", $slice . ".0" );
-if ( $minor % 2 == 1 ) continue;
-array_push( $a, $slice );     
-}
-// SORT_NATURAL requires php-5.4.0 or later
-rsort( $a, SORT_NATURAL );  // Max version is at the top
-return ( isset( $a[0] ) ) ? $a[0] : 0;
-}
-function http_get_file( $url )
-{
-exec( "curl -L -s -m30 $url", $dir );
-$s   = implode( "\n", $dir );
-$dir = strip_tags( $s );
-return explode( "\n", $dir );
-}
-function max_parent( $dirpath, $prefix )
-{
-// First, remove a directory
-$dirpath  = rtrim  ( $dirpath, "/" );    // Trim any trailing slash
-$position = strrpos( $dirpath, "/" );
-$dirpath  = substr ( $dirpath, 0, $position );
-$lines = http_get_file( $dirpath );
-$regex_match   = "#${prefix}[\d\.]+/#";
-$regex_replace = "#^(${prefix}[\d\.]+)/.*$#";
-$max           = find_max( $lines, $regex_match, $regex_replace );
-return "$dirpath/$max"; 
-}
 function get_packages( $package, $dirpath )
 {
-global $exceptions;
   global $regex;
   global $book_index;
   global $url_fix;
@@ -166,7 +82,7 @@
 
   if ( isset( $current ) && $book_index != "$current" ) return 0;
 
-// p7zip_ is screwed up on SF.  wget fetch is different from lins or other browser
+  // p7zip_ is screwed up on SF.  wget fetch is different from browser
   if ( $book_index == "p7zip_" ) return "check manually";
 
   // Fix up directory path
@@ -203,8 +119,7 @@
       $dirpath  = rtrim  ( $dirpath, "/" );    // Trim any trailing slash
       $position = strrpos( $dirpath, "/" );
       $dirpath  = substr ( $dirpath, 0, $position );
-//exec( "echo 'ls -1;bye' | ncftp $dirpath", $lines );
-$lines = http_get_file( "$dirpath/" );
+      $lines    = http_get_file( "$dirpath/" );
       $dir      = find_even_max( $lines, '/^[\d\.]+$/', '/^([\d\.]+)$/' );
       $dirpath .= "/$dir";
     }
@@ -216,14 +131,12 @@
       $dirpath  = rtrim  ( $dirpath, "/" );    // Trim any trailing slash
       $position = strrpos( $dirpath, "/" );
       $dirpath  = substr ( $dirpath, 0, $position );
-//exec( "echo 'ls -1;bye' | ncftp $dirpath", $lines );
-$lines = http_get_file( "$dirpath/" );
-$dir = find_max( $lines, "/\d[\d\.]+/", "/(\d[\d\.]+)/" );
+      $lines    = http_get_file( "$dirpath/" );
+      $dir      = find_max( $lines, "/\d[\d\.]+/", "/(\d[\d\.]+)/" );
       $dirpath .= "/$dir";
     }
 
     // Get listing
-//exec( "echo 'ls -1;bye' | ncftp $dirpath", $lines );
     $lines = http_get_file( "$dirpath/" );
   }
   else // http
@@ -279,7 +192,7 @@
 
   // Most packages are in the form $package-n.n.n
   // Occasionally there are dashes (e.g. 201-1)
-$max = find_max( $lines, "/$package/", "/^.*$package-([\d\.]*\d)\.tar.*$/" );
+  $max = find_max( $lines, "/$package/", "/^.*$package-([\d\.]*\d)\.tar.*$/", TRUE );
   return $max;
 }
 
@@ -309,125 +222,21 @@
    return "/\D*(\d.*\d)\D*$/";
 }
 
-function get_current()
-{
-global $vers;
-global $book;
-$wget_file = "/home/bdubbs/public_html/blfs-book-xsl/wget-list";
-$contents = file_get_contents( $wget_file );
-$wget  = explode( "\n", $contents );
-foreach ( $wget as $line )
-{
-if ( $line == "" ) continue;
-$file = basename( $line );
-$url  = dirname ( $line );
-$file = preg_replace( "/\.tar\..z.*$/", "", $file ); // Remove .tar.?z*$
-$file = preg_replace( "/\.tar$/",       "", $file ); // Remove .tar$
-$file = preg_replace( "/\.gz$/",        "", $file ); // Remove .gz$
-$file = preg_replace( "/\.orig$/",      "", $file ); // Remove .orig$
-$file = preg_replace( "/\.src$/",       "", $file ); // Remove .src$
-$file = preg_replace( "/\.tgz$/",       "", $file ); // Remove .tgz$
-if ( preg_match( "/patch$/", $file ) ) continue;     // Skip patches
-$pattern = get_pattern( $line );
-$version = preg_replace( $pattern, "$1", $file );   // Isolate version
-$version = preg_replace( "/^-/", "", $version );    // Remove leading #-
-$basename = strstr( $file, $version, true );
-$basename = rtrim( $basename, "-" );
-$basename = ( $basename == "hd" ) ? "hd2u" : $basename;
-$index = $basename;
-while ( isset( $book[ $index ] ) ) $index .= "1";
-
-$book[ $index ] = array( 'basename' => $basename,
-'url'      => $url, 
-'version'  => $version );
-}
-}
-function html()
-{
-global $CHAPTER;
-global $book;
-global $date;
-global $vers;
-$leftnav = file_get_contents( 'leftnav.html' );
-$f = "<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Strict//EN'
-'http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd'>
-<html xmlns='http://www.w3.org/1999/xhtml' xml:lang='en' lang='en'>
-<head>
-<title>BLFS Chapter $CHAPTER Package Currency Check - $date</title>
-<link rel='stylesheet' href='currency.css' type='text/css' />
-</head>
-<body>\n";
-$f .= $leftnav;
-$f .= "<h1>BLFS Chapter $CHAPTER Package Currency Check</h1>
-<h2>As of $date GMT</h2>
-<table>
-<tr><th>BLFS Package</th> <th>BLFS Version</th> <th>Latest</th> <th>Flag</th></tr>\n";
-// Get the latest version of each package
-foreach ( $vers as $pkg => $v )
-{
-$v    = $book[ $pkg ][ 'version' ];
-$flag = ( $vers[ $pkg ] != $v ) ? "*" : "";
-
-$name = $pkg;
-if ( $pkg == "at_"      ) $name = 'at';
-if ( $pkg == "udisks1"  ) $name = 'udisks2';
-if ( $pkg == "sg"       ) $name = 'sg3_utils';
-if ( $pkg == "unrarsrc" ) $name = 'unrar';
-if ( $pkg == "p7zip_"   ) $name = 'p7zip';
-$f .= "<tr><td>$name</td>";
-$f .= "<td>$v</td>";
-$f .= "<td>${vers[ $pkg ]}</td>";
-$f .= "<td class='center'>$flag</td></tr>\n";
-}
-$f .= "</table>
-</body>
-</html>\n";
-file_put_contents( "/home/bdubbs/public_html/chapter$CHAPTER.html", $f );
-}
 get_current();  // Get what is in the book
 
-$start = false;
 // Get latest version for each package 
 foreach ( $book as $pkg => $data )
 {
    $book_index = $pkg; 
 
-if ( $book_index == $START_PACKAGE ) $start = true;
-if ( ! $start ) continue;
    $base = $data[ 'basename' ];
    $url  = $data[ 'url' ];
    $bver = $data[ 'version' ];
 
-echo "book index: $book_index  bver=$bver url=$url \n";
+   echo "book index: $book_index $bver $url\n";
 
    $v = get_packages( $book_index, $url );
    $vers[ $book_index ] = $v;
-// Stop at the end of the chapter 
-if ( $book_index == $STOP_PACKAGE ) break; 
 }
 
 html();  // Write html output

Index: scripts/blfs-chapter13.php
===================================================================
--- scripts/blfs-chapter13.php	(révision 15985)
+++ scripts/blfs-chapter13.php	(révision 15986)
@@ -1,39 +1,52 @@
 #! /usr/bin/php
 <?php
 
-$CHAPTER=13;
-$START_PACKAGE='check';
-$STOP_PACKAGE='OpenJDK';
+include 'blfs-include.php';
 
-$book = array();
-$book_index = 0;
-$previous   = 0;
+$CHAPTER       = '13';
+$START_PACKAGE = 'check';
+$STOP_PACKAGE  = 'junit';
 
-$vers = array();
+$renames = array();
+$renames[ 'librep_'    ] = 'librep';
+$renames[ 'py'         ] = 'pycairo';
+$renames[ 'Python'     ] = 'python2';
+$renames[ 'python'     ] = 'python2 docs';
+$renames[ 'Python1'    ] = 'python3';
+$renames[ 'python1'    ] = 'python3 docs';
+$renames[ 'pygobject'  ] = 'pygobject2';
+$renames[ 'pygobject1' ] = 'pygobject3';
+$renames[ 'junit4_'    ] = 'junit';
 
-date_default_timezone_set( "GMT" );
-$date = date( "Y-m-d (D) H:i:s" );
+$ignores = array();
+$ignores[ 'cfe'         ] = '';
+$ignores[ 'clang'       ] = '';
+$ignores[ 'compiler-rt' ] = '';
+$ignores[ 'nasm1'       ] = '';
+$ignores[ 'tcl1'        ] = '';
+$ignores[ 'gcc1'        ] = '';
+$ignores[ 'gcc11'       ] = '';
+$ignores[ 'OpenJDK1'    ] = '';
+$ignores[ 'hamcrest'    ] = '';
+$ignores[ 'apache-ant1' ] = '';
 
-// Special cases
-$exceptions = array();
+//$current="junit4_";
 
 $regex = array();
-//$regex[ 'bzr'     ] = "/^.*Latest version is (\d[\d\.]+\d).*$/";
 $regex[ 'check'   ] = "/^.*Download check-(\d[\d\.]+\d).tar.*$/";
 $regex[ 'expect'  ] = "/^.*Download expect(\d[\d\.]+\d).tar.*$/";
$regex[ 'junit4_' ] = "/^\h*(\d[\d\.]+)\h*$/";
@@     @@
 $regex[ 'swig'    ] = "/^.*Download swig-(\d[\d\.]+\d).*$/";
 $regex[ 'Python1' ] = "/^.*Download Python (3[\d\.]+\d).*$/";
 $regex[ 'Mako'    ] = "/^.*version is (\d[\d\.]+\d).*$/";
-//$regex[ 'python1' ] = "/^.*Download Python (3[\d\.]+\d).*$/";
 $regex[ 'php'     ] = "/^.*php-(\d[\d\.]+\d).tar.*$/";
 $regex[ 'ruby'    ] = "/^.*stable version is (\d[\d\.]+\d).*$/";
 $regex[ 'valgrind'] = "/^.*valgrind (\d[\d\.]+\d) \(tar.*$/";
 $regex[ 'jtreg'   ] = "/^.*jtreg(\d[b\d\.\-]+\d)\.tar.*$/";
-$regex[ 'OpenJDK' ] = "/^.*jtreg(\d[b\d\.\-]+\d)\.tar.*$/";
+$regex[ 'OpenJDK' ] = "/^.*OpenJDK-(\d[\d\.]+\d)\-.*$/";
 
 // Perl Modules
 $regex[ 'Archive-Zip'       ] = "/^.*Archive-Zip-(\d[\d\.]+\d).*$/";
@@ -65,33 +78,25 @@
 $regex[ 'XML-Simple'        ] = "/^.*XML-Simple-(\d[\d\.]+\d).*$/";
 $regex[ 'XML-Writer'        ] = "/^.*XML-Writer-(\d[\d\.]+\d).*$/";
 
-$sf = 'sourceforge.net';
-//$current="dbus-python";
 $url_fix = array (
 
    array( //'pkg'     => 'gnome',
           'match'   => '^ftp:\/\/ftp.gnome', 
           'replace' => "http://ftp.gnome" ),
 
-//array( 'pkg'     => 'bzr',
-//       'match'   => '^.*$', 
-//       'replace' => "https://launchpad.net/bzr" ),
    array( 'pkg'     => 'check',
           'match'   => '^.*$', 
-'replace' => "http://$sf/projects/check/files" ),
+          'replace' => "http://sourceforge.net/projects/check/files" ),
 
    array( 'pkg'     => 'expect',
           'match'   => '^.*$', 
-'replace' => "http://$sf/projects/expect/files" ),
+          'replace' => "http://sourceforge.net/projects/expect/files" ),
 
    array( 'pkg'     => 'icedtea',
           'match'   => '^.*$', 
@@ -109,19 +114,19 @@
 
    array( 'pkg'     => 'scons',
           'match'   => '^.*$', 
-'replace' => "http://$sf/projects/scons/files" ),
+          'replace' => "http://sourceforge.net/projects/scons/files" ),
 
    array( 'pkg'     => 'tcl',
           'match'   => '^.*$', 
-'replace' => "http://$sf/projects/tcl/files" ),
+          'replace' => "http://sourceforge.net/projects/tcl/files" ),
 
    array( 'pkg'     => 'tk',
           'match'   => '^.*$', 
-'replace' => "http://$sf/projects/tcl/files/Tcl" ),
+          'replace' => "http://sourceforge.net/projects/tcl/files/Tcl" ),
 
    array( 'pkg'     => 'swig',
           'match'   => '^.*$', 
-'replace' => "http://$sf/projects/swig/files/swig" ),
+          'replace' => "http://sourceforge.net/projects/swig/files/swig" ),
 
    array( 'pkg'     => 'elfutils',
           'match'   => '^.*$', 
@@ -277,24 +282,7 @@
 
 );
 
-function find_max( $lines, $regex_match, $regex_replace )
-{
-global $book_index;
-global $previous;
-$a = array();
-foreach ( $lines as $line )
-{
-// Ensure we skip verbosity of NcFTP
-if ( ! preg_match( $regex_match,   $line ) ) continue; 
-if (   preg_match( "/NcFTP/",      $line ) ) continue;
-if (   preg_match( "/Connecting/", $line ) ) continue;
-if (   preg_match( "/Current/",    $line ) ) continue;
-// Isolate the version and put in an array
-$slice = preg_replace( $regex_replace, "$1", $line );
-// Numbers and whitespace
-if ( "x$slice" == "x$line" && ! preg_match( "/^\d[\d\.]*$/", $slice ) ) continue; 
+/*
      // Skip minor versions in the 90s (most of the time)
      list( $major, $minor, $rest ) = explode( ".", $slice . ".0.0" );
      if ( $minor >= 90                       &&
@@ -304,76 +292,10 @@
           $book_index != "XML-LibXML-Simple" &&
           $book_index != "XML-LibXSLT"       &&
           $book_index != "elfutils"          ) continue;
+*/
 
-array_push( $a, $slice );     
-}
-// SORT_NATURAL requires php-5.4.0 or later
-rsort( $a, SORT_NATURAL );  // Max version is at the top
-//print_r($a);
-$previous = ( isset( $a[1] ) ) ? $a[1] : 0;;
-//echo "previous=$previous\n";
-return ( isset( $a[0] ) ) ? $a[0] : 0;
-}
-function find_even_max( $lines, $regex_match, $regex_replace )
-{
-$a = array();
-foreach ( $lines as $line )
-{
-if ( ! preg_match( $regex_match, $line ) ) continue; 
-
-// Isolate the version and put in an array
-$slice = preg_replace( $regex_replace, "$1", $line );
-if ( "x$slice" == "x$line" && ! preg_match( "/^[\d\.]+/", $slice ) ) continue; 
-
-// Skip odd numbered minor versions
-list( $major, $minor, $rest ) = explode( ".", $slice . ".0" );
-if ( $minor % 2 == 1  ) continue;
-if ( $minor     >= 90 ) continue;
-array_push( $a, $slice );     
-}
-// SORT_NATURAL requires php-5.4.0 or later
-rsort( $a, SORT_NATURAL );  // Max version is at the top
-return ( isset( $a[0] ) ) ? $a[0] : 0;
-}
-function http_get_file( $url, $strip = "yes" )
-{
-exec( "curl -L -s -m30 $url", $dir );
-//echo "url=$url\n";
-//print_r($dir);
-$s   = implode( "\n", $dir );
-if ( "$strip" != "no" )  
-$dir = strip_tags( $s );
-else
-$dir = $s;
-return explode( "\n", $dir );
-}
-function max_parent( $dirpath, $prefix )
-{
-// First, remove a directory
-$dirpath  = rtrim  ( $dirpath, "/" );    // Trim any trailing slash
-$position = strrpos( $dirpath, "/" );
-$dirpath  = substr ( $dirpath, 0, $position );
-$lines = http_get_file( $dirpath );
-$regex_match   = "#${prefix}[\d\.]+/#";
-$regex_replace = "#^(${prefix}[\d\.]+)/.*$#";
-$max           = find_max( $lines, $regex_match, $regex_replace );
-return "$dirpath/$max"; 
-}
 function get_packages( $package, $dirpath )
 {
-global $exceptions;
   global $regex;
   global $book_index;
   global $url_fix;
@@ -419,7 +341,8 @@
       $dirpath  = rtrim  ( $dirpath, "/" );    // Trim any trailing slash
       $position = strrpos( $dirpath, "/" );
       $dirpath  = substr ( $dirpath, 0, $position );
-exec( "echo 'ls -1;bye' | ncftp $dirpath", $lines );
+      $lines = http_get_file( "$dirpath/" );
       if ( $book_index == "pygobject" )
          $dir      = find_even_max( $lines, '/^2[\d\.]+$/', '/^(2[\d\.]+)$/' );
       else
@@ -435,9 +358,8 @@
       $dirpath  = rtrim  ( $dirpath, "/" );    // Trim any trailing slash
       $position = strrpos( $dirpath, "/" );
       $dirpath  = substr ( $dirpath, 0, $position );
-exec( "echo 'ls -1;bye' | ncftp $dirpath", $lines );
-$dir = find_max( $lines, "/$book_index-\d[\d\.]+/", "/$book_index-(\d[\d\.]+)/" );
-$dirpath .= "/$book_index-$dir/";
+      $lines    = http_get_file( "$dirpath/" );
+      return find_max( $lines, "/gcc-\d/", "/^.*gcc-(\d[\d\.]+).*$/" );
     }
 
     // slang
@@ -446,10 +368,7 @@
        // Get the max directory and adjust the directory path
       $dirpath  = rtrim  ( $dirpath, "/" );    // Trim any trailing slash
       $position = strrpos( $dirpath, "/" );
-$dirpath  = substr ( $dirpath, 0, $position );
-exec( "echo 'ls -1;bye' | ncftp $dirpath", $lines );
-$dir = find_max( $lines, "/v\d[\d\.]+/", "/^v(\d[\d\.]+).*/" );
-$dirpath .= "/v$dir/";
+      $dirpath  = substr ( $dirpath, 0, $position ) . "/latest";
     }
 
     if ( $book_index == "vala" )
@@ -458,8 +377,8 @@
       $dirpath  = rtrim  ( $dirpath, "/" );    // Trim any trailing slash
       $position = strrpos( $dirpath, "/" );
       $dirpath  = substr ( $dirpath, 0, $position );
-exec( "echo 'ls -1;bye' | ncftp $dirpath", $lines );
-$dir = find_even_max( $lines, "/\d[\d\.]+/", "/^(\d[\d\.]+).*/" );
+      $lines    = http_get_file( "$dirpath/" );
+      $dir      = find_even_max( $lines, "/\d[\d\.]+/", "/^(\d[\d\.]+).*/" );
       $dirpath .= "/$dir/";
     }
 
@@ -474,7 +393,7 @@
     }
 
     // Get listing
-exec( "echo 'ls -1;bye' | ncftp $dirpath", $lines );
+    $lines = http_get_file( "$dirpath/" );
   }
   else // http
   {
@@ -497,37 +416,7 @@
 
       $dirpath .= "/$dir/";
     }
-/*
-if ( $book_index == "ruby" )
-{
-// Parent listing
-$dirpath  = rtrim  ( $dirpath, "/" );    // Trim any trailing slash
-$position = strrpos( $dirpath, "/" );
-$dirpath  = substr ( $dirpath, 0, $position );
-echo "dirpath 1=$dirpath\n";
-$lines1   = http_get_file( "$dirpath/" );
-print_r($lines1);
-exit;
-$dir      = find_max( $lines1, '/^\d\./', '/^\s*([\d\.]+).*$/' );
-echo "dir=$dir\n";
-echo "previous=$previous\n";
-$prev     = $previous;
-$save     = $dirpath;
-$dirpath .= "/$dir/";
-echo "dirpath 2 =$dirpath\n";
-$lines   = http_get_file( $dirpath );
-print_r($lines);
-exit;
-$max     =  find_max( $lines, '/ruby-\d/', '/^ruby-(\d[\d\.-]+\d.*).tar.*$/' );
-echo "max=$max\n";
 
-if ( $max != 0 ) return $max;
-$dirpath = "$save/$prev/";
-echo "dirpath=$dirpath\n";
-exit;
-}
-*/
     // Customize http directories as needed
     if ( $book_index == "cmake" )
     {
@@ -542,7 +431,6 @@
 
        $position = strrpos( $dirpath, "/" );
        $dirpath  = substr ( $dirpath, 0, $position ) . "/$prev";
-//echo "dirpath=$dirpath\n"; 
     }
      
     $strip = "yes";
@@ -572,8 +460,6 @@
 
   if ( $book_index == "llvm" )
   {
-//$dir = max_parent( $dirpath, "" );
-//$lines = http_get_file( "$dir" );
      return find_max( $lines, "/^.*$book_index-.*.src.*$/", 
                               "/^.*$book_index-([\d\.]+)\.src.*$/" );
   }
@@ -585,15 +471,14 @@
   }
 
   if ( $book_index == "nasm" )
-return find_max( $lines, '/\d[\d\.]+\d/', '/^(\d[\d\.]+\d)\/.*$/' );
+    return find_max( $lines, '/^\d/', '/^(\d[\d\.]+\d)\/.*$/' );
 
   if ( $book_index == "Python" )
   {
    $dir   = max_parent( $dirpath, "2" );
     $lines = http_get_file( "$dir" );
-return find_max( $lines, "/^Python-\d[\d\.]*\d/", 
-"/^Python-(\d[\d\.]*\d).tar.*$/" );
+    $ver   = find_max( $lines, "/^Python/", "/^Python-(\d[\d\.]*\d).tar.*$/" );
+    return ( $ver == "0" ) ? "pending" : $ver;
   }
 
   if ( $book_index == "python" )  // python2
@@ -606,8 +491,6 @@
 
   if ( $book_index == "python1" )  // python3 docs
   {
-//$dir = max_parent( $dirpath, "3" );
-//$lines = http_get_file( "$dir" );
     return find_max( $lines, "/python-\d/", 
                              "/^python-(\d[\d\.]*\d)-docs.*$/" );
   }
@@ -626,10 +509,7 @@
        $book_index == "pygobject "  )
     $package = "pygobject";
 
-//if ( $book_index == "ruby" )
-//  return find_max( $lines, '/ruby-\d/', '/^ruby-(\d[\d\.-]+\d.*).tar.*$/' );
-
-if ( $book_index == "librep" )  
+  if ( $book_index == "librep_" )  
     return find_max( $lines, "/librep/", "/^.*[_-](\d[\d\.]*\d)\.tar.*$/" );
 
   if ( $book_index == "apache-ant" )
@@ -644,7 +524,7 @@
 
   // Most packages are in the form $package-n.n.n
   // Occasionally there are dashes (e.g. 201-1)
-//if (  $book_index == "subversion" ) print_r( $lines );
   $max = find_max( $lines, "/$package/", "/^.*$package-([\d\.]+\d).tar.*$/" );
   return $max;
 }
@@ -658,9 +538,6 @@
      array( 'pkg'   => 'py2cairo', 
             'regex' => "/py2cairo-([\d\.]+)/" ),
 
-//array( 'pkg'   => 'icedtea', 
-//       'regex' => "/icedtea-([\d\.]+)\-.*$/" ),
      array( 'pkg'   => 'Encode-JIS2K', 
             'regex' => "/\D*Encode-JIS2K-([\d\.]+)\D*$/" ),
 
@@ -673,6 +550,13 @@
      array( 'pkg'   => 'Jinja2', 
             'regex' => "/\D*Jinja2-([\d\.]+)\D*$/" ),
 
+     // Order matters here.  jtreg must be before OpenJDK
+     array( 'pkg'   => 'jtreg', 
+            'regex' => "/jtreg(\d[\d\.b-]+)$/" ),
+     array( 'pkg'   => 'OpenJDK', 
+            'regex' => "/OpenJDK-([\d\.]+)-.*$/" ),
      array( 'pkg'   => 'junit4', 
             'regex' => "/junit4_([\d\.]+).*$/" ),
    );
@@ -687,162 +571,21 @@
    return "/\D*(\d.*\d)\D*$/";
 }
 
-function get_current()
-{
-global $vers;
-global $book;
-global $STOP_PACKAGE; // not used here
-$wget_file = "/home/bdubbs/public_html/blfs-book-xsl/wget-list";
-$contents = file_get_contents( $wget_file );
-$wget  = explode( "\n", $contents );
-foreach ( $wget as $line )
-{
-if ( $line == "" ) continue;
-$file = basename( $line );
-$url  = dirname ( $line );
-$file = preg_replace( "/\.tar\..z.*$/", "", $file ); // Remove .tar.?z*$
-$file = preg_replace( "/\.tar$/",       "", $file ); // Remove .tar$
-$file = preg_replace( "/\.gz$/",        "", $file ); // Remove .gz$
-$file = preg_replace( "/\.orig$/",      "", $file ); // Remove .orig$
-$file = preg_replace( "/\.src$/",       "", $file ); // Remove .src$
-$file = preg_replace( "/\.tgz$/",       "", $file ); // Remove .tgz$
-// Use iced tea from patch instead of OpenJDK
-//if ( preg_match( "/icedtea.*add_cacerts/", $file ) )
-//  $file = preg_replace( "/\.patch$/", "", $file ); 
-if ( preg_match( "/patch$/"  , $file ) ) continue;     // Skip patches
-if ( preg_match( "/hamcrest/", $file ) ) continue;     // Skip hamcrest
-if ( preg_match( "/OpenJDK/" , $file ) ) continue;     // Skip OpenJDK for now
-$pattern = get_pattern( $line );
-
-$version = preg_replace( $pattern, "$1", $file );   // Isolate version
-$version = preg_replace( "/^-/", "", $version );    // Remove leading #-
-$basename = strstr( $file, $version, true );
-$basename = rtrim( $basename, "-" );
-$basename = rtrim( $basename, "_" );
-$basename = ( $basename == "hd" ) ? "hd2u" : $basename;
-$index = $basename;
-while ( isset( $book[ $index ] ) ) $index .= "1";
-$book[ $index ] = array( 'basename' => $basename,
-'url'      => $url, 
-'version'  => $version );
-if ( preg_match( "/apache-ant/", $line ) ) break;
-}
-// Add Java
-$lines   = preg_grep( "/jtreg/" , $wget );
-$line    = array_shift( $lines );
-$url     = dirname ( $line );
-$version = preg_replace( '/^.*jtreg(\d[b\d\.\-]+)\.tar.*$/', "$1", $line );
-$book[ 'OpenJDK' ] = 
-array( 'basename' => 'OpenJDK',
-'url'      => $url, 
-'version'  => $version );
-}
-function html()
-{
-global $CHAPTER;
-global $book;
-global $date;
-global $vers;
-$leftnav = file_get_contents( 'leftnav.html' );
-$f = "<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Strict//EN'
-'http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd'>
-<html xmlns='http://www.w3.org/1999/xhtml' xml:lang='en' lang='en'>
-<head>
-<title>BLFS Chapter $CHAPTER Package Currency Check - $date</title>
-<link rel='stylesheet' href='currency.css' type='text/css' />
-</head>
-<body>
-$leftnav
-<div id='top'>
-<h1>BLFS Chapter $CHAPTER Package Currency Check</h1>
-<h2>As of $date GMT</h2>
-</div>
-<table id='table'>
-<tr><th>BLFS Package</th> <th>BLFS Version</th> <th>Latest</th> <th>Flag</th></tr>\n";
-// Get the latest version of each package
-foreach ( $vers as $pkg => $v )
-{
-$v    = $book[ $pkg ][ 'version' ];
-$flag = ( $vers[ $pkg ] != $v ) ? "*" : "";
-
-$name = $pkg;
-//if ( $pkg == "OpenJDK"    ) $name = 'icedtea';
-if ( $pkg == "nasm1"      ) $name = 'nasm docs';
-if ( $pkg == "py"         ) $name = 'pycairo';
-if ( $pkg == "Python"     ) $name = 'python2';
-if ( $pkg == "python"     ) $name = 'python2 docs';
-if ( $pkg == "Python1"    ) $name = 'python3';
-if ( $pkg == "python1"    ) $name = 'python3 docs';
-if ( $pkg == "pygobject"  ) $name = 'pygobject2';
-if ( $pkg == "pygobject1" ) $name = 'pygobject3';
-if ( $pkg == "tcl1"       ) $name = 'tcl docs';
-$f .= "<tr><td>$name</td>";
-$f .= "<td>$v</td>";
-$f .= "<td>${vers[ $pkg ]}</td>";
-$f .= "<td class='center'>$flag</td></tr>\n";
-}
-$f .= "</table>
-</body>
-</html>\n";
-file_put_contents( "/home/bdubbs/public_html/chapter$CHAPTER.html", $f );
-}
 get_current();  // Get what is in the book
 
-$start = false;
 // Get latest version for each package 
 foreach ( $book as $pkg => $data )
 {
    $book_index = $pkg; 
 
-if ( $book_index == $START_PACKAGE ) $start = true;
-if ( ! $start ) continue;
-// Skip things we don't want
-//if ( preg_match( "/OpenJDK/",    $pkg ) ) continue;
-if ( preg_match( "/cfe/",        $pkg ) ) continue;
-if ( preg_match( "/clang/"      ,$pkg ) ) continue;
-if ( preg_match( "/compiler-rt/",$pkg ) ) continue;
-if ( preg_match( "/nasm1/",      $pkg ) ) continue;
-if ( preg_match( "/tcl1/",       $pkg ) ) continue;
-if ( preg_match( "/gcc1.*/",       $pkg ) ) continue;
    $base = $data[ 'basename' ];
    $url  = $data[ 'url' ];
    $bver = $data[ 'version' ];
 
-echo "book index: $book_index  bver=$bver url=$url \n";
+   echo "book index: $book_index $bver $url\n";
 
    $v = get_packages( $book_index, $url );
    $vers[ $book_index ] = $v;
-// Stop at the end of the chapter 
-if ( $book_index == $STOP_PACKAGE ) break; 
 }
 
 html();  // Write html output

Index: scripts/blfs-include.php
===================================================================
--- scripts/blfs-include.php	(révision 15985)
+++ scripts/blfs-include.php	(révision 15986)
@@ -35,15 +35,27 @@
 
 $start = false;
 
-function find_max( $lines, $regex_match, $regex_replace )
+function find_max( $lines, $regex_match, $regex_replace, $skip_high = FALSE )
 {
   $a = array();
   foreach ( $lines as $line )
@@     @@
     
      // Isolate the version and put in an array
      $slice = preg_replace( $regex_replace, "$1", $line );
-if ( "x$slice" == "x$line" ) continue; 
+     if ( "x$slice" == "x$line" && 
+          ! preg_match( "/^\d[\d\.]*$/", $slice ) ) continue; 
+     // Skip minor versions in the 90s if requested
+     if ( $skip_high )
+     {
+       list( $major, $minor, $micro, $rest ) = explode( ".", $slice . ".0.0.0.0" );
+       if ( $micro >= 80 ) continue;
+       if ( $minor >= 80 ) continue;
+     }
      array_push( $a, $slice );     
   }
 
@@ -80,7 +94,7 @@
 
 function http_get_file( $url )
 {
-exec( "curl -L -s -m30 -A Firefox/22.0 $url", $dir );
+  exec( "curl -L -s -m40 -A Firefox/22.0 $url", $dir );
   $s   = implode( "\n", $dir );
   $dir = strip_tags( $s );
   return explode( "\n", $dir );
@@ -119,7 +133,7 @@
    foreach ( $wget as $line )
    {
       if ( $line == "" ) continue;
-if ( preg_match( "/patch$/", $line ) ) continue;     // Skip patches
+      if ( preg_match( "/patch/", $line ) ) continue;     // Skip patches
 
       $file =  basename( $line );
       $url  =  dirname ( $line );
@@ -148,6 +162,9 @@
                                'url'      => $url, 
                                'version'  => $version );
 
+      // Custom for chapter 12 -- there is both p7zip, unzip, and zip there
+      if ( preg_match( "/p7zip|unzip/", $line ) ) continue;
+      
       if ( preg_match( "/$STOP_PACKAGE/", $line ) ) break;
    }
 }

