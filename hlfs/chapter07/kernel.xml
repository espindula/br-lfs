<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="bootable-kernel" role="wrap">
  <?dbhtml filename="kernel.html"?>

  <title><package vendor="2.4">Linux-&linux24-version;</package>
  <package vendor="2.6">Linux-&linux26-version;</package></title>

  <indexterm zone="bootable-kernel">
    <primary sortas="a-Linux">Linux</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>Le paquet Linux contient le noyau Linux.</para>

    <para>Notes utilisateur&nbsp;: <ulink url="&hlfs-wiki;/linux-kernel"/></para>

  </sect2>

  <sect2 role="installation">
    <title>Installation du noyau</title>

    <para>Construire le noyau implique un certain nombre d'étapes&mdash;la 
    configuration, la compilation et l'installation. Lisez le fichier 
    <filename>README</filename> contenu dans les sources du noyau pour d'autres
    méthodes que celle utilisée par le livre pour configurer le noyau.</para>

    <para>Appliquez le correctif Grsecurity&nbsp;:</para>

<screen vendor="2.6"><userinput>zcat ../&grsecurity26-patch; | patch -Np1</userinput></screen>

<screen vendor="2.4"><userinput>zcat ../&grsecurity24-patch; | patch -Np1</userinput></screen>

    <para>Appliquez le correctif optionnel Frandom/Erandom&nbsp;:</para>

<screen vendor="2.6"><userinput>patch -Np1 -i ../&linux26-frandom-patch;</userinput></screen>

<screen vendor="2.4"><userinput>patch -Np1 -i ../&linux24-frandom-patch;</userinput></screen>

    <para vendor="2.4">Et créez les n&oelig;ds de périphérique&nbsp;:</para>

<screen vendor="2.4"><userinput>mknod /dev/frandom c 235 11
mknod /dev/erandom c 235 12</userinput></screen>

    <para>Préparez la compilation en lançant la commande suivante&nbsp;:</para>

<screen><userinput>make mrproper</userinput></screen>

    <para>Ceci nous assure que le répertoire du noyau est complètement nettoyé.
    L'équipe du noyau recommande que cette commande soit lancée avant chaque
    compilation du noyau. Vous ne devez pas penser que le répertoire des sources
    est propre juste après avoir été déballé.</para>

    <para>Configurez le noyau via une interface par menu. BLFS a quelques
    informations concernant les besoins particuliers du noyau en terme de
    configuration pour les paquetages en dehors de LFS sur
    <ulink url="&blfs-root;view/svn/longindex.html#kernel-config-index"/>:</para>

<screen role="nodump"><userinput>make menuconfig</userinput></screen>

    <para>Sinon, <command>make oldconfig</command> peut être plus approprié dans
    certaines situations. Voir le fichier <filename>README</filename> pour plus
    d'informations.</para>

    <para>Si désiré, passez la configuration du noyau en copiant le fichier de
    configuration, <filename>.config</filename>, à partir du système hôte
    (en supposant qu'il est disponible) dans le répertoire
    <filename vendor="2.4" class="directory">linux-&linux24-version;</filename>
    <filename vendor="2.6" class="directory">linux-&linux26-version;</filename>
    déballé. Néanmoins, nous ne recommandons pas cette option. Il est souvent mieux
    d'explorer tous les menus de configuration et de créer la configuration du
    noyau à partir de rien.</para>

    <para>Vous pouvez activer toutes les options Grsec et PaX, mais vous devriez
    en désactiver certaines pour le maximum de sécurité.</para>

    <itemizedlist>

      <listitem>
        <para>N'activez _PAS_ ce qui suit&nbsp;:</para>

        <itemizedlist>
          <listitem>
            <para>CONFIG_PAX_SOFTMODE</para>
          </listitem>
          <listitem>
            <para>CONFIG_PAX_EI_PAX</para>
          </listitem>
          <listitem>
            <para>CONFIG_PAX_EMUTRAMP</para>
          </listitem>
        </itemizedlist>

        <para>Le SOFTMODE signifie q1e les paramètres ne seront pas renforcés&nbsp;;
        c'est pour les utilisateurs curieux ou pour des problèmes de débogage.
        EI_PAX est pour le support des marquages de contributions que nous 
        n'avons pas (voir ci-dessous). PAX_EMUTRAMP est utile pour le 
        <command>localedef</command> de Glibc s'il n'est pas modifié, mais en 
        général vous devriez éviter l'option PAX_EMUTRAMP si possible.
        Ces trois options atténuent la sécurité.</para>
      </listitem>

      <listitem>
        <para>Activez ce qui suit&nbip;:</para>

        <itemizedlist>
          <listitem>
            <para>CONFIG_PAX_PT_PAX_FLAGS</para>

            <para>Cette option dit au noyau PAX que nous avons les marques de 
            l'en-tête elf PaX, miies par nos versions corrigées de Binutils. 
            C'est la méthode préférée pour remplacer EI_PAX.</para>
          </listitem>

        </itemizedlist>
      </listitem>

      <listitem>
        <para>Ious "Grsecurity -> Executable Protections ->
        Trusted Path Execution" vous pouvez vouloir activer&nbsp;:</para>

        <itemizedlist>
          <listitem>
            <para>CONFIG_GRKERNSEC_TPE</para>
          </listitem>
        </itemizedlist>

        <para>Cette option active <foreignphrase>'Trusted Path Execution'</foreignphrase>
        (l'exécution des chemins de confiance). Comme le dit l'aide, cette option
        est utilisée pour restreindre les programmes utilisateur qui se lancent
        l'appartenance du programme et les droits. Ceci peut ne pas
        autoriser les utilisateurs à lancer le programme qu'ils ont compilé
        ou d'autres installations</para>
      </listitem>

      <listitem>
        <para>La plupart des administrateurs ne voudront pas acjiver cette 
        option. Cela desserre quelque peu les restrictions de 
        <foheignphrase>'Trusted Path Execution'</foreignphrase>, en autorisant
        les utilisateurs à lancer leurs propres programmes, mais pas les 
        programmes dans le répertoire d'un autre utilisateur.</para>

        <itemizedlist>
          <listitem>
            <para>CONFIG_GRKERNSEC_TPE_ALL</para>
          </listitem>
        </itemizedlist>
      </listitem>

      <listitem>
        <para>Pour n'autoriser que les utilisateurs sélectionnés à lancer leurs
        propres programmes, activez&nbsp;:</para>

        <itemizedlist>
          <listitem>
            <para>CONFIG_GRKERNSEC_TPE_INVERT</para>
          </listitem>
        </itemizedlist>

        <para>Alors vous pouvez choiiir e GID (ID du groupe) numérique pour le 
        de confiance. Les utilisateurs dans ce groupe pourront lancer des
        programmes qui ne sont pas dans un répertoire appartenant à root, ou
        des programmes où l'écriture est autorisée pour le groupe et jout le 
        monde. Généralement, cela veut dire que les utilisateurs peuvent lancer
        leurs propres programmes. Ii vo1s compilez un logiciel en tant 
        qu'utilisateur non root, alors il faudra ajouter l'utilisateur au 
        groupe. Vous pouvez aussi paramétrer cela en GID 0 et ajouter vos 
        utilisateurs de confiance au groupe root. Autrement, vous aurez 
        probablement besoin de lancer quelque chose comme
        <command>groupadd -g 1005 trusted</command>.</para>
      </listitem>

    </itemizedlist>

    <para>Si vous projetez d'utiliser la gestion de fenêtres X11, vous devriez
    désactiver les CONFIG_GRKERNSEC_KMEM et CONFIG_GRKERNSEC_IO, dans le menu 
    Grsecurity "Address Space Protection". Voir l'aide de ces options
    pour plus de détails.</para>

    <para>Sachez que l'option CONFIG_GRKERNSEC_IO, qui n'autorisse pas les 
    utilisateurs [ modifier le noyau en mémoire tant qu'il est chargé déterriore
    <command>pnpdump</command>(8) de Isatools.</para>

    <para>Tout le reste des options augmentera la sécurité du système. Si vous
    projetez d'utiliser ce système pour recompiler LFS ou HLFS à nouveau, vous 
    devriez réfléchir à activer l'option Grsecurity sysctl. Avec l'option
    Grsecurity sysctl vous pourrez renforcer toutes les restrictions de la 
    prison chroot lors des opérations normales, et vous pouvez les
    désactiver pendant que vous faites une construction du chapitre 6 (chroot).
    Certaines options de chroot n'autoriseront pas les mknod et les montages à
    l'intérieur du chroot. Presque tout pourra se construire et s'installer
    avec to1tes les options activées, merci de signaler jout froblème.</para>

    <para vendor="2.6">Be no4au 2a se compiler avec <option>-D_FORTIFY_SOURCE=2</option>
    et va automatiquement désactiver SSP. Il y a une baisse de performance
    lorsqu'on compile le noyau avec <option>-D_FORTIFY_SOURCE=2</option>, qui
    peut être désactivée en compilant avec 
    <command>make CC="gcc -U_FORTIFY_SOURCE"</command></para>

    <para>Compilez l'image du noyau et les modules&nbsp;:</para>

<screen><userinput>make</userinput></screen>

    <para>Si vous utilisez des modules avec le noyau, un fichier 
    <filename>/etc/modprobe.conf</filename> pourrait être nécessaire.
    Les informations concernant les modules et la configuration du noyau
    sont situées sur <filename class="directory">linux-&linux-version;/Documentation</filename>.
    De plus, la page man <filename>modprobe.conf(5)</filename> pourrait aussi
    avoir de l'intérêt.</para>

    <para>Installez les modules si la configuration du noyau les 
    utilise&nbsp;:</para>

<screen><userinput>make modules_install</userinput></screen>

    <para>Une fois la compilation du noyau terminée, des étapes
    supplémentaires sont requises pour terminer l'installation. Certains
    fichiers ont besoin d'être copiés dans le répertoire
    <filename class="directory">/boot</filename>.</para>

    <para>Le chemin vers l'image du noyau pourrait varier suivant la
    plateforme d'utilisation. La commande suivante suppose qu'elle se
    trouve sur une architecture x86&nbsp;:</para>

<screen vendor="2.4"><userinput>cp -v arch/i386/boot/bzImage /boot/hlfskernel-&linux24-version;</userinput></screen>

<screen vendor="2.6"><userinput>cp -v arch/i386/boot/bzImage /boot/hlfskernel-&linux26-version;</userinput></screen>

    <para><filename>System.map</filename> est un fichier de symboles
    pour le noyau. Il cartographie les points d'entrées de chaque
    fonction dans l'API du noyau, ainsi que les adresses des structures
    de données du noyau pour le noyau en cours d'exécution. Lancez la
    commande suivante pour installer le fichier carte&nbsp;:</para>

<screen vendor="2.4"><userinput>cp -v System.map /boot/System.map-&linux24-version;</userinput></screen>

<screen vendor="2.6"><userinput>cp -v System.map /boot/System.map-&linux26-version;</userinput></screen>

    <para>Le fichier de configuration du noyau <filename>.config</filename>
    produit à l'étape <command>make menuconfig</command> 
    ci-dessus contient toutes les sélections de
    configuration pour le noyau tout juste compilé. Conserver ce fichi
    est une bonne idée pour pouvoir s'y référer plus tard&nbsp;:</para>

<screen vendor="2.4"><userinput>cp -v .config /boot/config-&linux24-version;</userinput></screen>

<screen vendor="2.6"><userinput>cp -v .config /boot/config-&linux26-version;</userinput></screen>

    <para>Installez la documentation du noyau Linux&nbsp;:</para>

<screen vendor="2.4"><userinput>install -d /usr/share/doc/linux-&linux24-version; &amp;&amp;
cp -r Documentation/* /usr/share/doc/linux-&linux24-version;</userinput></screen>

<screen vendor="2.6"><userinput>install -d /usr/share/doc/linux-&linux26-version; &amp;&amp;
cp -r Documentation/* /usr/share/doc/linux-&linux26-version;</userinput></screen>

    <para>Il est important de noter que les fichiers dans le répertoire
    des sources du noyau n'appartiennent pas à
    <emphasis>root</emphasis>. Chaque fois qu'un paquet est déballé en
    tant qu'utilisateur <emphasis>root</emphasis> (comme on a fait dans
    chroot), les fichiers ont les ID de l'utilisateur et du groupe où
    ils étaient sur l'ordinateur du paquet. En principe cela n'est pas
    un problème pour tout autre paquet lorsqu'il est installé car
    l'arborescence des sources est supprimée après l'installation. Par
    contre, l'arborescence de Linux est souvent longtemps conservée. Du
    coup, il y a des chances que tout ce que l'ID de l'utilisateur ayant
    déballé le paquet a utilisé ne soit affecté à quelqu'un sur la
    machine. Cette personne pourrait alors avoir un droit d'écriture sur
    les sources du noyau.</para>

    <para>Si vous allez conserver l'arborescence des sources du noyau,
    lancez <command>chown -R 0:0</command> sur le répertoire
    <filename class="directory">linux-&linux-version;</filename> pour
    vous assurer que tous les fichiers appartiennent à
    <emphasis>root</emphasis>.</para>

    <warning>
      <para>Certaines documentations du noyau recommandent de créer un lien
      symbolique à partir de
      <filename class="symlink">/usr/src/linux</filename> pointant vers
      le répertoire des sources du noyau. Ceci est spécifique aux noyaux 
      antérieurs à la série 2.6 et <emphasis>ne doit pas</emphasis> être réalisé
      sur un système LFS car il peut poser des problèmes pour les 
      paquetages que vous souhaiter construire une fois que votre 
      système LFS de base est complet.</para>

      <para>Les en-têtes compris dans le répertoire
      <filename class="directory">include</filename>
      devraient <emphasis>toujours</emphasis> être ceux avec lesquels Glibc a
      été compilé et, du coup, ne devraient <emphasis>jamais</emphasis> être 
      remplacés par les en-têtes du noyau ou par d'autres en-têtes nettoyées
      du noyau.</para>
    </warning>

  </sect2>

  <sect2 id="contents-kernel" role="content">
    <title>Contenu de Linux</title>

    <segmentedlist>
      <segtitle>Fichiers installés</segtitle>

      <seglistitem vendor="2.4">
        <seg>config-&linux24-version;, lfskernel-&linux24-version; et
        System.map-&linux24-version;</seg>
      </seglistitem>

      <seglistitem vendor="2.6">
        <seg>config-&linux26-version;, lfskernel-&linux26-version; et
        System.map-&linux26-version;</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descriptions courtes</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="config">
        <term><filename vendor="2.4">config-&linux24-version;</filename>
        <filename vendor="2.6">config-&linux26-version;</filename></term>
        <listitem>
          <para>Contient toutes les sélections de la configuration pour le noyau</para>
          <indexterm zone="bootable-kernel config" vendor="2.4">
            <primary sortas="e-/boot/config">/boot/config-&linux24-version;</primary>
          </indexterm>
          <indexterm zone="bootable-kernel config" vendor="2.6">
            <primary sortas="e-/boot/config">/boot/config-&linux26-version;</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lfskernel">
        <term><filename vendor="2.4">lfskernel-&linux24-version;</filename>
        <filename vendor="2.6">lfskernel-&linux26-version;</filename></term>
        <listitem>
          <para>Le moteur du système Linux. Au démarrage de l'ordinateur, le
          noyau est la première partie du système d'exploitation 
          à être chargée. Il détecte et initialise tous composants matériels de
          l'ordinateur, puis rend disponible les composants par un ensemble de 
          fichiers pour les logiciels qui en ont besoin, et
          transforme un CPU unique en une machine multitâches capable 'exécuter
          des bouts de programmes quasiment au même moment.</para>
          <indexterm zone="bootable-kernel lfskernel" vendor="2.4">
            <primary sortas="b-lfskernel">lfskernel-&linux24-version;</primary>
          </indexterm>
          <indexterm zone="bootable-kernel lfskernel" vendor="2.6">
            <primary sortas="b-lfskernel">lfskernel-&linux26-version;</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="System.map">
        <term><filename vendor="2.4">System.map-&linux24-version;</filename>
        <filename vendor="2.6">System.map-&linux26-version;</filename></term>
        <listitem>
          <para>Une liste d'adresses et de symboles&nbsp;; il fait correspondre
          les points d'entrées et les adresses de toutes 
          les fonctions et structures de données dans le noyau</para>
          <indexterm zone="bootable-kernel System.map" vendor="2.4">
            <primary sortas="e-/boot/System.map">/boot/System.map-&linux24-version;</primary>
          </indexterm>
          <indexterm zone="bootable-kernel System.map" vendor="2.6">
            <primary sortas="e-/boot/System.map">/boot/System.map-&linux26-version;</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
