# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2021-10-08 14:06+0000\n"
"PO-Revision-Date: 2021-10-20 19:44+0000\n"
"Last-Translator: roptat <roptat@lepiller.eu>\n"
"Language-Team: \n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Generator: Pootle 2.8\n"
"X-POOTLE-MTIME: 1634759060.774850\n"

#. type: Content of: <sect1><title>
#: lfs-en/chapter02/hostreqs.xml:11
msgid "Host System Requirements"
msgstr "Prérequis du système hôte"

#. type: Content of: <sect1><para>
#: lfs-en/chapter02/hostreqs.xml:13
msgid ""
"Your host system should have the following software with the minimum "
"versions indicated. This should not be an issue for most modern Linux "
"distributions. Also note that many distributions will place software headers "
"into separate packages, often in the form of <quote>&lt;package-name&gt;-"
"devel</quote> or <quote>&lt;package-name&gt;-dev</quote>. Be sure to install "
"those if your distribution provides them."
msgstr ""
"Votre système hôte doit contenir les logiciels suivants dans leur version "
"minimum indiquée. Cela ne devrait pas poser de problème sur la plupart des "
"distributions Linux modernes. Notez également que certaines distributions "
"placeront les en-têtes des logiciels dans un paquet distinct, ayant souvent "
"la forme <quote>&lt;nom-du-paquet&gt;-devel</quote> ou <quote>&lt;nom-du-"
"paquet&gt;-dev</quote>. Assurez-vous qu'ils sont installés si votre "
"distribution les fournit."

#. type: Content of: <sect1><para>
#: lfs-en/chapter02/hostreqs.xml:21
msgid ""
"Earlier versions of the listed software packages may work, but have not been "
"tested."
msgstr ""
"Il se peut que les versions antérieures des paquets logiciels listés "
"fonctionnent, mais elles n'ont pas été testées."

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:27
msgid ""
"<emphasis role=\"strong\">Bash-3.2</emphasis> (/bin/sh should be a symbolic "
"or hard link to bash)"
msgstr ""
"<emphasis role=\"strong\">Bash-3.2</emphasis> (/bin/sh devrait être un lien "
"symbolique ou physique vers bash)"

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:32
msgid ""
"<emphasis role=\"strong\">Binutils-2.25</emphasis> (Versions greater than "
"&binutils-version; are not recommended as they have not been tested)"
msgstr ""
"<emphasis role=\"strong\">Binutils-2.25</emphasis> (les versions supérieures "
"à &binutils-version; ne sont pas recommandées, car elles n'ont pas été "
"testées)"

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:38
msgid ""
"<emphasis role=\"strong\">Bison-2.7</emphasis> (/usr/bin/yacc should be a "
"link to bison or small script that executes bison)"
msgstr ""
"<emphasis role=\"strong\">Bison-2.7</emphasis> (/usr/bin/yacc devrait être "
"un lien vers bison ou un petit script qui exécute bison)"

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:43
msgid "<emphasis role=\"strong\">Bzip2-1.0.4</emphasis>"
msgstr "<emphasis role=\"strong\">Bzip2-1.0.4</emphasis>"

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:47
msgid "<emphasis role=\"strong\">Coreutils-6.9</emphasis>"
msgstr "<emphasis role=\"strong\">Coreutils-6.9</emphasis>"

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:51
msgid "<emphasis role=\"strong\">Diffutils-2.8.1</emphasis>"
msgstr "<emphasis role=\"strong\">Diffutils-2.8.1</emphasis>"

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:55
msgid "<emphasis role=\"strong\">Findutils-4.2.31</emphasis>"
msgstr "<emphasis role=\"strong\">Findutils-4.2.31</emphasis>"

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:59
msgid ""
"<emphasis role=\"strong\">Gawk-4.0.1</emphasis> (/usr/bin/awk should be a "
"link to gawk)"
msgstr ""
"<emphasis role=\"strong\">Gawk-4.0.1</emphasis> (/usr/bin/awk devrait être "
"un lien vers gawk)"

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:65
msgid ""
"<emphasis role=\"strong\">GCC-6.2</emphasis> including the C++ compiler, "
"<command>g++</command> (Versions greater than &gcc-version; are not "
"recommended as they have not been tested)"
msgstr ""
"<emphasis role=\"strong\">GCC-6.2</emphasis>, y compris le compilateur C++ "
"<command>g++</command> (les versions supérieures à &gcc-version; ne sont pas "
"recommandées, car elles n'ont pas été testées)"

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:71
msgid ""
"<emphasis role=\"strong\">Glibc-2.11</emphasis> (Versions greater than "
"&glibc-version; are not recommended as they have not been tested)"
msgstr ""
"<emphasis role=\"strong\">Glibc-2.11</emphasis> (les versions supérieures à "
"&glibc-version; ne sont pas recommandées car elles n'ont pas été testées)"

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:77
msgid "<emphasis role=\"strong\">Grep-2.5.1a</emphasis>"
msgstr "<emphasis role=\"strong\">Grep-2.5.1a</emphasis>"

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:81
msgid "<emphasis role=\"strong\">Gzip-1.3.12</emphasis>"
msgstr "<emphasis role=\"strong\">Gzip-1.3.12</emphasis>"

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:85
msgid "<emphasis role=\"strong\">Linux Kernel-&min-kernel;</emphasis>"
msgstr "<emphasis role=\"strong\">Noyau Linux-&min-kernel;</emphasis>"

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:87
msgid ""
"The reason for the kernel version requirement is that we specify that "
"version when building <application>glibc</application> in <xref linkend="
"\"chapter-cross-tools\"/> and <xref linkend=\"chapter-building-system\"/>, "
"at the recommendation of the developers.  It is also required by udev."
msgstr ""
"Cette version du noyau est requise, car nous spécifions cette version-là "
"lors de la construction de <application>glibc</application> aux <xref "
"linkend=\"chapter-cross-tools\"/> et <xref linkend=\"chapter-building-system"
"\"/>, suivant ainsi une recommandation des développeurs. Elle est aussi "
"exigée par Udev."

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:94
msgid ""
"If the host kernel is earlier than &min-kernel; you will need to replace the "
"kernel with a more up to date version. There are two ways you can go about "
"this. First, see if your Linux vendor provides a &min-kernel; or later "
"kernel package. If so, you may wish to install it. If your vendor doesn't "
"offer an acceptable kernel package, or you would prefer not to install it, "
"you can compile a kernel yourself. Instructions for compiling the kernel and "
"configuring the boot loader (assuming the host uses GRUB) are located in "
"<xref linkend=\"chapter-bootable\"/>."
msgstr ""
"Si le noyau hôte est plus ancien que le &min-kernel;, vous devrez remplacer "
"le noyau par une version plus à jour.  Vous pouvez employer deux méthodes "
"pour cela.  Vous pouvez d'abord voir si votre distribution Linux fournit un "
"paquet pour le noyau &min-kernel; ou supérieur. Si tel est le cas, vous "
"pouvez l'installer. Si votre distribution n'offre pas de paquet acceptable "
"pour le noyau, ou si vous préférez ne pas l'installer, vous pouvez compiler "
"un noyau vous-même.  Les instructions pour la compilation du noyau et la "
"configuration du chargeur d'amorçage (en supposant que le système hôte "
"utilise GRUB) se trouvent au <xref linkend=\"chapter-bootable\"/>."

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:106
msgid "<emphasis role=\"strong\">M4-1.4.10</emphasis>"
msgstr "<emphasis role=\"strong\">M4-1.4.10</emphasis>"

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:110
msgid "<emphasis role=\"strong\">Make-4.0</emphasis>"
msgstr "<emphasis role=\"strong\">Make-4.0</emphasis>"

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:114
msgid "<emphasis role=\"strong\">Patch-2.5.4</emphasis>"
msgstr "<emphasis role=\"strong\">Patch-2.5.4</emphasis>"

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:118
msgid "<emphasis role=\"strong\">Perl-5.8.8</emphasis>"
msgstr "<emphasis role=\"strong\">Perl-5.8.8</emphasis>"

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:122
msgid "<emphasis role=\"strong\">Python-3.4</emphasis>"
msgstr "<emphasis role=\"strong\">Python-3.4</emphasis>"

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:126
msgid "<emphasis role=\"strong\">Sed-4.1.5</emphasis>"
msgstr "<emphasis role=\"strong\">Sed-4.1.5</emphasis>"

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:130
msgid "<emphasis role=\"strong\">Tar-1.22</emphasis>"
msgstr "<emphasis role=\"strong\">Tar-1.22</emphasis>"

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:134
msgid "<emphasis role=\"strong\">Texinfo-4.7</emphasis>"
msgstr "<emphasis role=\"strong\">Texinfo-4.7</emphasis>"

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:138
msgid "<emphasis role=\"strong\">Xz-5.0.0</emphasis>"
msgstr "<emphasis role=\"strong\">Xz-5.0.0</emphasis>"

#. type: Content of: <sect1><important><para>
#: lfs-en/chapter02/hostreqs.xml:144
msgid ""
"Note that the symlinks mentioned above are required to build an LFS system "
"using the instructions contained within this book. Symlinks that point to "
"other software (such as dash, mawk, etc.) may work, but are not tested or "
"supported by the LFS development team, and may require either deviation from "
"the instructions or additional patches to some packages."
msgstr ""
"Remarquez que les liens symboliques mentionnés ci-dessus sont nécessaires "
"pour construire un système LFS en utilisant les instructions contenues à "
"l'intérieur de ce livre. Il se peut que les liens symboliques pointent vers "
"d'autres logiciels (comme dash, mawk, etc), mais ils n'ont pas été testés, "
"ne sont pas pris en charge par l'équipe de développement LFS et il se peut "
"qu'ils demandent soit des déviations par rapport aux instructions, soit des "
"correctifs supplémentaires de certains paquets."

#. type: Content of: <sect1><para>
#: lfs-en/chapter02/hostreqs.xml:159
msgid ""
"To see whether your host system has all the appropriate versions, and the "
"ability to compile programs, run the following:"
msgstr ""
"Pour voir si votre système hôte a toutes les versions nécessaires, exécutez "
"ceci&nbsp;:"

#. type: Content of: <sect1><screen>
#: lfs-en/chapter02/hostreqs.xml:162
#, no-wrap
#| msgid ""
#| "<userinput>cat &gt; version-check.sh &lt;&lt; \"EOF\"\n"
#| "<literal>#!/bin/bash\n"
#| "# Simple script to list version numbers of critical development tools\n"
#| "export LC_ALL=C\n"
#| "bash --version | head -n1 | cut -d\" \" -f2-4\n"
#| "MYSH=$(readlink -f /bin/sh)\n"
#| "echo \"/bin/sh -&gt; $MYSH\"\n"
#| "echo $MYSH | grep -q bash || echo \"ERROR: /bin/sh does not point to bash\"\n"
#| "unset MYSH\n"
#| "\n"
#| "echo -n \"Binutils: \"; ld --version | head -n1 | cut -d\" \" -f3-\n"
#| "bison --version | head -n1\n"
#| "\n"
#| "if [ -h /usr/bin/yacc ]; then\n"
#| "  echo \"/usr/bin/yacc -> `readlink -f /usr/bin/yacc`\";\n"
#| "elif [ -x /usr/bin/yacc ]; then\n"
#| "  echo yacc is `/usr/bin/yacc --version | head -n1`\n"
#| "else\n"
#| "  echo \"yacc not found\" \n"
#| "fi\n"
#| "\n"
#| "bzip2 --version 2&gt;&amp;1 &lt; /dev/null | head -n1 | cut -d\" \" -f1,6-\n"
#| "echo -n \"Coreutils: \"; chown --version | head -n1 | cut -d\")\" -f2\n"
#| "diff --version | head -n1\n"
#| "find --version | head -n1\n"
#| "gawk --version | head -n1\n"
#| "\n"
#| "if [ -h /usr/bin/awk ]; then\n"
#| "  echo \"/usr/bin/awk -&gt; `readlink -f /usr/bin/awk`\";\n"
#| "elif [ -x /usr/bin/awk ]; then\n"
#| "  echo awk is `/usr/bin/awk --version | head -n1`\n"
#| "else \n"
#| "  echo \"awk not found\" \n"
#| "fi\n"
#| "\n"
#| "gcc --version | head -n1\n"
#| "g++ --version | head -n1\n"
#| "ldd --version | head -n1 | cut -d\" \" -f2-  # glibc version\n"
#| "grep --version | head -n1\n"
#| "gzip --version | head -n1\n"
#| "cat /proc/version\n"
#| "m4 --version | head -n1\n"
#| "make --version | head -n1\n"
#| "patch --version | head -n1\n"
#| "echo Perl `perl -V:version`\n"
#| "python3 --version\n"
#| "sed --version | head -n1\n"
#| "tar --version | head -n1\n"
#| "makeinfo --version | head -n1  # texinfo version\n"
#| "xz --version | head -n1\n"
#| "\n"
#| "echo 'int main(){}' &gt; dummy.c &amp;&amp; g++ -o dummy dummy.c\n"
#| "if [ -x dummy ]\n"
#| "  then echo \"g++ compilation OK\";\n"
#| "  else echo \"g++ compilation failed\"; fi\n"
#| "rm -f dummy.c dummy</literal>\n"
#| "EOF\n"
#| "\n"
#| "bash version-check.sh</userinput>"
msgid ""
"<userinput>cat &gt; version-check.sh &lt;&lt; \"EOF\"\n"
"<literal>#!/bin/bash\n"
"# Simple script to list version numbers of critical development tools\n"
"export LC_ALL=C\n"
"bash --version | head -n1 | cut -d\" \" -f2-4\n"
"MYSH=$(readlink -f /bin/sh)\n"
"echo \"/bin/sh -&gt; $MYSH\"\n"
"echo $MYSH | grep -q bash || echo \"ERROR: /bin/sh does not point to bash\"\n"
"unset MYSH\n"
"\n"
"echo -n \"Binutils: \"; ld --version | head -n1 | cut -d\" \" -f3-\n"
"bison --version | head -n1\n"
"\n"
"if [ -h /usr/bin/yacc ]; then\n"
"  echo \"/usr/bin/yacc -> `readlink -f /usr/bin/yacc`\";\n"
"elif [ -x /usr/bin/yacc ]; then\n"
"  echo yacc is `/usr/bin/yacc --version | head -n1`\n"
"else\n"
"  echo \"yacc not found\"\n"
"fi\n"
"\n"
"bzip2 --version 2&gt;&amp;1 &lt; /dev/null | head -n1 | cut -d\" \" -f1,6-\n"
"echo -n \"Coreutils: \"; chown --version | head -n1 | cut -d\")\" -f2\n"
"diff --version | head -n1\n"
"find --version | head -n1\n"
"gawk --version | head -n1\n"
"\n"
"if [ -h /usr/bin/awk ]; then\n"
"  echo \"/usr/bin/awk -&gt; `readlink -f /usr/bin/awk`\";\n"
"elif [ -x /usr/bin/awk ]; then\n"
"  echo awk is `/usr/bin/awk --version | head -n1`\n"
"else\n"
"  echo \"awk not found\"\n"
"fi\n"
"\n"
"gcc --version | head -n1\n"
"g++ --version | head -n1\n"
"ldd --version | head -n1 | cut -d\" \" -f2-  # glibc version\n"
"grep --version | head -n1\n"
"gzip --version | head -n1\n"
"cat /proc/version\n"
"m4 --version | head -n1\n"
"make --version | head -n1\n"
"patch --version | head -n1\n"
"echo Perl `perl -V:version`\n"
"python3 --version\n"
"sed --version | head -n1\n"
"tar --version | head -n1\n"
"makeinfo --version | head -n1  # texinfo version\n"
"xz --version | head -n1\n"
"\n"
"echo 'int main(){}' &gt; dummy.c &amp;&amp; g++ -o dummy dummy.c\n"
"if [ -x dummy ]\n"
"  then echo \"g++ compilation OK\";\n"
"  else echo \"g++ compilation failed\"; fi\n"
"rm -f dummy.c dummy</literal>\n"
"EOF\n"
"\n"
"bash version-check.sh</userinput>"
msgstr ""
"<userinput>cat &gt; version-check.sh &lt;&lt; \"EOF\"\n"
"<literal>#!/bin/bash\n"
"# Script simple pour afficher les numéros de version des outils de "
"développement critiques\n"
"export LC_ALL=C\n"
"bash --version | head -n1 | cut -d\" \" -f2-4\n"
"MYSH=$(readlink -f /bin/sh)\n"
"echo \"/bin/sh -&gt; $MYSH\"\n"
"echo $MYSH | grep -q bash || echo \"ERREUR : /bin/sh ne pointe pas vers "
"bash\"\n"
"unset MYSH\n"
"\n"
"echo -n \"Binutils: \"; ld --version | head -n1 | cut -d\" \" -f3-\n"
"bison --version | head -n1\n"
"\n"
"if [ -h /usr/bin/yacc ]; then\n"
"  echo \"/usr/bin/yacc -> `readlink -f /usr/bin/yacc`\";\n"
"elif [ -x /usr/bin/yacc ]; then\n"
"  echo yacc is `/usr/bin/yacc --version | head -n1`\n"
"else\n"
"  echo \"yacc not found\"\n"
"fi\n"
"\n"
"bzip2 --version 2&gt;&amp;1 &lt; /dev/null | head -n1 | cut -d\" \" -f1,6-\n"
"echo -n \"Coreutils: \"; chown --version | head -n1 | cut -d\")\" -f2\n"
"diff --version | head -n1\n"
"find --version | head -n1\n"
"gawk --version | head -n1\n"
"\n"
"if [ -h /usr/bin/awk ]; then\n"
"  echo \"/usr/bin/awk -&gt; `readlink -f /usr/bin/awk`\";\n"
"elif [ -x /usr/bin/awk ]; then\n"
"  echo awk is `/usr/bin/awk --version | head -n1`\n"
"else\n"
"  echo \"awk not found\"\n"
"fi\n"
"\n"
"gcc --version | head -n1\n"
"g++ --version | head -n1\n"
"ldd --version | head -n1 | cut -d\" \" -f2-  # version de glibc\n"
"grep --version | head -n1\n"
"gzip --version | head -n1\n"
"cat /proc/version\n"
"m4 --version | head -n1\n"
"make --version | head -n1\n"
"patch --version | head -n1\n"
"echo Perl `perl -V:version`\n"
"python3 --version\n"
"sed --version | head -n1\n"
"tar --version | head -n1\n"
"makeinfo --version | head -n1  # version de texinfo\n"
"xz --version | head -n1\n"
"\n"
"echo 'int main(){}' &gt; dummy.c &amp;&amp; g++ -o dummy dummy.c\n"
"if [ -x dummy ]\n"
"  then echo \"compilation avec g++ OK\";\n"
"  else echo \"compilation avec g++ échouée\"; fi\n"
"rm -f dummy.c dummy</literal>\n"
"EOF\n"
"\n"
"bash version-check.sh</userinput>"

#~ msgid ""
#~ "echo 'int main(){}' &gt; dummy.c &amp;&amp; g++ -o dummy dummy.c\n"
#~ "if [ -x dummy ]\n"
#~ "  then echo \"g++ compilation OK\";\n"
#~ "  else echo \"g++ compilation failed\"; fi\n"
#~ "rm -f dummy.c dummy</literal>\n"
#~ "EOF\n"
#~ "\n"
#~ "bash version-check.sh</userinput>"
#~ msgstr ""
#~ "echo 'int main(){}' &gt; dummy.c &amp;&amp; g++ -o dummy dummy.c\n"
#~ "if [ -x dummy ]\n"
#~ "  then echo \"g++ compilation OK\";\n"
#~ "  else echo \"g++ compilation failed\"; fi\n"
#~ "rm -f dummy.c dummy</literal>\n"
#~ "EOF\n"
#~ "\n"
#~ "bash version-check.sh</userinput>"

#~ msgid ""
#~ "On some distributions, there have been reports that some libraries used "
#~ "by gcc can be in an inconsistent state and that this interferes with "
#~ "building some LFS packages.  To check this, look in /usr/lib and "
#~ "possibly /usr/lib64 for libgmp.la, libmpfr.la, and libmpc.la.  Either all "
#~ "three should be present or absent, but not only one or two.  If the "
#~ "problem exists on your system, either rename or delete the .la files or "
#~ "install the appropriate missing package."
#~ msgstr ""
#~ "Sur certaines distributions, il nous a été signalé que des bibliothèques "
#~ "utilisées par gcc pouvaient être incohérentes, ce qui influe sur la "
#~ "construction de certains paquets de LFS. Pour le vérifier, cherchez dans /"
#~ "usr/lib ou dans /usr/lib64 libgmp.la, libmpfr.la, et libmpc.la.  Elles "
#~ "devraient soit être toutes présentes ou toutes absentes, mais il ne "
#~ "devrait pas y en n'avoir qu'une ou deux.  Si vous rencontrez le problème "
#~ "sur votre système, renommez ou effacez les fichiers .la, ou bien "
#~ "installez le paquet qui manque."

#~ msgid "Also check for some library consistency:"
#~ msgstr "Vérifiez la cohérence de certaines bibliothèques&nbsp;:"

#~ msgid ""
#~ "<userinput>cat &gt; library-check.sh &lt;&lt; \"EOF\"\n"
#~ "<literal>#!/bin/bash\n"
#~ "for lib in lib{gmp,mpfr,mpc}.la; do\n"
#~ "  echo $lib: $(if find /usr/lib* -name $lib|\n"
#~ "               grep -q $lib;then :;else echo not;fi) found\n"
#~ "done\n"
#~ "unset lib</literal>\n"
#~ "EOF\n"
#~ "\n"
#~ "bash library-check.sh</userinput>"
#~ msgstr ""
#~ "<userinput>cat &gt; library-check.sh &lt;&lt; \"EOF\"\n"
#~ "<literal>#!/bin/bash\n"
#~ "for lib in lib{gmp,mpfr,mpc}.la; do\n"
#~ "  echo $lib: $(if find /usr/lib* -name $lib|\n"
#~ "               grep -q $lib;then :;else echo not;fi) found\n"
#~ "done\n"
#~ "unset lib</literal>\n"
#~ "EOF\n"
#~ "\n"
#~ "bash library-check.sh</userinput>"

#~ msgid ""
#~ "The files identified by this script should be all present or all absent, "
#~ "but not only one or two present."
#~ msgstr ""
#~ "Les fichiers identifiés par ce script devraient être soit tous présents "
#~ "soit tous absents, mais pas partiellement (un ou deux)."
