# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2020-04-25 20:04+0000\n"
"PO-Revision-Date: 2021-10-31 21:25+0000\n"
"Last-Translator: roptat <roptat@lepiller.eu>\n"
"Language-Team: \n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Generator: Pootle 2.8\n"
"X-POOTLE-MTIME: 1635715515.049541\n"

#. type: Content of: <sect1><title>
#: lfs-en/chapter05/toolchaintechnotes.xml:11
msgid "Toolchain Technical Notes"
msgstr "Notes techniques sur la chaîne d'outils"

#. type: Content of: <sect1><para>
#: lfs-en/chapter05/toolchaintechnotes.xml:13
msgid ""
"This section explains some of the rationale and technical details behind the"
" overall build method. It is not essential to immediately understand "
"everything in this section. Most of this information will be clearer after "
"performing an actual build. This section can be referred to at any time "
"during the process."
msgstr ""
"Cette section explique certains détails explicatifs et techniques derrière "
"la méthode générale de construction. Il n'est pas essentiel de comprendre "
"immédiatement tout ce qui se trouve dans cette section. La plupart de ces "
"informations seront mieux comprises après avoir réalisé une construction "
"complète effective. Cette section peut servir de référence à tout moment "
"lors du processus de construction."

#. type: Content of: <sect1><para>
#: lfs-en/chapter05/toolchaintechnotes.xml:19
msgid ""
"The overall goal of <xref linkend=\"chapter-temporary-tools\"/> is to "
"produce a temporary area that contains a known-good set of tools that can be"
" isolated from the host system. By using <command>chroot</command>, the "
"commands in the remaining chapters will be contained within that "
"environment, ensuring a clean, trouble-free build of the target LFS system. "
"The build process has been designed to minimize the risks for new readers "
"and to provide the most educational value at the same time."
msgstr ""
"Le but global du <xref linkend=\"chapter-temporary-tools\"/> est de fournir "
"une zone temporaire qui contient un ensemble d'outils connus pouvant être "
"isolés du système hôte. En utilisant <command>chroot</command>, les "
"commandes des chapitres restants seront liméts à cet environnement, ce qui "
"assurera une construction du système LFS cible propre, sans soucis. Le "
"processus de construction a été conçu pour minimiser les risques pour les "
"nouveaux lecteurs tout en étant le plus pédagogique possible."

#. type: Content of: <sect1><note><para>
#: lfs-en/chapter05/toolchaintechnotes.xml:28
msgid ""
"Before continuing, be aware of the name of the working platform, often "
"referred to as the target triplet. A simple way to determine the name of the"
" target triplet is to run the <command>config.guess</command> script that "
"comes with the source for many packages. Unpack the Binutils sources and run"
" the script: <userinput>./config.guess</userinput> and note the output. For "
"example, for a 32-bit Intel processor the output will be <emphasis>i686-pc-"
"linux-gnu</emphasis>. On a 64-bit system it will be <emphasis>x86_64-pc-"
"linux-gnu</emphasis>."
msgstr ""
"Avant de continuer, faites attention au nom de la plateforme de travail, "
"souvent appelé le triplet cible. Une façon simple de déterminer le nom du "
"triplet cible est de lancer le script <command>config.guess</command> qui "
"accompagne les sources d'un grand nombre de paquets. Déballez les sources de "
"Binutils, lancez le script <userinput>./config.guess</userinput> et notez la "
"sortie. Par exemple, dans le cas d'un processeur Intel 32&nbsp;bits moderne, "
"la sortie sera du type <emphasis>i686-pc-linux-gnu</emphasis>. Dans le cas "
"d'un système 64&nbsp;bits elle sera du type <emphasis>x86_64-pc-linux-"
"gnu</emphasis>."

#. type: Content of: <sect1><note><para>
#: lfs-en/chapter05/toolchaintechnotes.xml:37
msgid ""
"Also be aware of the name of the platform's dynamic linker, often referred "
"to as the dynamic loader (not to be confused with the standard linker "
"<command>ld</command> that is part of Binutils). The dynamic linker provided"
" by Glibc finds and loads the shared libraries needed by a program, prepares"
" the program to run, and then runs it. The name of the dynamic linker for a "
"32-bit Intel machine will be <filename class=\"libraryfile\">ld-"
"linux.so.2</filename> (<filename class=\"libraryfile\">ld-"
"linux-x86-64.so.2</filename> for 64-bit systems).  A sure-fire way to "
"determine the name of the dynamic linker is to inspect a random binary from "
"the host system by running: <userinput>readelf -l &lt;name of binary&gt; | "
"grep interpreter</userinput> and noting the output. The authoritative "
"reference covering all platforms is in the <filename>shlib-"
"versions</filename> file in the root of the Glibc source tree."
msgstr ""
"De même, faites attention au nom de l'éditeur de liens de la plateforme, "
"souvent appelé le chargeur dynamique (à ne pas confondre avec l'éditeur de "
"liens <command>ld</command> qui fait partie de Binutils). Le chargeur "
"dynamique fourni par Glibc trouve et charge les bibliothèques partagées "
"nécessaires à l'exécution d'un programme, puis, il lance l'exécution. Le nom "
"de l'éditeur dynamique pour une machine Intel 32&nbsp;bits sera <filename "
"class=\"libraryfile\">ld-linux.so.2</filename> (<filename class=\""
"libraryfile\">ld-linux-x86-64.so.2</filename> pour les systèmes 64&nbsp;bits)"
". Une façon sûre de déterminer le nom de l'éditeur de liens dynamiques est "
"d'inspecter un binaire du système hôte au hasard en exécutant&nbsp;: "
"<userinput>readelf -l &lt;nom du binaire&gt; | grep interpreter</userinput> "
"et de noter le résultat. La référence faisant autorité couvrant toutes les "
"plateformes est dans le fichier <filename>shlib-versions</filename> à la "
"racine du répertoire des sources de Glibc."

#. type: Content of: <sect1><para>
#: lfs-en/chapter05/toolchaintechnotes.xml:53
msgid ""
"Some key technical points of how the <xref linkend=\"chapter-temporary-"
"tools\"/> build method works:"
msgstr ""
"Quelques points techniques sur la façon dont fonctionne la méthode de "
"construction du <xref linkend=\"chapter-temporary-tools\"/>&nbsp;:"

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter05/toolchaintechnotes.xml:58
msgid ""
"Slightly adjusting the name of the working platform, by changing the "
"&quot;vendor&quot; field target triplet by way of the <envar>LFS_TGT</envar>"
" variable, ensures that the first build of Binutils and GCC produces a "
"compatible cross-linker and cross-compiler. Instead of producing binaries "
"for another architecture, the cross-linker and cross-compiler will produce "
"binaries compatible with the current hardware."
msgstr ""
"Un léger ajustement du nom de la plateforme de travail, en modifiant le "
"champ «&nbsp;fabriquant&nbsp;» du triblet cible via la variable "
"<envar>LFS_TGT</envar>, s'assure que la première construction de Binutils et "
"de GCC produise un éditeur de liens et un compilateur croisé compatibles. Au "
"lieu de produire des binaires pour une autre architecture, l'éditeur de "
"liens et le compilateur croisé produisent des binaires compatibles avec le "
"matériel actuel."

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter05/toolchaintechnotes.xml:67
msgid ""
"The temporary libraries are cross-compiled.  Because a cross-compiler by its"
" nature cannot rely on anything from its host system, this method removes "
"potential contamination of the target system by lessening the chance of "
"headers or libraries from the host being incorporated into the new tools.  "
"Cross-compilation also allows for the possibility of building both 32-bit "
"and 64-bit libraries on 64-bit capable hardware."
msgstr ""
"Les bibliothèques temporaires sont compilées de manière croisée. Puisqu'un "
"compilateur croisé, par nature, ne peut pas se baser sur rien qui soit issu "
"de son système hôte, cette méthode supprime toute possibilité de "
"contamination du système cible en diminuant les chances des en-têtes ou des "
"bibliothèques du système hôte d'être incluses dans les nouveaux outils. La "
"compilation croisée offre aussi la possibilité de construire à la fois des "
"bibliothèques 32 et 64 bits sur du matériel gérant le 64 bits."

#. type: Content of: <sect1><itemizedlist><listitem><para>
#: lfs-en/chapter05/toolchaintechnotes.xml:76
msgid ""
"Careful manipulation of the GCC source tells the compiler which target "
"dynamic linker will be used."
msgstr ""
"Une manipulation prudente des sources de GCC permet au compilateur de savoir "
"quel éditeur de liens dynamiques cible utiliser."

#. type: Content of: <sect1><para>
#: lfs-en/chapter05/toolchaintechnotes.xml:81
msgid ""
"Binutils is installed first because the <command>configure</command> runs of"
" both GCC and Glibc perform various feature tests on the assembler and "
"linker to determine which software features to enable or disable. This is "
"more important than one might first realize. An incorrectly configured GCC "
"or Glibc can result in a subtly broken toolchain, where the impact of such "
"breakage might not show up until near the end of the build of an entire "
"distribution. A test suite failure will usually highlight this error before "
"too much additional work is performed."
msgstr ""
"Binutils est d'abord installé car les exécutions de Glibc et GCC par "
"<command>configure</command> réalisent quelques tests de fonctionnalités sur "
"l'assembleur et l'éditeur de liens pour déterminer quelles fonctionnalités "
"logicielles activer ou désactiver. Cette étape est plus importante qu'il n'y "
"paraît à première vue. Une mauvaise configuration d'un GCC ou d'une Glibc "
"peut aboutir à une chaîne d'outils subtilement cassée, et l'impact d'une "
"telle cassure n'est pas toujours visible avant la fin de la construction de "
"la distribution complète. Un échec dans la suite de tests révèle "
"habituellement cette erreur avant que trop de travail supplémentaire ne soit "
"réalisé."

#. type: Content of: <sect1><para>
#: lfs-en/chapter05/toolchaintechnotes.xml:90
msgid ""
"Binutils installs its assembler and linker in two locations, <filename "
"class=\"directory\">/tools/bin</filename> and <filename "
"class=\"directory\">/tools/$LFS_TGT/bin</filename>. The tools in one "
"location are hard linked to the other. An important facet of the linker is "
"its library search order. Detailed information can be obtained from "
"<command>ld</command> by passing it the <parameter>--verbose</parameter> "
"flag. For example, an <userinput>ld --verbose | grep SEARCH</userinput> will"
" illustrate the current search paths and their order. It shows which files "
"are linked by <command>ld</command> by compiling a dummy program and passing"
" the <parameter>--verbose</parameter> switch to the linker. For example, "
"<userinput>gcc dummy.c -Wl,--verbose 2&gt;&amp;1 | grep "
"succeeded</userinput> will show all the files successfully opened during the"
" linking."
msgstr ""
"Binutils installe son assembleur et son éditeur de liens à deux endroits, <"
"filename class=\"directory\">/tools/bin</filename> et <filename class=\""
"directory\">/tools/$LFS_TGT/bin</filename>. Les outils sont liés en dur d'un "
"emplacement à l'autre. Un aspect important de l'éditeur de liens est son "
"ordre de recherche des bibliothèques. Vous pouvez obtenir des informations "
"détaillées à partir de <command>ld</command> en lui passant le commutateur "
"<parameter>--verbose</parameter>. Par exemple, un <userinput>ld --verbose | "
"grep SEARCH</userinput> illustre les chemins de recherche réels et leur "
"ordre. Il montre quels fichiers sont liés par <command>ld</command> en "
"compilant un programme de test et en passant le commutateur "
"<parameter>--verbose</parameter> à l'éditeur de liens. Par exemple, "
"<userinput>gcc dummy.c -Wl,--verbose 2&gt;&amp;1 | grep succeeded</userinput>"
" affiche tous les fichiers ouverts avec succès lors de l'édition des liens."

#. type: Content of: <sect1><para>
#: lfs-en/chapter05/toolchaintechnotes.xml:103
msgid ""
"The next package installed is GCC. An example of what can be seen during its"
" run of <command>configure</command> is:"
msgstr ""
"Le prochain paquet installé est GCC. Un exemple de ce qui peut être vu "
"pendant son exécution de <command>configure</command> est&nbsp;:"

#. type: Content of: <sect1><screen>
#: lfs-en/chapter05/toolchaintechnotes.xml:106
#, no-wrap
msgid ""
"<computeroutput>checking what assembler to use... /tools/i686-lfs-linux-gnu/bin/as\n"
"checking what linker to use... /tools/i686-lfs-linux-gnu/bin/ld</computeroutput>"
msgstr ""
"<computeroutput>checking what assembler to use... /tools/i686-lfs-linux-gnu/bin/as\n"
"checking what linker to use... /tools/i686-lfs-linux-gnu/bin/ld</computeroutput>"

#. type: Content of: <sect1><para>
#: lfs-en/chapter05/toolchaintechnotes.xml:109
msgid ""
"This is important for the reasons mentioned above. It also demonstrates that"
" GCC's configure script does not search the PATH directories to find which "
"tools to use. However, during the actual operation of <command>gcc</command>"
" itself, the same search paths are not necessarily used. To find out which "
"standard linker <command>gcc</command> will use, run: <userinput>gcc -print-"
"prog-name=ld</userinput>."
msgstr ""
"C'est important pour les raisons mentionnées ci-dessus. Cela démontre aussi "
"que le script configure de GCC ne cherche pas les répertoires PATH pour "
"savoir quels outils utiliser. Néanmoins, lors d'une opération normale de "
"<command>gcc</command>, les mêmes chemins de recherche ne sont pas forcément "
"utilisés. Pour trouver quel éditeur de liens standard <command>gcc</command> "
"utilise, lancez&nbsp;: <userinput>gcc -print-prog-name=ld</userinput>."

#. type: Content of: <sect1><para>
#: lfs-en/chapter05/toolchaintechnotes.xml:116
msgid ""
"Detailed information can be obtained from <command>gcc</command> by passing "
"it the <parameter>-v</parameter> command line option while compiling a dummy"
" program. For example, <userinput>gcc -v dummy.c</userinput> will show "
"detailed information about the preprocessor, compilation, and assembly "
"stages, including <command>gcc</command>'s included search paths and their "
"order."
msgstr ""
"Vous pouvez obtenir des informations détaillées à partir de "
"<command>gcc</command> en lui fournissant l'option en ligne de commande "
"<parameter>-v</parameter> lors de la compilation d'un programme de tests. "
"Par exemple, <userinput>gcc -v dummy.c</userinput> affiche des informations "
"détaillées sur les étapes du préprocesseur, de la compilation et de "
"l'assemblage ce quit comprent les chemins de recherche inclus par "
"<command>gcc</command> et leur ordre."

#. type: Content of: <sect1><para>
#: lfs-en/chapter05/toolchaintechnotes.xml:122
msgid ""
"Next installed are sanitized Linux API headers. These allow the standard C "
"library (Glibc) to interface with features that the Linux kernel will "
"provide."
msgstr ""
"Les en-têtes de l'API de Linux nettoyées sont ensuite installées. Elles "
"permettent à la bibliothèque standard C (Glibc) d'interagir avec les "
"fonctionnalités que le noyau Linux fournit."

#. type: Content of: <sect1><para>
#: lfs-en/chapter05/toolchaintechnotes.xml:126
msgid ""
"The next package installed is Glibc. The most important considerations for "
"building Glibc are the compiler, binary tools, and kernel headers. The "
"compiler is generally not an issue since Glibc will always use the compiler "
"relating to the <parameter>--host</parameter> parameter passed to its "
"configure script; e.g. in our case, the compiler will be <command>i686-lfs-"
"linux-gnu-gcc</command>. The binary tools and kernel headers can be a bit "
"more complicated. Therefore, take no risks and use the available configure "
"switches to enforce the correct selections. After the run of "
"<command>configure</command>, check the contents of the "
"<filename>config.make</filename> file in the <filename "
"class=\"directory\">glibc-build</filename> directory for all important "
"details.  Note the use of <parameter>CC=\"i686-lfs-gnu-gcc\"</parameter> to "
"control which binary tools are used and the use of the "
"<parameter>-nostdinc</parameter> and <parameter>-isystem</parameter> flags "
"to control the compiler's include search path. These items highlight an "
"important aspect of the Glibc package&mdash;it is very self-sufficient in "
"terms of its build machinery and generally does not rely on toolchain "
"defaults."
msgstr ""
"Le paquet Glibc est est installé. Les choses les plus importantes à prendre "
"en considération pour construire Glibc sont le compilateur, les outils "
"binaires et les en-têtes du noyau. Le compilateur ne pose généralement pas "
"de problème car Glibc utilise toujours le compilateur lié au paramètre "
"<parameter>--host</parameter> passé à son script configure. Par exemple, "
"dans notre cas, le compilateur sera <command>i686-lfs-linux-gnu-gcc</command>"
". Les outils binaires et les en-têtes du noyau peuvent être un peu plus "
"compliqués. Ne prenez donc pas de risques et utilisez les options de "
"configure disponibles pour imposer les bonnes sélections. Après l'exécution "
"de <command>configure</command>, vérifiez le contenu du fichier "
"<filename>config.make</filename> dans le répertoire <filename class=\""
"directory\">glibc-build</filename> pour tous les détails importants. "
"Remarquez que l'utilisation de <parameter>CC=\"i686-lfs-gnu-gcc\"</parameter>"
" permet de contrôler les outils binaires utilisés, et que celle des "
"paramètres <parameter>-nostdinc</parameter> et "
"<parameter>-isystem</parameter> permet de contrôler le chemin de recherche "
"des en-têtes du compilateur. Ces éléments soulignent un aspect important du "
"paquet Glibc, à savoir qu'il est auto-suffisant en termes de machinerie de "
"construction et ne repose généralement pas sur la chaîne d'outils par défaut."

#. type: Content of: <sect1><para>
#: lfs-en/chapter05/toolchaintechnotes.xml:144
msgid ""
"During the second pass of Binutils, we are able to utilize the "
"<parameter>--with-lib-path</parameter> configure switch to control "
"<command>ld</command>'s library search path."
msgstr ""
"Lors de la seconde passe de Binutils, nous sommes capables d'utiliser "
"l'option <parameter>--with-lib-path</parameter> de configure pour contrôler "
"le chemin de recherche des bibliothèques de <command>ld</command>."

#. type: Content of: <sect1><para>
#: lfs-en/chapter05/toolchaintechnotes.xml:148
msgid ""
"For the second pass of GCC, its sources also need to be modified to tell GCC"
" to use the new dynamic linker. Failure to do so will result in the GCC "
"programs themselves having the name of the dynamic linker from the host "
"system's <filename class=\"directory\">/lib</filename> directory embedded "
"into them, which would defeat the goal of getting away from the host. From "
"this point onwards, the core toolchain is self-contained and self-hosted. "
"The remainder of the <xref linkend=\"chapter-temporary-tools\"/> packages "
"all build against the new Glibc in <filename "
"class=\"directory\">/tools</filename>."
msgstr ""
"Pour la deuxième passe de GCC, ses sources doivent aussi être modifiées pour "
"dire à GCC d'utiliser le nouvel éditeur de liens dynamiques. Un échec dans "
"ce processus aura pour conséquence que les programmes GCC eux-mêmes aient le "
"même nom que l'éditeur de liens dynamique du répertoire <filename class=\""
"directory\">/lib</filename> du système hôte intégré. Or, cela va à "
"l'encontre de l'objectif de se démarquer de l'hôte. Dès lors, le cœur des "
"outils est auto-suffisant et auto-hébergé. Les paquets restants du <xref "
"linkend=\"chapter-temporary-tools\"/> se constuisent tous contre la nouvelle "
"Glibc de <filename class=\"directory\">/tools</filename>."

#. type: Content of: <sect1><para>
#: lfs-en/chapter05/toolchaintechnotes.xml:158
msgid ""
"Upon entering the chroot environment in <xref linkend=\"chapter-building-"
"system\"/>, the first major package to be installed is Glibc, due to its "
"self-sufficient nature mentioned above.  Once this Glibc is installed into "
"<filename class=\"directory\">/usr</filename>, we will perform a quick "
"changeover of the toolchain defaults, and then proceed in building the rest "
"of the target LFS system."
msgstr ""
"En entrant dans l'environnement chroot dans le <xref linkend=\"chapter-"
"building-system\"/>, le premier paquet majeur à être installé est Glibc, à "
"cause de sa nature auto-suffisante mentionnée ci-dessus. Une fois que Glibc "
"est installée dans <filename class=\"directory\">/usr</filename>, nous "
"allons réaliser une rapide modification des valeurs par défaut de l'ensemble "
"des outils puis, nous allons continuer la construction du reste du système "
"LFS cible."
