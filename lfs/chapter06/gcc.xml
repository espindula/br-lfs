<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-gcc" role="wrap">
  <?dbhtml filename="gcc.html"?>

  <sect1info condition="script">
    <productname>gcc</productname>
    <productnumber>&gcc-version;</productnumber>
    <address>&gcc-url;</address>
  </sect1info>

  <title>GCC-&gcc-version;</title>

  <indexterm zone="ch-system-gcc">
    <primary sortas="a-GCC">GCC</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>Le paquet GCC contient la collection de compilateurs GNU, qui
    inclut les compilateurs C et C++.</para>

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&gcc-ch6-sbu;</seg>
        <seg>&gcc-ch6-du;</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation de GCC</title>

    <para>La documentation de GCC recommande de construire GCC dans un
    du répertoire de construction dédié&nbsp;:</para>

<screen><userinput remap="pre">mkdir -v build
cd       build</userinput></screen>

    <para>Préparez la compilation de GCC&nbsp;:</para>

<screen><userinput remap="configure">SED=sed                               \
../configure --prefix=/usr            \
             --enable-languages=c,c++ \
             --disable-multilib       \
             --disable-bootstrap      \
             --with-system-zlib</userinput></screen> 

    <para>Remarquez que pour d'autres langages, il existe des prérequis pas encore
    disponibles. Voir le <ulink url="&blfs-root;view/svn/general/gcc.html">livre BLFS</ulink> pour des instructions sur la manière de
    construire tous les langages supportés par GCC.</para>

    <variablelist>
      <title>Voici la signification de la nouvelle option de configure&nbsp;:</title>

      <varlistentry>
        <term><envar>SED=sed</envar></term>
        <listitem>
          <para>Configurer cette variable d'environnement empêche un codage en dur
          du chemin vers /tools/bin/sed.</para>
        </listitem>
      </varlistentry>
 
      <varlistentry>
        <term><parameter>--with-system-zlib</parameter></term>
        <listitem>
          <para>Ce paramètre dit à GCC de se lier à la copie installée sur le système
          de la bibliothèque Zlib, plutôt qu'à sa propre copie interne.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>Compilez le paquet&nbsp;:</para>

<screen><userinput remap="make">make</userinput></screen>

    <important>
      <para>Dans cette section, la suite de tests pour GCC est considérée

      comme critique. Ne les sautez sous aucun prétexte.</para>
    </important>

   <para>Un ensemble de tests dans la suite de tests de GCC est connu pour
   déborder la pile, donc augmentez la taille de la pile avant de lancer les 
   tests&nbsp;:</para>

<screen><userinput remap="test">ulimit -s 32768</userinput></screen>

    <para>Testez les résultats mais ne vous arrêtez pas aux
    erreurs&nbsp;:</para>

<screen><userinput remap="test">make -k check</userinput></screen>

    <para>Pour recevoir un résumé des résultats de la suite de tests,
    lancez&nbsp;</para>

<screen><userinput remap="test">../contrib/test_summary</userinput></screen>

    <para>Pour n'avoir que les résumés, redirigez la sortie vers

    <userinput>grep -A7 Summ</userinput>.</para>

    <para>Vous pouvez comparer les résultats avec ceux situés dans <ulink
    url="&test-results;"/> et <ulink url="http://gcc.gnu.org/ml/gcc-testresults/"/>.</para>

    <para>Quelques échecs inattendus sont inévitables. Les développeurs
    de GCC connaissent ces problèmes, mais ne les ont pas encore
    résolus. En particulier, deux tests de la suite de tests libstdc++ sont connus
    pour échouer quand ils sont lancés comme ici en utilisateur root. 
    Sauf si les résultats du test sont très différents de ceux sur
    l'adresse ci-dessus, vous pouvez continuer en toute sécurité.</para>

    <para>Installez le paquet&nbsp;:</para>

<screen><userinput remap="install">make install</userinput></screen>

    <para>Créez un lien symbolique exigé par le <ulink
    url="http://refspecs.linuxfoundation.org/FHS_3.0/fhs/ch03s09.html">FHS</ulink>
    pour des raisons historiques.</para>

<screen><userinput remap="install">ln -sv ../usr/bin/cpp /lib</userinput></screen>

    <para>Beaucoup de paquets utilisent le nom <command>cc</command>
    pour appeler le compilateur C. Pour satisfaire ces paquets, créez un
    lien symbolique&nbsp;:</para>

<screen><userinput remap="install">ln -sv gcc /usr/bin/cc</userinput></screen>

    <para>Ajoutez un lien symbolique de compatibilité pour permettre la construction
    de programmes avec
    Link Time Optimization (LTO):</para> 

<screen><userinput remap="install">install -dm755 /usr/lib/bfd-plugins
ln -sfv ../../libexec/gcc/$(gcc -dumpmachine)/&gcc-version;/liblto_plugin.so \
        /usr/lib/bfd-plugins/</userinput></screen>

    <para>Maintenant que notre chaîne d'outils est en place, il est
    important de s'assurer à nouveau que la compilation et l'édition de
    liens fonctionneront comme prévu. Cela se fait en effectuant les
    mêmes tests de propreté que ceux faits plus haut dans ce chapitre&nbsp;:</para>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='a'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='b'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='c'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='d'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='e'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='f'])"/>

<screen><computeroutput>/usr/lib/gcc/i686-pc-linux-gnu/&gcc-version;/../../../crt1.o succeeded
/usr/lib/gcc/i686-pc-linux-gnu/&gcc-version;/../../../crti.o succeeded
/usr/lib/gcc/i686-pc-linux-gnu/&gcc-version;/../../../crtn.o succeeded</computeroutput></screen>

    <para>Selon l'architecture de votre machine, le message ci-dessus peut
    légèrement différer, la différence portant normalement sur le nom du
    répertoire après <filename class="directory">/usr/lib/gcc</filename>. Si
    votre machine est un système 64 bits, il se peut que vous voyiez un
    répertoire nommé <filename class="directory">lib64</filename> vers la fin de
    la chaîne. La chose importante à chercher est que <command>gcc</command> ait trouvé les trois
    <filename>crt*.o</filename> sous le répertoire
    <filename class="directory">/usr/lib</filename>.</para>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='g'])"/>

<screen><userinput>grep -B4 '^ /usr/include' dummy.log</userinput></screen>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='h'])"/>

<screen><computeroutput>#include &lt;...&gt; search starts here:
 /usr/lib/gcc/i686-pc-linux-gnu/&gcc-version;/include
 /usr/local/include
 /usr/lib/gcc/i686-pc-linux-gnu/&gcc-version;/include-fixed
 /usr/include</computeroutput></screen>

   <para>A nouveau, notez que le nom du répertoire après votre triplette cible
   peut être différent de celui ci-dessus, selon votre architecture.</para>

    <note><para>Depuis la version 4.3.0, GCC installe maintenant sans
    condition le fichier <filename>limits.h</filename> dans un répertoire
    à part <filename class="directory">include-fixed</filename>, et ce
    répertoire doit être en place.</para></note>
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='i'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='j'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='k'])"/>

<screen><computeroutput>SEARCH_DIR("/usr/i686-pc-linux-gnu/lib32")
SEARCH_DIR("/usr/local/lib32")
SEARCH_DIR("/lib32")
SEARCH_DIR("/usr/lib32")
SEARCH_DIR("/usr/i686-pc-linux-gnu/lib")
SEARCH_DIR("/usr/local/lib")
SEARCH_DIR("/lib")
SEARCH_DIR("/usr/lib");</computeroutput></screen>

    <para>Il se peut qu'un système 64 bits voie d'autres répertoires.
    Par exemple, voici la sortie d'une machine x86_64&nbsp;:</para>

<screen><computeroutput>SEARCH_DIR("/usr/x86_64-unknown-linux-gnu/lib64")
SEARCH_DIR("/usr/local/lib64")
SEARCH_DIR("/lib64")
SEARCH_DIR("/usr/lib64")
SEARCH_DIR("/usr/x86_64-unknown-linux-gnu/lib")
SEARCH_DIR("/usr/local/lib")
SEARCH_DIR("/lib")
SEARCH_DIR("/usr/lib");</computeroutput></screen>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='l'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='m'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='n'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='o'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='p'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='q'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='r'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='s'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='t'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='u'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='v'])"/>

    <para>Enfin, déplacez un fichier mal placé&nbsp;:</para>

<screen><userinput remap="install">mkdir -pv /usr/share/gdb/auto-load/usr/lib
mv -v /usr/lib/*gdb.py /usr/share/gdb/auto-load/usr/lib</userinput></screen>

  </sect2>

  <sect2 id="contents-gcc" role="content">
    <title>Contenu de GCC</title>

    <segmentedlist>
      <segtitle>Programmes installés</segtitle>
      <segtitle>Bibliothèques installées</segtitle>
      <segtitle>Répertoires installés</segtitle>

      <seglistitem>
        <seg>c++, cc (lien vers gcc), cpp, g++, gcc,
        gcc-ar, gcc-nm, gcc-ranlib et gcov</seg>
        <seg>libasan.{a,so}, libatomic.{a,so}, libgcc.a, libgcc_eh.a, 
        libgcc_s.so, libgcov.a, libgomp.{a,so}, libiberty.a, libitm.{a,so},
        liblto_plugin.so,
        libquadmath.{a,so}, libssp.{a,so},
        libssp_nonshared.a, libstdc++.{a,so}, libsupc++.a et libtsan.{a,so}</seg>

        <seg>/usr/include/c++, /usr/lib/gcc, /usr/libexec/gcc, 
        /usr/share/gcc-&gcc-version;</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descriptions courtes</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="c">
        <term><command>c++</command></term>
        <listitem>
          <para>Le compilateur C++</para>
          <indexterm zone="ch-system-gcc c">
            <primary sortas="b-c++">c++</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="cc">
        <term><command>cc</command></term>
        <listitem>
          <para>Le compilateur C</para>
          <indexterm zone="ch-system-gcc cc">
            <primary sortas="b-cc">cc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="cpp">
        <term><command>cpp</command></term>
        <listitem>
          <para>Le préprocesseur C&nbsp;; il est utilisé par le compilateur pour l'extension des instructions
          #include, #define et d'autres instructions similaires dans les fichiers sources</para>
          <indexterm zone="ch-system-gcc cpp">
            <primary sortas="b-cpp">cpp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="g">
        <term><command>g++</command></term>
        <listitem>
          <para>Le compilateur C++</para>
          <indexterm zone="ch-system-gcc g">
            <primary sortas="b-g++">g++</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcc">
        <term><command>gcc</command></term>
        <listitem>
          <para>Le compilateur C</para>
          <indexterm zone="ch-system-gcc gcc">
            <primary sortas="b-gcc">gcc</primary>
          </indexterm>
        </listitem>
      </varlistentry>
 
      <varlistentry id="gcc-ar">
        <term><command>gcc-ar</command></term>
        <listitem>
          <para>Une enveloppe autour de <command>ar</command> qui ajoute un greffon
          à la ligne de commande. Ce programme n'est utilisé que pour ajouter
          "l'optimisation du temps d'édition des liens" et il n'est pas utile
          avec les options de construction par défaut.</para>
          <indexterm zone="ch-system-gcc gcc-ar">
            <primary sortas="b-gcc-ar">gc-ar</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcc-nm">
        <term><command>gcc-nm</command></term>
        <listitem>
          <para>Une enveloppe autour de <command>nm</command> qui ajoute un greffon
          à la ligne de commande. Ce programme n'est utilisé que pour ajouter
          "l'optimisation du temps d'édition des liens" et il n'est pas utile
          avec les options de construction par défaut.</para>
          <indexterm zone="ch-system-gcc gcc-nm">
            <primary sortas="b-gcc-nm">gc-nm</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcc-ranlib">
        <term><command>gcc-ranlib</command></term>
        <listitem>
          <para>Une enveloppe autour de <command>ranlib</command> qui ajoute un greffon
          à la ligne de commande. Ce programme n'est utilisé que pour ajouter
          "l'optimisation du temps d'édition des liens" et il n'est pas utile
          avec les options de construction par défaut.</para>
          <indexterm zone="ch-system-gcc gcc-ranlib">
            <primary sortas="b-gcc-ranlib">gc-ranlib</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcov">
        <term><command>gcov</command></term>
        <listitem>
          <para>Un outil de tests&nbsp;; il est utilisé pour analyser les programmes et
          savoir où des optimisations seraient suivies du plus d'effet</para>
          <indexterm zone="ch-system-gcc gcov">
            <primary sortas="b-gcov">gcov</primary>
          </indexterm>
        </listitem>
      </varlistentry>
 
      <varlistentry id="libasan">
        <term><command>libasan</command></term>
        <listitem>
          <para>La bibliothèque Address Sanitizer à l'exécution</para>
          <indexterm zone="ch-system-gcc libasan">
            <primary sortas="b-libasan">libasan</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libgcc">
        <term><filename class="libraryfile">libgcc</filename></term>
        <listitem>
          <para>Contient un support en exécution pour <command>gcc</command></para>
          <indexterm zone="ch-system-gcc libgcc">
            <primary sortas="c-libgcc">libgcc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libgcov">
        <term><filename class="libraryfile">libgcov</filename></term>
        <listitem>
          <para>Cette bibliothèque est liée à un programme où on demande à GCC d'activer le profiling</para>
          <indexterm zone="ch-system-gcc libgcov">
            <primary sortas="c-libgcov">libgcov</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libgomp">
        <term><filename class="libraryfile">libgomp</filename></term>
        <listitem>
          <para>Implémentation GNU de l'API OpenMP API pour la programmation en mémoire parallèle partagée pour plusieurs plateformes en
          C/C++ et Fortran</para>
          <indexterm zone="ch-system-gcc libgomp">
            <primary sortas="c-libgomp">libgomp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libiberty">
        <term><filename class="libraryfile">libiberty</filename></term>
        <listitem>
          <para>Contient des routines utilisées par différents programmes GNU comme
          <command>getopt</command>, <command>obstack</command>,
          <command>strerror</command>, <command>strtol</command>, et
          <command>strtoul</command></para>
          <indexterm zone="ch-system-gcc libiberty">
            <primary sortas="c-libiberty">libiberty</primary>
          </indexterm>
       </listitem>
      </varlistentry>

      <varlistentry id="liblto_plugin">
        <term><filename class="libraryfile">liblto_plugin</filename></term>
        <listitem>
          <para>plugin <foreignphrase>GCC's Link Time Optimization</foreignphrase> (LTO,
          optimisation du temps d'édition de liens de GCC) permettant à GCC de
          pratiquer des optimisations tout au cours des unités de compilation.</para>
          <indexterm zone="ch-system-gcc liblto_plugin">
            <primary sortas="c-liblto_plugin">liblto_plugin</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libquadmath">
        <term><filename class="libraryfile">libquadmath</filename></term>
        <listitem>
          <para>API de la bibliothèque de maths GCC de précision au carré</para>
          <indexterm zone="ch-system-gcc libquadmath">
            <primary sortas="c-libquadmath">libquadmath</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libssp">
        <term><filename class="libraryfile">libssp</filename></term>
        <listitem>
          <para>Contient des routines supportant la fonctionnalité de protection
          de GCC contre les débordements de mémoire</para>
          <indexterm zone="ch-system-gcc libssp">
            <primary sortas="c-libssp">libssp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libstdc">
        <term><filename class="libraryfile">libstdc++</filename></term>
        <listitem>
          <para>La bibliothèque C++ standard</para>
          <indexterm zone="ch-system-gcc libstdc">
            <primary sortas="c-libstdc++">libstdc++</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libsupc">
        <term><filename class="libraryfile">libsupc++</filename></term>
        <listitem>
          <para>Fournit des routines de support pour le langage de programmation C++</para>
          <indexterm zone="ch-system-gcc libsupc">
            <primary sortas="c-libsupc++">libsupc++</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libtsan">
        <term><filename class="libraryfile">libtsan</filename></term>
        <listitem>
          <para>La bibliothèque Thread Sanitizer à l'exécution</para>
          <indexterm zone="ch-system-gcc libtsan">
            <primary sortas="c-libtsan">libtsan</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
