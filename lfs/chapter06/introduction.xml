<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>
<sect1 id="ch-system-introduction">
<title>Introduction</title>
<?dbhtml filename="introduction.html"?>

<para>Dans ce chapitre, nous entrons dans le site de construction et démarrons
la construction de notre système LFS. C'est-à-dire, nous entrons avec chroot
dans le mini système Linux temporaire, et lançons l'installation de tous les
packages un par un.</para>
 
<para>L'installation de tous les logiciels est plutôt simple et vous allez
probablement penser qu'il serait beaucoup plus rapide de donner les
instructions génériques d'installation pour un package et de seulement
expliquer en détail l'installation des packages nécessitant une méthode
alternative. Même si nous sommes d'accord avec ceci, nous avons choisi de
donner les instructions complètes pour chaque package, simplement pour éviter
toute confusion ou erreur.</para>

<para>La clé pour apprendre ce qui rend un système Linux fonctionnel est de s
avoir à quoi sert chaque package et pourquoi l'utilisateur (ou le système) en a
besoin. Dans ce but, pour chaque package installé, un résumé de son contenu est
donné suivi de descriptions concises de chaque programme et bibliothèque qu'il
a installé.</para>

<para>Si vous comptez utiliser une optimisation de compilation pour les
packages installés dans ce chapitre, jetez un oeil aux astuces d'optimisation
dans <ulink url="&hints-root;optimization.txt" />. Ces options peuvent faire
qu'un programme s'exécute légèrement plus vite, mais peuvent également causer
des problèmes de compilation et même des erreurs à l'exécution. Si vous
rencontrez des problèmes après avoir utilisé les optimisations, essayez
toujours sans optimisation pour voir si le problème persiste. Même si le package
compile en utilisant les optimisations, il y a des risques pour qu'il ait été
compilé de façon incorrecte dû aux complexes interactions entre le code et les
outils de construction. En bref, les petits gains potentiels obtenus avec
l'optimisation du compilateur sont généralement bien moindres par rapport au
risque. Pour une première installation de LFS, nous vous encourageons à
construire sans optimisation. Votre système sera toujours très rapide et très
stable en même temps.</para>

<para>L'ordre dans lequel ces packages sont installés dans ce chapitre doit être
suivi à la lettre, pour s'assurer qu'aucun programme n'obtienne un chemin
codé en dur se référant à <filename class="directory">/tools</filename>. Pour
la même raison, <emphasis>ne pas</emphasis> compiler les packages en parallèle.
Compiler en parallèle peut vous sauver du temps (et spécialement sur les
machines bi-processeur), mais cela peut résulter en un programme contenant un
chemin codé en dur menant vers <filename class="directory">/tools</filename>,
ce qui empêchera le programme de fonctionner normalement lorsque ce répertoire
sera supprimé.</para>

<para>Avant les instructions d'installation, chaque page d'installation donne
quelques informations sur le package&nbsp;: une description concise de ce
qu'il contient, le temps approximatif pour le construire, l'espace disque
nécessaire lors du processus de construction, l'emplacement officiel de
téléchargement (au cas où vous souhaiteriez mettre à jour que quelques
packages) et de quels autres packages il dépend pour sa construction. Après les
instructions d'installation suit une liste de programmes et bibliothèques que
le package installe avec une courte description de ceux-ci.</para>

<para>Si vous souhaitez garder trace des fichiers installés par chaque
package, vous pouvez utiliser un gestionnaire de package. Pour un survol
général des gestionnaires de packages, jetez un &oelig;il à <ulink
url="&blfs-root;view/cvs/introduction/important.html"/>. Et pour une méthode de
gestion de packages spécifique à LFS, voir
<ulink url="&hints-root;more_control_and_pkg_man.txt"/>.</para>

</sect1>
