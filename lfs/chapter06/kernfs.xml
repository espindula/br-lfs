<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-kernfs">
  <?dbhtml filename="kernfs.html"?>

  <title>Préparer les systèmes de fichiers virtuels du noyau</title>

  <indexterm zone="ch-system-kernfs">
    <primary sortas="e-/dev/">/dev/*</primary>
  </indexterm>

    <para>Différents systèmes de fichiers exportés par le noyau sont
    utilisés pour communiquer avec le noyau lui-même. Ces systèmes de fichiers
    sont virtuels du fait qu'aucun espace disque n'est utilisé pour
    eux. Le contenu de ces systèmes de fichiers réside en
    mémoire.</para>

    <para>Commencez en créant les répertoires dans lesquels les systèmes
    de fichiers seront montés&nbsp;:</para>

<screen><userinput>mkdir -pv $LFS/{dev,proc,sys,run}</userinput></screen>

  <sect2>
    <title>Création des noeuds initiaux vers les périphériques</title>

    <para>Quand le noyau démarre le système, il a besoin de la présence
    de quelques fichiers de périphériques, en particulier les périphériques
    <filename class="devicefile">console</filename> et
    <filename class="devicefile">null</filename>. Les n&oelig;uds de périphérique doivent être créés
    sur le disque dur afin d'être
    disponible avant que <command>udevd</command> n'ait été démarré et
    aussi quand Linux est démarré avec
    <parameter>init=/bin/bash</parameter>. Créez les périphériques en
    exécutant les commandes suivantes&nbsp;:</para>

<screen><userinput>mknod -m 600 $LFS/dev/console c 5 1
mknod -m 666 $LFS/dev/null c 1 3</userinput></screen>

  </sect2>

  <sect2 id="ch-system-bindmount">
    <title>Monter et peupler /dev</title>

    <para>La méthode recommandée pour peupler le répertoire 
    <filename class="directory">/dev</filename> de périphériques est de
    monter un système de fichiers virtuel (comme
    <systemitem class="filesystem">tmpfs</systemitem>) sur le répertoire
    <filename class="directory">/dev</filename>, et d'autoriser la
création dynamique des périphériques sur le système de fichiers virtuel
une fois qu'ils sont détectés ou que quelque chose tente d'y accéder.
La création de périphériques est généralement faite par Udev lors du démarrage. Comme ce nouveau système
ne contient pas encore Udev et n'a pas encore été démarré, il est nécessaire de
monter et de peupler
    <filename class="directory">/dev</filename> manuellement. Cela se
    fait en montant en double le répertoire
    <filename class="directory">/dev</filename> du système hôte. Le
    montage en double est un type spécial de montage qui vous permet de
    créer le miroir d'un répertoire ou d'un point de montage à un autre
    endroit. Utilisez la commande suivante pour réaliser cela&nbsp;:</para>

<screen><userinput>mount -v --bind /dev $LFS/dev</userinput></screen>

  </sect2>

  <sect2 id="ch-system-kernfsmount"> 

    <title>Monter les systèmes de fichiers virtuels du noyau</title>

      <para>Maintenant montez les systèmes de fichiers virtuels du noyau
      qui en résultent&nbsp;:</para>

<screen><userinput>mount -vt devpts devpts $LFS/dev/pts -o gid=5,mode=620
mount -vt proc proc $LFS/proc
mount -vt sysfs sysfs $LFS/sys
mount -vt tmpfs tmpfs $LFS/run</userinput></screen>

    <variablelist>
      <title>Voici la signification de des options de montage de devpts&nbsp;:</title>

      <varlistentry>
        <term><parameter>gid=5</parameter></term>
        <listitem>
          <para>Cela garantit que tous les n&oelig;uds de périphérique créés par
          devpts appartiennent au groupe dont l'ID est 5. C'est l'ID que nous
          utiliserons plus tard pour le groupe <systemitem
          class="groupname">tty</systemitem>.  Nous utilisons l'ID de groupe au
          lieu du nom car il se pourrait que le szstème hôte utilise un ID différent
          pour son groupe <systemitem class="groupname">tty</systemitem>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>mode=0620</parameter></term>
        <listitem>
          <para>Cela garantit que tous les n&oelig;uds de périphérique créés par
          devpts ont le mode 0620 (lecture et écriture par l'utilisateur, écriture
          par le groupe). Combinée à l'option ci-dessus, cela garantit que devts
          créera des n&oelig;uds de périphérique correspondant aux exigences de
          grantpt(), c'est-à-dire que le binaire d'aide <command>pt_chown</command> de
          Glibc (qui n'est pas installé par défaut) n'est pas nécessaire.</para>
        </listitem>
      </varlistentry>

    </variablelist>

      <para>Dans certains systèmes hôtes, <filename>/dev/shm</filename> est un
      lien symbolique vers <filename class="directory">/run/shm</filename>. Le
      tmpfs /run a été monté tout à l'heure, donc vous ne devez créer un répertoire que
      dans ce cas précis.</para>

<screen><userinput>if [ -h $LFS/dev/shm ]; then
  mkdir -pv $LFS/$(readlink $LFS/dev/shm)
fi</userinput></screen>

  </sect2>

</sect1>
