<sect2><title>&nbsp;</title><para>&nbsp;</para></sect2>

<sect2>
<title>Installation de Binutils</title>

<para>C'est le bon moment pour vérifier que nos pseudo-terminaux (PTYs)
fonctionnent correctement à l'intérieur de l'environnement chroot. Nous allons
de nouveau vérifier rapidement que tout est configuré correctement en exécutant
un simple test:</para>

<para><screen><userinput>expect -c "spawn ls"</userinput></screen></para>

<para>Si vous recevez ce message:</para>

<blockquote><screen>The system has no more ptys.  Ask your system administrator to create more.</screen></blockquote>

<para>Votre environnement chroot n'est pas configuré correctement pour utiliser
des PTYs. Dans ce cas, il n'est pas nécessaire d'exécuter les suites de tests
pour Binutils et GCC jusqu'à la résolution de ce problème. Merci de vous référer
aux sections "Monter les systèmes de fichiers proc et devpts" et "Créer les
périphériques (Makedev)" et d'exécuter les étapes recommendées pour règler ce
problème.</para>

<note><para>La suite de tests pour Binutils dans cette section est considérée
<emphasis>critique</emphasis>. Notre conseil est de ne pas prendre cette suite à
la légère.</para></note>

<para>Ce package est connu pour se comporter bizarrement si vous avez changé
les options d'optimisation par défaut (y compris les options -march et -mcpu).
Donc, si vous avez défini des variables d'environnement qui écrasent les
optimisations par défaut, comme CFLAGS et CXXFLAGS, nous vous recommandons de
les annuler ou de les modifier lors de la construction de Binutils.</para>

<para>La documentation d'installation de Binutils recommende de le construire
en dehors du répertoire des sources.</para>

<para><screen><userinput>mkdir ../binutils-build
cd ../binutils-build</userinput></screen></para>

<para>Maintenant, préparez la compilation de Binutils:</para>

<para><screen><userinput>../binutils-&binutils-version;/configure \
&nbsp;&nbsp;&nbsp;&nbsp;--prefix=/usr --enable-shared</userinput></screen></para>

<para>Compilez le package:</para>

<para><screen><userinput>make tooldir=/usr LDFLAGS="-s"</userinput></screen></para>

<para><screen><userinput>make check</userinput></screen></para>

<para>Normalement, le répertoire <emphasis>tooldir</emphasis> (où les
exécutables vont se trouver) vaut $(exec_prefix)/$(target_alias) qui s'étendra
en, par exemple, <filename>/usr/i686-pc-linux-gnu</filename>. Comme nous
compilons seulement pour notre propre système, nous n'avons pas besoin de ce
répertoire spécifique à la cible dans <filename>/usr</filename>. Cette
configuration aurait été utilisée si le système avait été utilisé pour faire de
la cross-compilation (par exemple en compilant un package sur une machine Intel
qui génère du code exécuté sur des machines PowerPC).</para>

<para>Testez le résultat:</para>

<para><screen><userinput>make check</userinput></screen></para>

<para>Installez le package:</para>

<para><screen><userinput>make tooldir=/usr install</userinput></screen></para>

<para>Installez les fichiers d'entête de <emphasis>libiberty</emphasis>
nécessaires à quelques packages:</para>

<para><screen><userinput>cp ../binutils-&binutils-version;/include/libiberty.h /usr/include</userinput></screen></para>

</sect2>

