<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>
<sect1 id="ch-system-MAKEDEV" xreflabel="Make_devices">
<title>Créer des périphériques avec Make_devices-&makedev-version;</title>
<?dbhtml filename="makedevices.html"?>

<indexterm zone="ch-system-MAKEDEV"><primary sortas="a-Make_devices">Make_devices</primary></indexterm>

<para>Le package Make_devices contient un script pour créer des n&oelig;uds de
périphériques.</para>

<screen>&buildtime; 1&nbsp;SBU
&diskspace; 160&nbsp;Ko</screen>

<para>Pour son installation, Make_devices dépend de Bash, Bzip2,
Coreutils.</para>



<sect2>
<title>Créer des périphériques</title>

<para>Notez que le déballage du fichier
<filename>make_devices-&makedev-version;.bz2</filename> ne crée pas de
répertoire pour vous car le fichier ne contient qu'un script shell.</para>

<para>Installez le script <filename>make_devices</filename>&nbsp;:</para>

<screen><userinput>bzcat make_devices-&makedev-version;.bz2 &gt;
/dev/make_devices
chmod 754 /dev/make_devices</userinput></screen>

<para>Les n&oelig;uds de périphériques sont des fichiers spéciaux&nbsp;: ils
peuvent générer ou revoir des données. Ils correspondent habituellement à des
pièces matérielles physiques. Les n&oelig;uds périphériques peuvent être créés
en lançant des commandes de la forme&nbsp;: <command>mknod -m mode nom type
majeur
mineur</command>. Avec une telle commande, <emphasis>mode</emphasis> est le
triplet octal des droits lecture/écriture/exécution et <emphasis>nom</emphasis>
est le nom du fichier périphérique à créé. Cela pourrait sembler surprenant
mais le nom du périphérique est totalement arbitraire si ce n'est que la
plupart des périphériques utilisent les périphériques suivant leur nom habituel
comme <filename>/dev/null</filename>. Les trois paramètres restant indiquent au
noyau à quel périphérique le n&oelig;ud fait référence. Le
<emphasis>type</emphasis> est une lettre, soit b soit c, suivant que le
périphérique est accédé bloc par bloc (comme un disque dur) ou caractère par
caractère (comme une console). <emphasis>major</emphasis> et
<emphasis>minor</emphasis> sont des nombres formant ensemble un code qui
identifie le périphérique pour le noyau. Une liste des numéros de périphériques
déjà affectés est disponible dans le fichier <filename>devices.txt</filename>
intégré dans le sous-répertoire <filename
class="directory">Documentation</filename> des sources du noyau.</para>

<para>Notez que la même combinaison majeur/mineur est habituellement affecté
au périphérique bloc et caractère. Néanmoins, certains périphériques ne peuvent
être interchangés. Un périphérique est identifié par le triplet
type/majeur/mineur et non pas seulement par la paire majeur/mineur, donc lors
du choix d'un n&oelig;ud périphérique, il est important de choisir le bon
<emphasis>type</emphasis> de périphérique.</para>

<para>Parce que regarder les triplets type/majeur/mineur et utiliser
<command>mknod</command> manuellement est difficile et que l'erreur est facile,
le script <filename>make_devices</filename> a été créé. Il contient tout une
série de commandes <command>mknod</command>, une pour chaque périphérique,
complète avec le nom recommendé, l'affectation des droits et du groupe. 
Il a été configuré pour que seul un ensemble minimal de périphériques ne
soient créés, les autres étant en commentaire. Ouvrez
<filename>make_devices</filename> avec un éditeur et personnalisez-le suivant
vos besoins. Ceci peut prendre du temps mais est très simple. Une fois
satisfait, lancez le script pour créer les fichiers périphériques&nbsp;:</para>

<warning><para>Se tromper en éditant le fichier <command>make_devices</command>
sur la correspondance avec votre configuration système (par exemple sur le
nombre de partitions) peut vous amener des erreurs de
démarrage.</para></warning>

<screen><userinput>cd /dev
./make_devices</userinput></screen>

<para>Si vous avez réussi à monter le système de fichiers devpts un peu plus
tôt dans <xref linkend="ch-system-proc"/>, vous pouvez continuer avec la
section suivante. Si vous êtiez incapable de monter devpts, vous devrez créer
quelques n&oelig;uds périphériques statiques, ptyXX et ttyXX, à la place. Pour
cela, ouvrez <filename>make_devices</filename> dans votre éditeur, allez à la
section <quote>Pseudo-TTY masters</quote> et activez quelques périphériques
ptyXX. Une poignée sera suffisante pour permettre aux suites de tests de se
lancer mais, si vous pensez lancer un noyau sans support de devpts, vous aurez
probablement besoin de beaucoup plus (chaque xterm, connexion ssh, connexion
telnet et ainsi de suite utilise un de ces peuso-terminaux). Dans la section
suivant immédiatement <quote>Pseudo-TTY slaves</quote>, activez les
périphériques ttyXX correspondants. Ceci fait, lancez
<command>./make_devices</command> à partir de <filename>/dev</filename> pour
qu'il crée les nouveaux périphériques.</para>

</sect2>


<sect2 id="contents-makedev"><title>Contenu de Make_devices</title>

<para><emphasis>Script installé</emphasis>&nbsp;: make_devices</para>

</sect2>

<sect2><title>Courte description</title>

<indexterm zone="ch-system-MAKEDEV make_devices"><primary
sortas="d-make_devices">make_devices</primary></indexterm>
<para id="make_devices"><command>make_devices</command> est un script pour
créer un ensemble basique de n&oelig;uds périphériques statiques, résidant
habituellement dans le répertoire <filename
class="directory">/dev</filename>.</para>

</sect2>



</sect1>
