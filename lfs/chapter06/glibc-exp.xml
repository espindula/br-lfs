<sect2>
<title>Explication des commandes</title>

<para><userinput>patch -Np1 -i ../glibc-&glibc-patch-version;.patch:</userinput>
Ce patch convertit toutes les occurences de <filename>$(PERL)</filename> en
<filename>/usr/bin/perl</filename> dans le fichier
<filename>malloc/Makefile</filename>. Ceci est fait parce que Glibc ne peut
pas détecter automatiquement l'emplacement de perl, celui-ci n'ayant pas
encore été installé. Ce patch remplace aussi toutes les occurences du mot
<emphasis>root</emphasis> par <emphasis>0</emphasis> dans le fichier
<filename>login/Makefile</filename>. Ceci est fait parce que Glibc lui-même
n'est pas encore installé et donc, on ne peut pas résoudre l'identifiant d'un
utilisateur grâce à son nom. Un <userinput>chown root file</userinput> échouerait,
mais cela fonctionnera en utilisant directement les numéros d'identifiant.</para>

<para>Ce patch contient aussi quelques corrections de bugs et de trous de sécurité.
Pour plus de détails, voir
<ulink url="http://www.zipworld.com.au/~gschafer/lfs-tweaks.html"/>.</para>

<para><userinput>touch /etc/ld.so.conf:</userinput> Une des étapes finales de
l'installation de Glibc lance ldconfig pour mettre à jour le cache duchargeur
dynamique. Si ce fichier n'existe pas, l'installation s'interrompera avec une
erreur de lecture du fichier, donc nous créons un fichier vide (le fichier vide
contiendra les valeurs par défaut pour Glibc en utilisant /lib et /usr/lib,
ce qui est suffisant).</para>

<para><userinput>--disable-profile:</userinput> Ceci désactive la construction des
bibliothèques avec des informations de performance. Cette commande peut être oubliée
si vous souhaitez travailler sur les performances.</para>

<para><userinput>--enable-add-ons:</userinput> Permet l'utilisation des linuxthreads que nous
installons avec Glibc.</para>

<para><userinput>--libexecdir=/usr/bin:</userinput> Cela force l'installation du programme
pt_chown dans /usr/bin directory.</para>

<para><userinput>echo "cross-compiling = no" &gt; configparms:</userinput>
Nous faisons ceci parce que nous créons seulement notre propre système.
La cross-compilation est utilisée pour construire un package pour un Apple Power PC sur
un système Intel. La raison pour laquelle Glibc pense que nous faisons de la
cross-compilation est qu'il ne peut compiler un programme de test pour s'en apercevoir,
donc il est par défaut en cross-compilation. Compiler le programme de test échoue car Glibc
n'a pas encore été installé.</para>

<para><userinput>exec /bin/bash:</userinput> Cette commande va démarrer un nouveau shell bash
qui va remplacer l'actuel. Cela supprime le message "I have no name!" de l'invite
de commande qui est dû à l'incapacité de bash à faire correspondre un id utilisateur avec
un nom utilisateur (qui est dû au fait que Glibc n'est pas installé).</para>

</sect2>