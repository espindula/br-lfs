<sect2>
<title>Explication des commandes</title>

<para><userinput>mknod -m 0666 /dev/null c 1 3:</userinput> Glibc a besoin d'un périphérique
null pour compiler correctement. Tous les autres périphériques seront créés dans la
prochaine section.</para>

<para><userinput>touch /etc/ld.so.conf</userinput> Une des étapes finales de l'installation
de Glibc est d'exécuter ldconfig afin de mettre à jour le cache du chargeur dynamique. Si le
fichier n'existe pas, l'installation échouera retournant que le fichier ne peut être lu, donc
nous avons simplement créé un fichier vide (avec ce fichier vide, Glibc utilisera par défaut
/lib et usr/lib, ce qui est satisfaisant).</para>

<para><userinput>sed 's%\$(PERL)%/usr/bin/perl%' 
malloc/Makefile.backup &gt; malloc/Makefile:</userinput> Cette commande sed remplace dans
<filename>malloc/Makefile.backup</filename> toutes les occurences de <filename>$(PERL)</filename>
en <filename>/usr/bin/perl</filename>. La sortie est alors écrite sur le fichier original
<filename>malloc/Makefile.in</filename> qui est utilisé durant la configuration. Ceci est
fait parce que Glibc ne peut détecter automatiquement perl puisqu'il n'a pas encore été 
installé.</para>

<para><userinput>sed 's/root/0' login/Makefile.backup &gt;
login/Makefile:</userinput> Cette commande sed remplace toutes les occurences du mot
<filename>root</filename> dans le fichier <filename>login/Makefile.backup</filename>
par 0. Glibc n'étant pas encore installé sur le système LFS, les noms d'utilisateur
ne peuvent pas encore être remplacés par leur numéros d'identifiant. Donc, nous
remplaçons le nom d'utilisateur root par l'identifiant de root, qui est 0.</para>

<para><userinput>--enable-add-ons:</userinput> Permet l'utilisation des linuxthreads que nous
installons avec Glibc.</para>

<para><userinput>--libexecdir=/usr/bin:</userinput> Cela force l'installation du programme
pt_chown dans /usr/bin directory.</para>

<para><userinput>echo "cross-compiling = no" &gt; configparms:</userinput>
Nous faisons ceci parce que nous créons seulement notre propre système.
La cross-compilation est utilisée pour construire un package pour un Apple Power PC sur
un système Intel. La raison pour laquelle Glibc pense que nous faisons de la
cross-compilation est qu'il ne peut compiler un programme de test pour s'en apercevoir,
donc il est par défaut en cross-compilation. Compiler le programme de test échoue car Glibc
n'a pas encore été installé.</para>

<para><userinput>exec /bin/bash:</userinput> Cette commande va démarrer un nouveau shell bash
qui va remplacer l'actuel. Cela suprime le message "I have no name!" de l'invite
de commande qui est dû à l'incapacité de bash à faire correspondre un id utilisateur avec
un nom utilisateur (qui est dû au fait que Glibc n'est pas installé).</para>

</sect2>

