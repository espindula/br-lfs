<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>
<sect1 id="ch-system-binutils" xreflabel="Binutils">
<title>Binutils-&binutils-version;</title>
<?dbhtml filename="binutils.html"?>

<indexterm zone="ch-system-binutils"><primary sortas="a-Binutils">Binutils</primary></indexterm>

<para>Le package Binutils contient un éditeur de liens, un assembleur et
d'autres outils pour gérer des fichiers objets.</para>

<screen>&buildtime; 1,4&nbsp;SBU
&diskspace; 167&nbsp;Mo</screen>

<para>L'installation de Binutils dépend de Bash, Coreutils, Diffutils, GCC, Gettext,
Glibc, Grep, Make, Perl, Sed, Texinfo.</para>



<sect2><title>Installation de Binutils</title>

<para>C'est maintenant le bon moment pour vérifier que vos pseudo-terminaux
(PTY) fonctionnent correctement dans l'environnement chroot. Nous allons de
nouveau vérifier rapidement que tout est bien configuré en réalisant un test
simple&nbsp;:</para>

<screen><userinput>expect -c "spawn ls"</userinput></screen>

<para>Si vous recevez le message&nbsp;:</para>

<blockquote><screen>The system has no more ptys.  Ask your system administrator to create more.</screen></blockquote>

<para>c'est que votre environnement chroot n'est pas bien configuré pour les
PTY. Dans ce cas, il n'y a aucune raison de lancer les suites de tests pour
Binutils et GCC jusqu'à ce que vous soyez capable de résoudre ces problèmes.
Merci de vous référer aux sections <xref linkend="ch-system-proc"/> et
and the <xref linkend="ch-system-MAKEDEV"/> et de réaliser les étapes
recommendées pour corriger le problème.</para>

<para>Ce package est connu pour mal se comporter si vous changez les options
d'optimisation par défaut (en incluant les options -march et -mcpu). Donc, si
vous avez défini des variables d'environnement qui surchargent les optimisations
pas défaut, telles que CFLAGS et CXXFLAGS, nous vous recommandons de supprimer
cette initialisation lors de la construction de Binutils.</para>

<para>La documentation de Binutils recommende de construire Binutils à
l'extérieur du répertoire des sources dans un répertoire dédié&nbsp;:</para>

<screen><userinput>mkdir ../binutils-build
cd ../binutils-build</userinput></screen>

<para>Maintenant, préparez la compilation de Binutils&nbsp;:</para>

<screen><userinput>../binutils-&binutils-version;/configure --prefix=/usr --enable-shared</userinput></screen>

<para>Compilez le package&nbsp;:</para>

<screen><userinput>make tooldir=/usr</userinput></screen>

<para>Normalement, le répertoire <emphasis>tooldir</emphasis> (où finiront les
exécutables) est configuré avec $(exec_prefix)/$(target_alias), ce qui
s'étendra en, par exemple, <filename>/usr/i686-pc-linux-gnu</filename>. Comme
nous ne construisons que pour notre propre système, nous n'avons pas besoin 
d'un répertoire spécifique à notre cible dans <filename>/usr</filename>. Cette
configuration serait utilisée si le système avait pour but une cross-compilation
(par exemple, compiler un package sur une machine Intel qui génère du code
pouvant être exécuté sur des machines PowerPC).</para>

<important><para>La suite de tests de Binutils dans cette section est
considérée comme <emphasis>critique</emphasis>. Notre conseil est de ne pas la
laisser passer, quelqu'en soit la raison.</para></important>

<para>Testez the résultats&nbsp;:</para>

<screen><userinput>make check</userinput></screen>

<para>Les notes de la suite de tests (<xref
linkend="ch-tools-binutils-pass2"/>) sont toujours appropriées ici.
Assurez-vous de vous y référer si vous avez un doute.</para>

<para>Installez le package&nbsp;:</para>

<screen><userinput>make tooldir=/usr install</userinput></screen>

<para>Installez le fichier d'en-tête <emphasis>libiberty</emphasis>, requis par
certains packages:</para>

<screen><userinput>cp ../binutils-&binutils-version;/include/libiberty.h /usr/include</userinput></screen>

</sect2>


<sect2 id="contents-binutils"><title>Contenu de Binutils</title>

<para><emphasis>Programmes installés</emphasis>&nbsp;: addr2line, ar, as,
c++filt, gprof, ld, nm, objcopy, objdump, ranlib, readelf, size, strings et
strip</para>

<para><emphasis>Bibliothèques installées</emphasis>&nbsp;: libiberty.a,
libbfd.[a,so] et libopcodes.[a,so]</para>

</sect2>


<sect2><title>Courtes descriptions</title>

<indexterm zone="ch-system-binutils addr2line"><primary sortas="b-addr2line">addr2line</primary></indexterm>
<para id="addr2line"><command>addr2line</command> traduit les adresses de
programme en noms de fichier et numéros de ligne. Suivant une adresse et le nom
d'un exécutable, il utilise les informations de déboguage disponibles dans
l'exécutable pour trouver le fichier source et le numéro de ligne associé à
cette adresse.</para>

<indexterm zone="ch-system-binutils ar"><primary sortas="b-ar">ar</primary></indexterm>
<para id="ar"><command>ar</command> crée, modifie et extrait des archives. Une
archive est un simple fichier contenant une collection d'autres fichiers dans
une structure qui rend possible la récupération des fichiers originaux
individuels (aussi appelés membres de l'archive).</para>

<indexterm zone="ch-system-binutils as"><primary sortas="b-as">as</primary></indexterm>
<para id="as"><command>as</command> est un assembleur. Il assemble la sortie 
de gcc en des fichiers objet.</para>

<indexterm zone="ch-system-binutils c-filt"><primary sortas="b-c++filt">c++filt</primary></indexterm>
<para id="c-filt"><command>c++filt</command> est utilisé par l'éditeur de liens
pour récupérer les symboles C++ et Java, pour empêcher les fonctions
surchargées d'arrêter brutalement le programme.</para>

<indexterm zone="ch-system-binutils gprof"><primary sortas="b-gprof">gprof</primary></indexterm>
<para id="gprof"><command>gprof</command> affiche les données de profile
d'appels dans un graphe.</para>

<indexterm zone="ch-system-binutils ld"><primary sortas="b-ld">ld</primary></indexterm>
<para id="ld"><command>ld</command> est un éditeur de liens. Il combine un
certain nombre d'objects et de fichiers archives dans un seul fichier, en
déplaçant leur données et en regroupant les références de symboles.</para>

<indexterm zone="ch-system-binutils nm"><primary sortas="b-nm">nm</primary></indexterm>
<para id="nm"><command>nm</command> liste les symboles disponibles dans un
fichier objet.</para>

<indexterm zone="ch-system-binutils objcopy"><primary sortas="b-objcopy">objcopy</primary></indexterm>
<para id="objcopy"><command>objcopy</command> est utilisé pour traduire un
type de fichier objet en un autre type.</para>

<indexterm zone="ch-system-binutils objdump"><primary sortas="b-objdump">objdump</primary></indexterm>
<para id="objdump"><command>objdump</command> affiche des informations sur le
fichier objet donné, les options contrôlant les informations à afficher.
L'information affichée est surtout utile aux programmeurs qui travaillent sur
les outils de compilation.</para>

<indexterm zone="ch-system-binutils ranlib"><primary sortas="b-ranlib">ranlib</primary></indexterm>
<para id="ranlib"><command>ranlib</command> génère un index du contenu d'(une 
archive et le stocke dans l'archive. L'index liste tous les symboles définis
par les membres de l'archive qui sont des fichiers objet déplaçables.</para>

<indexterm zone="ch-system-binutils readelf"><primary sortas="b-readelf">readelf</primary></indexterm>
<para id="readelf"><command>readelf</command> affiche des informations sur
les binaires de type elf.</para>

<indexterm zone="ch-system-binutils size"><primary sortas="b-size">size</primary></indexterm>
<para id="size"><command>size</command> liste les tailles de section, et le
 total, pour les fichiers objets donnés.</para>

<indexterm zone="ch-system-binutils strings"><primary sortas="b-strings">strings</primary></indexterm>
<para id="strings"><command>strings</command> affiche, pour chaque fichier
donné, la séquence de caractères affichables qui sont d'au moins la taille
spécifiée (par défaut, 4). Pour les fichiers objects, il affiche, par défaut,
seulement les chaînes des sections d'initialisation et de chargement. Pour les
autres types de fichiers, il parcourt le fichier entier.</para>

<indexterm zone="ch-system-binutils strip"><primary sortas="b-strip">strip</primary></indexterm>
<para id="strip"><command>strip</command> supprime les symboles des fichiers
objets.</para>

<indexterm zone="ch-system-binutils libiberty"><primary sortas="c-libiberty">libiberty</primary></indexterm>
<para id="libiberty"><command>libiberty</command> contient des routines
utilisées par différents programmes GNU, ceci incluant getopt, obstack,
strerror, strtol et strtoul.</para>

<indexterm zone="ch-system-binutils libbfd"><primary sortas="c-libbfd">libbfd</primary></indexterm>
<para id="libbfd"><command>libbfd</command> est la bibliothèque des descripteurs
de fichiers binaires (<foreignphrase>Binary File
Descriptor</foreignphrase>).</para>

<indexterm zone="ch-system-binutils libopcodes"><primary sortas="c-libopcodes">libopcodes</primary></indexterm>
<para id="libopcodes"><command>libopcodes</command> est une bibliothèque 
de gestion des opcodes. Elle est utilisée pour construire des outils comme
objdump. Les opcodes sont le <quote>texte lisible</quote> des instructions du
processeur.</para>

</sect2>



</sect1>
