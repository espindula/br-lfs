<sect2><title>Contenu de gcc-&gcc-contversion;</title>

<sect3><title>Programmes</title>
<para>c++, c++filt, cc (lien vers gcc), cc1, cc1plus, collect2, cpp, cpp0,
g++, gcc, gcov, protoize et unprotoize</para></sect3>

<sect3><title>Descriptions</title>

<sect4><title>cc, cc1, cc1plus, gcc</title>
<para>Ce sont les compilateurs C. Un compilateur transforme le code source
au format texte dans un format que l'ordinateur comprends. Après qu'un code
source ait été compilé en un fichier objet, un éditeur de lien va créer un
fichier exécutable à partir d'un ou plusieurs de ces fichiers généré par le
compilateur.</para></sect4>

<sect4><title>c++, cc1plus, g++</title>
<para>Ce sont les compilateurs C++; l'équivalent de cc et gcc, etc...
</para></sect4>

<sect4><title>c++filt</title>
<para>c++filt est utilisé pour filtrer les symboles C++.</para></sect4>

<sect4><title>collect2</title>
<para>Aucune description actuellement disponible.</para></sect4>

<sect4><title>cpp, cpp0</title>
<para>cpp réalise un travail préliminaire sur un fichier source, comme inclure
le contenu des fichiers d'entêtes dans ce code source. C'est une bonne idée de
ne pas faire ceci manuellement pour gagner beaucoup de temps. Il suffit
d'insérer une ligne comme #include &lt;filename&gt;. Ce préprocesseur insère
le contenu de ce fichier dans le fichier source. C'est une des choses que
réalise le préprocesseur.</para></sect4>

<sect4><title>gcov</title>
<para>Aucune description actuellement disponible.</para></sect4>

<sect4><title>protoize</title>
<para>Programme optionnel qui transforme des fonctions ou des définitions pre-ANSI dans
le nouveau style des prototypes C ANSI (fichier par défaut à rechercher est
<filename>/usr/lib/gcc-lib/&lt;arch&gt;/&lt;version&gt;/SYSCALLS.c.X</filename>)</para></sect4>

<sect4><title>unprotoize</title>
<para>Programme optionnel qui transforme des prototypes réalisés avec protoize vers
l'ancien style pre-ANSI (job correct seulement quand conversion avant protoize)</para></sect4>

</sect3>

<sect3><title>Bibliothèques</title>
<para>libgcc.a, libiberty.a, libstdc++.[a,so]</para>

<sect4><title>libgcc</title>
<para>libgcc.a est une bibliothèque utilisé par gcc lors de son exécution. La
plupart du temps, sur la pluport des machines, libgcc.a n'est pas réellement
nécessaire.</para></sect4>

<sect4><title>libiberty</title>
<para>libiberty est une collection de sous-routines utilisées par différents
programmmes GNU, comme getopt, obstack, strerror, strtol et strtoul.</para></sect4>

<sect4><title>libstdc++</title>
<para>libstdc++ est la bibliothèque C++. Elle est utilisée par les programmes
C++ et contient des fonctions couramment utilisé par eux. De cette façon, le
développeur n'a pas besoin d'écrire certaines fonctions (comme écrire une ligne
de texte à l'écran) à partir de rien, à chaque fois qu'il crée un
programme.</para></sect4>

</sect3>

</sect2>

