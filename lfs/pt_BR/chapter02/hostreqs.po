# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-08-30 04:18+0000\n"
"PO-Revision-Date: 2023-06-06 04:18+0000\n"
"Last-Translator: Jamenson Ferreira Espindula de Almeida Melo <jafesp@gmail."
"com>\n"
"Language-Team: Portuguese (Brazil) <https://translate.linuxfromscratch.org/"
"projects/linux-from-scratch/chapter02_hostreqs/pt_BR/>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n > 1;\n"
"X-Generator: Weblate 4.17\n"

#. type: Attribute 'xreflabel' of: <sect1><sect2><bridgehead>
#: lfs-en/chapter02/hostreqs.xml:8 lfs-en/chapter02/hostreqs.xml:11
#: lfs-en/chapter02/hostreqs.xml:169
msgid "Host System Requirements"
msgstr "Exigências do Sistema Anfitrião"

#. type: Content of: <sect1><sect2><title>
#: lfs-en/chapter02/hostreqs.xml:14
msgid "Hardware"
msgstr "Hardware"

#. type: Content of: <sect1><sect2><para>
#: lfs-en/chapter02/hostreqs.xml:16
msgid ""
"The LFS editors recommend that the system CPU have at least four cores and "
"that the system have at least 8 GB of memory.  Older systems that do not "
"meet these requirements will still work, but the time to build packages will "
"be significantly longer than documented."
msgstr ""
"Os(As) editores(as) do LFS recomendam que a CPU do sistema tenha pelo menos "
"quatro núcleos e que o sistema tenha pelo menos oito (08) GB de memória. Os "
"sistemas mais antigos que não atendam a essas exigências ainda funcionarão, "
"porém o tempo para construir os pacotes será significantemente maior que o "
"documentado."

#. type: Content of: <sect1><sect2><title>
#: lfs-en/chapter02/hostreqs.xml:26
msgid "Software"
msgstr "Software"

#. type: Content of: <sect1><sect2><para>
#: lfs-en/chapter02/hostreqs.xml:28
msgid ""
"Your host system should have the following software with the minimum "
"versions indicated. This should not be an issue for most modern Linux "
"distributions. Also note that many distributions will place software headers "
"into separate packages, often in the form of <quote>&lt;package-name&gt;-"
"devel</quote> or <quote>&lt;package-name&gt;-dev</quote>. Be sure to install "
"those if your distribution provides them."
msgstr ""
"Seu sistema anfitrião deveria ter o software seguinte com as versões mínimas "
"indicadas. Isso não deveria ser um problema para a maioria das distribuições "
"Linux modernas. Também, perceba que muitas distribuições colocarão "
"cabeçalhos de aplicativos dentro de pacotes separados, frequentemente na "
"forma de <quote>&lt;nome-pacote&gt;-devel</quote> ou <quote>&lt;nome-"
"pacote&gt;-dev</quote>. Certifique-se de instalá-los se sua distribuição os "
"fornecer."

#. type: Content of: <sect1><sect2><para>
#: lfs-en/chapter02/hostreqs.xml:36
msgid ""
"Earlier versions of the listed software packages may work, but have not been "
"tested."
msgstr ""
"Versões anteriores dos pacotes de software listados possivelmente funcionem, "
"porém não foram testados."

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:42
msgid ""
"<emphasis role=\"strong\">Bash-3.2</emphasis> (/bin/sh should be a symbolic "
"or hard link to bash)"
msgstr ""
"<emphasis role=\"strong\">Bash-3.2</emphasis> (/bin/sh deveria ser um link "
"simbólico ou real para bash)"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:47
msgid ""
"<emphasis role=\"strong\">Binutils-2.13.1</emphasis> (Versions greater than "
"&binutils-version; are not recommended as they have not been tested)"
msgstr ""
"<emphasis role=\"strong\">Binutils-2.13.1</emphasis> (Versões maiores que "
"&binutils-version; não são recomendadas dado que elas não foram testadas)"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:53
msgid ""
"<emphasis role=\"strong\">Bison-2.7</emphasis> (/usr/bin/yacc should be a "
"link to bison or a small script that executes bison)"
msgstr ""
"<emphasis role=\"strong\">Bison-2.7</emphasis> (/usr/bin/yacc deveria ser um "
"link para bison ou script pequeno que executa bison)"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:58
msgid "<emphasis role=\"strong\">Coreutils-7.0</emphasis>"
msgstr "<emphasis role=\"strong\">Coreutils-7.0</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:62
msgid "<emphasis role=\"strong\">Diffutils-2.8.1</emphasis>"
msgstr "<emphasis role=\"strong\">Diffutils-2.8.1</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:66
msgid "<emphasis role=\"strong\">Findutils-4.2.31</emphasis>"
msgstr "<emphasis role=\"strong\">Findutils-4.2.31</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:70
msgid ""
"<emphasis role=\"strong\">Gawk-4.0.1</emphasis> (/usr/bin/awk should be a "
"link to gawk)"
msgstr ""
"<emphasis role=\"strong\">Gawk-4.0.1</emphasis> (/usr/bin/awk deveria ser um "
"link para gawk)"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:75
msgid ""
"<emphasis role=\"strong\">GCC-5.1</emphasis> including the C++ compiler, "
"<command>g++</command> (Versions greater than &gcc-version; are not "
"recommended as they have not been tested). C and C++ standard libraries "
"(with headers) must also be present so the C++ compiler can build hosted "
"programs"
msgstr ""
"<emphasis role=\"strong\">GCC-5.1</emphasis> incluindo o compilador C++, "
"<command>g++</command> (Versões maiores que &gcc-version; não são "
"recomendadas dado que elas não foram testadas). As bibliotecas C e C++ "
"padrão (com cabeçalhos) também precisam estar presentes, de forma que o "
"compilador C++ possa construir aplicativos hospedados"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:83
msgid "<emphasis role=\"strong\">Grep-2.5.1a</emphasis>"
msgstr "<emphasis role=\"strong\">Grep-2.5.1a</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:87
msgid "<emphasis role=\"strong\">Gzip-1.3.12</emphasis>"
msgstr "<emphasis role=\"strong\">Gzip-1.3.12</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:91
msgid "<emphasis role=\"strong\">Linux Kernel-&min-kernel;</emphasis>"
msgstr "<emphasis role=\"strong\">Núcleo Linux-&min-kernel;</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:93
msgid ""
"The reason for the kernel version requirement is that we specify that "
"version when building <application>glibc</application> in <xref "
"linkend=\"chapter-cross-tools\"/> and <xref linkend=\"chapter-building-"
"system\"/>, so the workarounds for older kernels are not enabled and the "
"compiled <application>glibc</application> is slightly faster and smaller.  "
"As at June 2023, &min-kernel; is the oldest kernel release still supported "
"by the kernel developers."
msgstr ""
"A razão para a exigência da versão do núcleo é a que nós especificamos essa "
"versão quando da construção da <application>glibc</application> no <xref "
"linkend=\"chapter-cross-tools\"/> e <xref linkend=\"chapter-building-"
"system\"/>, de forma que as soluções alternativas para os núcleos mais "
"antigos não estão habilitadas e a <application>glibc</application> compilada "
"é ligeiramente mais rápida e menor. Em junho de 2023, &min-kernel; é o "
"lançamento mais antigo do núcleo ainda suportado pelos(as) "
"desenvolvedores(as) do núcleo."

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:102
msgid ""
"If the host kernel is earlier than &min-kernel; you will need to replace the "
"kernel with a more up-to-date version. There are two ways you can go about "
"this. First, see if your Linux vendor provides a &min-kernel; or later "
"kernel package. If so, you may wish to install it. If your vendor doesn't "
"offer an acceptable kernel package, or you would prefer not to install it, "
"you can compile a kernel yourself. Instructions for compiling the kernel and "
"configuring the boot loader (assuming the host uses GRUB) are located in "
"<xref linkend=\"chapter-bootable\"/>."
msgstr ""
"Se o núcleo do anfitrião for anterior a &min-kernel;, [então] você precisará "
"substituir o núcleo por uma versão mais atualizada. Existem duas maneiras de "
"você fazer isso. Primeira, veja se seu fornecedor Linux fornece um pacote do "
"núcleo &min-kernel; ou mais atual. Se sim, [então] você possivelmente deseje "
"instalá-lo. Se seu fornecedor não oferecer um pacote de núcleo aceitável ou "
"você preferisse não instalá-lo, [então] você mesmo(a) pode compilar um "
"núcleo. Instruções para a compilação de núcleo e configuração de carregador "
"de inicialização (presumindo que o anfitrião usa GRUB) estão localizadas no "
"<xref linkend=\"chapter-bootable\"/>."

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:111
msgid ""
"We require the host kernel to support UNIX 98 pseudo terminal (PTY).  It "
"should be enabled on all desktop or server distros shipping Linux &min-"
"kernel; or a newer kernel. If you are building a custom host kernel, ensure "
"<option>CONFIG_UNIX98_PTYS</option> is set to <literal>y</literal> in the "
"kernel configuration."
msgstr ""
"Nós exigimos que o núcleo do anfitrião suporte o pseudo terminal UNIX 98 "
"(PTY). Ele deveria estar habilitado em todas as distribuições desktop ou "
"servidor que embarquem o Linux &min-kernel; ou um núcleo mais recente. Se "
"você estiver construindo um núcleo personalizado de anfitrião, certifique-se "
"de que <option>CONFIG_UNIX98_PTYS</option> esteja configurada como "
"<literal>y</literal> na configuração do núcleo."

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:120
msgid "<emphasis role=\"strong\">M4-1.4.10</emphasis>"
msgstr "<emphasis role=\"strong\">M4-1.4.10</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:124
msgid "<emphasis role=\"strong\">Make-4.0</emphasis>"
msgstr "<emphasis role=\"strong\">Make-4.0</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:128
msgid "<emphasis role=\"strong\">Patch-2.5.4</emphasis>"
msgstr "<emphasis role=\"strong\">Patch-2.5.4</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:132
msgid "<emphasis role=\"strong\">Perl-5.8.8</emphasis>"
msgstr "<emphasis role=\"strong\">Perl-5.8.8</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:136
msgid "<emphasis role=\"strong\">Python-3.4</emphasis>"
msgstr "<emphasis role=\"strong\">Python-3.4</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:140
msgid "<emphasis role=\"strong\">Sed-4.1.5</emphasis>"
msgstr "<emphasis role=\"strong\">Sed-4.1.5</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:144
msgid "<emphasis role=\"strong\">Tar-1.22</emphasis>"
msgstr "<emphasis role=\"strong\">Tar-1.22</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:148
#, fuzzy
#| msgid "<emphasis role=\"strong\">Texinfo-4.7</emphasis>"
msgid "<emphasis role=\"strong\">Texinfo-5.0</emphasis>"
msgstr "<emphasis role=\"strong\">Texinfo-4.7</emphasis>"

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/chapter02/hostreqs.xml:152
msgid "<emphasis role=\"strong\">Xz-5.0.0</emphasis>"
msgstr "<emphasis role=\"strong\">Xz-5.0.0</emphasis>"

#. type: Content of: <sect1><sect2><important><para>
#: lfs-en/chapter02/hostreqs.xml:158
msgid ""
"Note that the symlinks mentioned above are required to build an LFS system "
"using the instructions contained within this book. Symlinks that point to "
"other software (such as dash, mawk, etc.) may work, but are not tested or "
"supported by the LFS development team, and may require either deviation from "
"the instructions or additional patches to some packages."
msgstr ""
"Perceba que os links simbólicos mencionados acima são exigidos para "
"construir um sistema LFS usando as instruções contidas neste livro. Links "
"simbólicos que apontem para outro software (tais como dash, mawk, etc.) "
"possivelmente funcionem, porém não são testados ou suportados pela equipe de "
"desenvolvimento do LFS e possivelmente exijam ou desvio das instruções ou "
"remendos adicionais para alguns pacotes."

#. type: Content of: <sect1><sect2><para>
#: lfs-en/chapter02/hostreqs.xml:173
msgid ""
"To see whether your host system has all the appropriate versions, and the "
"ability to compile programs, run the following commands:"
msgstr ""
"Para ver se o seu sistema anfitrião tem todas as versões apropriadas e a "
"habilidade de compilar aplicativos, execute os seguintes comandos:"

#. type: Content of: <sect1><sect2><screen>
#: lfs-en/chapter02/hostreqs.xml:176
#, fuzzy, no-wrap
#| msgid ""
#| "<userinput>cat &gt; version-check.sh &lt;&lt; \"EOF\"\n"
#| "<literal>#!/bin/bash\n"
#| "# A script to list version numbers of critical development tools\n"
#| "\n"
#| "# If you have tools installed in other directories, adjust PATH here AND\n"
#| "# in ~lfs/.bashrc (section 4.4) as well.\n"
#| "\n"
#| "LC_ALL=C \n"
#| "PATH=/usr/bin:/bin\n"
#| "\n"
#| "bail() { echo \"FATAL: $1\"; exit 1; }\n"
#| "grep --version > /dev/null 2> /dev/null || bail \"grep does not work\"\n"
#| "sed '' /dev/null || bail \"sed does not work\"\n"
#| "sort   /dev/null || bail \"sort does not work\"\n"
#| "\n"
#| "ver_check()\n"
#| "{\n"
#| "   if ! type -p $2 &amp;>/dev/null\n"
#| "   then \n"
#| "     echo \"ERROR: Cannot find $2 ($1)\"; return 1; \n"
#| "   fi\n"
#| "   v=$($2 --version 2>&amp;1 | grep -E -o '[0-9]+\\.[0-9\\.]+[a-z]*' | head -n1)\n"
#| "   if printf '%s\\n' $3 $v | sort --version-sort --check &amp;>/dev/null\n"
#| "   then \n"
#| "     printf \"OK:    %-9s %-6s >= $3\\n\" \"$1\" \"$v\"; return 0;\n"
#| "   else \n"
#| "     printf \"ERROR: %-9s is TOO OLD ($3 or later required)\\n\" \"$1\"; \n"
#| "     return 1; \n"
#| "   fi\n"
#| "}\n"
#| "\n"
#| "ver_kernel()\n"
#| "{\n"
#| "   kver=$(uname -r | grep -E -o '^[0-9\\.]+')\n"
#| "   if printf '%s\\n' $1 $kver | sort --version-sort --check &amp;>/dev/null\n"
#| "   then \n"
#| "     printf \"OK:    Linux Kernel $kver >= $1\\n\"; return 0;\n"
#| "   else \n"
#| "     printf \"ERROR: Linux Kernel ($kver) is TOO OLD ($1 or later required)\\n\" \"$kver\"; \n"
#| "     return 1; \n"
#| "   fi\n"
#| "}\n"
#| "\n"
#| "# Coreutils first because-sort needs Coreutils >= 7.0\n"
#| "ver_check Coreutils      sort     7.0 || bail \"--version-sort unsupported\"\n"
#| "ver_check Bash           bash     3.2\n"
#| "ver_check Binutils       ld       2.13.1\n"
#| "ver_check Bison          bison    2.7\n"
#| "ver_check Diffutils      diff     2.8.1\n"
#| "ver_check Findutils      find     4.2.31\n"
#| "ver_check Gawk           gawk     4.0.1\n"
#| "ver_check GCC            gcc      5.1\n"
#| "ver_check \"GCC (C++)\"    g++      5.1\n"
#| "ver_check Grep           grep     2.5.1a\n"
#| "ver_check Gzip           gzip     1.3.12\n"
#| "ver_check M4             m4       1.4.10\n"
#| "ver_check Make           make     4.0\n"
#| "ver_check Patch          patch    2.5.4\n"
#| "ver_check Perl           perl     5.8.8\n"
#| "ver_check Python         python3  3.4\n"
#| "ver_check Sed            sed      4.1.5\n"
#| "ver_check Tar            tar      1.22\n"
#| "ver_check Texinfo        texi2any 4.7\n"
#| "ver_check Xz             xz       5.0.0\n"
#| "ver_kernel &min-kernel;\n"
#| "\n"
#| "if mount | grep -q 'devpts on /dev/pts' &amp;&amp; [ -e /dev/ptmx ]\n"
#| "then echo \"OK:    Linux Kernel supports UNIX 98 PTY\";\n"
#| "else echo \"ERROR: Linux Kernel does NOT support UNIX 98 PTY\"; fi\n"
#| "\n"
#| "alias_check() {\n"
#| "   if $1 --version 2>&amp;1 | grep -qi $2\n"
#| "   then printf \"OK:    %-4s is $2\\n\" \"$1\";\n"
#| "   else printf \"ERROR: %-4s is NOT $2\\n\" \"$1\"; fi\n"
#| "}\n"
#| "echo \"Aliases:\"\n"
#| "alias_check awk GNU\n"
#| "alias_check yacc Bison\n"
#| "alias_check sh Bash\n"
#| "\n"
#| "echo \"Compiler check:\"\n"
#| "if printf \"int main(){}\" | g++ -x c++ -\n"
#| "then echo \"OK:    g++ works\";\n"
#| "else echo \"ERROR: g++ does NOT work\"; fi\n"
#| "rm -f a.out</literal>\n"
#| "EOF\n"
#| "\n"
#| "bash version-check.sh</userinput>"
msgid ""
"<userinput>cat &gt; version-check.sh &lt;&lt; \"EOF\"\n"
"<literal>#!/bin/bash\n"
"# A script to list version numbers of critical development tools\n"
"\n"
"# If you have tools installed in other directories, adjust PATH here AND\n"
"# in ~lfs/.bashrc (section 4.4) as well.\n"
"\n"
"LC_ALL=C \n"
"PATH=/usr/bin:/bin\n"
"\n"
"bail() { echo \"FATAL: $1\"; exit 1; }\n"
"grep --version > /dev/null 2> /dev/null || bail \"grep does not work\"\n"
"sed '' /dev/null || bail \"sed does not work\"\n"
"sort   /dev/null || bail \"sort does not work\"\n"
"\n"
"ver_check()\n"
"{\n"
"   if ! type -p $2 &amp;>/dev/null\n"
"   then \n"
"     echo \"ERROR: Cannot find $2 ($1)\"; return 1; \n"
"   fi\n"
"   v=$($2 --version 2>&amp;1 | grep -E -o '[0-9]+\\.[0-9\\.]+[a-z]*' | head -n1)\n"
"   if printf '%s\\n' $3 $v | sort --version-sort --check &amp;>/dev/null\n"
"   then \n"
"     printf \"OK:    %-9s %-6s >= $3\\n\" \"$1\" \"$v\"; return 0;\n"
"   else \n"
"     printf \"ERROR: %-9s is TOO OLD ($3 or later required)\\n\" \"$1\"; \n"
"     return 1; \n"
"   fi\n"
"}\n"
"\n"
"ver_kernel()\n"
"{\n"
"   kver=$(uname -r | grep -E -o '^[0-9\\.]+')\n"
"   if printf '%s\\n' $1 $kver | sort --version-sort --check &amp;>/dev/null\n"
"   then \n"
"     printf \"OK:    Linux Kernel $kver >= $1\\n\"; return 0;\n"
"   else \n"
"     printf \"ERROR: Linux Kernel ($kver) is TOO OLD ($1 or later required)\\n\" \"$kver\"; \n"
"     return 1; \n"
"   fi\n"
"}\n"
"\n"
"# Coreutils first because-sort needs Coreutils >= 7.0\n"
"ver_check Coreutils      sort     7.0 || bail \"--version-sort unsupported\"\n"
"ver_check Bash           bash     3.2\n"
"ver_check Binutils       ld       2.13.1\n"
"ver_check Bison          bison    2.7\n"
"ver_check Diffutils      diff     2.8.1\n"
"ver_check Findutils      find     4.2.31\n"
"ver_check Gawk           gawk     4.0.1\n"
"ver_check GCC            gcc      5.1\n"
"ver_check \"GCC (C++)\"    g++      5.1\n"
"ver_check Grep           grep     2.5.1a\n"
"ver_check Gzip           gzip     1.3.12\n"
"ver_check M4             m4       1.4.10\n"
"ver_check Make           make     4.0\n"
"ver_check Patch          patch    2.5.4\n"
"ver_check Perl           perl     5.8.8\n"
"ver_check Python         python3  3.4\n"
"ver_check Sed            sed      4.1.5\n"
"ver_check Tar            tar      1.22\n"
"ver_check Texinfo        texi2any 5.0\n"
"ver_check Xz             xz       5.0.0\n"
"ver_kernel &min-kernel;\n"
"\n"
"if mount | grep -q 'devpts on /dev/pts' &amp;&amp; [ -e /dev/ptmx ]\n"
"then echo \"OK:    Linux Kernel supports UNIX 98 PTY\";\n"
"else echo \"ERROR: Linux Kernel does NOT support UNIX 98 PTY\"; fi\n"
"\n"
"alias_check() {\n"
"   if $1 --version 2>&amp;1 | grep -qi $2\n"
"   then printf \"OK:    %-4s is $2\\n\" \"$1\";\n"
"   else printf \"ERROR: %-4s is NOT $2\\n\" \"$1\"; fi\n"
"}\n"
"echo \"Aliases:\"\n"
"alias_check awk GNU\n"
"alias_check yacc Bison\n"
"alias_check sh Bash\n"
"\n"
"echo \"Compiler check:\"\n"
"if printf \"int main(){}\" | g++ -x c++ -\n"
"then echo \"OK:    g++ works\";\n"
"else echo \"ERROR: g++ does NOT work\"; fi\n"
"rm -f a.out</literal>\n"
"EOF\n"
"\n"
"bash version-check.sh</userinput>"
msgstr ""
"<userinput>cat &gt; version-check.sh &lt;&lt; \"EOF\"\n"
"<literal>#!/bin/bash\n"
"# Um script para listar os números de versão de ferramentas críticas de desenvolvimento\n"
"\n"
"# Se você tiver ferramentas instaladas em outros diretórios, ajuste PATH \n"
"# aqui E em ~lfs/.bashrc (seção 4.4) também.\n"
"\n"
"LC_ALL=C \n"
"PATH=/usr/bin:/bin\n"
"\n"
"bail() { echo \"FATAL: $1\"; exit 1; }\n"
"grep --version > /dev/null 2> /dev/null || bail \"grep não funciona\"\n"
"sed '' /dev/null || bail \"sed não funciona\"\n"
"sort   /dev/null || bail \"sort não funciona\"\n"
"\n"
"ver_check()\n"
"{\n"
"   if ! type -p $2 &amp;>/dev/null\n"
"   then \n"
"     echo \"ERRO: Não consigo encontrar $2 ($1)\"; return 1; \n"
"   fi\n"
"   v=$($2 --version 2>&amp;1 | grep -E -o '[0-9]+\\.[0-9\\.]+[a-z]*' | head -n1)\n"
"   if printf '%s\\n' $3 $v | sort --version-sort --check &amp;>/dev/null\n"
"   then \n"
"     printf \"OK:    %-9s %-6s >= $3\\n\" \"$1\" \"$v\"; return 0;\n"
"   else \n"
"     printf \"ERRO: %-9s é MUITO ANTIGO ($3 ou mais recente exigido)\\n\" \"$1\"; \n"
"     return 1; \n"
"   fi\n"
"}\n"
"\n"
"ver_kernel()\n"
"{\n"
"   kver=$(uname -r | grep -E -o '^[0-9\\.]+')\n"
"   if printf '%s\\n' $1 $kver | sort --version-sort --check &amp;>/dev/null\n"
"   then \n"
"     printf \"OK:    Núcleo Linux $kver >= $1\\n\"; return 0;\n"
"   else \n"
"     printf \"ERRO: Núcleo Linux ($kver) é MUITO ANTIGO ($1 ou mais recente exigido)\\n\" \"$kver\"; \n"
"     return 1; \n"
"   fi\n"
"}\n"
"\n"
"# Coreutils primeiro, pois o sort precisa do Coreutils >= 7.0\n"
"ver_check Coreutils      sort     7.0 || bail \"--version-sort não suportada\"\n"
"ver_check Bash           bash     3.2\n"
"ver_check Binutils       ld       2.13.1\n"
"ver_check Bison          bison    2.7\n"
"ver_check Diffutils      diff     2.8.1\n"
"ver_check Findutils      find     4.2.31\n"
"ver_check Gawk           gawk     4.0.1\n"
"ver_check GCC            gcc      5.1\n"
"ver_check \"GCC (C++)\"    g++      5.1\n"
"ver_check Grep           grep     2.5.1a\n"
"ver_check Gzip           gzip     1.3.12\n"
"ver_check M4             m4       1.4.10\n"
"ver_check Make           make     4.0\n"
"ver_check Patch          patch    2.5.4\n"
"ver_check Perl           perl     5.8.8\n"
"ver_check Python         python3  3.4\n"
"ver_check Sed            sed      4.1.5\n"
"ver_check Tar            tar      1.22\n"
"ver_check Texinfo        texi2any 4.7\n"
"ver_check Xz             xz       5.0.0\n"
"ver_kernel &min-kernel;\n"
"\n"
"if mount | grep -q 'devpts on /dev/pts' &amp;&amp; [ -e /dev/ptmx ]\n"
"then echo \"OK:    Núcleo Linux suporta UNIX 98 PTY\";\n"
"else echo \"ERRO: Núcleo Linux NÃO suporta UNIX 98 PTY\"; fi\n"
"\n"
"alias_check() {\n"
"   if $1 --version 2>&amp;1 | grep -qi $2\n"
"   then printf \"OK:    %-4s is $2\\n\" \"$1\";\n"
"   else printf \"ERRO: %-4s NÃO é $2\\n\" \"$1\"; fi\n"
"}\n"
"echo \"Aliases:\"\n"
"alias_check awk GNU\n"
"alias_check yacc Bison\n"
"alias_check sh Bash\n"
"\n"
"echo \"Compiler check:\"\n"
"if printf \"int main(){}\" | g++ -x c++ -\n"
"then echo \"OK:    g++ funciona\";\n"
"else echo \"ERRO: g++ NÃO funciona\"; fi\n"
"rm -f a.out</literal>\n"
"EOF\n"
"\n"
"bash version-check.sh</userinput>"

#, no-wrap
#~ msgid ""
#~ "<userinput>cat &gt; version-check.sh &lt;&lt; \"EOF\"\n"
#~ "<literal>#!/bin/bash\n"
#~ "# Simple script to list version numbers of critical development tools\n"
#~ "export LC_ALL=C\n"
#~ "bash --version | head -n1 | cut -d\" \" -f2-4\n"
#~ "MYSH=$(readlink -f /bin/sh)\n"
#~ "echo \"/bin/sh -&gt; $MYSH\"\n"
#~ "echo $MYSH | grep -q bash || echo \"ERROR: /bin/sh does not point to bash\"\n"
#~ "unset MYSH\n"
#~ "\n"
#~ "echo -n \"Binutils: \"; ld --version | head -n1 | cut -d\" \" -f3-\n"
#~ "bison --version | head -n1\n"
#~ "\n"
#~ "if [ -h /usr/bin/yacc ]; then\n"
#~ "  echo \"/usr/bin/yacc -> `readlink -f /usr/bin/yacc`\";\n"
#~ "elif [ -x /usr/bin/yacc ]; then\n"
#~ "  echo yacc is `/usr/bin/yacc --version | head -n1`\n"
#~ "else\n"
#~ "  echo \"yacc not found\"\n"
#~ "fi\n"
#~ "\n"
#~ "echo -n \"Coreutils: \"; chown --version | head -n1 | cut -d\")\" -f2\n"
#~ "diff --version | head -n1\n"
#~ "find --version | head -n1\n"
#~ "gawk --version | head -n1\n"
#~ "\n"
#~ "if [ -h /usr/bin/awk ]; then\n"
#~ "  echo \"/usr/bin/awk -&gt; `readlink -f /usr/bin/awk`\";\n"
#~ "elif [ -x /usr/bin/awk ]; then\n"
#~ "  echo awk is `/usr/bin/awk --version | head -n1`\n"
#~ "else\n"
#~ "  echo \"awk not found\"\n"
#~ "fi\n"
#~ "\n"
#~ "gcc --version | head -n1\n"
#~ "g++ --version | head -n1\n"
#~ "grep --version | head -n1\n"
#~ "gzip --version | head -n1\n"
#~ "cat /proc/version\n"
#~ "m4 --version | head -n1\n"
#~ "make --version | head -n1\n"
#~ "patch --version | head -n1\n"
#~ "echo Perl `perl -V:version`\n"
#~ "python3 --version\n"
#~ "sed --version | head -n1\n"
#~ "tar --version | head -n1\n"
#~ "makeinfo --version | head -n1  # texinfo version\n"
#~ "xz --version | head -n1\n"
#~ "\n"
#~ "echo 'int main(){}' &gt; dummy.c &amp;&amp; g++ -o dummy dummy.c\n"
#~ "if [ -x dummy ]\n"
#~ "  then echo \"g++ compilation OK\";\n"
#~ "  else echo \"g++ compilation failed\"; fi\n"
#~ "rm -f dummy.c dummy</literal>\n"
#~ "EOF\n"
#~ "\n"
#~ "bash version-check.sh</userinput>"
#~ msgstr ""
#~ "<userinput>cat &gt; version-check.sh &lt;&lt; \"EOF\"\n"
#~ "<literal>#!/bin/bash\n"
#~ "# Script simples para listar números de versão de ferramentas críticas de desenvolvimento\n"
#~ "export LC_ALL=C\n"
#~ "bash --version | head -n1 | cut -d\" \" -f2-4\n"
#~ "MYSH=$(readlink -f /bin/sh)\n"
#~ "echo \"/bin/sh -&gt; $MYSH\"\n"
#~ "echo $MYSH | grep -q bash || echo \"ERRO: /bin/sh não aponta para bash\"\n"
#~ "unset MYSH\n"
#~ "\n"
#~ "echo -n \"Binutils: \"; ld --version | head -n1 | cut -d\" \" -f3-\n"
#~ "bison --version | head -n1\n"
#~ "\n"
#~ "if [ -h /usr/bin/yacc ]; then\n"
#~ "  echo \"/usr/bin/yacc -> `readlink -f /usr/bin/yacc`\";\n"
#~ "elif [ -x /usr/bin/yacc ]; then\n"
#~ "  echo yacc is `/usr/bin/yacc --version | head -n1`\n"
#~ "else\n"
#~ "  echo \"yacc não encontrado\"\n"
#~ "fi\n"
#~ "\n"
#~ "echo -n \"Coreutils: \"; chown --version | head -n1 | cut -d\")\" -f2\n"
#~ "diff --version | head -n1\n"
#~ "find --version | head -n1\n"
#~ "gawk --version | head -n1\n"
#~ "\n"
#~ "if [ -h /usr/bin/awk ]; then\n"
#~ "  echo \"/usr/bin/awk -&gt; `readlink -f /usr/bin/awk`\";\n"
#~ "elif [ -x /usr/bin/awk ]; then\n"
#~ "  echo awk é `/usr/bin/awk --version | head -n1`\n"
#~ "else\n"
#~ "  echo \"awk não encontrado\"\n"
#~ "fi\n"
#~ "\n"
#~ "gcc --version | head -n1\n"
#~ "g++ --version | head -n1\n"
#~ "grep --version | head -n1\n"
#~ "gzip --version | head -n1\n"
#~ "cat /proc/version\n"
#~ "m4 --version | head -n1\n"
#~ "make --version | head -n1\n"
#~ "patch --version | head -n1\n"
#~ "echo Perl `perl -V:version`\n"
#~ "python3 --version\n"
#~ "sed --version | head -n1\n"
#~ "tar --version | head -n1\n"
#~ "makeinfo --version | head -n1  # versão texinfo\n"
#~ "xz --version | head -n1\n"
#~ "\n"
#~ "echo 'int main(){}' &gt; dummy.c &amp;&amp; g++ -o dummy dummy.c\n"
#~ "if [ -x dummy ]\n"
#~ "  then echo \"g++ compilação OK\";\n"
#~ "  else echo \"g++ compilação falhou\"; fi\n"
#~ "rm -f dummy.c dummy</literal>\n"
#~ "EOF\n"
#~ "\n"
#~ "bash version-check.sh</userinput>"
