# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-03-11 19:37+0000\n"
"PO-Revision-Date: 2023-03-25 10:47+0000\n"
"Last-Translator: Jamenson Ferreira Espindula de Almeida Melo <jafesp@gmail."
"com>\n"
"Language-Team: Portuguese (Brazil) <https://translate.linuxfromscratch.org/"
"projects/linux-from-scratch-11-3/part3intro_toolchaintechnotes/pt_BR/>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n > 1;\n"
"X-Generator: Weblate 4.16.2\n"

#. type: Content of: <sect1><title>
#: lfs-en/part3intro/toolchaintechnotes.xml:8
#: lfs-en/part3intro/toolchaintechnotes.xml:11
msgid "Toolchain Technical Notes"
msgstr "Observações Técnicas do Conjunto de Ferramentas"

#. type: Content of: <sect1><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:13
msgid ""
"This section explains some of the rationale and technical details behind the "
"overall build method. Don't try to immediately understand everything in this "
"section. Most of this information will be clearer after performing an actual "
"build. Come back and re-read this chapter at any time during the build "
"process."
msgstr ""
"Esta seção explica algumas das razões e detalhes técnicos por trás do método "
"completo de construção. Não tente imediatamente entender tudo nesta seção. A "
"maior parte desta informação ficará mais clara depois de realizar uma "
"construção atual. Volte e releia este capítulo a qualquer tempo durante o "
"processo de construção."

#. type: Content of: <sect1><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:19
msgid ""
"The overall goal of <xref linkend=\"chapter-cross-tools\"/> and <xref "
"linkend=\"chapter-temporary-tools\"/> is to produce a temporary area "
"containing a set of tools that are known to be good, and that are isolated "
"from the host system.  By using the <command>chroot</command> command, the "
"compilations in the remaining chapters will be isolated within that "
"environment, ensuring a clean, trouble-free build of the target LFS system. "
"The build process has been designed to minimize the risks for new readers, "
"and to provide the most educational value at the same time."
msgstr ""
"O objetivo geral do <xref linkend=\"chapter-cross-tools\"/> e do <xref "
"linkend=\"chapter-temporary-tools\"/> é o de produzir uma área temporária "
"que contendo um conjunto de ferramentas que são conhecidas por serem boas e "
"que estão isoladas do sistema anfitrião. Usando-se o comando "
"<command>chroot</command>, as compilações nos capítulos subsequentes estarão "
"isolados naquele ambiente, assegurando uma construção limpa e livre de "
"problemas do sistema LFS alvo. O processo de construção foi projetado para "
"minimizar os riscos para leitores(as) novatos(as) e para prover o maior "
"valor educacional ao mesmo tempo."

#. type: Content of: <sect1><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:28
msgid ""
"This build process is based on <emphasis>cross-compilation</emphasis>. Cross-"
"compilation is normally used to build a compiler and its associated "
"toolchain for a machine different from the one that is used for the build. "
"This is not strictly necessary for LFS, since the machine where the new "
"system will run is the same as the one used for the build. But cross-"
"compilation has one great advantage: anything that is cross-compiled cannot "
"depend on the host environment."
msgstr ""
"O processo de construção é baseado em <emphasis>compilação cruzada</"
"emphasis>. A compilação cruzada normalmente é usada para construir um "
"compilador e o conjunto de ferramentas associadas dele para uma máquina "
"diferente daquela que é usada para a construção. Isso não é estritamente "
"necessário para o LFS, dado que a máquina onde o novo sistema executará é a "
"mesma que aquela usada para a construção. Porém, a compilação cruzada tem a "
"grande vantagem: tudo o que for compilado cruzadamente não pode depender do "
"ambiente do anfitrião."

#. type: Content of: <sect1><sect2><title>
#: lfs-en/part3intro/toolchaintechnotes.xml:36
#: lfs-en/part3intro/toolchaintechnotes.xml:38
msgid "About Cross-Compilation"
msgstr "Acerca da Compilação Cruzada"

#. type: Content of: <sect1><sect2><note><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:42
msgid ""
"The LFS book is not (and does not contain) a general tutorial to build a "
"cross- (or native) toolchain. Don't use the commands in the book for a cross-"
"toolchain for some purpose other than building LFS, unless you really "
"understand what you are doing."
msgstr ""
"O livro LFS não é (e não contém) um tutorial geral para construir um "
"conjunto de ferramentas cruzado (ou nativo). Não use os comandos no livro "
"para um conjunto de ferramentas cruzado para algum outro propósito que não "
"construir o LFS, a menos que você realmente entenda o que está fazendo."

#. type: Content of: <sect1><sect2><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:49
msgid ""
"Cross-compilation involves some concepts that deserve a section of their "
"own. Although this section may be omitted on a first reading, coming back to "
"it later will help you gain a fuller understanding of the process."
msgstr ""
"Compilação cruzada envolve alguns conceitos que merecem uma seção por si "
"próprios. Apesar que esta seção possivelmente seja omitida em uma primeira "
"leitura, retornar até ela posteriormente te ajudará a ganhar um entendimento "
"mais completo do processo."

#. type: Content of: <sect1><sect2><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:54
msgid "Let us first define some terms used in this context."
msgstr "Permita-nos primeiro definir alguns termos usados nesse contexto."

#. type: Content of: <sect1><sect2><variablelist><varlistentry><term>
#: lfs-en/part3intro/toolchaintechnotes.xml:57
msgid "The build"
msgstr "A construtora"

#. type: Content of: <sect1><sect2><variablelist><varlistentry><listitem><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:58
msgid ""
"is the machine where we build programs. Note that this machine is also "
"referred to as the <quote>host</quote>."
msgstr ""
"é a máquina onde nós construímos aplicativos. Observe que essa máquina "
"também é referenciada como sendo a <quote>anfitriã</quote>."

#. type: Content of: <sect1><sect2><variablelist><varlistentry><term>
#: lfs-en/part3intro/toolchaintechnotes.xml:62
msgid "The host"
msgstr "A anfitriã"

#. type: Content of: <sect1><sect2><variablelist><varlistentry><listitem><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:63
msgid ""
"is the machine/system where the built programs will run. Note that this use "
"of <quote>host</quote> is not the same as in other sections."
msgstr ""
"é a máquina/sistema onde os aplicativos construídos executarão. Observe que "
"esse uso de <quote>host</quote> não é o mesmo que em outras seções."

#. type: Content of: <sect1><sect2><variablelist><varlistentry><term>
#: lfs-en/part3intro/toolchaintechnotes.xml:68
msgid "The target"
msgstr "O alvo"

#. type: Content of: <sect1><sect2><variablelist><varlistentry><listitem><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:69
msgid ""
"is only used for compilers. It is the machine the compiler produces code "
"for. It may be different from both the build and the host."
msgstr ""
"é usado somente para compiladores. Ele é a máquina para a qual o compilador "
"produz código. Ele possivelmente seja diferente tanto da construtora quanto "
"da anfitriã."

#. type: Content of: <sect1><sect2><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:76
msgid ""
"As an example, let us imagine the following scenario (sometimes referred to "
"as <quote>Canadian Cross</quote>). We have a compiler on a slow machine "
"only, let's call it machine A, and the compiler ccA. We also have a fast "
"machine (B), but no compiler for (B), and we want to produce code for a "
"third, slow machine (C). We will build a compiler for machine C in three "
"stages."
msgstr ""
"Como um exemplo, permita-nos imaginar o seguinte cenário (de vez em quando "
"referenciado como <quote>Cruzado Canadense</quote>). Nós temos um compilador "
"somente em uma máquina lenta, vamos chamá-la de máquina A, e o compilador de "
"ccA. Nós também temos uma máquina rápida (B), porém nenhum compilador para "
"(B), e nós queremos produzir código para uma terceira, máquina lenta (C). "
"Nós construiremos um compilador para a máquina C em três estágios."

#. type: Content of: <sect1><sect2><informaltable><tgroup><thead><row><entry>
#: lfs-en/part3intro/toolchaintechnotes.xml:91
#: lfs-en/part3intro/toolchaintechnotes.xml:125
#: lfs-en/part3intro/toolchaintechnotes.xml:217
msgid "Stage"
msgstr "Estágio"

#. type: Content of: <sect1><sect2><informaltable><tgroup><thead><row><entry>
#: lfs-en/part3intro/toolchaintechnotes.xml:91
#: lfs-en/part3intro/toolchaintechnotes.xml:125
#: lfs-en/part3intro/toolchaintechnotes.xml:217
msgid "Build"
msgstr "Construtora"

#. type: Content of: <sect1><sect2><informaltable><tgroup><thead><row><entry>
#: lfs-en/part3intro/toolchaintechnotes.xml:91
#: lfs-en/part3intro/toolchaintechnotes.xml:125
#: lfs-en/part3intro/toolchaintechnotes.xml:217
msgid "Host"
msgstr "Anfitriã"

#. type: Content of: <sect1><sect2><informaltable><tgroup><thead><row><entry>
#: lfs-en/part3intro/toolchaintechnotes.xml:92
#: lfs-en/part3intro/toolchaintechnotes.xml:126
#: lfs-en/part3intro/toolchaintechnotes.xml:218
msgid "Target"
msgstr "Alvo"

#. type: Content of: <sect1><sect2><informaltable><tgroup><thead><row><entry>
#: lfs-en/part3intro/toolchaintechnotes.xml:92
#: lfs-en/part3intro/toolchaintechnotes.xml:126
#: lfs-en/part3intro/toolchaintechnotes.xml:218
msgid "Action"
msgstr "Ação"

#. type: Content of: <sect1><sect2><informaltable><tgroup><tbody><row><entry>
#: lfs-en/part3intro/toolchaintechnotes.xml:96
#: lfs-en/part3intro/toolchaintechnotes.xml:222
msgid "1"
msgstr "1"

#. type: Content of: <sect1><sect2><informaltable><tgroup><tbody><row><entry>
#: lfs-en/part3intro/toolchaintechnotes.xml:96
#: lfs-en/part3intro/toolchaintechnotes.xml:100
msgid "A"
msgstr "A"

#. type: Content of: <sect1><sect2><informaltable><tgroup><tbody><row><entry>
#: lfs-en/part3intro/toolchaintechnotes.xml:96
#: lfs-en/part3intro/toolchaintechnotes.xml:100
#: lfs-en/part3intro/toolchaintechnotes.xml:104
msgid "B"
msgstr "B"

#. type: Content of: <sect1><sect2><informaltable><tgroup><tbody><row><entry>
#: lfs-en/part3intro/toolchaintechnotes.xml:97
msgid "Build cross-compiler cc1 using ccA on machine A."
msgstr "Construir compilador cruzado cc1 usando ccA na máquina A."

#. type: Content of: <sect1><sect2><informaltable><tgroup><tbody><row><entry>
#: lfs-en/part3intro/toolchaintechnotes.xml:100
#: lfs-en/part3intro/toolchaintechnotes.xml:226
msgid "2"
msgstr "2"

#. type: Content of: <sect1><sect2><informaltable><tgroup><tbody><row><entry>
#: lfs-en/part3intro/toolchaintechnotes.xml:100
#: lfs-en/part3intro/toolchaintechnotes.xml:104
#: lfs-en/part3intro/toolchaintechnotes.xml:130
msgid "C"
msgstr "C"

#. type: Content of: <sect1><sect2><informaltable><tgroup><tbody><row><entry>
#: lfs-en/part3intro/toolchaintechnotes.xml:101
msgid "Build cross-compiler cc2 using cc1 on machine A."
msgstr "Construir compilador cruzado cc2 usando cc1 na máquina A."

#. type: Content of: <sect1><sect2><informaltable><tgroup><tbody><row><entry>
#: lfs-en/part3intro/toolchaintechnotes.xml:104
#: lfs-en/part3intro/toolchaintechnotes.xml:230
msgid "3"
msgstr "3"

#. type: Content of: <sect1><sect2><informaltable><tgroup><tbody><row><entry>
#: lfs-en/part3intro/toolchaintechnotes.xml:105
msgid "Build compiler ccC using cc2 on machine B."
msgstr "Construir compilador ccC usando cc2 na máquina B."

#. type: Content of: <sect1><sect2><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:111
msgid ""
"Then, all the programs needed by machine C can be compiled using cc2 on the "
"fast machine B. Note that unless B can run programs produced for C, there is "
"no way to test the newly built programs until machine C itself is running. "
"For example, to run a test suite on ccC, we may want to add a fourth stage:"
msgstr ""
"Então, todos os aplicativos necessários para a máquina C podem ser "
"compilados usando cc2 na rápida máquina B. Observe que a menos que B possa "
"executar aplicativos produzidos por C, não existe maneira de testar os "
"aplicativos recém construídos até que a própria máquina C esteja em "
"execução. Por exemplo, para executar uma suíte de teste em ccC, nós "
"possivelmente queiramos adicionar um quarto estágio:"

#. type: Content of: <sect1><sect2><informaltable><tgroup><tbody><row><entry>
#: lfs-en/part3intro/toolchaintechnotes.xml:130
msgid "4"
msgstr "4"

#. type: Content of: <sect1><sect2><informaltable><tgroup><tbody><row><entry>
#: lfs-en/part3intro/toolchaintechnotes.xml:131
msgid "Rebuild and test ccC using ccC on machine C."
msgstr "Reconstruir e testar ccC usando ccC na máquina C."

#. type: Content of: <sect1><sect2><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:137
msgid ""
"In the example above, only cc1 and cc2 are cross-compilers, that is, they "
"produce code for a machine different from the one they are run on.  The "
"other compilers ccA and ccC produce code for the machine they are run on. "
"Such compilers are called <emphasis>native</emphasis> compilers."
msgstr ""
"No exemplo acima, somente cc1 e cc2 são compiladores cruzados, isto é, eles "
"produzem código para uma máquina diferente daquela na qual estão em "
"execução. Os outros compiladores, ccA e ccC, produzem código para a máquina "
"na qual estão em execução. Tais compiladores são chamados de compiladores "
"<emphasis>nativos</emphasis>."

#. type: Content of: <sect1><sect2><title>
#: lfs-en/part3intro/toolchaintechnotes.xml:145
msgid "Implementation of Cross-Compilation for LFS"
msgstr "Implementação da Compilação Cruzada para o LFS"

#. type: Content of: <sect1><sect2><note><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:148
msgid ""
"All the cross-compiled packages in this book use an autoconf-based building "
"system.  The autoconf-based building system accepts system types in the form "
"cpu-vendor-kernel-os, referred to as the system triplet.  Since the vendor "
"field is often irrelevant, autoconf lets you omit it."
msgstr ""
"Todos os pacotes compilados cruzadamente neste livro usam um sistema de "
"construção baseado no autoconf. O sistema de construção baseado no autoconf "
"aceita tipos de sistema na forma cpu-vendor-kernel-os, referenciado como o "
"triplo do sistema. Dado que o campo vendor frequentemente é irrelevante, o "
"autoconf te permite omiti-lo."

#. type: Content of: <sect1><sect2><note><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:154
msgid ""
"An astute reader may wonder why a <quote>triplet</quote> refers to a four "
"component name. The kernel field and the os field began as a single "
"<quote>system</quote> field.  Such a three-field form is still valid today "
"for some systems, for example, <literal>x86_64-unknown-freebsd</literal>.  "
"But two systems can share the same kernel and still be too different to use "
"the same triplet to describe them.  For example, Android running on a mobile "
"phone is completely different from Ubuntu running on an ARM64 server, even "
"though they are both running on the same type of CPU (ARM64) and using the "
"same kernel (Linux)."
msgstr ""
"Um(a) leitor(a) astuto(a) possivelmente questione porque <quote>trio</quote> "
"se refere a um nome de quatro componentes. O campo \"kernel\" e o campo \"os"
"\" iniciaram como um campo único do <quote>sistema</quote>. Tal forma de "
"três campos ainda é válida atualmente para alguns sistemas, por exemplo, "
"<literal>x86_64-unknown-freebsd</literal>. Porém, dois sistemas conseguem "
"compartilhar o mesmo núcleo e ainda serem muito diferentes para usarem o "
"mesmo trio para descrevê-los. Por exemplo, o Android executando em um "
"telefone móvel é completamente diferente do Ubuntu executando em um servidor "
"ARM64, apesar de ambos estarem executando no mesmo tipo de CPU (ARM64) e "
"usando o mesmo núcleo (Linux)."

#. type: Content of: <sect1><sect2><note><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:166
msgid ""
"Without an emulation layer, you cannot run an executable for a server on a "
"mobile phone or vice versa.  So the <quote>system</quote> field has been "
"divided into kernel and os fields, to designate these systems "
"unambiguously.  In our example, the Android system is designated "
"<literal>aarch64-unknown-linux-android</literal>, and the Ubuntu system is "
"designated <literal>aarch64-unknown-linux-gnu</literal>."
msgstr ""
"Sem uma camada de emulação, você não consegue executar um executável para um "
"servidor em um telefone móvel ou vice versa. Assim, o campo <quote>system</"
"quote> foi dividido nos campos \"kernel\" e \"os\" para designar esses "
"sistemas inequívoca. No nosso exemplo, O sistema Android é designado como "
"<literal>aarch64-unknown-linux-android</literal> e o sistema Ubuntu é "
"designado como <literal>aarch64-unknown-linux-gnu</literal>."

#. type: Content of: <sect1><sect2><note><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:174
msgid ""
"The word <quote>triplet</quote> remains embedded in the lexicon. A simple "
"way to determine your system triplet is to run the <command>config.guess</"
"command> script that comes with the source for many packages. Unpack the "
"binutils sources, run the script <userinput>./config.guess</userinput>, and "
"note the output. For example, for a 32-bit Intel processor the output will "
"be <emphasis>i686-pc-linux-gnu</emphasis>. On a 64-bit system it will be "
"<emphasis>x86_64-pc-linux-gnu</emphasis>. On most Linux systems the even "
"simpler <command>gcc -dumpmachine</command> command will give you similar "
"information."
msgstr ""
"A palavra <quote>trio</quote> permanece embutida no léxico. Uma maneira "
"simples para determinar o seu trio do sistema é a de executar o script "
"<command>config.guess</command> que vem com o fonte para muitos pacotes. "
"Desempacote os fontes do binutils, execute o script <userinput>./config."
"guess</userinput> e observe a saída gerada. Por exemplo, para um processador "
"Intel de 32 bits, a saída gerada será <emphasis>i686-pc-linux-gnu</"
"emphasis>. Em um sistema de 64 bits, será <emphasis>x86_64-pc-linux-gnu</"
"emphasis>. Na maior parte dos sistemas Linux, o comando ainda mais simples "
"<command>gcc -dumpmachine</command> te dará informação semelhante."

#. type: Content of: <sect1><sect2><note><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:184
msgid ""
"You should also be aware of the name of the platform's dynamic linker, often "
"referred to as the dynamic loader (not to be confused with the standard "
"linker <command>ld</command> that is part of binutils). The dynamic linker "
"provided by package glibc finds and loads the shared libraries needed by a "
"program, prepares the program to run, and then runs it. The name of the "
"dynamic linker for a 32-bit Intel machine is <filename "
"class=\"libraryfile\">ld-linux.so.2</filename>; it's <filename "
"class=\"libraryfile\">ld-linux-x86-64.so.2</filename> on 64-bit systems. A "
"sure-fire way to determine the name of the dynamic linker is to inspect a "
"random binary from the host system by running: <userinput>readelf -l &lt;"
"name of binary&gt; | grep interpreter</userinput> and noting the output. The "
"authoritative reference covering all platforms is in the <filename>shlib-"
"versions</filename> file in the root of the glibc source tree."
msgstr ""
"Você também deveria estar ciente do nome do vinculador dinâmico da "
"plataforma, frequentemente referido como o carregador dinâmico (não seja "
"confundido com o vinculador padrão <command>ld</command> que é parte do "
"binutils). O vinculador dinâmico fornecido pelo pacote glibc encontra e "
"carrega as bibliotecas compartilhadas necessárias para um aplicativo, "
"prepara o aplicativo para execução e então o executa. O nome do vinculador "
"dinâmico para uma máquina Intel de 32 bits é <filename class=\"libraryfile\""
">ld-linux.so.2</filename>; e é <filename class=\"libraryfile\">ld-"
"linux-x86-64.so.2</filename> em sistemas de 64 bits. Uma maneira infalível "
"para determinar o nome do vinculador dinâmico é a de inspecionar uma "
"biblioteca aleatória oriunda do sistema anfitrião executando: "
"<userinput>readelf -l &lt;nome do binário&gt; | grep interpreter</userinput> "
"e observar a saída gerada. A referência oficial cobrindo todas as "
"plataformas está no arquivo <filename>shlib-versions</filename> na raiz da "
"árvore do fonte do glibc."

#. type: Content of: <sect1><sect2><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:200
msgid ""
"In order to fake a cross-compilation in LFS, the name of the host triplet is "
"slightly adjusted by changing the &quot;vendor&quot; field in the "
"<envar>LFS_TGT</envar> variable so it says &quot;lfs&quot;. We also use the "
"<parameter>--with-sysroot</parameter> option when building the cross-linker "
"and cross-compiler, to tell them where to find the needed host files. This "
"ensures that none of the other programs built in <xref linkend=\"chapter-"
"temporary-tools\"/> can link to libraries on the build machine. Only two "
"stages are mandatory, plus one more for tests."
msgstr ""
"Para a finalidade de falsificar uma compilação cruzada no LFS, o nome do "
"trio do anfitrião é ligeiramente ajustado mudando-se o campo "
"&quot;vendor&quot; na variável <envar>LFS_TGT</envar>, de forma que diga "
"&quot;lfs&quot;. Nós também usamos a opção <parameter>--with-sysroot</"
"parameter> quando da construção do vinculador cruzado e do compilador "
"cruzado para informá-los onde encontrar os arquivos necessários do "
"anfitrião. Isso assegura que nenhum dos outros aplicativos construídos no "
"<xref linkend=\"chapter-temporary-tools\"/> consegue se vincular a "
"bibliotecas na máquina de construção. Somente dois estágios são obrigatórios "
"e mais um para testes."

#. type: Content of: <sect1><sect2><informaltable><tgroup><tbody><row><entry>
#: lfs-en/part3intro/toolchaintechnotes.xml:222
#: lfs-en/part3intro/toolchaintechnotes.xml:226
msgid "pc"
msgstr "pc"

#. type: Content of: <sect1><sect2><informaltable><tgroup><tbody><row><entry>
#: lfs-en/part3intro/toolchaintechnotes.xml:222
#: lfs-en/part3intro/toolchaintechnotes.xml:226
#: lfs-en/part3intro/toolchaintechnotes.xml:230
msgid "lfs"
msgstr "lfs"

#. type: Content of: <sect1><sect2><informaltable><tgroup><tbody><row><entry>
#: lfs-en/part3intro/toolchaintechnotes.xml:223
msgid "Build cross-compiler cc1 using cc-pc on pc."
msgstr "Construir compilador cruzado cc1 usando cc-pc em pc."

#. type: Content of: <sect1><sect2><informaltable><tgroup><tbody><row><entry>
#: lfs-en/part3intro/toolchaintechnotes.xml:227
msgid "Build compiler cc-lfs using cc1 on pc."
msgstr "Construir compilador cc-lfs usando cc1 em pc."

#. type: Content of: <sect1><sect2><informaltable><tgroup><tbody><row><entry>
#: lfs-en/part3intro/toolchaintechnotes.xml:231
msgid "Rebuild and test cc-lfs using cc-lfs on lfs."
msgstr "Reconstruir e testar cc-lfs usando cc-lfs em lfs."

#. type: Content of: <sect1><sect2><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:237
msgid ""
"In the preceding table, <quote>on pc</quote> means the commands are run on a "
"machine using the already installed distribution. <quote>On lfs</quote> "
"means the commands are run in a chrooted environment."
msgstr ""
"Na tabela precedente, <quote>em pc</quote> significa que os comandos são "
"executados em uma máquina usando a distribuição já instalada. <quote>Em lfs</"
"quote> significa que os comandos são executados em um ambiente chroot."

#. type: Content of: <sect1><sect2><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:241
msgid ""
"This is not yet the end of the story. The C language is not merely a "
"compiler; it also defines a standard library. In this book, the GNU C "
"library, named glibc, is used (there is an alternative, &quot;musl&quot;). "
"This library must be compiled for the LFS machine; that is, using the cross-"
"compiler cc1.  But the compiler itself uses an internal library providing "
"complex subroutines for functions not available in the assembler instruction "
"set. This internal library is named libgcc, and it must be linked to the "
"glibc library to be fully functional. Furthermore, the standard library for "
"C++ (libstdc++) must also be linked with glibc. The solution to this chicken "
"and egg problem is first to build a degraded cc1-based libgcc, lacking some "
"functionalities such as threads and exception handling, and then to build "
"glibc using this degraded compiler (glibc itself is not degraded), and also "
"to build libstdc++. This last library will lack some of the functionality of "
"libgcc."
msgstr ""
"Esse não é ainda o fim da estória. A linguagem C não é apenas um compilador; "
"também define uma biblioteca padrão. Neste livro, a biblioteca GNU C, "
"chamada de glibc, é usada (existe uma alternativa, &quot;musl&quot;). Essa "
"biblioteca precisa ser compilada para a máquina LFS; isto é, usando o "
"compilador cruzado cc1. Porém, o próprio compilador usa uma biblioteca "
"interna fornecendo sub rotinas complexas para funções não disponíveis no "
"conjunto de instruções do montador. Essa biblioteca interna é chamada de "
"libgcc e precisa ser vinculada à biblioteca glibc para ser completamente "
"funcional. Além disso, a biblioteca padrão para C++ (libstdc++) também "
"precisa estar vinculada com a glibc. A solução para esse problema de ovo e "
"galinha é a de primeiro construir uma libgcc degradada baseada em cc1, "
"faltando algumas funcionalidades, tais como camadas e manuseio de exceções, "
"e então construir a glibc usando esse compilador degradado (a própria glibc "
"não é degradada), e também construir a libstdc++. Essa última biblioteca "
"carecerá de algumas das funcionalidades da libgcc."

#. type: Content of: <sect1><sect2><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:256
msgid ""
"The upshot of the preceding paragraph is that cc1 is unable to build a fully "
"functional libstdc++ with the degraded libgcc, but cc1 is the only compiler "
"available for building the C/C++ libraries during stage 2. There are two "
"reasons we don't immediately use the compiler built in stage 2, cc-lfs, to "
"build those libraries."
msgstr ""
"O resultado do parágrafo precedente é o de que cc1 é inapto para construir "
"uma libstdc++ completamente funcional com a libgcc degradada, porém cc1 é o "
"único compilador disponível para construir as bibliotecas C/C++ durante o "
"estágio 2. Existem duas razões pelas quais nós não usamos imediatamente o "
"compilador construído no estágio 2, cc-lfs, para construir essas bibliotecas."

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:265
msgid ""
"Generally speaking, cc-lfs cannot run on pc (the host system).  Even though "
"the triplets for pc and lfs are compatible with each other, an executable "
"for lfs must depend on glibc-&glibc-version;; the host distro may utilize "
"either a different implementation of libc (for example, musl), or a previous "
"release of glibc (for example, glibc-2.13)."
msgstr ""
"Falando genericamente, cc-lfs não consegue executar em pc (o sistema "
"anfitrião). Ainda que os trios para pc e lfs sejam compatíveis entre si, um "
"executável para lfs precisa depender da glibc-&glibc-version;; a "
"distribuição anfitriã possivelmente utilize ou uma implementação diferente "
"da libc (por exemplo, musl), ou um lançamento anterior da glibc (por "
"exemplo, glibc-2.13)."

#. type: Content of: <sect1><sect2><itemizedlist><listitem><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:274
msgid ""
"Even if cc-lfs can run on pc, using it on pc would create a risk of linking "
"to the pc libraries, since cc-lfs is a native compiler."
msgstr ""
"Ainda se cc-lfs conseguisse executar em pc, usá-la em pc criaria um risco de "
"vinculação às bibliotecas de pc, dado que cc-lfs é um compilador nativo."

#. type: Content of: <sect1><sect2><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:281
msgid ""
"So when we build gcc stage 2, we instruct the building system to rebuild "
"libgcc and libstdc++ with cc1, but we link libstdc++ to the newly rebuilt "
"libgcc instead of the old, degraded build.  This makes the rebuilt libstdc++ "
"fully functional."
msgstr ""
"Assim, quando nós construirmos gcc estágio 2, nós instruímos o sistema de "
"construção a reconstruir libgcc e libstdc++ com cc1, porém nós vinculamos "
"libstdc++ à libgcc reconstruída recentemente, em vez da antiga, degradada "
"construção. Isso torna a libstdc++ reconstruída completamente funcional."

#. type: Content of: <sect1><sect2><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:286
msgid ""
"In &ch-final; (or <quote>stage 3</quote>), all the packages needed for the "
"LFS system are built. Even if a package has already been installed into the "
"LFS system in a previous chapter, we still rebuild the package.  The main "
"reason for rebuilding these packages is to make them stable: if we reinstall "
"an LFS package on a completed LFS system, the reinstalled content of the "
"package should be the same as the content of the same package when first "
"installed in &ch-final;.  The temporary packages installed in &ch-tmp-cross; "
"or &ch-tmp-chroot; cannot satisfy this requirement, because some of them are "
"built without optional dependencies, and autoconf cannot perform some "
"feature checks in &ch-tmp-cross; because of cross-compilation, causing the "
"temporary packages to lack optional features, or use suboptimal code "
"routines. Additionally, a minor reason for rebuilding the packages is to run "
"the test suites."
msgstr ""
"No &ch-final; (ou <quote>estágio 3</quote>), todos os pacotes necessários "
"para o sistema LFS são construídos. Ainda se um pacote já tenha sido "
"instalado no sistema LFS em um capítulo anterior, nós ainda reconstruímos o "
"pacote. A razão principal para reconstruir esses pacotes é a de torná-los "
"estáveis: se nós reinstalarmos um pacote LFS em um sistema LFS completo, "
"[então] o conteúdo reinstalado do pacote deveria ser o mesmo que o conteúdo "
"do mesmo pacote quando primeiro instalado no &ch-final;. Os pacotes "
"temporários instalados no &ch-tmp-cross; ou no &ch-tmp-chroot; não conseguem "
"satisfazer essa exigência, pois alguns deles são construídos sem "
"dependências opcionais e o autoconf não consegue realizar algumas "
"verificações de recursos no &ch-tmp-cross;, por causa da compilação cruzada, "
"causando nos pacotes temporários a falta de recursos opcionais ou o uso de "
"rotinas sub ótimas de código. Adicionalmente, uma razão menor para "
"reconstruir os pacotes é a de executar as suítes de teste."

#. type: Content of: <sect1><sect2><title>
#: lfs-en/part3intro/toolchaintechnotes.xml:304
msgid "Other Procedural Details"
msgstr "Outros Detalhes Procedurais"

#. type: Content of: <sect1><sect2><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:306
msgid ""
"The cross-compiler will be installed in a separate <filename "
"class=\"directory\">$LFS/tools</filename> directory, since it will not be "
"part of the final system."
msgstr ""
"O compilador cruzado será instalado em um diretório <filename class="
"\"directory\">$LFS/tools</filename> separado, dado que ele não será parte do "
"sistema final."

#. type: Content of: <sect1><sect2><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:310
msgid ""
"Binutils is installed first because the <command>configure</command> runs of "
"both gcc and glibc perform various feature tests on the assembler and linker "
"to determine which software features to enable or disable. This is more "
"important than one might realize at first. An incorrectly configured gcc or "
"glibc can result in a subtly broken toolchain, where the impact of such "
"breakage might not show up until near the end of the build of an entire "
"distribution. A test suite failure will usually highlight this error before "
"too much additional work is performed."
msgstr ""
"O Binutils é instalado primeiro, pois as execuções do <command>configure</"
"command> de ambos gcc e glibc realizam vários testes de recursos no montador "
"e no vinculador para determinar quais recursos de software habilitar ou "
"desabilitar. Isso é mais importante do que, inicialmente, alguém possa "
"perceber. Um gcc ou uma glibc configurado incorretamente pode resultar em um "
"conjunto de ferramentas sutilmente quebrado, onde o impacto de tal quebra "
"talvez não se manifeste até próximo do final da construção de uma "
"distribuição inteira. Uma falha de suíte de teste normalmente destacará tal "
"erro antes que muito mais trabalho adicional seja realizado."

#. type: Content of: <sect1><sect2><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:319
msgid ""
"Binutils installs its assembler and linker in two locations, <filename "
"class=\"directory\">$LFS/tools/bin</filename> and <filename "
"class=\"directory\">$LFS/tools/$LFS_TGT/bin</filename>. The tools in one "
"location are hard linked to the other. An important facet of the linker is "
"its library search order. Detailed information can be obtained from "
"<command>ld</command> by passing it the <parameter>--verbose</parameter> "
"flag. For example, <command>$LFS_TGT-ld --verbose | grep SEARCH</command> "
"will illustrate the current search paths and their order. (Note that this "
"example can be run as shown only while logged in as user <systemitem "
"class=\"username\">lfs</systemitem>. If you come back to this page later, "
"replace <command>$LFS_TGT-ld</command> with <command>ld</command>)."
msgstr ""
"O Binutils instala o montador e o vinculador dele em dois locais, <filename "
"class=\"directory\">$LFS/tools/bin</filename> e <filename class=\"directory\""
">$LFS/tools/$LFS_TGT/bin</filename>. As ferramentas em um local são "
"rigidamente vinculadas às outras. Uma faceta importante do vinculador é a "
"ordem de procura de biblioteca dele. Informação detalhada pode ser obtida do "
"<command>ld</command> passando-lhe a flag <parameter>--verbose</parameter>. "
"Por exemplo, <command>$LFS_TGT-ld --verbose | grep SEARCH</command> exibirá "
"os caminhos atuais de procura e a ordem deles. (Observe que esse exemplo "
"pode ser executado como mostrado somente enquanto logado(a) como usuário(a) "
"<systemitem class=\"username\">lfs</systemitem>. Se você retornar a esta "
"página posteriormente, [então] substitua <command>$LFS_TGT-ld</command> por "
"<command>ld</command>)."

#. type: Content of: <sect1><sect2><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:332
msgid ""
"The next package installed is gcc. An example of what can be seen during its "
"run of <command>configure</command> is:"
msgstr ""
"O próximo pacote instalado é o gcc. Um exemplo do que pode ser visto durante "
"a execução dele do <command>configure</command> é:"

#. type: Content of: <sect1><sect2><screen>
#: lfs-en/part3intro/toolchaintechnotes.xml:335
#, no-wrap
msgid ""
"<computeroutput>checking what assembler to use... /mnt/lfs/tools/i686-lfs-linux-gnu/bin/as\n"
"checking what linker to use... /mnt/lfs/tools/i686-lfs-linux-gnu/bin/ld</computeroutput>"
msgstr ""
"<computeroutput>checking what assembler to use... /mnt/lfs/tools/"
"i686-lfs-linux-gnu/bin/as\n"
"checking what linker to use... /mnt/lfs/tools/i686-lfs-linux-gnu/bin/"
"ld</computeroutput>"

#. type: Content of: <sect1><sect2><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:338
msgid ""
"This is important for the reasons mentioned above. It also demonstrates that "
"gcc's configure script does not search the PATH directories to find which "
"tools to use. However, during the actual operation of <command>gcc</command> "
"itself, the same search paths are not necessarily used. To find out which "
"standard linker <command>gcc</command> will use, run: <command>$LFS_TGT-gcc -"
"print-prog-name=ld</command>. (Again, remove the <command>$LFS_TGT-</"
"command> prefix if coming back to this later.)"
msgstr ""
"Isso é importante pelas razões mencionadas acima. Também demonstra que o "
"script de configuração do gcc não procura nos diretórios do PATH para "
"encontrar quais ferramentas usar. Entretanto, durante a operação atual do "
"próprio <command>gcc</command>, os mesmos caminhos de procura não são "
"necessariamente usados. Para descobrir qual vinculador padrão o "
"<command>gcc</command> usará, execute: <command>$LFS_TGT-gcc -print-prog-"
"name=ld</command>. (Novamente, remova o prefixo <command>$LFS_TGT-</command> "
"se retornar a isso posteriormente)."

#. type: Content of: <sect1><sect2><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:347
msgid ""
"Detailed information can be obtained from <command>gcc</command> by passing "
"it the <parameter>-v</parameter> command line option while compiling a "
"program. For example, <command>$LFS_TGT-gcc -v <replaceable>example.c</"
"replaceable></command> (or without <command> $LFS_TGT-</command> if coming "
"back later) will show detailed information about the preprocessor, "
"compilation, and assembly stages, including <command>gcc</command>'s search "
"paths for included headers and their order."
msgstr ""
"Informação detalhada pode ser obtida do <command>gcc</command> passando-se a "
"opção de linha de comando <parameter>-v</parameter> enquanto compilar um "
"aplicativo. Por exemplo, <command>$LFS_TGT-gcc -v <replaceable>example."
"c</replaceable></command> (ou sem <command> $LFS_TGT-</command> se retornar "
"posteriormente) exibirá informação detalhada acerca do preprocessador, "
"compilação e estágios da montagem, incluindo os caminhos de procura do "
"<command>gcc</command> para cabeçalhos inclusos e a ordem deles."

#. type: Content of: <sect1><sect2><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:356
msgid ""
"Next up: sanitized Linux API headers. These allow the standard C library "
"(glibc) to interface with features that the Linux kernel will provide."
msgstr ""
"Em seguida: cabeçalhos sanitizados da API do Linux. Eles permitem que a "
"biblioteca C padrão (glibc) interaja com os recursos que o núcleo Linux "
"fornecerá."

#. type: Content of: <sect1><sect2><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:360
msgid ""
"Next comes glibc. The most important considerations for building glibc are "
"the compiler, binary tools, and kernel headers. The compiler is generally "
"not an issue since glibc will always use the compiler relating to the "
"<parameter>--host</parameter> parameter passed to its configure script; e."
"g., in our case, the compiler will be <command>$LFS_TGT-gcc</command>. The "
"binary tools and kernel headers can be a bit more complicated. Therefore, we "
"take no risks and use the available configure switches to enforce the "
"correct selections. After the run of <command>configure</command>, check the "
"contents of the <filename>config.make</filename> file in the <filename "
"class=\"directory\">build</filename> directory for all important details.  "
"Note the use of <parameter>CC=\"$LFS_TGT-gcc\"</parameter> (with "
"<envar>$LFS_TGT</envar> expanded) to control which binary tools are used and "
"the use of the <parameter>-nostdinc</parameter> and <parameter>-isystem</"
"parameter> flags to control the compiler's include search path. These items "
"highlight an important aspect of the glibc package&mdash;it is very self-"
"sufficient in terms of its build machinery, and generally does not rely on "
"toolchain defaults."
msgstr ""
"Próximo vem a glibc. As considerações mais importantes para a construção da "
"glibc são o compilador, ferramentas binárias e os cabeçalhos do núcleo. O "
"compilador geralmente não é um problema dado que a glibc sempre usará o "
"compilador relacionado ao parâmetro <parameter>--host</parameter> passado ao "
"script configure dela; por exemplo, em nosso caso, o compilador será <command"
">$LFS_TGT-gcc</command>. As ferramentas binárias e os cabeçalhos do núcleo "
"podem ser um bocado mais complicados. Dessa maneira, nós não nos arriscamos "
"e usamos as chaves do configure disponíveis para impor as seleções corretas. "
"Após a execução do <command>configure</command>, verifique o conteúdo do "
"arquivo <filename>config.make</filename> no diretório <filename class="
"\"directory\">build</filename> para todos os detalhes importantes. Observe o "
"uso de <parameter>CC=\"$LFS_TGT-gcc\"</parameter> (com <envar>$LFS_TGT</"
"envar> expandida) para controlar quais ferramentas binárias são usadas e o "
"uso das flags <parameter>-nostdinc</parameter> e <parameter>-isystem</"
"parameter> para controlar o caminho de procura de include do compilador. "
"Esses itens destacam um importante aspecto do pacote glibc&mdash;ele é muito "
"autossuficiente em termos de maquinário de construção e geralmente não "
"confia em padrões de conjuntos de ferramentas."

#. type: Content of: <sect1><sect2><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:379
msgid ""
"As mentioned above, the standard C++ library is compiled next, followed in "
"<xref linkend=\"chapter-temporary-tools\"/> by other programs that must be "
"cross-compiled to break circular dependencies at build time.  The install "
"step of all those packages uses the <envar>DESTDIR</envar> variable to force "
"installation in the LFS filesystem."
msgstr ""
"Como mencionado acima, a biblioteca C++ padrão é compilada depois, seguida "
"no <xref linkend=\"chapter-temporary-tools\"/> por outros aplicativos que "
"precisam ser compilados cruzadamente para quebrar dependências circulares em "
"tempo de construção. A etapa de instalação de todos aqueles pacotes usa a "
"variável <envar>DESTDIR</envar> para forçar a instalação no sistema de "
"arquivos do LFS."

#. type: Content of: <sect1><sect2><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:386
msgid ""
"At the end of <xref linkend=\"chapter-temporary-tools\"/> the native LFS "
"compiler is installed. First binutils-pass2 is built, in the same "
"<envar>DESTDIR</envar> directory as the other programs, then the second pass "
"of gcc is constructed, omitting some non-critical libraries.  Due to some "
"weird logic in gcc's configure script, <envar>CC_FOR_TARGET</envar> ends up "
"as <command>cc</command> when the host is the same as the target, but "
"different from the build system. This is why "
"<parameter>CC_FOR_TARGET=$LFS_TGT-gcc</parameter> is declared explicitly as "
"one of the configuration options."
msgstr ""
"Ao final do <xref linkend=\"chapter-temporary-tools\"/> o compilador nativo "
"do LFS é instalado. Primeiro binutils passagem 2 é construído, no mesmo "
"diretório <envar>DESTDIR</envar> que os outros aplicativos, então a segunda "
"passagem do gcc é construída, omitindo algumas bibliotecas não críticas. "
"Devido a algumas lógicas estranhas no script configure do gcc, "
"<envar>CC_FOR_TARGET</envar> termina como <command>cc</command> quando o "
"anfitrião for o mesmo que o alvo, porém for diferente do sistema de "
"construção. Essa é a razão pela qual <parameter>CC_FOR_TARGET=$LFS_TGT-gcc</"
"parameter> é declarado explicitamente como uma das opções de configuração."

#. type: Content of: <sect1><sect2><para>
#: lfs-en/part3intro/toolchaintechnotes.xml:397
msgid ""
"Upon entering the chroot environment in <xref linkend=\"chapter-chroot-"
"temporary-tools\"/>, the temporary installations of programs needed for the "
"proper operation of the toolchain are performed. From this point onwards, "
"the core toolchain is self-contained and self-hosted. In <xref "
"linkend=\"chapter-building-system\"/>, final versions of all the packages "
"needed for a fully functional system are built, tested, and installed."
msgstr ""
"Uma vez dentro do ambiente chroot no <xref linkend=\"chapter-chroot-"
"temporary-tools\"/>, as instalações temporárias de aplicativos necessários "
"para a operação apropriada do conjunto de ferramentas são realizadas. Deste "
"ponto em diante, o conjunto central de ferramentas está auto-contido e auto-"
"hospedado. No <xref linkend=\"chapter-building-system\"/>, as versões finais "
"de todos os pacotes necessários para um sistema completamente funcional são "
"construídas, testadas e instaladas."

#, fuzzy
#~ msgid ""
#~ "This is not the end of the story: the conclusion of the preceding "
#~ "paragraph is that cc1 is unable to build a fully functional libstdc++, "
#~ "but this is the only compiler available for building the C/C++ libraries "
#~ "during stage 2! Of course, the compiler built during stage 2, cc-lfs, "
#~ "would be able to build those libraries, but (1) the build system of GCC "
#~ "does not know that it is usable on pc, and (2) using it on pc would be at "
#~ "risk of linking to the pc libraries, since cc-lfs is a native compiler. "
#~ "So we have to build libstdc++ later, in chroot."
#~ msgstr ""
#~ "Esse não é o fim da história: a conclusão do parágrafo precedente é a de "
#~ "que cc1 é incapaz de construir uma libstdc++ completamente funcional, "
#~ "porém esse é o único compilador disponível para construir as bibliotecas "
#~ "C/C++ durante o estágio 2! Certamente, o compilador construído durante o "
#~ "estágio 2, cc-lfs, seria capaz de construir aquelas bibliotecas, porém "
#~ "(1) o sistema de construção do GCC não sabe que está utilizável em pc; e "
#~ "(2) usá-lo em pc estaria sob o risco de vinculamento às bibliotecas de "
#~ "pc, dado que cc-lfs é um compilador nativo. Assim, nós temos de construir "
#~ "libstdc++ mais tarde, em jaula."
