<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-scripts-usage">
  <?dbhtml filename="usage.html"?>

  <title>Comment fonctionnent ces scripts de démarrage&nbsp;?</title>

  <indexterm zone="ch-scripts-usage">
    <primary sortas="a-Bootscripts">Bootscripts</primary>
    <secondary>utilisation</secondary>
  </indexterm>

  <para>Linux utilise un service de démarrage spécial nommé SysVinit qui
  est basé sur un concept de <emphasis>niveaux d'exécution</emphasis>.
  Cela peut être bien différent d'un système à un autre, du coup, il ne
  peut pas être supposé que, parce que cela fonctionne dans une
  distribution Linux particulière, cela fonctionnera de la même façon
  dans LFS. LFS a sa propre façon de le faire mais il respecte
  généralement les standards établis.</para>

  <para>SysVinit (qui sera nommé par la suite <quote>init</quote>)
  fonctionne en utilisant un schéma de niveaux d'exécution. Ils sont au
  nombre de sept (numérotés de 0 à 6). En fait, il en existe plus mais
  ils sont pour des cas spéciaux et ne sont généralement pas utilisés.
  Voir <filename>init(8)</filename> pour plus de détails. Chacun d'entre
  eux correspond à des actions que l'ordinateur est supposé effectuer
  lorsqu'il démarre. Le niveau d'exécution par défaut est 3. Voici les
  descriptions sur l'implémentation des différents niveaux
  d'exécution&nbsp;:</para>

<literallayout>

0: arrête l'ordinateur

1: mode simple utilisateur

2: mode multi-utilisateur sans réseau 

3: mode multi-utilisateur avec réseau

4: réservé pour la personnalisation, sinon identique à 3

5: identique à 4, il est habituellement utilisé pour la connexion GUI
(comme <command>xdm</command> de X ou <command>kdm</command> de KDE) 

6: redémarre l'ordinateur</literallayout>

  <sect2 id="conf-sysvinit" role="configuration">
    <title>Configuration de Sysvinit</title>

    <indexterm zone="conf-sysvinit">
      <primary sortas="a-Sysvinit">Sysvinit</primary>
      <secondary>configuration</secondary>
    </indexterm>

    <indexterm zone="conf-sysvinit">
      <primary sortas="e-/etc/inittab">/etc/inittab</primary>
    </indexterm>

    <para>Lors de l'initialisation du noyau, le premier programme qui se lance 
    est soit spécifié sur la ligne de commande, soit, par défaut,
    <command>init</command>.  Ce programme lit le fichier d'initialisation
    <filename>/etc/inittab</filename>. Créez ce fichier avec&nbsp;:</para>

<screen><userinput>cat &gt; /etc/inittab &lt;&lt; "EOF"
<literal># Begin /etc/inittab

id:3:initdefault:

si::sysinit:/etc/rc.d/init.d/rc S

l0:0:wait:/etc/rc.d/init.d/rc 0
l1:S1:wait:/etc/rc.d/init.d/rc 1
l2:2:wait:/etc/rc.d/init.d/rc 2
l3:3:wait:/etc/rc.d/init.d/rc 3
l4:4:wait:/etc/rc.d/init.d/rc 4
l5:5:wait:/etc/rc.d/init.d/rc 5
l6:6:wait:/etc/rc.d/init.d/rc 6

ca:12345:ctrlaltdel:/sbin/shutdown -t1 -a -r now

su:S016:once:/sbin/sulogin

1:2345:respawn:/sbin/agetty tty1 9600
2:2345:respawn:/sbin/agetty tty2 9600
3:2345:respawn:/sbin/agetty tty3 9600
4:2345:respawn:/sbin/agetty tty4 9600
5:2345:respawn:/sbin/agetty tty5 9600
6:2345:respawn:/sbin/agetty tty6 9600

# Fin de /etc/inittab</literal>
EOF</userinput></screen>

  <para>Vous trouverez une explication de ce fichier d'initialisation dans la
  page de man de <emphasis>inittab</emphasis>. Pour LFS, la commande clé qui se
  lance est <command>rc</command>. Le fichier d'initialisation ci-dessus demandera 
  à <command>rc</command> de lancer tous les scripts commençant par un S et dans 
  le répertoire <filename class="directory">/etc/rc.d/rcsysinit.d</filename>,
  puis tous les scripts commençant par un S du répertoire <filename
  class="directory">/etc/rc.d/rc?.d</filename> où le point d'interrogation
  est spécifié par la valeur initdefault.</para>

  <para>Par commodité, le script <command>rc</command> lit une bibliothèque
  de fonctions dans <filename class="directory">/lib/lsb/init-functions</filename>.
  Cette bibliothèque lit aussi un fichier de configuration facultatif,
  <filename>/etc/sysconfig/init_params</filename>.  Tous les paramètres du
  fichier de configuration du système décrits dans les sections suivantes peuvent
  être mis dans ce fichier, ce qui permet de rassembler tous les paramètres
  systèmes dans un seul fichier.</para>

  <para>Pour faciliter le débogage, le script functions enregistre aussi toute
  la sortie dans <filename>/run/var/bootlog</filename>.  Le répertoire <filename
  class="directory">/run</filename> étant un tmpfs, ce fichier n'est pas
  persistant entre les redémarrages.</para>
  
  </sect2>
  
  <sect2 id="init-levels" >
  <title>Modifier les niveaux d'exécution</title>

  <para>La commande utilisée pour modifier le niveau d'exécution est
  <command>init
  <replaceable>&lt;[niveau_exécution]&gt;</replaceable></command>, où
  <replaceable>&lt;[niveau_exécution]&gt;</replaceable> est le niveau
  d'exécution cible.

  Par exemple, pour redémarrer l'ordinateur, un utilisateur pourrait
  lancer la commande <command>init 6</command> qui est un alias de la
  commande <command>reboot</command>. De même, <command>init 0</command>
  est un alias pour la commande <command>halt</command>.</para>

  <para>Il existe un certain nombre de répertoires sous

  <filename class="directory">/etc/rc.d</filename> qui ressemble à
  <filename class="directory">rc?.d</filename> (où ? est le numéro du
  niveau d'exécution) et 

  <filename class="directory">rcsysinit.d</filename>, tous contenant un
  certain nombre de liens symboliques. Certains commencent avec un
  <emphasis>K</emphasis>, les autres avec un <emphasis>S</emphasis>, et
  tous ont deux nombres après la lettre initiale. Le K signifie l'arrêt
  (kill) d'un service et le S son lancement (start). Les nombres
  déterminent l'ordre dans lequel les scripts sont exécutés, de 00 à
  99&mdash;plus ce nombre est petit, plus tôt le script correspondant
  sera exécuté. Quand <command>init</command> bascule sur un autre
  niveau d'exécution, les services appropriés sont soit lancé soit tués,
  suivant le niveau d'exécution choisi.</para>

  <para>Les vrais scripts sont dans

  <filename class="directory">/etc/rc.d/init.d</filename>. Ils font le
  vrai boulot et les liens symboliques pointent tous vers eux. Les liens K et 
  les liens S pointent vers le même script dans 

  <filename class="directory">/etc/rc.d/init.d</filename>. Ceci est dû
  au fait que les scripts peuvent être appelés avec différents
  paramètres comme <parameter>start</parameter>,
  <parameter>stop</parameter>, <parameter>restart</parameter>,
  <parameter>reload</parameter> et <parameter>status</parameter>. Quand
  un lien K est rencontré, le script approprié est lancé avec l'argument
  <parameter>stop</parameter>. Quand un lien S est rencontré, le script
  approprié est lancé avec l'argument
  <parameter>start</parameter>.</para>

  <para>Il existe une exception à cette explication. Les liens
  commençant avec un <emphasis>S</emphasis> dans les répertoires
  <filename class="directory">rc0.d</filename> et

  <filename class="directory">rc6.d</filename> ne lanceront aucun
  service. Ils seront
  appelés avec l'argument <parameter>stop</parameter> pour arrêter
  quelque chose.

  La logique derrière ceci est que, quand un utilisateur va redémarrer
  ou arrêter le système, rien ne doit être lancé. Le système a seulement
  besoin d'être stoppé.</para>

  <para>Voici des descriptions de ce que font les arguments des
  scripts&nbsp;:</para>

  <variablelist>

    <varlistentry>
      <term><parameter>start</parameter></term>
      <listitem>
        <para>Le service est lancé.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter>stop</parameter></term>
      <listitem>
        <para>Le service est stoppé.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter>restart</parameter></term>
      <listitem>
        <para>Le service est stoppé puis de nouveau lancé.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter>reload</parameter></term>
      <listitem>
        <para>La configuration du service est mise à jour. Ceci est utilisé
        après que le fichier de configuration d'un service a été modifié, quand le
        service n'a pas besoin d'être redémarré.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter>status</parameter></term>
      <listitem>
        <para>Indique si le service est en cours d'exécution ainsi que les
        PID associés.</para>
      </listitem>
    </varlistentry>

  </variablelist>

  <para>Vous êtes libre de modifier la façon dont le processus de
  démarrage fonctionne (après tout, c'est votre système LFS). Les
  fichiers donnés ici sont un exemple d'une façon de faire.</para>

  </sect2>

</sect1>
