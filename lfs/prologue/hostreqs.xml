<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="pre-hostreqs" xreflabel="Host System Requirements">
  <?dbhtml filename="hostreqs.html"?>

  <title>Prérequis du système hôte</title>

    <para>Votre système hôte doit contenir les logiciels suivants dans leur
    version minimum indiquée. Cela ne devrait pas poser de problème sur la
    plupart des distributions Linux modernes. Noter également que
    certaines distributions placeront les en-tête des logiciels
    dans un répertoire distinct des paquets, ayant souvent la forme
    <quote>&lt;nom-du-paquet&gt;-devel</quote> ou
    <quote>&lt;nom-du-paquet&gt;-dev</quote>. Assurez-vous qu'ils sont
    installés si votre distribution les fournit.</para>

    <para>Il se peut que les versions antérieures des paquets logiciels listés
    fonctionnent mais elles n'ont pas été testées.</para>

  <itemizedlist spacing="compact">

    <listitem>
      <para><emphasis role="strong">Bash-3.2</emphasis> (/bin/sh
      devrait être un lien symbolique ou physique vers bash)</para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Binutils-2.17</emphasis> (les versions
      supérieures à &binutils-version; ne sont pas recommandées car elles 
      n'ont pas été testées)</para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Bison-2.3</emphasis> (/usr/bin/yacc
      devrait être un lien vers bison ou un petit script qui exécute bison)</para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Bzip2-1.0.4</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Coreutils-6.9</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Diffutils-2.8.1</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Findutils-4.2.31</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Gawk-4.0.1</emphasis> (/usr/bin/awk
      devrait être un lien vers gawk)</para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">GCC-4.1.2</emphasis>, y compris le compilateur
      C++ <command>g++</command> (les versions
      supérieures à &gcc-version; ne sont pas recommandées car elles n'ont
      pas été testées)</para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Glibc-2.5.1</emphasis> (les versions
      supérieures à &glibc-version; ne sont pas recommandées car elles n'ont
      pas été testées)</para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Grep-2.5.1a</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Gzip-1.3.12</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Linux Kernel-&min-kernel;</emphasis></para>

      <para>Cette version du noyau est requise car nous spécifions cette 
      version-là lors de la construction de
      <application>glibc</application> au chapitre 6, suivant ainsi une 
      recommandation  des développeurs. Elle est aussi exigée par Udev</para>

      <para>Si le noyau hôte est plus ancien que le &min-kernel;,
      vous devrez remplacer le noyau par une version plus à jour.
      Vous pouvez employer deux méthodes pour cela.
      Vous pouvez d'abord voir si votre distribution Linux fournit un paquet
      pour le noyau &min-kernel; ou supérieur. Si tel est le cas, vous pouvez l'installer. Si
      votre distribution n'offre pas un paquet acceptable pour le noyau, ou si vous
      préférez l'installer, vous pouvez compiler un noyau 2.6 vous-même.
      Les instructions pour la compilation du noyau et la configuration du
      chargeur de démarrage (en supposant que le système hôte utilise GRUB) sont
      au <xref linkend="chapter-bootable"/>.</para>
      
    </listitem>

    <listitem>
      <para><emphasis role="strong">M4-1.4.10</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Make-3.81</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Patch-2.5.4</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Perl-5.8.8</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Sed-4.1.5</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Tar-1.18</emphasis></para>
    </listitem>

    <!-- Needed by the apparently broken Binutils-2.18 -->
    <listitem>
      <para><emphasis role="strong">Texinfo-4.9</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Xz-5.0.0</emphasis></para>
    </listitem>

  </itemizedlist>

  <para>Remarquez que les liens symboliques mentionnés ci-dessus sont nécessaires
  pour construire un système LFS en utilisant les instructions contenues à l'intérieur de ce livre.
  Il se peut que les liens symboliques pointent
  vers d'autres logiciels (comme dash, mawk, etc), mais ils n'ont pas été testés
  ou supportés par l'équipe de développement LFS et ils se peut qu'ils 
  impliquent d'autres déviations par rapport aux instructions ou des correctifs
  supplémentaires pour certains
  paquets.</para>

  <sect2 id="version-check">
    <title> </title>

    <para>Pour voir si votre système hôte a toutes les versions nécessaires,
  exécutez ceci&nbsp;:</para>

<!-- ANY additional lines in the script cause a pdf rendering problem-->
<screen role="nodump"><userinput>cat &gt; version-check.sh &lt;&lt; "EOF"
<literal>#!/bin/bash
# Simple script to list version numbers of critical development tools

export LC_ALL=C
bash --version | head -n1 | cut -d" " -f2-4
echo "/bin/sh -&gt; `readlink -f /bin/sh`"
echo -n "Binutils: "; ld --version | head -n1 | cut -d" " -f3-
bison --version | head -n1
if [ -e /usr/bin/yacc ];
  then echo "/usr/bin/yacc -&gt; `readlink -f /usr/bin/yacc`"; 
  else echo "yacc not found"; fi

bzip2 --version 2&gt;&amp;1 &lt; /dev/null | head -n1 | cut -d" " -f1,6-
echo -n "Coreutils: "; chown --version | head -n1 | cut -d")" -f2
diff --version | head -n1
find --version | head -n1
gawk --version | head -n1
if [ -e /usr/bin/awk ];
  then echo "/usr/bin/awk -&gt; `readlink -f /usr/bin/awk`"; 
  else echo "awk not found"; fi

gcc --version | head -n1
g++ --version | head -n1
ldd --version | head -n1 | cut -d" " -f2-  # glibc version
grep --version | head -n1
gzip --version | head -n1
cat /proc/version
m4 --version | head -n1
make --version | head -n1
patch --version | head -n1
echo Perl `perl -V:version`
sed --version | head -n1
tar --version | head -n1
echo "Texinfo: `makeinfo --version | head -n1`"
xz --version | head -n1

echo 'main(){}' &gt; dummy.c &amp;&amp; g++ -o dummy dummy.c
if [ -x dummy ] 
  then echo "g++ compilation OK";
  else echo "g++ compilation failed"; fi
rm -f dummy.c dummy</literal>
EOF

bash version-check.sh</userinput></screen>

  </sect2>

</sect1>
