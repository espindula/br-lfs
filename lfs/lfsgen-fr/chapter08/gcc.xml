<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-gcc" role="wrap">
  <?dbhtml filename="gcc.html"?>

  <sect1info condition="script">
<productname>gcc</productname> <productnumber>&gcc-version;</productnumber>
<address>&gcc-url;</address></sect1info>

  <title>GCC-&gcc-version;</title>

  <indexterm zone="ch-system-gcc">
    <primary sortas="a-GCC">GCC</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>Le paquet GCC contient la collection de compilateurs GNU, qui inclut les
compilateurs C et C++.</para>

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&gcc-fin-sbu;</seg>
        <seg>&gcc-fin-du;</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation de GCC</title>

    <para>At first, fix an issue breaking <filename
class="libraryfile">libasan.a</filename> building this package with
Glibc-2.34:</para>

<screen><userinput remap="pre">sed -e '/static.*SIGSTKSZ/d' \
    -e 's/return kAltStackSize/return SIGSTKSZ * 4/' \
    -i libsanitizer/sanitizer_common/sanitizer_posix_libcdep.cpp</userinput></screen>

    <para>Si vous construisez sur x86_64, changez le nom du répertoire par défaut des
bibliothèques 64&nbsp;bits en <quote>lib</quote>&nbsp;:</para>

<screen><userinput remap="pre">case $(uname -m) in
  x86_64)
    sed -e '/m64=/s/lib64/lib/' \
        -i.orig gcc/config/i386/t-linux64
  ;;
esac</userinput></screen>

    <para>La documentation de GCC recommande de construire GCC dans un répertoire de
construction dédié&nbsp;:</para>

<screen><userinput remap="pre">mkdir -v build
cd       build</userinput></screen>

    <para>Préparez la compilation de GCC&nbsp;:</para>

<screen><userinput remap="configure">../configure --prefix=/usr            \
             LD=ld                    \
             --enable-languages=c,c++ \
             --disable-multilib       \
             --disable-bootstrap      \
             --with-system-zlib</userinput></screen>

    <para>Remarquez que pour d'autres langages, il existe des prérequis qui ne sont
pas encore disponibles. Voir le <ulink url="&blfs-book;general/gcc.html">la
page GCC du livre BLFS</ulink> pour des instructions sur la manière de
construire tous les langages pris en charge par GCC.</para>

    <variablelist>
      <title>Voici la signification des nouvelles options de configure&nbsp;:</title>

      <varlistentry>
        <term><parameter>LD=ld</parameter></term>
        <listitem>
          <para>Ce paramètre assure que le script configure utilisera le ld installé par
binutils, construit plus tôt dans ce chapitre, au lieu de la version
compilée de manière croisée qui serait sinon utilisée.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--with-system-zlib</parameter></term>
        <listitem>
          <para>Ce paramètre dit à GCC de se lier à la copie installée sur le système de la
bibliothèque zlib, plutôt qu'à sa propre copie interne.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>Compilez le paquet&nbsp;:</para>

<screen><userinput remap="make">make</userinput></screen>

    <important>
      <para>Dans cette section, la suite de tests pour GCC est considérée comme
critique. Ne les sautez sous aucun prétexte.</para>
    </important>

   <para>Un ensemble de tests dans la suite de tests de GCC est connu pour utiliser
toute la pile par défaut, donc augmentez la taille de la pile avant de
lancer les tests&nbsp;:</para>

<screen><userinput remap="test">ulimit -s 32768</userinput></screen>

    <para>Testez les résultats en tant qu'utilisateur non privilégié, mais ne vous
arrêtez pas aux erreurs&nbsp;:</para>

<screen><userinput remap="test">chown -Rv tester . 
su tester -c "PATH=$PATH make -k check"</userinput></screen>

    <para>Pour recevoir un résumé des résultats de la suite de tests, lancez&nbsp;:</para>

<screen><userinput remap="test">../contrib/test_summary</userinput></screen>

    <para>Pour n'avoir que les résumés, redirigez la sortie vers <userinput>grep -A7
Summ</userinput>.</para>

    <para>Vous pouvez comparer les résultats avec ceux situés dans <ulink
url="&test-results;"/> et <ulink
url="https://gcc.gnu.org/ml/gcc-testresults/"/>.</para>

    
    <!-- https://gcc.gnu.org/bugzilla/show_bug.cgi?id=101081 -->
<para>Eight tests related to analyzer are known to fail.</para>

    
    <!-- https://gcc.gnu.org/bugzilla/show_bug.cgi?id=101751 -->
<para>One test named <filename>asan_test.C</filename> is known to fail.</para>

    
    <!-- https://gcc.gnu.org/bugzilla/show_bug.cgi?id=100117 -->
<para>In libstdc++, one test named <filename>49745.cc</filename> is known to fail
because the header dependencies in glibc have changed.</para>

    <para>Dans libstdc++, un test numpunct et six tests liés à get_time sont connus
pour échouer. Tout cela est du aux définitions des paramètres régionaux dans
glibc qui ont changées, mais libstdc++ ne prend pas encore en charge ces
changements.</para>

    <para>Quelques échecs inattendus sont parfois inévitables. Les développeurs de GCC
connaissent généralement ces problèmes, mais ne les ont pas encore
résolus. Sauf si les résultats des tests sont très différents de ceux sur
l'adresse ci-dessus, vous pouvez continuer en toute sécurité.</para>

    

    
    <!--note>
<para>
      On some combinations of kernel configuration and AMD processors
      there may be more than 1100 failures in the gcc.target/i386/mpx
      tests (which are designed to test the MPX option on recent
      Intel processors). These can safely be ignored on AMD
      processors. These tests will also fail on Intel processors if MPX support
      is not enabled in the kernel even though it is present on the CPU.
    </para></note-->
<!-- PR 91085, will be fixed in GCC 12. -->
<para>Installez le paquet et supprimez un répertoire inutile&nbsp;:</para>

<screen><userinput remap="install">make install
rm -rf /usr/lib/gcc/$(gcc -dumpmachine)/&gcc-version;/include-fixed/bits/</userinput></screen>

    <para>Le répertoire de construction de GCC appartient maintenant à <systemitem
class="username">tester</systemitem> et la propriété du répertoire des
en-têtes installé (et son contenu) seront incorrectes. Donnez la propriété à
l'utilisateur et au groupe <systemitem
class="username">root</systemitem>&nbsp;:</para>

<screen><userinput remap="install">chown -v -R root:root \
    /usr/lib/gcc/*linux-gnu/&gcc-version;/include{,-fixed}</userinput></screen>

    <para>Créez un lien symbolique requis par le <ulink
url="https://refspecs.linuxfoundation.org/FHS_3.0/fhs/ch03s09.html">FHS</ulink>
pour des raisons «&nbsp;historiques&nbsp;».</para>

<!-- already done earlier
    <para>
Many packages use the name <command>cc</command> to call the C
    compiler. To satisfy those packages, create a symlink:</para>

<screen><userinput remap="install">ln -sv gcc /usr/bin/cc</userinput></screen>
  -->
<screen><userinput remap="install">ln -svr /usr/bin/cpp /usr/lib</userinput></screen>
  
    <para>Ajoutez un lien symbolique de compatibilité pour permettre l'optimisation à
l'édition des liens (LTO) à la construction de programmes&nbsp;:</para> 

<screen><userinput remap="install">ln -sfv ../../libexec/gcc/$(gcc -dumpmachine)/&gcc-version;/liblto_plugin.so \
        /usr/lib/bfd-plugins/</userinput></screen>

    <para>Maintenant que notre chaîne d'outils est en place, il est important de
s'assurer à nouveau que la compilation et l'édition de liens fonctionneront
comme prévu. Cela se fait en effectuant les mêmes tests de propreté que ceux
faits plus haut dans ce chapitre&nbsp;:</para>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='a'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='b'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='c'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='d'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='e'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='f'])"/>

<screen><computeroutput>/usr/lib/gcc/x86_64-pc-linux-gnu/&gcc-version;/../../../../lib/crt1.o succeeded
/usr/lib/gcc/x86_64-pc-linux-gnu/&gcc-version;/../../../../lib/crti.o succeeded
/usr/lib/gcc/x86_64-pc-linux-gnu/&gcc-version;/../../../../lib/crtn.o succeeded</computeroutput></screen>

  <para>Selon l'architecture de votre machine, le message ci-dessus peut légèrement
différer. La différence porte sur le nom du répertoire après <filename
class="directory">/usr/lib/gcc</filename>. La chose importante à chercher
est que <command>gcc</command> ait trouvé les trois fichiers
<filename>crt*.o</filename> sous le répertoire <filename
class="directory">/usr/lib</filename>.</para>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='g'])"/>

<screen><userinput>grep -B4 '^ /usr/include' dummy.log</userinput></screen>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='h'])"/>

<screen><computeroutput>#include &lt;...&gt; search starts here:
 /usr/lib/gcc/x86_64-pc-linux-gnu/&gcc-version;/include
 /usr/local/include
 /usr/lib/gcc/x86_64-pc-linux-gnu/&gcc-version;/include-fixed
 /usr/include</computeroutput></screen>

   <para>À nouveau, le nom du répertoire après votre triplet cible peut être
différent de celui ci-dessus, selon votre architecture.</para>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='i'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='j'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='k'])"/>

<screen><computeroutput>SEARCH_DIR("/usr/x86_64-pc-linux-gnu/lib64")
SEARCH_DIR("/usr/local/lib64")
SEARCH_DIR("/lib64")
SEARCH_DIR("/usr/lib64")
SEARCH_DIR("/usr/x86_64-pc-linux-gnu/lib")
SEARCH_DIR("/usr/local/lib")
SEARCH_DIR("/lib")
SEARCH_DIR("/usr/lib");</computeroutput></screen>

   <para>Il se peut qu'un système 32&nbsp;bits voie différemment quelques
répertoires. Par exemple, voici la sortie d'une machine i686&nbsp;:</para>

<screen><computeroutput>SEARCH_DIR("/usr/i686-pc-linux-gnu/lib32")
SEARCH_DIR("/usr/local/lib32")
SEARCH_DIR("/lib32")
SEARCH_DIR("/usr/lib32")
SEARCH_DIR("/usr/i686-pc-linux-gnu/lib")
SEARCH_DIR("/usr/local/lib")
SEARCH_DIR("/lib")
SEARCH_DIR("/usr/lib");</computeroutput></screen>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='l'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='m'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='n'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='o'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='p'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='q'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='r'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='s'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='t'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='u'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="adjusting.xml"
    xpointer="xpointer(//*[@os='v'])"/>

    <para>Enfin, déplacez un fichier mal placé&nbsp;:</para>

<screen><userinput remap="install">mkdir -pv /usr/share/gdb/auto-load/usr/lib
mv -v /usr/lib/*gdb.py /usr/share/gdb/auto-load/usr/lib</userinput></screen>

  </sect2>

  <sect2 id="contents-gcc" role="content">
    <title>Contenu de GCC</title>

    <segmentedlist>
      <segtitle>Programmes installés</segtitle>
      <segtitle>Bibliothèques installées</segtitle>
      <segtitle>Répertoires installés</segtitle>

      <seglistitem>
        <seg>c++, cc (lien vers gcc), cpp, g++, gcc, gcc-ar, gcc-nm, gcc-ranlib, gcov,
gcov-dump et gcov-tool</seg>

        <seg>libasan.{a,so}, libatomic.{a,so}, libcc1.so, libgcc.a, libgcc_eh.a,
libgcc_s.so, libgcov.a, libgomp.{a,so}, libitm.{a,so}, liblsan.{a,so},
liblto_plugin.so, libquadmath.{a,so}, libssp.{a,so}, libssp_nonshared.a,
libstdc++.{a,so}, libstdc++fs.a, libsupc++.a, libtsan.{a,so} et
libubsan.{a,so}</seg>

        <seg>/usr/include/c++, /usr/lib/gcc, /usr/libexec/gcc et
/usr/share/gcc-&gcc-version;</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descriptions courtes</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="c">
        <term><command>c++</command></term>
        <listitem>
          <para>Le compilateur C++</para>
          <indexterm zone="ch-system-gcc c">
            <primary sortas="b-c++">c++</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="cc">
        <term><command>cc</command></term>
        <listitem>
          <para>Le compilateur C</para>
          <indexterm zone="ch-system-gcc cc">
            <primary sortas="b-cc">cc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="cpp">
        <term><command>cpp</command></term>
        <listitem>
          <para>Le préprocesseur C&nbsp;; il est utilisé par le compilateur pour l'extension
des instructions #include, #define et d'autres instructions similaires dans
les fichiers sources</para>
          <indexterm zone="ch-system-gcc cpp">
            <primary sortas="b-cpp">cpp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="g">
        <term><command>g++</command></term>
        <listitem>
          <para>Le compilateur C++</para>
          <indexterm zone="ch-system-gcc g">
            <primary sortas="b-g++">g++</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcc">
        <term><command>gcc</command></term>
        <listitem>
          <para>Le compilateur C</para>
          <indexterm zone="ch-system-gcc gcc">
            <primary sortas="b-gcc">gcc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcc-ar">
        <term><command>gcc-ar</command></term>
        <listitem>
          <para>Une enveloppe autour de <command>ar</command> qui ajoute un greffon à la
ligne de commande. Ce programme n'est utilisé que pour ajouter
"l'optimisation du temps d'édition des liens" et il n'est pas utile avec les
options de construction par défaut</para>
          <indexterm zone="ch-system-gcc gcc-ar">
            <primary sortas="b-gcc-ar">gc-ar</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcc-nm">
        <term><command>gcc-nm</command></term>
        <listitem>
          <para>Une enveloppe autour de <command>nm</command> qui ajoute un greffon à la
ligne de commande. Ce programme n'est utilisé que pour ajouter
«&nbsp;l'optimisation à l'édition des liens&nbsp;» et il n'est pas utile
avec les options de construction par défaut</para>
          <indexterm zone="ch-system-gcc gcc-nm">
            <primary sortas="b-gcc-nm">gc-nm</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcc-ranlib">
        <term><command>gcc-ranlib</command></term>
        <listitem>
          <para>Une enveloppe autour de <command>ranlib</command> qui ajoute un greffon à la
ligne de commande. Ce programme n'est utilisé que pour ajouter
«&nbsp;l'optimisation à l'édition des liens&nbsp;» et il n'est pas utile
avec les options de construction par défaut</para>
          <indexterm zone="ch-system-gcc gcc-ranlib">
            <primary sortas="b-gcc-ranlib">gc-ranlib</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcov">
        <term><command>gcov</command></term>
        <listitem>
          <para>Un outil de tests&nbsp;; il est utilisé pour analyser les programmes et
savoir où des optimisations seraient suivies du plus d'effet</para>
          <indexterm zone="ch-system-gcc gcov">
            <primary sortas="b-gcov">gcov</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcov-dump">
        <term><command>gcov-dump</command></term>
        <listitem>
          <para>Outil d'affichage de profil gcda et gcno hors-ligne</para>
          <indexterm zone="ch-system-gcc gcov-dump">
            <primary sortas="b-gcov-dump">gcov-dump</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcov-tool">
        <term><command>gcov-tool</command></term>
        <listitem>
          <para>Outil de traitement de profils gcda hors-ligne</para>
          <indexterm zone="ch-system-gcc gcov-tool">
            <primary sortas="b-gcov-tool">gcov-tool</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libasan">
        <term><filename class="libraryfile">libasan</filename></term>
        <listitem>
          <para>La bibliothèque Address Sanitizer à l'exécution</para>
          <indexterm zone="ch-system-gcc libasan">
            <primary sortas="b-libasan">libasan</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libatomic">
        <term><filename class="libraryfile">libatomic</filename></term>
        <listitem>
          <para>Bibliothèque de GCC de constructions atomiques pour l'exécution</para>
          <indexterm zone="ch-system-gcc libatomic">
            <primary sortas="b-libatomic">libatomic</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libcc1">
        <term><filename class="libraryfile">libcc1</filename></term>
        <listitem>
          <para>La bibliothèque de pré-traitement C</para>
          <indexterm zone="ch-system-gcc libcc1">
            <primary sortas="b-libcc1">libcc1</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libgcc">
        <term><filename class="libraryfile">libgcc</filename></term>
        <listitem>
          <para>Contient la prise en charge de <command>gcc</command> à l'exécution</para>
          <indexterm zone="ch-system-gcc libgcc">
            <primary sortas="c-libgcc">libgcc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libgcov">
        <term><filename class="libraryfile">libgcov</filename></term>
        <listitem>
          <para>Cette bibliothèque est liée à un programme où on demande à GCC d'activer le
profilage</para>
          <indexterm zone="ch-system-gcc libgcov">
            <primary sortas="c-libgcov">libgcov</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libgomp">
        <term><filename class="libraryfile">libgomp</filename></term>
        <listitem>
          <para>Implémentation GNU de l'API OpenMP API pour la programmation en mémoire
parallèle partagée pour plusieurs plateformes en C/C++ et Fortran</para>
          <indexterm zone="ch-system-gcc libgomp">
            <primary sortas="c-libgomp">libgomp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="liblsan">
        <term><filename class="libraryfile">liblsan</filename></term>
        <listitem>
          <para>La bibliothèque Leak Sanitizer à l'exécution</para>
          <indexterm zone="ch-system-gcc liblsan">
            <primary sortas="c-liblsan">liblsan</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="liblto_plugin">
        <term><filename class="libraryfile">liblto_plugin</filename></term>
        <listitem>
          <para>Greffon d'optimisation du temps d'édition des liens de GCC (LTO) permettant
à GCC de pratiquer des optimisations tout au cours des unités de compilation</para>
          <indexterm zone="ch-system-gcc liblto_plugin">
            <primary sortas="c-liblto_plugin">liblto_plugin</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libquadmath">
        <term><filename class="libraryfile">libquadmath</filename></term>
        <listitem>
          <para>API de la bibliothèque de maths GCC de précision au carré</para>
          <indexterm zone="ch-system-gcc libquadmath">
            <primary sortas="c-libquadmath">libquadmath</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libssp">
        <term><filename class="libraryfile">libssp</filename></term>
        <listitem>
          <para>Contient des routines qui prennent en charge la fonctionnalité de protection
de GCC contre les débordements de mémoire</para>
          <indexterm zone="ch-system-gcc libssp">
            <primary sortas="c-libssp">libssp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libstdc">
        <term><filename class="libraryfile">libstdc++</filename></term>
        <listitem>
          <para>La bibliothèque C++ standard</para>
          <indexterm zone="ch-system-gcc libstdc">
            <primary sortas="c-libstdc++">libstdc++</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libstdcfs">
        <term><filename class="libraryfile">libstdc++fs</filename></term>
        <listitem>
          <para>Bibliothèque de systèmes de fichiers ISO/IEC TS 18822:2015</para>
          <indexterm zone="ch-system-gcc libstdcfs">
            <primary sortas="c-libstdc++fs">libstdc++fs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libsupc">
        <term><filename class="libraryfile">libsupc++</filename></term>
        <listitem>
          <para>Fournit des routines de prise en charge pour le langage de programmation C++</para>
          <indexterm zone="ch-system-gcc libsupc">
            <primary sortas="c-libsupc++">libsupc++</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libtsan">
        <term><filename class="libraryfile">libtsan</filename></term>
        <listitem>
          <para>La bibliothèque Thread Sanitizer à l'exécution</para>
          <indexterm zone="ch-system-gcc libtsan">
            <primary sortas="c-libtsan">libtsan</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libubsan">
        <term><filename class="libraryfile">libubsan</filename></term>
        <listitem>
          <para>La bibliothèque Undefined Behavior Sanitizer à l'exécution</para>
          <indexterm zone="ch-system-gcc libubsan">
            <primary sortas="c-libubsan">libubsan</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
