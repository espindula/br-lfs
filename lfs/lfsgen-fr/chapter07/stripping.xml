<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-tools-stripping">
  <?dbhtml filename="stripping.html"?>

  <title>Nettoyage et sauvegarde du système temporaire</title>
  
  <para>Les fichiers .la de libtool ne sont utiles que pour lier des bibliothèques
statiques. Ils ne sont pas requis, et potentiellement dangereux, quand on
utilise des bibliothèques dynamiques, surtout pour les systèmes de
construction qui n'utilisent pas les autotools. Toujours dans le chroot,
supprimez ces fichiers maintenant&nbsp;:</para>

<screen><userinput>find /usr/{lib,libexec} -name \*.la -delete</userinput></screen>

    <para>Supprimez la documentation des outils temporaires, pour éviter qu'elle ne se
retrouve sur le système final, et sauvez environ 35&nbsp;:Mo&nbsp;:</para>

<screen><userinput>rm -rf /usr/share/{info,man,doc}/*</userinput></screen>

  <note><para>
    Toutes les étapes restantes dans cette section sont optionnelles. Cependant,
dès que vous commencez à installer des paquets dans <xref
linkend="chapter-building-system"/>, les outils temporaires seront
écrasés. Donc il peut être une bonne idée d'effectuer une sauvegarde des
outils temporaires comme décrit plus bas. Les autres étapes ne sont requise
que si vous avez vraiment très peu d'espace disque.
  </para></note>

  <para>
    Les étapes suivantes sont effectuées depuis l'extérieur de l'environnement
chroot. Cela signifie que vous devez quitter l'environnement chroot avant de
continuer. La raison pour cela est que&nbsp;:
    <itemizedlist>
      <listitem>
        <para>
          cela s'assure que les objets ne sont pas utilisés pendant leur manipulation,
        </para>
      </listitem>
      <listitem>
        <para>
          cela permet d'accéder aux emplacements du système de fichiersr en dehors de
l'environnement chroot pour stocker/lire l'archive de sauvegarde qui ne doit
pas être placée dans la hiérarchie <filename
class="directory">$LFS</filename> pour des raisons de sécurité.
        </para>
      </listitem>
    </itemizedlist>
  </para>

  <para>
    Quittez l'environnement chroot et démontez les systèmes de fichiers virtuels
du noyau&nbsp;:
  </para>

  <note>
    <para>Toutes les instructions suivantes sont effectuées en <systemitem
class="username">root</systemitem>. Faites particulièrement attention aux
commandes que vous utilisez car une erreur peut ici modifier votre système
hôte. Soyez conscient que la variable d'environnement <envar>LFS</envar> est
initialisée par défaut pour l'utilisateur <systemitem
class="username">lfs</systemitem>, mais ce n'est <emphasis>pas</emphasis> le
cas pour <systemitem class="username">root</systemitem>. Lorsque les
commandes doivent être exécutées par <systemitem
class="username">root</systemitem>, assurez-vous que vous avez correctement
initialisé <envar>LFS</envar>. On en a parlé dans <xref
linkend='ch-partitioning-aboutlfs'/>.
    </para>
  </note>

<screen role="nodump"><userinput>exit
umount $LFS/dev{/pts,}
umount $LFS/{sys,proc,run}</userinput></screen>

  <sect2>
    <title>Stripping</title>

    <para>Si la partition LFS est plutôt petite, il est bon de savoir que des éléments
inutiles peuvent être enlevés. Les exécutables et les bibliothèques
construites jusqu'ici contiennent un peu plus de 90 Mo de symbole de
débogages inutiles.</para>

    <para>Débarrassez les binaires de leurs symboles de débogage&nbsp;:</para>
<screen role="nodump"><userinput>strip --strip-debug $LFS/usr/lib/*
strip --strip-unneeded $LFS/usr/{,s}bin/*
strip --strip-unneeded $LFS/tools/bin/*</userinput></screen>

    <para><!--Note that we use the <command>
strip</command> program built in
    <quote>Binutils pass 2</quote>, since it is the one that knows how to strip
    our cross-compiled programs.-->
Ces commandes passeront un certain nombre de fichiers en rapportant qu'elles
n'ont pas pu reconnaître leur format de fichier. La plupart sont des scripts
au lieu de binaires.
    </para>

    <para>Prenez soin de ne <emphasis>PAS</emphasis> utiliser
<parameter>--strip-unneeded</parameter> sur les bibliothèques. Les
bibliothèques statiques seraient détruites et les paquets de la chaîne
d'outils devraient être de nouveau reconstruits.</para>

    <para>Maintenant, vous devriez avoir au moins 5 Go d'espace libre sur la partition
chroot qui peut être utilisé pour construire et installer Glibc et GCC dans
la prochaine phase. Si vous pouvez construire et installer Glibc, vous
pouvez construire et installer le reste aussi. Vous pouvez vérifier l'espace
libre avec la commande <command>df -h $LFS</command>.</para>

  </sect2>

  <sect2>
    <title>Backup</title>

    <para>
      Maintenant que les outils essentiels ont été créés, il est temps de
réfléchir à faire une sauvegarde. Lorsque tous les tests passent
correctement dasn les paquets construits précédemment, vos outils
temporaires sont dans un bon état et peuvent être sauvegardés pour être
utilisés plus tard. Si vous avez une erreur fatale dans le chapitres
suivants, cela permet de tout supprimer et de recommencer (en étant plus
prudent). Malheureusement, tous les outils temporaires seront
supprimés. Pour éviter de passer du temps à refaire quelque chose qui a déjà
été construit, préparez une sauvegarde.
    </para>

    <para>
      Assurez-vous d'avoir au moins 600 Mo d'espace libre (les archives de sources
seront incluses dans l'archive de sauvegarde) dans le répertoire personnel
de l'utilisateur <systemitem class="username">root</systemitem>.
    </para>

    <para>
      Créez l'archive de sauvegarde en lançant la commande suivante&nbsp;:
    </para>

<screen role="nodump" revision="sysv"><userinput>cd $LFS &amp;&amp;
tar -cJpf $HOME/lfs-temp-tools-&version;.tar.xz .</userinput></screen>

<screen role="nodump" revision="systemd"><userinput>cd $LFS &amp;&amp;
tar -cJpf $HOME/lfs-temp-tools-&versiond;.tar.xz .</userinput></screen>

    <para>
      Remplacez <envar>$HOME</envar> par un répertoire de votre choix si vous ne
voulez pas avoir la sauvegarde dans le répertoire personnel de <systemitem
class="username">root</systemitem>.
    </para>
  </sect2>

  <sect2>
    <title>Restore</title>

    <para>
      Au cas où vous fassiez une erreur et deviez recommencer de zéro, vous pouvez
utiliser cette archive pour restaurer les outils temporaires et gagner du
temps lors de la correction. Comme les sources se trouvent dans <filename
class="directory">$LFS</filename>, elles sont incluses dans l'archive de
sauvegarde aussi, donc elles n'ont pas besoin d'être re-téléchargées. Après
avoir vérifié que <envar>$LFS</envar> est correctement initialisée,
restaurez la sauvegarde en exécutant les commandes suivantes:&nbsp;:
    </para>



<screen role="nodump" revision="sysv"><!-- Make the following look different so users don't blindly run the
     restore when they don't need to. -->
<computeroutput>cd $LFS &amp;&amp;
rm -rf ./* &amp;&amp;
tar -xpf $HOME/lfs-temp-tools-&version;.tar.xz</computeroutput></screen>

<screen role="nodump" revision="systemd"><computeroutput>cd $LFS &amp;&amp;
rm -rf ./* &amp;&amp;
tar -xpf $HOME/lfs-temp-tools-&versiond;.tar.xz</computeroutput></screen>

    <para>
      De nouveau, vérifiez que l'environnement en correctement paramétré et
continuez à construire le reste du système.
    </para>

    <important>
      <para>
        Si vous avez quitté l'environnement chroot pour vous débarrasser des
symboles de débogage, créer une sauvegarde ou redémarrer une construction
depuis une sauvegarde, rappelez-vous de monter les systèmes de fichiers
virtuels du noyau comme décrit dans <xref linkend='ch-tools-kernfs'/> et de
re-rentrer dans l'environnement chroot (voir <xref
linkend='ch-tools-chroot'/>) avant de continuer.
      </para>
    </important>
    
  </sect2>

</sect1>
