<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-bootable-kernel" role="wrap">
  <?dbhtml filename="kernel.html"?>

  <sect1info condition="script">
<productname>kernel</productname>
<productnumber>&linux-version;</productnumber> <address>&linux-url;</address></sect1info>

  <title>Linux-&linux-version;</title>

  <indexterm zone="ch-bootable-kernel">
    <primary sortas="a-Linux">Linux</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>Le paquet Linux contient le noyau Linux.</para>

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&linux-knl-sbu;</seg>
        <seg>&linux-knl-du;</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation du noyau</title>

    <para>Construire le noyau implique un certain nombre d'étapes
&mdash;&nbsp;configuration, compilation et installation.  Pour connaître les
autres méthodes que celle employée par ce livre pour configurer le noyau,
lisez le fichier <filename>README</filename> contenu dans les sources du
noyau.</para>

    <para>Préparez la compilation en lançant la commande suivante&nbsp;:</para>

<screen><userinput remap="pre">make mrproper</userinput></screen>

    <para>Ceci nous assure que le répertoire du noyau est propre.  L'équipe du noyau
recommande le lancement de cette commande avant chaque compilation du
noyau. Vous ne devez pas supposer que le répertoire des sources est propre
juste après avoir été déballé.</para>

    <para>Il y a plusieurs manière de configurer les options du noyau. Habituellement,
à travers une interface à menus, par exemple&nbsp;:</para>

<!-- Support for compiling a keymap into the kernel is deliberately removed -->
<screen role="nodump"><userinput>make menuconfig</userinput></screen>

    <variablelist>
      <title>Voici la signification des variables d’environnement facultatives de
make&nbsp;:</title>

      <varlistentry>
        <term><parameter>LANG=&lt;valeur_LANG_de_l_hote&gt; LC_ALL=</parameter></term>
        <listitem>
          <para>Ceci rend identique les paramétrages régionaux à ceux utilisés sur l'hôte.
C'est indispensable pour que l’interface ncurses de menuconfig soit
correctement dessinée sur la console texte de Linux en UTF-8.</para>

          <para>Assurez-vous si besoin de remplacer
<replaceable>&lt;valeur_LANG_de_l_hote&gt;</replaceable> par la valeur de la
variable <envar>$LANG</envar> de votre hôte. Vous pouvez utiliser à la place
les valeurs <envar>$LC_ALL</envar> ou <envar>$LC_CTYPE</envar> de l'hôte.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><command>make menuconfig</command></term>
        <listitem>
          <para>Cela lance une interface à menus en ncurses. Pour d'autres interfaces
(graphiques), tapez <command>make help</command>.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    

    <para>Pour des informations d'ordre général sur la configuration du noyau,
consultez <ulink
url="http://www.fr.linuxfromscratch.org/view/astuces/kernel-configuration-fr.txt"/>.
BLFS offre aussi quelques informations complémentaires concernant les
besoins particuliers de configuration pour les paquets en dehors de LFS sur
<ulink url="&blfs-book;longindex.html#kernel-config-index"/>. Vous pouvez
trouver des informations supplémentaires sur la configuration et la
construction du noyau sur <ulink url="http://www.kroah.com/lkn/"/> </para>

    <note>
    
      <para>Un bon point de départ pour effectuer la configuration du noyau est de
lancer <command>make defconfig</command>. Cela opérera une configuration de
base de bonne qualité en prenant en compte l'architecture actuelle de votre
système.</para>

      <para>Assurez-vous d'activer, désactiver ou indiquer les fonctionnalités suivantes
ou le système ne démarrera pas correctement voir pas du tout&nbsp;:</para>

      <screen role="nodump" revision="sysv">Device Drivers  ---&gt;
  Generic Driver Options  ---&gt;
   [ ] Support for uevent helper [CONFIG_UEVENT_HELPER]
   [*] Maintain a devtmpfs filesystem to mount at /dev [CONFIG_DEVTMPFS]</screen>

      <screen role="nodump" revision="systemd">General setup -->
   [ ] Auditing Support [CONFIG_AUDIT]
   [*] Control Group support [CONFIG_CGROUPS]
   [ ] Enable deprecated sysfs features to support old userspace tools [CONFIG_SYSFS_DEPRECATED]
   [*] Configure standard kernel features (expert users) [CONFIG_EXPERT] ---&gt;         
      [*] open by fhandle syscalls [CONFIG_FHANDLE]
Processor type and features  ---&gt;
   [*] Enable seccomp to safely compute untrusted bytecode [CONFIG_SECCOMP]
Firmware Drivers  ---&gt;
   [*] Export DMI identification via sysfs to userspace [CONFIG_DMIID]
Networking support  ---&gt;
  Networking options  ---&gt;
   &lt;*&gt; The IPv6 protocol [CONFIG_IPV6]
Device Drivers  ---&gt;
  Generic Driver Options  ---&gt;
   [ ] Support for uevent helper [CONFIG_UEVENT_HELPER]
   [*] Maintain a devtmpfs filesystem to mount at /dev [CONFIG_DEVTMPFS]
   Firmware Loader ---&gt;
      [ ] Enable the firmware sysfs fallback mechanism [CONFIG_FW_LOADER_USER_HELPER]
File systems  ---&gt;
   [*] Inotify support for userspace [CONFIG_INOTIFY_USER]
  Pseudo filesystems  ---&gt;
   [*] Tmpfs POSIX Access Control Lists [CONFIG_TMPFS_POSIX_ACL]</screen>
    </note>

    <note revision="systemd">
      <para>Même si  "Le Protocole IPv6" n'est pas strictement nécéssaire, il est
fortement recommandé par les dévelopeurs de systemd.</para>
    </note>

    <para revision="sysv">Vous pourriez souhaiter d'autres options selon les besoins de votre
système. Pour une liste des options nécessaires pour les paquets BLFS, voir
<ulink
url="http://www.fr.linuxfromscratch.org/view/blfs-svn/longindex.html#kernel-config-index">L'index
des options du noyau pour BLFS</ulink>
(&blfs-book;/longindex.html#kernel-config-index).</para>

    <note>
      <para>Si votre matériel hôte utilise UEFI et que vous souhaitez démarrer LFS sans,
vous devrez ajuster certaines configurations du noyau en suivant <ulink
url="&blfs-book;postlfs/grub-setup.html#uefi-kernel">la page BLFS</ulink>.</para>
    </note>

    <variablelist>
      <title>Voici pourquoi on vise les éléments de configuration ci-dessus&nbsp;:</title>

      <varlistentry>
        <term><parameter>Support for uevent helper</parameter></term>
        <listitem>
          <para>L'activation de cette option peut interférer avec la gestion de
périphériques quand on utilise Udev/Eudev. </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>Maintain a devtmpfs</parameter></term>
        <listitem>
          <para>Ceci créera des n&oelig;uds de périphérique automatiquement, générés par le
noyau même sans Udev. Udev fonctionne alors sur cette base pour gérer les
droits et l'ajout de liens symboliques. Cet élément de configuration est
nécessaire pour tous les utilisateurs d'udev/eudev.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Sinon, <command>make oldconfig</command> peut être plus approprié dans
certaines situations. Voir le fichier <filename>README</filename> pour plus
d'informations.</para>

    <para>Si vous le désirez, vous pouvez sauter la configuration du noyau en copiant
le fichier de configuration, <filename>.config</filename>, du système hôte
(en supposant qu'il est disponible) dans le répertoire <filename
class="directory">linux-&linux-version;</filename> tout juste
déballé. Néanmoins, nous ne recommandons pas cette option. Il est souvent
meilleur d'explorer tous les menus de configuration et de créer la
configuration du noyau à partir de zéro.</para>

    <para>Compilez l'image du noyau et les modules&nbsp;:</para>

<screen><userinput remap="make">make</userinput></screen>

    <para>Si vous utilisez des modules du noyau, il peut être nécessaire de les
configurer dans le fichier <filename
class="directory">/etc/modprobe.d</filename>.  Des informations au sujet de
la configuration du noyau et des modules se trouvent à la <xref
linkend="ch-config-udev"/> et dans le répertoire <filename
class="directory">linux-&linux-version;/Documentation</filename> de la
documentation du noyau.  Enfin, <filename>modprobe.d(5)</filename> pourrait
aussi être intéressant.</para>

    <para>À moins d'avoir désactivé la prise en charge des modules dans la
configuration du noyau, installez les modules&nbsp;:</para>

<screen><userinput remap="install">make modules_install</userinput></screen>

    <para>Une fois la compilation du noyau terminée, des étapes supplémentaires sont
encore nécessaires pour terminer l'installation. Certains fichiers ont
besoin d'être copiés dans le répertoire <filename
class="directory">/boot</filename>.</para>

    <caution>
      <para>Si le système hôte a une partition /boot séparée, les fichiers copiés
ci-dessous devraient aller là. La manière la plus simple de procéder est de
lier /boot sur l’hôte (en dehors du chroot) à /mnt/lfs/boot avant de
continuer. En tant qu'utilisateur root sur le <emphasis>système
hôte</emphasis>&nbsp;:</para>

<screen role="nodump"><userinput>mount --bind /boot /mnt/lfs/boot</userinput></screen>
    </caution>

    <para>Le chemin vers l'image du noyau pourrait varier suivant la plateforme
utilisée. Vous pouvez changer le nom du fichier ci-dessous selon votre goût,
mais la nomenclature du nom de fichier devrait ressembler à
<emphasis>vmlinuz</emphasis> pour être compatible avec le paramétrage
automatique du processus de démarrage décrit dans la section à venir. La
commande suivante présuppose une architecture x86&nbsp;:</para>

<screen revision="sysv"><userinput remap="install">cp -iv arch/x86/boot/bzImage /boot/vmlinuz-&linux-version;-lfs-&version;</userinput></screen>

<screen revision="systemd"><userinput remap="install">cp -iv arch/x86/boot/bzImage /boot/vmlinuz-&linux-version;-lfs-&versiond;</userinput></screen>

    <para><filename>System.map</filename> est un fichier de symboles pour le noyau. Il
cartographie les points d'entrée de chaque fonction dans l'API du noyau,
ainsi que les adresses de ses structures de données pendant l'exécution.  Il
sert de référence lors des investigations sur les problèmes de noyau.
Lancez la commande suivante pour installer le fichier de symboles&nbsp;:</para>

<screen><userinput remap="install">cp -iv System.map /boot/System.map-&linux-version;</userinput></screen>

    <para>Le fichier de configuration du noyau <filename>.config</filename> produit à
l'étape <command>make menuconfig</command> ci-dessus contient toutes les
options de configuration choisies pour le noyau qui vient d'être
compilé. Conserver ce fichier est une bonne idée pour pouvoir s'y référer
plus tard&nbsp;:</para>

<screen><userinput remap="install">cp -iv .config /boot/config-&linux-version;</userinput></screen>

    <para>Installez la documentation du noyau Linux&nbsp;:</para>

<screen><userinput remap="install">install -d /usr/share/doc/linux-&linux-version;
cp -r Documentation/* /usr/share/doc/linux-&linux-version;</userinput></screen>

    <para>Il est important de noter que les fichiers dans le répertoire des sources du
noyau n'appartiennent pas à <emphasis>root</emphasis>. Chaque fois qu'un
paquet est déballé par l'utilisateur <emphasis>root</emphasis> (comme on a
fait dans chroot), les fichiers ont les ID de l'utilisateur et du groupe de
l'empaqueteur sur son système hôte. En principe ce n'est pas un problème car
l'arborescence des sources est supprimée après l'installation.  En revanche,
l'arborescence de Linux est souvent conservée longtemps. Du coup, il y a des
chances que tout ce que l'ID de l'utilisateur ayant déballé le paquet a
utilisé ne soit affecté à quelqu'un d'autre sur la machine. Cette personne
pourrait alors avoir un droit d'écriture sur les sources du noyau.</para>

    <note>
      <para>Dans de nombreux cas, la configuration du noyau aura besoin d'être mise à
jour pour les paquets qui serojnt installés plutard dans BLFS. Contrairement
aux autres paquets, il n'est pas nécessaire de supprimer les sources du
noyau après l'installation du noyau nouvellement construit.</para>  
    
      <para>Si vous conservez l'arborescence des sources du noyau, lancez <command>chown
-R 0:0</command> sur le répertoire <filename
class="directory">linux-&linux-version;</filename> pour vous assurer que
tous les fichiers appartiennent à <emphasis>root</emphasis>.</para>
    </note>

    <warning>
      <para>Certaines documentations du noyau recommandent de créer un lien symbolique à
partir de <filename class="symlink">/usr/src/linux</filename> pointant vers
le répertoire des sources du noyau. Ceci est spécifique aux noyaux
antérieurs à la série 2.6 et <emphasis>ne doit pas</emphasis> être réalisé
sur un système LFS car il peut poser des problèmes pour les paquets que vous
souhaitez construire une fois votre système LFS de base complet.</para>
    </warning>

    <warning>
      <para>Les en-têtes du répertoire système <filename
class="directory">include</filename> (<filename
class="directory">/usr/include</filename>) devraient
<emphasis>toujours</emphasis> être ceux avec lesquels Glibc a été compilée,
à savoir, les en-têtes nettoyés installés au <xref
linkend="ch-tools-linux-headers"/>. Donc, ils ne devraient
<emphasis>jamais</emphasis> être remplacés par les en-têtes du noyau brut ou
par d'autres en-têtes nettoyés du noyau.</para>
    </warning>

  </sect2>

  <sect2 id="conf-modprobe" role="configuration">
    <title>Configuration de l'ordre de chargement des modules Linux</title>

    <indexterm zone="conf-modprobe">
      <primary sortas="e-/etc/modprobe.d/usb.conf">/etc/modprobe.d/usb.conf</primary>
    </indexterm>

    <para>La plupart du temps, les modules Linux sont chargés automatiquement, mais il
faut parfois des directives supplémentaires. Le programme qui charge les
modules, <command>modprobe</command> ou <command>insmod</command>, utilise
<filename>/etc/modprobe.d/usb.conf</filename> à cette fin. Il faut créer ce
fichier afin que, si les pilotes USB (ehci_hcd, ohci_hcd et uhci_hcd)  ont
été construits en module, ils soient chargés dans le bon ordre&nbsp;;
ehci_hcd doit être chargé avant ohci_hcd et uhci_hcd afin d'éviter un
avertissement au moment du démarrage.</para>

    <para>Créez un nouveau <filename>/etc/modprobe.d/usb.conf</filename> en lançant ce
qui suit&nbsp;:</para>

<screen><userinput>install -v -m755 -d /etc/modprobe.d
cat &gt; /etc/modprobe.d/usb.conf &lt;&lt; "EOF"
<literal># Début de /etc/modprobe.d/usb.conf

install ohci_hcd /sbin/modprobe ehci_hcd ; /sbin/modprobe -i ohci_hcd ; true
install uhci_hcd /sbin/modprobe ehci_hcd ; /sbin/modprobe -i uhci_hcd ; true

# Fin de /etc/modprobe.d/usb.conf</literal>
EOF</userinput></screen>

  </sect2>

  <sect2 id="contents-kernel" role="content">
    <title>Contenu de Linux</title>

    <segmentedlist>
      <segtitle>Fichiers installés</segtitle>
      <segtitle>Répertoires installés</segtitle>

      <seglistitem>
        <seg>config-&linux-version;, <phrase
revision="sysv">vmlinuz-&linux-version;-lfs-&version;,</phrase> <phrase
revision="systemd">vmlinuz-&linux-version;-lfs-&versiond;,</phrase> et
System.map-&linux-version;</seg>
        <seg>/lib/modules, /usr/share/doc/linux-&linux-version;</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descriptions courtes</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="config">
        <term><filename>config-&linux-version;</filename></term>
        <listitem>
          <para>Contient toutes les options de configuration choisies pour le noyau</para>
          <indexterm zone="ch-bootable-kernel config">
            <primary sortas="e-/boot/config">/boot/config-&linux-version;</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lfskernel">
        <term revision="sysv"><filename>vmlinuz-&linux-version;-lfs-&version;</filename></term>
        <term revision="systemd"><filename>vmlinuz-&linux-version;-lfs-&versiond;</filename></term>
        <listitem>
          <para>Le moteur du système Linux. Au démarrage de l'ordinateur, le noyau est la
première partie du système d'exploitation à être chargée. Il détecte et
initialise tous composants matériels de l'ordinateur, puis rend disponible
les composants dans une arborescence de fichiers pour les logiciels qui en
ont besoin, et transforme une machine monoprocesseur en une machine
multitâche capable d'exécuter plusieurs programmes quasi simultanément</para>
          <indexterm zone="ch-bootable-kernel lfskernel">
            <primary sortas="b-lfskernel">lfskernel-&linux-version;</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="System.map">
        <term><filename>System.map-&linux-version;</filename></term>
        <listitem>
          <para>Une liste d'adresses et de symboles donnant la correspondance entre les
points d'entrée, et les adresses de toutes les fonctions et structures de
données du noyau</para>
          <indexterm zone="ch-bootable-kernel System.map">
            <primary sortas="e-/boot/System.map">/boot/System.map-&linux-version;</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
