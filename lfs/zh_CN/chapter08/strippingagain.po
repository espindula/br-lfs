# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-08-04 04:05+0000\n"
"PO-Revision-Date: 2020-09-02 08:12+0000\n"
"Last-Translator: Xi Ruoyao <xry111@mengyan1223.wang>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Pootle 2.8\n"
"X-POOTLE-MTIME: 1599034355.969530\n"

#. type: Content of: <sect1><title>
#: lfs-en/chapter08/strippingagain.xml:11
msgid "Stripping Again"
msgstr "再次移除调试符号"

#. type: Content of: <sect1><para>
#: lfs-en/chapter08/strippingagain.xml:13
msgid ""
"This section is optional.  If the intended user is not a programmer and does "
"not plan to do any debugging on the system software, the system size can be "
"decreased by about 2 GB by removing the debugging symbols from binaries and "
"libraries. This causes no inconvenience other than not being able to debug "
"the software fully anymore."
msgstr ""
"本节是可选的。如果系统不是为程序员设计的，也没有调试系统软件的计划，可以通过"
"从二进制程序和库移除调试符号，将系统的体积减小约 2 GB。除了无法再调试全部软件"
"外，这不会造成任何不便。"

#. type: Content of: <sect1><para>
#: lfs-en/chapter08/strippingagain.xml:20
msgid ""
"Most people who use the commands mentioned below do not experience any "
"difficulties. However, it is easy to make a typo and render the new system "
"unusable, so before running the <command>strip</command> commands, it is a "
"good idea to make a backup of the LFS system in its current state."
msgstr ""
"大多数使用以下命令的用户不会遇到什么困难。但是，如果打错了命令，很容易导致新"
"系统无法使用，因此在运行 <command>strip</command> 命令前，最好备份 LFS 系统的"
"当前状态。"

#. type: Content of: <sect1><para>
#: lfs-en/chapter08/strippingagain.xml:26
#, fuzzy
#| msgid ""
#| "First place the debugging symbols for selected libraries in separate "
#| "files.  This debugging information is needed if running regression tests "
#| "that use <ulink url='&blfs-book;/general/valgrind.html'>valgrind</ulink> "
#| "or <ulink url='&blfs-book;/general/gdb.html'>gdb</ulink> later in BLFS."
msgid ""
"The debugging symbols for selected libraries are placed in separate files.  "
"This debugging information is needed if running regression tests that use "
"<ulink url='&blfs-book;/general/valgrind.html'>valgrind</ulink> or <ulink "
"url='&blfs-book;/general/gdb.html'>gdb</ulink> later in BLFS."
msgstr ""
"首先将一些库的调试符号保存在单独的文件中。之后在 BLFS 中，如果使用 <ulink "
"url='&blfs-book;/general/valgrind.html'>valgrind</ulink> 或 <ulink "
"url='&blfs-book;/general/gdb.html'>gdb</ulink> 运行退化测试，则需要这些调试信"
"息的存在。"

#. type: Content of: <sect1><para>
#: lfs-en/chapter08/strippingagain.xml:33
msgid ""
"Note that <command>strip</command> will overwrite the binary or library file "
"it is processing.  This may crash the processes using code or data from the "
"file.  If the process running <command>strip</command> itself is affected, "
"the binary or library being stripped may be destroyed.  This may make the "
"system completely unusable.  To avoid it, we'll copy some libraries and "
"binaries into <filename class=\"directory\">/tmp</filename>, strip them "
"there, and install them back with the <command>install</command> command.  "
"Read the related entry in <xref linkend=\"pkgmgmt-upgrade-issues\"/> for the "
"rationale to use the <command>install</command> command here."
msgstr ""

#. type: Content of: <sect1><note><para>
#: lfs-en/chapter08/strippingagain.xml:43
msgid ""
"The linux loader's name is ld-linux-x86-64.so.2 on 64-bit systems and ld-"
"linux.so.2 on 32-bit systems.  The contruct below selects the correct name "
"for the current architecture."
msgstr ""

#.  also of interest are libgfortan, libgo, libgomp, and libobjc from GCC 
#. <screen>
#. <userinput>save_lib="ld-2.25.so libc-2.25.so libpthread-2.25.so libthread_db-1.0.so"
#. type: Content of: <sect1><screen>
#: lfs-en/chapter08/strippingagain.xml:51
#, no-wrap
msgid ""
"<userinput>save_usrlib=\"$(cd /usr/lib; ls ld_linux*)\n"
"             libc.so.6\n"
"             libthread_db.so.1\n"
"             libquadmath.so.&libquadmath-version; \n"
"             libstdc++.so.&libstdcpp-version;\n"
"             libitm.so.&libitm-version; \n"
"             libatomic.so.&libatomic-version;\" \n"
"\n"
"cd /usr/lib\n"
"\n"
"for LIB in $save_usrlib; do\n"
"    objcopy --only-keep-debug $LIB $LIB.dbg\n"
"    cp $LIB /tmp/$LIB\n"
"    strip --strip-unneeded /tmp/$LIB\n"
"    objcopy --add-gnu-debuglink=$LIB.dbg /tmp/$LIB\n"
"    install -vm755 /tmp/$LIB /usr/lib\n"
"    rm /tmp/$LIB\n"
"done\n"
"\n"
"online_usrbin=\"bash find strip\"\n"
"online_usrlib=\"libbfd-&binutils-version;.so\n"
"               libhistory.so.&readline-version;\n"
"               libncursesw.so.&ncurses-version;\n"
"               libm.so.6\n"
"               libreadline.so.&readline-version;\n"
"               libz.so.&zlib-version;\n"
"               $(cd /usr/lib; find libnss*.so* -type f)\"\n"
"\n"
"for BIN in $online_usrbin; do\n"
"    cp /usr/bin/$BIN /tmp/$BIN\n"
"    strip --strip-unneeded /tmp/$BIN\n"
"    install -vm755 /tmp/$BIN /usr/bin\n"
"    rm /tmp/$BIN\n"
"done\n"
"\n"
"for LIB in $online_usrlib; do\n"
"    cp /usr/lib/$LIB /tmp/$LIB\n"
"    strip --strip-unneeded /tmp/$LIB\n"
"    install -vm755 /tmp/$LIB /usr/lib\n"
"    rm /tmp/$LIB\n"
"done\n"
"\n"
"for i in $(find /usr/lib -type f -name \\*.so* ! -name \\*dbg) \\\n"
"         $(find /usr/lib -type f -name \\*.a)                 \\\n"
"         $(find /usr/{bin,sbin,libexec} -type f); do\n"
"    case \"$online_usrbin $online_usrlib $save_usrlib\" in\n"
"        *$(basename $i)* ) \n"
"            ;;\n"
"        * ) strip --strip-unneeded $i \n"
"            ;;\n"
"    esac\n"
"done\n"
"\n"
"unset BIN LIB save_usrlib online_usrbin online_usrlib\n"
"</userinput>"
msgstr ""

#. type: Content of: <sect1><para>
#: lfs-en/chapter08/strippingagain.xml:107
msgid ""
"A large number of files will be reported as having their file format not "
"recognized. These warnings can be safely ignored. These warnings indicate "
"that those files are scripts instead of binaries."
msgstr ""
"这里会有很多文件被报告为格式无法识别。这些警告可以安全地忽略。它们表明那些文"
"件是脚本文件，而不是二进制文件。"

#, fuzzy
#~| msgid ""
#~| "<userinput>save_lib=\"ld-&glibc-version;.so libc-&glibc-version;.so "
#~| "libpthread-&glibc-version;.so libthread_db-&libthread_db-version;.so\"\n"
#~| "\n"
#~| "cd /lib\n"
#~| "\n"
#~| "for LIB in $save_lib; do\n"
#~| "    objcopy --only-keep-debug $LIB $LIB.dbg \n"
#~| "    strip --strip-unneeded $LIB\n"
#~| "    objcopy --add-gnu-debuglink=$LIB.dbg $LIB \n"
#~| "done    \n"
#~| "\n"
#~| "save_usrlib=\"libquadmath.so.&libquadmath-version; libstdc++.so."
#~| "&libstdcpp-version;\n"
#~| "             libitm.so.&libitm-version; libatomic.so.&libatomic-version;"
#~| "\" \n"
#~| "\n"
#~| "cd /usr/lib\n"
#~| "\n"
#~| "for LIB in $save_usrlib; do\n"
#~| "    objcopy --only-keep-debug $LIB $LIB.dbg\n"
#~| "    strip --strip-unneeded $LIB\n"
#~| "    objcopy --add-gnu-debuglink=$LIB.dbg $LIB\n"
#~| "done\n"
#~| "\n"
#~| "unset LIB save_lib save_usrlib</userinput>"
#~ msgid ""
#~ "<userinput>save_usrlib=\"ld-&glibc-version;.so libc-&glibc-version;.so "
#~ "libpthread-&glibc-version;.so libthread_db-&libthread_db-version;.so\n"
#~ "             libquadmath.so.&libquadmath-version; libstdc++.so.&libstdcpp-"
#~ "version; libz.so.&zlib-version;\n"
#~ "             libitm.so.&libitm-version; libatomic.so.&libatomic-version;"
#~ "\" \n"
#~ "\n"
#~ "cd /usr/lib\n"
#~ "\n"
#~ "for LIB in $save_usrlib; do\n"
#~ "    objcopy --only-keep-debug $LIB $LIB.dbg\n"
#~ "    cp $LIB /tmp/$LIB\n"
#~ "    strip --strip-unneeded /tmp/$LIB\n"
#~ "    objcopy --add-gnu-debuglink=$LIB.dbg /tmp/$LIB\n"
#~ "    install -vm755 /tmp/$LIB /usr/lib\n"
#~ "    rm /tmp/$LIB\n"
#~ "done\n"
#~ "\n"
#~ "unset LIB save_usrlib</userinput>"
#~ msgstr ""
#~ "<userinput>save_lib=\"ld-&glibc-version;.so libc-&glibc-version;.so "
#~ "libpthread-&glibc-version;.so libthread_db-&libthread_db-version;.so\"\n"
#~ "\n"
#~ "cd /lib\n"
#~ "\n"
#~ "for LIB in $save_lib; do\n"
#~ "    objcopy --only-keep-debug $LIB $LIB.dbg \n"
#~ "    strip --strip-unneeded $LIB\n"
#~ "    objcopy --add-gnu-debuglink=$LIB.dbg $LIB \n"
#~ "done    \n"
#~ "\n"
#~ "save_usrlib=\"libquadmath.so.&libquadmath-version; libstdc++.so."
#~ "&libstdcpp-version;\n"
#~ "             libitm.so.&libitm-version; libatomic.so.&libatomic-version;"
#~ "\" \n"
#~ "\n"
#~ "cd /usr/lib\n"
#~ "\n"
#~ "for LIB in $save_usrlib; do\n"
#~ "    objcopy --only-keep-debug $LIB $LIB.dbg\n"
#~ "    strip --strip-unneeded $LIB\n"
#~ "    objcopy --add-gnu-debuglink=$LIB.dbg $LIB\n"
#~ "done\n"
#~ "\n"
#~ "unset LIB save_lib save_usrlib</userinput>"

#~ msgid "Now the binaries and libraries can be stripped:"
#~ msgstr "现在即可移除程序和库的调试符号："

#, fuzzy
#~| msgid ""
#~| "<userinput>find /usr/lib -type f -name \\*.a \\\n"
#~| "   -exec strip --strip-debug {} ';'\n"
#~| "\n"
#~| "find /lib /usr/lib -type f -name \\*.so* ! -name \\*dbg \\\n"
#~| "   -exec strip --strip-unneeded {} ';'\n"
#~| "\n"
#~| "find /{bin,sbin} /usr/{bin,sbin,libexec} -type f \\\n"
#~| "    -exec strip --strip-all {} ';'</userinput>"
#~ msgid ""
#~ "<userinput>find /usr/lib -type f -name \\*.a \\\n"
#~ "   -exec strip --strip-debug {} ';'\n"
#~ "\n"
#~ "find /usr/lib -type f -name \\*.so* ! -name \\*dbg ! -name libz.so* \\\n"
#~ "   -exec strip --strip-unneeded {} ';'\n"
#~ "\n"
#~ "find /usr/{bin,sbin,libexec} -type f \\\n"
#~ "    -exec strip --strip-all {} ';'</userinput>"
#~ msgstr ""
#~ "<userinput>find /usr/lib -type f -name \\*.a \\\n"
#~ "   -exec strip --strip-debug {} ';'\n"
#~ "\n"
#~ "find /lib /usr/lib -type f -name \\*.so* ! -name \\*dbg \\\n"
#~ "   -exec strip --strip-unneeded {} ';'\n"
#~ "\n"
#~ "find /{bin,sbin} /usr/{bin,sbin,libexec} -type f \\\n"
#~ "    -exec strip --strip-all {} ';'</userinput>"
