# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-12-21 02:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Content of: <sect1><title>
#: lfs-en/chapter08/stripping.xml:11
msgid "Stripping"
msgstr ""

#. type: Content of: <sect1><para>
#: lfs-en/chapter08/stripping.xml:13
msgid ""
"This section is optional.  If the intended user is not a programmer and does "
"not plan to do any debugging of the system software, the system's size can "
"be decreased by some 2 GB by removing the debugging symbols, and some "
"unnecessary symbol table entries, from binaries and libraries. This causes "
"no real inconvenience for a typical Linux user."
msgstr ""

#. type: Content of: <sect1><para>
#: lfs-en/chapter08/stripping.xml:20
msgid ""
"Most people who use the commands mentioned below do not experience any "
"difficulties. However, it is easy to make a mistake and render the new "
"system unusable. So before running the <command>strip</command> commands, it "
"is a good idea to make a backup of the LFS system in its current state."
msgstr ""

#. type: Content of: <sect1><para>
#: lfs-en/chapter08/stripping.xml:26
msgid ""
"A <command>strip</command> command with the <parameter>--strip-unneeded</"
"parameter> option removes all debug symbols from a binary or library.  It "
"also removes all symbol table entries not needed by the linker (for static "
"libraries) or dynamic linker (for dynamically linked binaries and shared "
"libraries)."
msgstr ""

#. type: Content of: <sect1><para>
#: lfs-en/chapter08/stripping.xml:32
msgid ""
"The debugging symbols from selected libraries are preserved in separate "
"files.  That debugging information is needed to run regression tests with "
"<ulink url='&blfs-book;/general/valgrind.html'>valgrind</ulink> or <ulink "
"url='&blfs-book;/general/gdb.html'>gdb</ulink> later, in BLFS."
msgstr ""

#. type: Content of: <sect1><para>
#: lfs-en/chapter08/stripping.xml:39
msgid ""
"Note that <command>strip</command> will overwrite the binary or library file "
"it is processing.  This can crash the processes using code or data from the "
"file.  If the process running <command>strip</command> is affected, the "
"binary or library being stripped can be destroyed; this can make the system "
"completely unusable.  To avoid this problem we copy some libraries and "
"binaries into <filename class=\"directory\">/tmp</filename>, strip them "
"there, then reinstall them with the <command>install</command> command.  "
"(The related entry in <xref linkend=\"pkgmgmt-upgrade-issues\"/> gives the "
"rationale for using the <command>install</command> command here.)"
msgstr ""

#. type: Content of: <sect1><note><para>
#: lfs-en/chapter08/stripping.xml:49
msgid ""
"The ELF loader's name is ld-linux-x86-64.so.2 on 64-bit systems and ld-linux."
"so.2 on 32-bit systems.  The construct below selects the correct name for "
"the current architecture, excluding anything ending with <quote>g</quote>, "
"in case the commands below have already been run."
msgstr ""

#.  also of interest are libgfortan, libgo, libgomp, and libobjc from GCC 
#. <screen>
#. <userinput>save_lib="ld-2.25.so libc-2.25.so libpthread-2.25.so libthread_db-1.0.so"
#. type: Content of: <sect1><screen>
#: lfs-en/chapter08/stripping.xml:58
#, no-wrap
msgid ""
"<userinput>save_usrlib=\"$(cd /usr/lib; ls ld-linux*[^g])\n"
"             libc.so.6\n"
"             libthread_db.so.1\n"
"             libquadmath.so.&libquadmath-version;\n"
"             libstdc++.so.&libstdcpp-version;\n"
"             libitm.so.&libitm-version;\n"
"             libatomic.so.&libatomic-version;\"\n"
"\n"
"cd /usr/lib\n"
"\n"
"for LIB in $save_usrlib; do\n"
"    objcopy --only-keep-debug $LIB $LIB.dbg\n"
"    cp $LIB /tmp/$LIB\n"
"    strip --strip-unneeded /tmp/$LIB\n"
"    objcopy --add-gnu-debuglink=$LIB.dbg /tmp/$LIB\n"
"    install -vm755 /tmp/$LIB /usr/lib\n"
"    rm /tmp/$LIB\n"
"done\n"
"\n"
"online_usrbin=\"bash find strip\"\n"
"online_usrlib=\"libbfd-&binutils-version;.so\n"
"               libhistory.so.&readline-soversion;\n"
"               libncursesw.so.&ncurses-version;\n"
"               libm.so.6\n"
"               libreadline.so.&readline-soversion;\n"
"               libz.so.&zlib-version;\n"
"               $(cd /usr/lib; find libnss*.so* -type f)\"\n"
"\n"
"for BIN in $online_usrbin; do\n"
"    cp /usr/bin/$BIN /tmp/$BIN\n"
"    strip --strip-unneeded /tmp/$BIN\n"
"    install -vm755 /tmp/$BIN /usr/bin\n"
"    rm /tmp/$BIN\n"
"done\n"
"\n"
"for LIB in $online_usrlib; do\n"
"    cp /usr/lib/$LIB /tmp/$LIB\n"
"    strip --strip-unneeded /tmp/$LIB\n"
"    install -vm755 /tmp/$LIB /usr/lib\n"
"    rm /tmp/$LIB\n"
"done\n"
"\n"
"for i in $(find /usr/lib -type f -name \\*.so* ! -name \\*dbg) \\\n"
"         $(find /usr/lib -type f -name \\*.a)                 \\\n"
"         $(find /usr/{bin,sbin,libexec} -type f); do\n"
"    case \"$online_usrbin $online_usrlib $save_usrlib\" in\n"
"        *$(basename $i)* )\n"
"            ;;\n"
"        * ) strip --strip-unneeded $i\n"
"            ;;\n"
"    esac\n"
"done\n"
"\n"
"unset BIN LIB save_usrlib online_usrbin online_usrlib\n"
"</userinput>"
msgstr ""

#. type: Content of: <sect1><para>
#: lfs-en/chapter08/stripping.xml:114
msgid ""
"A large number of files will be flagged as errors because their file format "
"is not recognized. These warnings can be safely ignored. They indicate that "
"those files are scripts, not binaries."
msgstr ""
