<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>
<sect1 id="ch-bootable-kernel" role="wrap">
<title>Linux-&linux-version;</title>
<?dbhtml filename="kernel.html"?>

<indexterm zone="ch-bootable-kernel"><primary
sortas="a-Linux">Linux</primary></indexterm>

<sect2 role="package"><title/>
<para>Le paquet Linux contient le noyau et les fichiers d'en-têtes.</para>

<segmentedlist>
<segtitle>&buildtime;</segtitle>
<segtitle>&diskspace;</segtitle>
<seglistitem><seg>4,20&nbsp;SBU</seg>
<seg>181&nbsp;Mo</seg></seglistitem>
</segmentedlist>

<segmentedlist>
<segtitle>L'installation de Linux dépend de</segtitle>
<seglistitem><seg>Bash, Binutils, Coreutils, Findutils,
GCC, Glibc, Grep, Gzip, Make, Modutils, Perl et Sed</seg></seglistitem>
</segmentedlist>
</sect2>

<sect2 role="installation">
<title>Installation du noyau</title>

<para>Construire le noyau implique un certain nombre d'étapes&nbsp;:
configuration, compilation et installation. Lisez le fichier
<filename>README</filename> contenu dans les sources du noyau pour d'autres
méthodes.</para>

<para>Préparez la compilation en lançant la commande suivante&nbsp;:</para>

<screen><userinput>make mrproper</userinput></screen>

<para>Ceci nous assure que le répertoire du noyau est complètement nettoyé.
L'équipe du noyau recommande que cette commande soit lancée avant chaque
compilation du noyau. Vous ne devez pas penser que le répertoire des sources
soit propre juste après avoir été déballé.</para>

<para>De plus, assurez-vous que le noyau n'essaie pas de passer les événements
de montage à chaud dans l'espace utilisateur jusqu'à ce que ce dernier spécifie
qu'il est prêt&nbsp;:</para>

<screen><userinput>sed -i 's@/sbin/hotplug@/bin/true@' kernel/kmod.c</userinput></screen>

<para>Si il a été décidé dans <xref linkend="ch-scripts-console" role=","/> de
compiler le plan de codage dans le noyau, lancez la commande ci-dessous&nbsp;:</para>

<screen><userinput>loadkeys -m /usr/share/kbd/keymaps/<replaceable>[path to  keymap]</replaceable> &gt; \
    drivers/char/defkeymap.c</userinput></screen>

<para>Par exemple, pour utiliser un clavier hollandais, utilisez
<phrase
condition="html"><filename>/usr/share/kbd/keymaps/i386/qwerty/nl.map.gz</filename></phrase><phrase
condition="pdf"><filename>/usr/share/kbd/keymaps/i386/
qwerty/nl.map.gz</filename></phrase>.</para>

<para>Configurez le noyau via une interface par menu&nbsp;:</para>

<screen><userinput>make menuconfig</userinput></screen>

<para>Sinon, <command>make oldconfig</command> peut être plus approprié dans
certaines situations. Voir le fichier <filename>README</filename> pour plus
d'informations.</para>

<para>Sinon, <command>make oldconfig</command> pourrait être plus approprié
dans certaines situations. Voir le fichier <filename>README</filename> pour
plus d'informations.</para>

<note><para>Lors de la configuration du noyau, assurez-vous d'activer l'option
<quote>Support for hot-pluggable devices</quote> dans le menu
<quote>General Setup</quote>. Ceci active les événements de montage à chaud qui
sont utilisés par <command>udev</command> pour peupler le répertoire <filename
class="directory">/dev</filename> avec les n&oelig;uds de périphériques.
</para></note>

<para>Si désiré, passez la configuration du noyau en copiant le fichier de
configuration, <filename>.config</filename>, à partir du système hôte
(en supposant qu'il est disponible) dans le répertoire <filename
class="directory">linux-&linux-version;</filename> tout juste déballé.
Néanmoins, nous ne recommandons pas cette option. Il est souvent mieux
d'explorer tous les menus de configuration et de créer la configuration du
noyau à partir de rien.</para>

<para>Pour le support de la mémoire partagée POSIX, assurez-vous que l'option
de configuration du noyau <quote>Virtual memory file system support</quote>
est activée. Elle réside dans le menu <quote>File systems</quote> et est
normalement activée par défaut.</para>

<para>Les scripts de démarrage LFS supposent que soit <quote>Support for
Host-side USB</quote> et <quote>USB device filesystem</quote> ont été compilées
directement dans le noyau soit aucune des deux ne l'a été. Les scripts de
démarrage ne fonctionnent pas correctement s'il s'agit d'un module (usbcore.ko).</para>

<note><para>NPTL requiert que le noyau soit compilé avec GCC 3.x, dans ce cas
&gcc-version;. Compiler avec 2.95.x est connu pour causer des échecs dans la
suite de tests de glibc, donc il n'est pas recommandé de compiler le noyau avec
gcc 2.95.x.</para></note>

<para>Compilez l'image du noyau et les modules&nbsp;:</para>

<screen><userinput>make</userinput></screen>

<para>Si vous utilisez des modules avec le noyau, un fichier
<filename>/etc/modprobe.conf</filename> pourrait être nécessaire. Les
Informations concernant les modules et la configuration du noyau sont situées
dans la documentation du noyau disponible dans le répertoire <filename
class="directory">linux-&linux-version;/Documentation</filename>.
La page man <emphasis>modprobe.conf</emphasis> pourrait aussi avoir de
l'intérêt.</para>

<para>Faites attention lors de la lecture d'autres documentations parce qu'elle
s'applique généralement seulement aux noyaux 2.4.x. D'après nos connaissances,
les problèmes spécifiques de configuration du noyau pour Hotplug (le montage à
chaud) et Udev se sont pas documentés. Le problème est que Udev créera un
n&oelig;ud de périphérique seulement si Hotplug ou un script écrit par
l'utilisateur insère le module correspondant dans le noyau et tous les modules
ne sont pas détectables par Hotplug. Notez que les instructions comme celle
ci-dessous, compris dans le fichier <filename>/etc/modprobe.conf</filename>, ne
fonctionnent pas avec Udev&nbsp;:</para>

<para><screen>alias char-major-XXX some-module</screen></para>

<para>À cause des complications avec Hotplug, Udev et les modules, nous
recommandons fortement de commencer avec une configuration complètement non
modulaire du noyau, spécialement si c'est la première fois que vous utilisez
Udev.</para>

<para>Installez les modules si la configuration du noyau les utilise&nbsp;:</para>

<screen><userinput>make modules_install</userinput></screen>

<para>S'il y a beaucoup de modules et peu de place, considérez la possibilité
de réduire leur taille et de compresser les modules. Pour la plupart des
utilisateurs, une telle compression n'est pas utile mais si le système dispose
de vraiment peu d'espaces, jetez un &oelig;il à <ulink
url="http://www.linux-mips.org/archives/linux-mips/2002-04/msg00031.html"/>.</para>

<para>Une fois la compilation du noyau terminée, des étapes supplémentaires
sont requises pour terminer l'installation. Certains fichiers ont besoin d'être
copiés dans le répertoire <filename class="directory">/boot</filename>.</para>

<para>Le chemin vers l'image du noyau pourrait varier suivant la plateforme
d'utilisation. Lancez la commande suivante pour installer le noyau&nbsp;:</para>

<screen><userinput>cp arch/i386/boot/bzImage /boot/lfskernel-&linux-version;</userinput></screen>

<para><filename>System.map</filename> est un fichier de symboles pour le noyau.
Il cartographie les points d'entrées de chaque fonction dans l'API du noyau,
ainsi que les adresses des structures de données du noyau pour le noyau en cours
d'exécution. Lancez la commande suivante pour installer le fichier carte&nbsp;:</para>

<screen><userinput>cp System.map /boot/System.map-&linux-version;</userinput></screen>

<para>Le fichier de configuration du noyau <filename>.config</filename> produit
à l'étape <command>make menuconfig</command> ci-dessus contient toutes les
sélections de configuration pour le noyau tout juste compilé. Conserver ce fichier
est une bonne idée pour pouvoir s'y référer plus tard&nbsp;:</para>

<screen><userinput>cp .config /boot/config-&linux-version;</userinput></screen>

<para>Il est important de noter que les fichiers du répertoire des sources du
noyau n'appartiennent pas à <emphasis>root</emphasis>. À chaque fois qu'un
paquet est déballé par l'utilisateur <emphasis>root</emphasis> (comme nous
l'avons fait à l'intérieur du chroot), les fichiers conservent les identifiants
utilisateur et groupe de celui qui a préparé le paquet. Ceci n'est habituellement
pas un problème pour tout autre paquet installé car le répertoire des sources
est supprimé après installation. Néanmoins, le répertoire des sources de Linux
est souvent conservé assez lontemps. À cause de cela, il existe une chance pour
que l'identifiant utilisateur soit affecté à quelqu'un sur la machine. Cette
personne aurait alors les droits d'écriture sur les sources du noyau.</para>

<para>Si le répertoire des sources du noyau est conservé, lancez
<command>chown -R 0:0</command> sur le répertoire <filename
class="directory">linux-&linux-version;</filename> pour vous assurez que tous
les fichiers sont bien possédés par l'utilisateur <emphasis>root</emphasis>.</para>
</sect2>


<sect2 id="contents-kernel" role="content"><title>Contenu de Linux</title>

<segmentedlist>
<segtitle>Fichiers installés</segtitle>
<seglistitem><seg>noyau, en-têtes du noyau et System.map</seg></seglistitem>
</segmentedlist>

<variablelist><bridgehead renderas="sect3">Descriptions courtes</bridgehead>
<?dbfo list-presentation="list"?>

<varlistentry id="kernel">
<term><filename>noyau</filename></term>
<listitem>
<para>Le moteur du système Linux. Au démarrage de l'ordinateur, le noyau est la
première partie du système d'exploitation à être chargée. Il détecte et
initialise tous composants matériels de l'ordinateur, puis rend disponibles ces
composants par un ensemble de fichiers pour les logiciels qui en ont besoin, et
transforme un CPU unique en une machine multitâches capable 'exécuter des bouts
de programmes quasiment au même moment.</para>
<indexterm zone="ch-bootable-kernel kernel"><primary sortas="b-kernel">noyau</primary></indexterm>
</listitem>
</varlistentry>

<varlistentry id="kernel-headers">
<term><filename>En-têtes du noyau</filename></term>
<listitem>
<para>Définit l'interface des services que fournit le noyau. Les en-têtes du
répertoire <filename class="directory">include</filename> du système devraient
<emphasis>toujours</emphasis> être ceux avec lesquels Glibc a été compilé et,
du coup, ne devraient <emphasis>pas</emphasis> être remplacées lors de la mise
à jour du noyau.</para>
<indexterm zone="ch-bootable-kernel kernel-headers"><primary sortas="e-kernel-headers">en-têtes du noyau</primary></indexterm>
</listitem>
</varlistentry>

<varlistentry id="System.map">
<term><filename>System.map</filename></term>
<listitem>
<para>Une liste d'adresses et de symboles&nbsp;; il fait correspondre les points
d'entrées et les adresses de toutes les fonctions et structures de données dans
le noyau</para>
<indexterm zone="ch-bootable-kernel System.map"><primary sortas="e-/boot/System.map">/boot/System.map</primary></indexterm>
</listitem>
</varlistentry>
</variablelist>

</sect2>

</sect1>
