#!/bin/sh
########################################################################
# Begin $rc_base/init.d/rc
#
# Description : Main Run Level Control Script
#
# Authors     : Gerard Beekmans  - gerard@linuxfromscratch.org
#
# Version     : 00.00
#
# Notes       :
#
########################################################################

. /etc/sysconfig/rc
. ${rc_functions}

# This sets a few default terminal options.
stty sane

# These 3 signals will not cause our script to exit
trap &quot;&quot; INT QUIT TSTP

[ &quot;${1}&quot; != &quot;&quot; ] &amp;&amp; runlevel=${1}

if [ &quot;${runlevel}&quot; = &quot;&quot; ]; then
    echo &quot;Usage: ${0} &lt;runlevel&gt;&quot; &gt;&amp;2
    exit 1
fi

previous=${PREVLEVEL}
[ &quot;${previous}&quot; = &quot;&quot; ] &amp;&amp; previous=N

if [ ! -d ${rc_base}/rc${runlevel}.d ]; then
    boot_mesg &quot;${rc_base}/rc${runlevel}.d does not exist.&quot; ${WARNING}
    boot_mesg_flush
    exit 1
fi

# Attempt to stop all service started by previous runlevel,
# and killed in this runlevel
if [ &quot;${previous}&quot; != &quot;N&quot; ]; then
    for i in $(ls -v ${rc_base}/rc${runlevel}.d/K* 2&gt; /dev/null)
    do
        check_script_status

        suffix=${i#$rc_base/rc$runlevel.d/K[0-9][0-9]}
        prev_start=$rc_base/rc$previous.d/S[0-9][0-9]$suffix
        sysinit_start=$rc_base/rcsysinit.d/S[0-9][0-9]$suffix

        if [ &quot;${runlevel}&quot; != &quot;0&quot; ] &amp;&amp; [ &quot;${runlevel}&quot; != &quot;6&quot; ]; then
            if [ ! -f ${prev_start} ] &amp;&amp; [ ! -f ${sysinit_start} ]; then
                boot_mesg -n &quot;WARNING:\n\n${i} can&apos;t be&quot; ${WARNING}
                boot_mesg -n &quot; executed because it was not&quot;
                boot_mesg -n &quot; not started in the previous&quot;
                boot_mesg -n &quot; runlevel (${previous}).&quot;
                boot_mesg &quot;&quot; ${NORMAL}
                boot_mesg_flush
                continue
            fi
        fi
        ${i} stop
        error_value=${?}

        if [ &quot;${error_value}&quot; != &quot;0&quot; ]; then
            print_error_msg
        fi
    done
fi

#Start all functions in this runlevel
for i in $( ls -v ${rc_base}/rc${runlevel}.d/S* 2&gt; /dev/null)
do
    if [ &quot;${previous}&quot; != &quot;N&quot; ]; then
        suffix=${i#$rc_base/rc$runlevel.d/S[0-9][0-9]}
        stop=$rc_base/rc$runlevel.d/K[0-9][0-9]$suffix
        prev_start=$rc_base/rc$previous.d/S[0-9][0-9]$suffix

        [ -f ${prev_start} ] &amp;&amp; [ ! -f ${stop} ] &amp;&amp; continue
    fi

    check_script_status

    case ${runlevel} in
        0|6)
            ${i} stop
            ;;
        *)
            ${i} start
            ;;
    esac
    error_value=${?}

    if [ &quot;${error_value}&quot; != &quot;0&quot; ]; then
        print_error_msg
    fi
done

# End $rc_base/init.d/rc
