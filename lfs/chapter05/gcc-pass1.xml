<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-tools-gcc-pass1" role="wrap">
  <?dbhtml filename="gcc-pass1.html"?>

<sect1info condition="script">
     <productname>gcc</productname>
     <productnumber>&gcc-version;</productnumber>
     <address>&gcc-url;</address>
</sect1info>

  <title>GCC-&gcc-version; - Passe 1</title>

  <indexterm zone="ch-tools-gcc-pass1">
    <primary sortas="a-GCC">GCC</primary>
    <secondary>outils, passe 1</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <xi:include xmlns:xi="http://www.w3.org/2003/XInclude"
    href="../chapter06/gcc.xml"
    xpointer="xpointer(/sect1/sect2[1]/para[1])"/>

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&gcc-ch5p1-sbu;</seg>
        <seg>&gcc-ch5p1-du;</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation de GCC</title>

    <para>GCC exige maintenant les paquets GMP et MPFR. Comce il se peut que
    ces paquets ne soient pas inclus dans votre distribution hôte, ils vont
    être compilés avec GCC.</para>
<screen><userinput remap="pre">tar -jxf ../mpfr-&mpfr-version;.tar.bz2
mv mpfr-&mpfr-version; mpfr
tar -jxf ../gmp-&gmp-version;.tar.bz2
mv gmp-&gmp-version; gmp</userinput></screen>

    <para>La documentation de GCC recommande de ne pas construire GCC dans le
    répertoire des sources mais dans un répertoire de construction dédié&nbsp;:</para>

<screen><userinput remap="pre">mkdir -v ../gcc-build  
cd ../gcc-build</userinput></screen>

    <para>Préparez la compilation de GCC&nbsp;:</para>

<screen><userinput remap="configure">CC="gcc -B/usr/bin/" ../gcc-&gcc-version;/configure --prefix=/tools \
     --with-local-prefix=/tools --disable-nls --disable-shared --disable-libssp \
      --disable-multilib --enable-languages=c</userinput></screen>

    <variablelist>
      <title>Voici la signification des options de configure&nbsp;:</title>

      <varlistentry>
        <term><envar>CC="gcc -B/usr/bin/"</envar></term>
        <listitem>
          <para>Ceci oblige <command>gcc</command> à préférer l'éditeur de liens
          du système hôte dans <filename class="directory">/usr/bin</filename>.
          C'est nécessaire sur certains systèmes hôtes où le nouveau <command>ld</command>
          compilé dans la section précédente n'est pas compatible avec le 
          <command>gcc</command> du système hôte.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--with-local-prefix=/tools</parameter></term>
        <listitem>
          <para>Le but de cette option est de supprimer
          <filename class="directory">/usr/local/include</filename> du chemin 
          de recherche des fichiers include de
          <command>gcc</command>. Ce n'est pas absolument
          essentiel&nbsp;; néanmoins, c'est une aide pour minimiser l'influence 
          du système hôte.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--disable-shared</parameter></term>
        <listitem>
          <para>Ce paramètre oblige GCC à lier ses bibliothèques internes de
          manière statique. On procède ainsi pour éviter les problèmes avec
          le système hôte.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--disable-libssp</parameter></term>
        <listitem>
          <para>Ce paramètre empêche un conflit avec les vieilles versions de
          Glibc, qui peut faire échouer la compilation.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><parameter>--enable-languages=c</parameter></term>
        <listitem>
          <para>Cette option nous assure que seul le compilateur C sera
          construit. C'est le seul langage actuellement nécessaire.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><parameter>--disable-multilib</parameter></term>
        <listitem>
          <para>Nous ne voulons actuellement compiler que le support pour
          les bibliotgèques 64 bits.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>La commande suivante ne va pas compiler GCC qu'une fois mais 
    plusieurs fois. Elle utilise les programmes compilés dans le premier tour pour se 
    compiler une deuxième fois, puis une troisième fois. Il compare alors 
    les deuxième et troisième compilations pour s'assurer qu'il arrive à 
    se reproduire lui-même proprement. Cela s'appelle le
    <quote>bootstrapping</quote>. Compiler Glibc de cette façon assure que
    GCC est compilé correctement et c'est à présent la configuration par défaut
    pour le paquet actuel. Continuez avec la compilation du paquet&nbsp;:</para>

<screen><userinput remap="make">make</userinput></screen>

    <para>La compilation est maintenant terminée. À ce point, la suite de tests
    devrait être lancée. Mais, comme nous l'avons dit plus tôt, l'ensemble de
    travail de la suite de tests n'est pas encore en place. Les bénéfices à lancer
    les tests maintenant seraient minimes car les programmes de la première passe
    seront bientôt remplacés.</para>

    <para>Installez le paquet&nbsp;:</para>

<screen><userinput remap="install">make install</userinput></screen>

    <para>L'utilisation de <parameter>--disable-shared</parameter> signifie
    que le fichier <filename>libgcc_eh.a</filename> n'est pas créé et installé.
    Le paquet Glibc dépend de cette bibliothèque puisqu'il utilise
    <parameter>-lgcc_eh</parameter> à l'intérieur de son système de construction.
    On peut satisfaire cette dépendance en créant un lien symbolique vers
    <filename>libgcc.a</filename>, puisque ce fichier va finir par contenir les
    objets normalement contenus dans <filename>libgcc_eh.a</filename>.</para>

<screen><userinput remap="install">ln -vs libgcc.a `gcc -print-libgcc-file-name| \
    sed 's/libgcc/&amp;_eh/'`</userinput></screen>
    
    <para>En touche finale, créez un lien symbolique. Beaucoup de programmes
    lancent <command>cc</command> au lieu de <command>gcc</command>, ceci pour
    conserver des programmes génériques et donc utilisables sur tout type
    de système Unix où le compilateur GNU C n'est pas toujours installé. Utiliser
    <command>cc</command> permet de libérer l'administrateur système dans son choix
    du compilateur C à installer.</para>

<screen><userinput remap="install">ln -vs gcc /tools/bin/cc</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title/>

    <para>Les détails sur ce paquet sont disponibles dans
    <xref linkend="contents-gcc" role="."/></para>

  </sect2>

</sect1>
