<sect2><title>&nbsp;</title><para>&nbsp;</para></sect2>

<sect2>
<title>Installation de Glibc</title>

<para>Avant de commencer l'installation de Glibc, vou devez entrer
(<userinput>cd</userinput>) dans le répertoire
<filename>glibc-&glibc-version;</filename> et déballer Glibc-linuxthreads dans
ce répertoire, et pas dans <filename>/usr/src</filename> comme vous le faites
habituellement.</para>

<note><para>Nous allons lancer la suite de tests pour Glibc dans ce chapitre.
Néanmoins, est intéressant de noter que la suite de tests de Glibc que nous
lançons dans cette section n'est pas considérée aussi importante que celui que
nous lançons dans le chapitre 6.</para></note>

<para>Ce package est connu pour mal se comporter si ses options d'optimisation
par défaut ont été changées (incluant les options -march et -mcpu). Donc, si
vous avez défini des variables d'environnement qui surchargent les
optimisations par défaut, telles que CFLAGS et CXXFLAGS, nous vous recommandons
de les supprimer ou de les modifier lors de la construction de Glibc.</para>

<para>En gros, compiler Glibc d'une autre façon que ce qu'indique le livre met
la stabilité de votre système en grand danger.</para>

<para>Bien que ce soit un message non dangereux, la phase d'installation de
Glibc se plaindra de la présence de <filename>/tools/etc/ld.so.conf</filename>.
Corrigez cette petite erreur ennuyante:</para>

<para><screen><userinput>mkdir /tools/etc
touch /tools/etc/ld.so.conf</userinput></screen></para>

<para>De même, Glibc a un problème subtil lorsqu'il est compilé avec GCC 3.3.1.
Appliquez le correctif suivant pour corriger cela:</para>
<para><screen><userinput>patch -Np1 -i ../glibc-&glibc-sscanf-patch-version;.patch</userinput></screen></para>

<para>La documentation de Glibc recommende de construire le package en dehors
du répertoire des sources, dans un répertoire séparé et dédié à cela:</para>

<para><screen><userinput>mkdir ../glibc-build
cd ../glibc-build</userinput></screen></para>

<para>Ensuite, préparez la compilation de Glibc:</para>

<para><screen><userinput>../glibc-&glibc-version;/configure --prefix=/tools \
&nbsp;&nbsp;&nbsp;&nbsp;--disable-profile --enable-add-ons \
&nbsp;&nbsp;&nbsp;&nbsp;--with-headers=/tools/include \
&nbsp;&nbsp;&nbsp;&nbsp;--with-binutils=/tools/bin \
&nbsp;&nbsp;&nbsp;&nbsp;--without-gd</userinput></screen></para>

<para>La signification des nouvelles options de configure est:</para>

<itemizedlist>
<listitem><para><userinput>--disable-profile</userinput> : Ceci désactive la
construction des bibliothèques avec des informations de profilage. Cette
commande peut être omise si vous plannifiez de faire du profilage.
</para></listitem>

<listitem><para><userinput>--enable-add-ons</userinput> : Ceci active tous les
modules supplémentaires qui étaient installés avec Glibc, c'est-à-dire
linuxthreads dans notre cas.</para></listitem>

<listitem><para><userinput>--with-binutils=/tools/bin</userinput> et
<userinput>--with-headers=/tools/include</userinput>: De façon stricte, ces
options ne sont pas requises. Mais elles nous assurent que rien n'ira mal en ce
qui concerne les entêtes du noyau et les programmes Binutils sont utilisés
durant la construction de Glibc.</para></listitem>

<listitem><para><userinput> --without-gd</userinput>: Cette option s'assure que
nous ne construisons pas le programme <userinput>memusagestat</userinput>, qui
assez bizarrement insiste pour lier de nouveau les bibliothèques de l'hôte 
(libgd, libpng, libz, et ainsi de suite).</para></listitem>
</itemizedlist>

<para>Durant cette étape, vous pourrez apercevoir le message d'avertissement
suivant:</para>

<blockquote><screen>configure: WARNING:
*** These auxiliary programs are missing or incompatible versions: msgfmt
*** some features will be disabled.
*** Check the INSTALL file for required versions.</screen></blockquote>

<para>Le programme <filename>msgfmt</filename>, manquant ou incompatible, est
généralement sans risque, mais beaucoup de personnes croient qu'il peut être la
cause de problèmes lors de l'exécution de la suite de tests.</para>

<para>Compilez le package:</para>

<para><screen><userinput>make</userinput></screen></para>

<para>Lancez la suite de tests:</para>

<para><screen><userinput>make check</userinput></screen></para>

<para>La suite de tests de Glibc dépend grandement de certaines fonctions de
votre système hôte. De plus, dans le chapitre 5, quelques tests peuvent être
affectés de mauvaise façon par des outils existants ou des problèmes
d'environnement du système hôte. Bien sûr, cela ne sera pas un problème lorsque
nous lancerons la suite de tests à partir de l'environnement chroot du chapitre
6. En général, la suite de tests de Glibc devrait toujours passer. Néanmoins,
comme indiqué ci-dessus, certains problèmes sont inévitables sous certaines
conditions. Voici une liste des problèmes les plus communs dont nous sommes au
courant:</para>

<itemizedlist>
<listitem><para>Les tests math échouent parfois lorsqu'ils sont lancés sur un
système dont le processeur n'est pas une version réelle Intel ou AMD. Certaines
optimisations sont connues pour être un facteur important dans ce cas.
</para></listitem>

<listitem><para>Le test gettext échoue parfois dû à des problèmes avec le
système hôte. Les raisons exactes ne sont pas encore claires.</para></listitem>

<listitem><para>Le test atime échoue parfois lorsque la partition LFS est montée
avec l'option noatime ou à cause d'autres soucis avec les systèmes de fichiers.
</para></listitem>

<listitem><para>En général, lors d'une exécution sur du matériel lent, certains
tests pourraient échouer à cause de délais de temps d'exécution écoulés.
</para></listitem>

<listitem><para>Le test shm pourrait échouer sous certaines circonstances où le
système hôte ferait fonctionner le système de fichiers devfs mais sans avoir le
système de fichiers tmpfs monté sur /dev/shm, ceci à cause d'un manque de
support de tmpfs dans le noyau.</para></listitem>
</itemizedlist>

<para>En résumé, ne vous inquiétez pas trop si vous voyez des échecs de la suite
de tests de Glibc au chapitre 5. Glibc au chapitre 6 est celui que nous
utiliserons à la fin, donc cela doit être celui qui réussit les tests. Mais,
s'il-vous-plaît, gardez en tête que même lors du chapitre 6 peut survenir des
échecs, lors du test mathématique par exemple. Si cela arrive, notez l'échec et
continuer en relançant <userinput>make check</userinput>. La suite de tests
devrait recommencer là où elle s'était arrêtée. Vous pouvez empêcher cette
séquence en lançant <userinput>make -k check</userinput>. Mais en faisant cela,
assurez-vous de tracer la sortie de façon à pouvoir examiner le fichier de
traces et trouver ainsi le nombre d'échecs.</para>

<para>Maintenant, installez le package:</para>

<para><screen><userinput>make install</userinput></screen></para>

<para>Différents pays et cultures ont différentes conventions sur la façon de
communiquer. Ces conventions vont des plus simples, telles que le format
de représentation des dates et heures, aux plus complexes, telles que le langage
parlé. Cette "internationalisation" fonctionne au moyen des locales. Nous
installerons les locales Glibc maintenant:</para>

<para><screen><userinput>make localedata/install-locales</userinput></screen></para>

<para>Une alternative au lancement de le commande précédente est d'installer
seulement les <quote>locales</quote> dont vous aurez besoin. On peut y arriver
en utilisant la commande <userinput>localedef</userinput>. Les informations à
ce sujet sont disponibles dans le fichier <filename>INSTALL</filename>, du
répertoire <filename>glibc-&glibc-version;</filename>. Néanmoins, il existe
plusieurs locales essentielles pour que les tests des futurs packages n'échouent
pas, en particulier mes tests de libstdc++ de GCC. Les instructions suivantes,
au même endroit que pour la commande install-locales ci-dessus, installera
l'ensemble minimum de locales nécessaires aux tests pour s'exécuter
correctement:</para>

<para><screen><userinput>mkdir -p /tools/lib/locale
localedef -i de_DE -f ISO-8859-1 de_DE
localedef -i de_DE@euro -f ISO-8859-15 de_DE@euro
localedef -i en_HK -f ISO-8859-1 en_HK
localedef -i en_PH -f ISO-8859-1 en_PH
localedef -i en_US -f ISO-8859-1 en_US
localedef -i es_MX -f ISO-8859-1 es_MX
localedef -i fr_FR -f ISO-8859-1 fr_FR
localedef -i fr_FR@euro -f ISO-8859-15 fr_FR@euro
localedef -i it_IT -f ISO-8859-1 it_IT
localedef -i ja_JP -f EUC-JP ja_JP</userinput></screen></para>

</sect2>

