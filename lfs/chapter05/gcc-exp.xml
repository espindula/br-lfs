<sect2>
<title>Explication des commandes</title>

<para><userinput>make BOOT_LDFLAGS=-static:</userinput>
Ceci est l'équivalent de LDFLAGS=-static que nous utilisons avec d'autres packages 
pour les compiler statiquement.</para>

<para><userinput>--prefix=/usr:</userinput> Ce n'est PAS une erreur de frappe. GCC 
garde en dur certains chemins lors de la compilation et nous devons donc donner /usr 
lors du ./configure. Nous donnons le vrai préfixe du chemin d'installation plus tard 
lors de la commande make install.</para>

<para><userinput>--enable-languages=c,c++:</userinput> Ceci ne crée
que les compilateurs C et C++, et pas les autres compilateurs disponibles,
parce qu'ils sont en moyenne très peu utilisés. Si certains de
ces autres compilateurs sont nécessaires, le paramètre --enable-languages
peut être omis.</para>

<para><userinput>--enable-threads=posix:</userinput> Ceci permet la gestion des 
exceptions C++ pour le code multithread.</para>

<para><userinput>ln -sf ../usr/bin/cpp:</userinput> Ceci crée le lien symbolique
$LFS/lib/cpp. Certains packages essaient explicitement de trouver cpp
dans /lib.</para>

<para><userinput>ln -sf ../bin/cpp:</userinput> Ceci crée le lien symbolique
$LFS/usr/lib/cpp, parce qu'il y a des packages qui s'attendent à ce que cpp soit 
dans /usr/lib.</para>

</sect2>

