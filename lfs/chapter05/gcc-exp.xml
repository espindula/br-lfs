<sect2>
<title>Explication des commandes</title>

<para><userinput>--prefix=/static : </userinput> Ce n'est PAS une erreur de
frappe. GCC garde en dur certains chemins lors de la compilation et nous
devons donc passer /static comme préfixe lors du ./configure. Nous donnons
le véritable préfixe d'installation plus tard lors de la commande
make install.</para>

<para><userinput>--with-as and --with-ld:</userinput> GCC peut être mal compilé
si le package Binutils de votre distribution hôte est assez ancien. Nous avons
besoin d'un GCC fonctionnel et compilé statiquement jusqu'à ce que nous
réinstallions GCC plus tard lors du chapitre 6. Donc en utilisant
<filename>as</filename> et <filename>ld</filename> du package Binutils que nous
venons de compiler, nous nous assurons que GCC fonctionnera correctement.</para>

<para><userinput>make BOOT_LDFLAGS="-static" : </userinput>
Ceci est équivalent à make LDFLAGS="-static" que nous utilisons pour d'autres
packages pour les compiler statiquement.</para>

<para><userinput>make install-no-fixedincludes:</userinput> Ceci empêche le
script fixincludes de s'exécuter. C'est nécessaire parce que, dans des
conditions normales, l'installation de GCC lance le script fixincludes qui
recherche sur votre système les fichiers d'entête qui ont besoin d'être corrigé.
Il peut trouvé que les fichiers d'entête de Glibc du système hôte doivent être
corrigés. Dans ce cas, il les corrigera et les placera sous
<filename>$LFS/static/lib/gcc-lib/i686-pc-linux-gnu/3.2</filename>. Plus tard
dans le chapitre 6, vous installerez Glibc qui placera ses fichiers d'entête
dans <filename>/usr/include</filename>. Après, vous installerez d'autres
programmes qui utiliseront les entêtes Glibc. GCC cherchera dans
<filename>/static/lib/gcc-lib</filename> avant de regarder dans
<filename>/usr/include</filename>, ce qui fait qu'il trouvera et utilisera les
fichiers d'entête corrigés de Glibc de votre distribution hôte, qui seront
probablement incompatibles avec la version de Glibc actuellement utilisée sur le
système LFS.</para>

<para><userinput>ln -s gcc $LFS/static/bin/cc : </userinput> Ceci crée le lien
symbolique $LFS/static/bin/gcc, dont certains packages ont besoin.</para>

</sect2>

