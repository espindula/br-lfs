<sect2>
<title>Explication des commandes</title>

<para><userinput>patch -Np1 -i ../gcc-&gcc-patch-version;.patch:</userinput>
Ce patch corrige quelques problèmes. Voir
<ulink url="http://www.zipworld.com.au/~gschafer/lfs-tweaks.html"/> pour plus
d'informations.</para>

<para><userinput>--prefix=/static:</userinput> Ce n'est PAS une erreur de frappe. GCC 
garde en dur certains chemins lors de la compilation et nous devons donc donner /usr 
lors du ./configure. Nous donnons le vrai préfixe du chemin d'installation plus tard 
lors de la commande make install.</para>

<para><userinput>--enable-languages=c:</userinput> Ceci crée le compilateur C. Le
compilateur C++ sera construit lors du chapitre 6, quand nous reconstruirons GCC.
D'autres compilateurs sont aussi disponibles. Si ils vous sont nécessaires, le
paramètre --enable-languages peut être omis.</para>

<para><userinput>--enable-threads=posix:</userinput> Ceci permet la gestion des 
exceptions C++ pour le code multithread.</para>

<para><userinput>--enable-__cxa-atexit:</userinput> Cette option permet aux
bibliothèques partagées C++ et aux programmes C++ d'être interopérable avec
d'autres distributions linux.</para>

<para><userinput>make BOOT_LDFLAGS=-static:</userinput>
Ceci est équivalent à make LDFLAGS=-static que nous utilisons pour d'autres
packages pour les compiler statiquement.</para>

<para><userinput>ln -s gcc $LFS/static/bin/cc:</userinput> Ceci crée
le lien symbolique $LFS/static/bin/gcc dont certains packages ont besoin.</para>

</sect2>

