<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>
<sect1 id="ch-tools-glibc" role="wrap">
<title>Glibc-&glibc-version;</title>
<?dbhtml filename="glibc.html"?>

<indexterm zone="ch-tools-glibc">
<primary sortas="a-Glibc">Glibc</primary>
<secondary>outils</secondary></indexterm>

<sect2 role="package"><title/>
<xi:include xmlns:xi="http://www.w3.org/2003/XInclude" href="../chapter06/glibc.xml" xpointer="xpointer(/sect1/sect2[1]/para[1])"/>

<segmentedlist>
<segtitle>&buildtime;</segtitle>
<segtitle>&diskspace;</segtitle>
<seglistitem><seg>11,8&nbsp;SBU</seg><seg>454&nbsp;Mo</seg></seglistitem>
</segmentedlist>

<xi:include xmlns:xi="http://www.w3.org/2003/XInclude" href="../chapter06/glibc.xml" xpointer="xpointer(/sect1/sect2[1]/segmentedlist[2])"/>

</sect2>

<sect2 role="installation">
<title>Installation de Glibc</title>

<para>Ce paquet est connu pour avoir des soucis quand les options d'optimisation
par défaut (en incluant les options <parameter>-march</parameter> et
<parameter>-mcpu</parameter>) sont modifiées. Donc, si des variables d'environnement
qui surchargent les optimisations par défaut, telles que <envar>CFLAGS</envar>
et <envar>CXXFLAGS</envar>, ont été définies, supprimez cette initialisation
pour la construction de Glibc.</para>

<para>Il devrait être noté que compiler Glibc de toute autre façon que celle
proposée par le livre compromet la stabilité du système.</para>

<para>Glibc échoue sur deux tests lorsque le noyau en cours d'exécution est
le 2.6.11 ou ultérieures. Le problème est dû aux tests eux-mêmes et n'a rien à
voir avec la bibliothèque C ou le noyau. Si vous planifiez d'exécuter la suite
de tests, appliquez ce correctif&nbsp;:</para>

<screen><userinput>patch -Np1 -i ../&glibc-testfix-patch;</userinput></screen>

<para>La documentation de Glibc recommande de construire Glibc en dehors du
répertoire des sources, c'est-à-dire dans un répertoire dédié&nbsp;:</para>

<screen><userinput>mkdir -v ../glibc-build
cd ../glibc-build</userinput></screen>

<para>Ensuite, préparez la compilation de Glibc&nbsp;:</para>

<screen><userinput>../glibc-&glibc-version;/configure --prefix=/tools \
    --disable-profile --enable-add-ons \
    --enable-kernel=2.6.0 --with-binutils=/tools/bin \
    --without-gd --with-headers=/tools/include \
    --without-selinux</userinput></screen>

<para>Voici la signification des options de configure&nbsp;:</para>

<variablelist>
<varlistentry>
<term><parameter>--disable-profile</parameter></term>
<listitem><para>Ceci construit les bibliothèques sans les informations de
profilage. Enlevez cette option si le profilage sur les outils temporaires est
nécessaire.</para></listitem>
</varlistentry>

<varlistentry>
<term><parameter>--enable-add-ons</parameter></term>
<listitem><para>Ceci indique à Glibc d'utiliser le composant NPTL comme
bibliothèque de threads.</para></listitem>
</varlistentry>

<varlistentry>
<term><parameter>--enable-kernel=2.6.0</parameter></term>
<listitem><para>Ceci indique à Glibc de compiler la bibliothèque avec le support
des noyaux 2.6.x.</para><beginpage/></listitem>
</varlistentry>

<varlistentry>
<term><parameter>--with-binutils=/tools/bin</parameter></term>
<listitem><para>Bien que pas nécessaire, ce commutateur nous assure qu'il ne
reste aucune erreur provenant des programmes Binutils lors de la construction
de Glibc.</para></listitem>
</varlistentry>

<varlistentry>
<term><parameter>--without-gd</parameter></term>
<listitem><para>Ce commutateur empêche la construction du programme
<command>memusagestat</command>, programme qui insiste pour être lié avec les
bibliothèques de l'hôte (libgd, libpng, libz et ainsi de suite).</para></listitem>
</varlistentry>

<varlistentry>
<term><parameter>--with-headers=/tools/include</parameter></term>
<listitem><para>Ceci indique à Glibc de se compiler lui-même avec les en-têtes
récemment installés dans le répertoire des outils, de façon à ce qu'il sache
exactement de quelles fonctionnalités disposent le noyau et qu'il puisse
s'optimiser correctement.</para></listitem>
</varlistentry>

<varlistentry>
<term><parameter>--without-selinux</parameter></term>
<listitem><para>Lors de la construction à partir d'hôtes qui incluent la
fonctionnalité SELinux (par exemple Fedora Core 3), Glibc construira le support
pour SELinux. Comme l'environnement d'outils LFS ne contient pas de support
pour SELinux, une Glibc compilée avec ce support ne fonctionnera pas
correctement.</para></listitem>
</varlistentry>
</variablelist>

<para>Lors de cette étape, le message d'avertissement suivant peut
apparaître&nbsp;:</para>

<blockquote><screen><computeroutput>configure: WARNING:
*** These auxiliary programs are missing or 
*** incompatible versions: msgfmt
*** some features will be disabled.
*** Check the INSTALL file for required versions.</computeroutput></screen></blockquote>

<para>Le programme <command>msgfmt</command>, manquant ou incompatible, ne
pose généralement pas de problème mais certaines personnes pensent qu'il peut
poser problème lors de l'exécution de la suite de tests. Ce programme
<command>msgfmt</command> fait partie du paquet Gettext que la distribution hôte
devrait fournir. Si <command>msgfmt</command> est présent mais semble
incompatible, mettez à jour le paquet Gettext du système hôte ou continuez sans
et voyez si la suite de tests continue son exécution sans problèmes.</para>

<para>Compilez le paquet&nbsp;:</para>

<screen><userinput>make</userinput></screen>

<para>La compilation est maintenant terminée. Comme dit plus tôt, lancer les
suites de tests pour les outils temporaires de ce chapitre n'est pas nécessaire.
Pour exécuter la suite de tests Glibc, si désiré, lancer la commande
suivante&nbsp;:</para>

<screen><userinput>make check</userinput></screen>

<para>Pour une discussion sur les échecs de tests qui ont une importance
particulière, merci de voir <xref linkend="ch-system-glibc" role="."/></para>

<para>Dans ce chapitre, certains tests peuvent être perturbés par des outils
existants ou par des problèmes d'environnement sur le système hôte. Les échecs
de la suite de tests de Glibc dans ce chapitre ne portent typiquement pas à
conséquence. La bibliothèque Glibc installée dans <xref
linkend="chapter-building-system"/> est celle qui sera utilisée à la fin, donc
c'est celle qui aura besoin de passer la plupart des tests (y compris dans <xref
linkend="chapter-building-system"/>, certains échecs pourraient survenir, par
exemple celui des mathématiques).</para>

<para>Si vous expérimentez un échec, prenez-en note puis continuez en
ré-exécutant la commande <command>make check</command>. La suite de tests devrait
reprendre là où elle a quitté précédemment. Cette séquence d'arrêt/relancement
est annulée en lançant la commande <command>make -k check</command>. En
utilisant cette option, assurez-vous de tracer la sortie pour que le journal des
traces puisse être examiné plus tard pour les différents échecs.</para>

<beginpage/>
<para>L'étape d'installation de Glibc affichera un message d'avertissement sans
conséquence pour l'absence de <filename>/tools/etc/ld.so.conf</filename>.
Supprimez ce message avec&nbsp;:</para>

<screen><userinput>mkdir -v /tools/etc
touch /tools/etc/ld.so.conf</userinput></screen>

<para>Installez le paquet&nbsp;:</para>

<screen><userinput>make install</userinput></screen>

<para>Différents pays et cultures ont des conventions variables sur la façon de
communiquer. Ces conventions vont du très simple, telle que la représentation de
la date et de l'heure à du très compliqué, telle que le langage parlé.
L'internationalisation des programmes GNU fonctionne en utilisant les
locales.</para>

<note><para>Si les suites de tests ne seront pas exécutés dans ce chapitre
(suivant ainsi notre recommandation), il y a peu d'intérêts à installer les
locales maintenant. Les bonnes locales seront installées dans le chapitre
suivant.</para></note>

<para>Néanmoins, pour installer les locales Glibc, utilisez la commande
suivante&nbsp;:</para>

<screen role="nodump"><userinput>make localedata/install-locales</userinput></screen>

<para>Pour gagner du temps, une alternative au lancement de la commande
précédente (qui génère et installe chaque locale que Glibc connaît) est
d'installer seulement les locales voulues et nécessaires. Ceci peut se faire
en utilisant la commande <command>localedef</command>. Des informations sur
cette commande sont situées dans le fichier <filename>INSTALL</filename> des
sources de Glibc. Néanmoins, il existe un certain nombre de locales essentielles
pour réussir les tests des futurs paquets, en particulier les tests de
<emphasis>libstdc++</emphasis> pour GCC. Les instructions suivantes installeront
l'ensemble minimale de locales nécessaires pour que les tests réussissent&nbsp;:</para>

<screen><userinput>mkdir -pv /tools/lib/locale
localedef -i de_DE -f ISO-8859-1 de_DE
localedef -i de_DE@euro -f ISO-8859-15 de_DE@euro
localedef -i en_HK -f ISO-8859-1 en_HK
localedef -i en_PH -f ISO-8859-1 en_PH
localedef -i en_US -f ISO-8859-1 en_US
localedef -i es_MX -f ISO-8859-1 es_MX
localedef -i fa_IR -f UTF-8 fa_IR
localedef -i fr_FR -f ISO-8859-1 fr_FR
localedef -i fr_FR@euro -f ISO-8859-15 fr_FR@euro
localedef -i it_IT -f ISO-8859-1 it_IT
localedef -i ja_JP -f EUC-JP ja_JP</userinput></screen>

</sect2>

<sect2 role="content"><title/>
<para>Les détails sur ce paquet sont situés dans <xref
linkend="contents-glibc" role="."/></para>
</sect2>

</sect1>

