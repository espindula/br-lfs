<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-tools-adjusting">
  <?dbhtml filename="adjusting.html"?>

  <title>Ajuster l'ensemble d'outils</title>

  <para>Maintenant qu'on a installé les bibliothèques C temporaires, tous les
  outils qui seront compilés dans le reste de ce chapitre devraient s'y lier.
  Pour cela, il faut ajuster le fichier specs des compilateurs croisés pour
  pointer vers le nouvel éditeur de liens dynamiques dans
  <filename class="directory">/tools</filename>.</para>

  <para>Cela se fait en envoyant le fichier <quote>specs</quote> du compilateur
  croisé à un endroit où il sera cherché par défaut. Une simple substitution
  A <command>sed</command> modifie l'écjteur de liens dynamiques qu'utilisera GCC.
  Le principe, ici, consiste à trouver toutes les références au fichier de l'éditeur
  de liens dynamiques dans <filename class="directory">/lib</filename>, ou
  éventuellement <filename class="directory">/lib64</filename> si le système hôte
  est 64 bits, et à les ajuster pour pointer vers le nouvel endroit dans
  <filename class="directory">/tools</filename>.</para>

  <para>Pour être soigneux, il est recommandé d'utiliser une méthode copier/coller
  en lançant la commande suivante. Assurez-vous d'examiner visuellement le fichier
  specs pour vérifier que il a ajumté correctement toutes les références à
  l'emplacement de l'éditeur de liens. Reportez-vous à <xref
    linkend="ch-tools-toolchaintechnotes" role=","/> pour le nom par défaut de
    l'éditeur de liens dynamiques si besoin.</para>

<!-- Ampersands are needed to allow copy and paste -->
<screen><userinput>SPECS=`dirname $($LFS_TGT-gcc -print-libgcc-file-name)`/specs
$LFS_TGT-gcc -dumpspecs | sed \
  -e 's@/lib\(64\)\?/ld@/tools&amp;@g' \
  -e "/^\*cpp:$/{n;s,$, -isystem /tools/include,}" &gt; $SPECS 
echo "New specs file is: $SPECS"
unset SPECS</userinput></screen>

  <caution>
    <para>À ce stade, il est impératif de vous arrêter et de vous assurer que
    les fonctions de base (compiler et éditer les liens) du nouvel ensemble d'outils
    fonctionnent comme prévu. Pour effectuer un test de propreté, lancez les
    commandes suivantes&nbsp;:</para>

<screen><userinput>echo 'main(){}' &gt; dummy.c
$LFS_TGT-gcc -B/tools/lib dummy.c
readelf -l a.out | grep ': /tools'</userinput></screen>

    <para>Si tout fonctionne correctement, il ne devrait pas y avoir d'erreurs
    et la sortie de la dernière commande aura la forme&nbsp;:</para>

<screen><computeroutput>[Requesting program interpreter: /tools/lib/ld-linux.so.2]</computeroutput></screen>

    <para>Remarquez que <filename class="directory">/tools/lib</filename>, ou
    <filename class="directory">/tools/lib64</filename>, sur des machines 64 bits,
    apparaît comme le préfixe de l'éditeur de liens dynamiques.</para>

    <para>Si la sortie n'apparaît pas comme ci-dessus ou s'il n'y a pas de
    sortie, quelque chose ne va pas. Enquêtez et refaites les étapes pour trouver
    la source du problème et corrigez-le. Vous devez résoudre ce problème avant
    de continuer. Il se peut que quelque chose ne soit pas allé avec la modification
    du fichier specs ci-dessus. Dans ce cas refaites la modification du fichier
    specs, en faisant attention de copier/coller les commandes.</para>

    <para>Une fois que tout va bien, nettoyez les fichiers de test&nbsp;::</para>

<screen><userinput>rm -v dummy.c a.out</userinput></screen>

  </caution>

  <note><para>Construire Binutils dans la prochaine section servira comme vérification
  supplémentaire de la bonne mise en place de l'outil de construction. Si Binutils
  échoue à la construction, c'est une indication d'un problème avec les
  installations precedentes de Binutils, GCC ou Glibc.</para></note>

</sect1>
