<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>
<sect1 id="ch-scatter-how">
<title>Comment construire un système LFS</title>
<?dbhtml filename="how.html"?>

<para>Le système LFS sera construit en utilisant une distribution Linux déjà
installée (telle que Debian, Mandrake, Red Hat ou SuSE). Ce système Linux
existant (l'hôte) sera utilisé comme point de départ pour fournir certains
programmes nécessaires, ceci incluant un compilateur, un éditeur de liens et un
shell, pour construire le nouveau système. Sélectionnez l'option
<quote>développement</quote> (<foreignphrase>development</foreignphrase>) lors
de l'installation de la distribution pour disposer de ces outils.</para>

<para><xref linkend="chapter-partitioning"/> de ce livre décrit comment créer
une nouvelle partition native Linux et un système de fichiers,
c'est-à-dire un emplacement où le nouveau système LFS sera compilé et installé.
<xref linkend="chapter-getting-materials"/> explique quels paquets et
correctifs ont besoin d'être téléchargés pour construire un système LFS et
comment les stocker sur le nouveau système de fichiers.<xref
linkend="chapter-final-preps"/> discute de la configuration pour un
environnement de travail approprié. Merci de lire <xref
linkend="chapter-final-preps"/> avec attention car il explique plusieurs
problèmes importants dont le développeur doit être au courant avant de commencer
à travailler sur le <xref linkend="chapter-temporary-tools"/> et les chapitres
suivants.</para>

<para><xref linkend="chapter-temporary-tools"/> explique l'installation d'un
ensemble de paquets qui formera la suite de développement de base (ou ensemble
d'outils) utilisé pour construire le système réel dans <xref
linkend="chapter-building-system"/>. Certains de ces paquets sont nécessaires
pour résoudre des dépendances circulaires&mdash;par exemple, pour compiler un
compilateur, vous avez besoin d'un compilateur.</para>

<para><xref linkend="chapter-temporary-tools"/> montre aussi à l'utilisateur
comment construire une première passe de l'ensemble d'outils, incluant Binutils
et GCC (première passe signifiant basiquement que ces deux paquets principaux
seront installés une deuxième fois). Les programmes de ces paquets seront liés
statiquement pour être utilisé indépendamment du système hôte. La prochaine
étape est de construire Glibc, la bibliothèque C. Glibc sera compilé par les
programmes de l'ensemble d'outils, construits lors de la première passe.
Ensuite, une seconde passe de l'ensemble d'outils sera lancé. Cette fois,
l'ensemble d'outils sera lié dynamiquement avec la Glibc nouvellement
construite. Les paquets restant du <xref linkend="chapter-temporary-tools"/>
sont construit en utilisant l'ensemble d'outils de cette deuxième passe.
Lorsque ceci est fait, le processus d'installation de LFS ne dépendra plus de
la distribution hôte, à l'exception du noyau en cours d'exécution.</para>

<para>Alors que ceci pourrait sembler être beaucoup de travail pour
simplement s'éloigner de la distribution hôte, une explication technique
complète est fournie au début du <xref linkend="chapter-temporary-tools"/>, en
incluant les notes sur les différences entre les programmes liés statiquement
et ceux liés dynamiquement.</para>

<para>Dans le <xref linkend="chapter-building-system"/>, le système LFS complet
est construit. Le programme chroot (changement de racine) est utilisé pour
entrer dans un environnement virtuel et pour lancer un nouveau shell dont le
répertoire racine sera initialisé à la partition LFS. Ceci est très similaire à
redémarrer et à instruire le noyau de monter la partition LFS comme partition
racine. Le système ne redémarre pas réellement mais change la racine parce que
la création d'un système démarrable réclame un travail supplémentaire qui n'est
pas encore nécessaire. L'avantage principal est que <quote>chroot</quote>
permet à l'utilisateur de continuer à utiliser l'hôte pendant la construction
de LFS. En attendant que la compilation d'un paquet se termine, un utilisateur
peut passer sur une console virtuelle (VC) différente ou un bureau X et
continuer à utiliser son ordinateur comme d'habitude.</para>

<para>Pour terminer l'installation, les scripts de démarrage sont configurés
dans le <xref linkend="chapter-bootscripts"/>, et le noyau et le chargeur du
démarrage sont configurés dans le <xref linkend="chapter-bootable"/>. <xref
linkend="chapter-finalizing"/> contient des informations sur la suite de
l'expérience LFS après ce livre. Après l'implémentation des étapes de ce livre,
l'ordinateur sera prêt à redémarrer dans le nouveau système LFS.</para>

<para>Voici rapidement le processus. Des informations détaillées sur chaque
étape sont discutées dans les chapitres suivants avec les descriptions des
paquets. Les éléments qui pourraient semblés compliqués seront clarifiés et
tout ira à sa place alors que le développeur s'embarque pour l'aventure
LFS.</para>

</sect1>
