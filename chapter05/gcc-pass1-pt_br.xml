<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-tools-gcc-pass1" role="wrap" xreflabel="gcc-pass1">
  <?dbhtml filename="gcc-pass1-pt_br.html"?>

<!--

Direitos autorais (Copyright): (c) 2022 Jamenson Ferreira Espindula de Almeida Melo (<jafesp@gmail.com>).

Direitos autorais da versão modificada traduzida para a língua 
portuguesa escrita e falada no Brasil: (c) 2022 Jamenson Ferreira 
Espindula de Almeida Melo (<jafesp@gmail.com>).

  Este trabalho de tradução do livro "Linux From Scratch" é classificado
  pela Free Software Foundation como sendo uma "versão modificada" do
  mencionado livro.  Em assim sendo, na qualidade de tradutor, produtor
  da "versão modificada" e titular dos direitos autorais sobre a versão
  traduzida para a língua portuguesa do livro "Linux From Scratch",
  concede-se a seguinte permissão:

  É concedida permissão para copiar, distribuir e (ou) modificar este
  livro "Linux From Scratch", versão traduzida para a língua portuguesa,
  sob os termos da Licença de Documentação Livre GNU, versão 1.3 ou
  qualquer versão posterior publicada pela Free Software Foundation; sem
  Seções Invariantes, sem Textos de Capa Frontal e sem Textos de Quarta
  Capa.  Uma cópia da licença está incluída na seção intitulada "Licença
  de Documentação Livre GNU".

# Atenção: todos os documentos aqui publicados são distribuídos sem qualquer garantia, implícita e (ou) explícita.

  Permission is granted to copy, distribute and (or) modify this book
  "Linux From Scratch", translated into Brazilian Portuguese, under the
  terms of the GNU Free Documentation License, Version 1.3 or any later
  version published by the Free Software Foundation; with no Invariant
  Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of
  the license is included in the section entitled "GNU Free
  Documentation License".

# Warning: all the files herein published are released with no warranty, implicit and (or) explicit.
-->

  <sect1info condition="script">
    <productname>gcc-pass1</productname>
    <productnumber>&gcc-version;</productnumber>
    <address>&gcc-url;</address>
  </sect1info>

  <title>GCC-&gcc-version; - Passagem 1</title>

  <indexterm zone="ch-tools-gcc-pass1">
    <primary sortas="a-GCC">GCC</primary>
    <secondary>tools, pass 1</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../chapter08/gcc-pt_br.xml" xpointer="xpointer(/sect1/sect2[1]/para[1])"/>

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&gcc-tmpp1-sbu;</seg>
        <seg>&gcc-tmpp1-du;</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Instalação de GCC Cruzado</title>

    <para>GCC exige os pacotes GMP, MPFR e MPC.  Uma vez que esses 
    pacotes talvez não estejam incluídos na sua distribuição anfitriã, 
    eles serão construídos com GCC.  Desempacote cada pacote dentro do 
    diretório de fonte de GCC e renomeie os diretórios resultantes de 
    forma que os procedimentos de construção de GCC automaticamente os 
    usarão:</para>

    <note>

      <para>Existem mal-entendidos frequentes sobre este capítulo.  Os 
      procedimentos são os mesmos que todos os outros capítulos 
      explicados anteriormente (<xref linkend='buildinstr'/>).  Primeiro 
      extraia o tarball de gcc a partir do diretório de fontes e então 
      mude para o diretório criado.  Somente então deveria você 
      prosseguir com as instruções abaixo.</para>

    </note>

<screen><userinput remap="pre">tar -xf ../mpfr-&mpfr-version;.tar.xz
mv -v mpfr-&mpfr-version; mpfr
tar -xf ../gmp-&gmp-version;.tar.xz
mv -v gmp-&gmp-version; gmp
tar -xf ../mpc-&mpc-version;.tar.gz
mv -v mpc-&mpc-version; mpc</userinput></screen>

    <para>Em anfitriões x86_64, configure o nome padrão de diretório 
    para bibliotecas de 64 bits para <quote>lib</quote>:</para>

<screen><userinput remap="pre">case $(uname -m) in
  x86_64)
    sed -e '/m64=/s/lib64/lib/' \
        -i.orig gcc/config/i386/t-linux64
 ;;
esac</userinput></screen>

    <para>A documentação de GCC recomenda construir GCC em um diretório 
    de construção dedicado:</para>

<screen><userinput remap="pre">mkdir -v build
cd       build</userinput></screen>

    <para>Prepare GCC para compilação:</para>

<screen><userinput remap="configure">../configure                  \
    --target=$LFS_TGT         \
    --prefix=$LFS/tools       \
    --with-glibc-version=&glibc-version; \
    --with-sysroot=$LFS       \
    --with-newlib             \
    --without-headers         \
    --disable-nls             \
    --disable-shared          \
    --disable-multilib        \
    --disable-decimal-float   \
    --disable-threads         \
    --disable-libatomic       \
    --disable-libgomp         \
    --disable-libquadmath     \
    --disable-libssp          \
    --disable-libvtv          \
    --disable-libstdcxx       \
    --enable-languages=c,c++</userinput></screen>

    <variablelist>

      <title>O significado das opções de configure:</title>

      <varlistentry>
        <term><parameter>--with-glibc-version=&glibc-version;</parameter></term>
        <listitem>

          <para>Essa opção especifica a versão de glibc a qual será 
          usada no alvo.  Ela não é relevante para a libc da distro 
          anfitriã, pois tudo compilado por gcc passagem 1 executará no 
          ambiente chroot, o qual é isolado de libc da distro 
          anfitriã.</para>

        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--with-newlib</parameter></term>
        <listitem>

          <para>Uma vez que uma biblioteca C funcional ainda não está 
          disponível, isso assegura que a constante inhibit_libc esteja 
          definida quando da construção de libgcc.  Isso evita a 
          compilação de qualquer código que exija suporte de 
          libc.</para>

        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--without-headers</parameter></term>
        <listitem>

          <para>Quando da criação de um compilador cruzado completo, GCC 
          exige cabeçalhos padrão compatíveis com o sistema alvo.  Para 
          nossos propósitos esses cabeçalhos não serão necessários.  
          Essa chave evita que GCC procure por eles.</para>

        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--disable-shared</parameter></term>
        <listitem>

          <para>Essa chave força GCC a vincular suas bibliotecas 
          internas estaticamente.  Nós precisamos disso, pois as 
          bibliotecas compartilhadas exigem glibc, que ainda não está 
          instalado no sistema alvo.</para>

        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--disable-multilib</parameter></term>
        <listitem>

          <para>Em x86_64, LFS não suporta uma configuração multilib.  
          Essa chave é inofensiva para x86.</para>

        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--disable-decimal-float, --disable-threads,
              --disable-libatomic, --disable-libgomp,
        --disable-libquadmath, --disable-libssp, --disable-libvtv,
        --disable-libstdcxx</parameter></term>
        <listitem>

          <para>Essas chaves desabilitam suporte para a extensão de 
          ponto flutuante decimal, threading, libatomic, libgomp, 
          libquadmath, libssp, libvtv, e a biblioteca padrão C++ 
          respectivamente.  Essas características falharão na compilação 
          quando da construção de um compilador cruzado e não são 
          necessárias para a tarefa de compilar cruzadamente a libc 
          temporária.</para>

        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--enable-languages=c,c++</parameter></term>
        <listitem>

          <para>Essa opção garante que apenas os compiladores C e C++ 
          sejam construídos. Essas são as únicas linguagens necessárias 
          agora.</para>

        </listitem>
      </varlistentry>

    </variablelist>

    <para>Compile GCC executando:</para>

<screen><userinput remap="make">make</userinput></screen>

    <para>Instale o pacote:</para>

    <screen><userinput remap="install">make install</userinput></screen>

    <para>Essa construção de GCC instalou um par de cabeçalhos internos 
    de sistema.  Normalmente um deles, <filename>limits.h</filename>, 
    sequencialmente incluiria o cabeçalho <filename>limits.h</filename> 
    de sistema correspondente, nesse caso, 
    <filename>$LFS/usr/include/limits.h</filename>.  Entretanto, ao 
    tempo dessa construção de GCC, 
    <filename>$LFS/usr/include/limits.h</filename> não existe, de forma 
    que o cabeçalho interno recém instalado é um arquivo parcial, 
    autocontido, e não inclui as características estendidas do cabeçalho 
    de sistema.  Isso é adequado para a construção de glibc, porém o 
    cabeçalho interno completo será necessário mais tarde.  Crie uma 
    versão completa do cabeçalho interno usando um comando que é 
    idêntico ao que o sistema de construção de GCC faz em circunstâncias 
    normais:</para>

<screen><userinput remap="install">cd ..
cat gcc/limitx.h gcc/glimits.h gcc/limity.h > \
  `dirname $($LFS_TGT-gcc -print-libgcc-file-name)`/install-tools/include/limits.h</userinput></screen>
  </sect2>

  <sect2 role="content">
    <title/>

    <para>Detalhes acerca deste pacote estão localizados em <xref 
    linkend="contents-gcc" role="."/></para>

  </sect2>

</sect1>
