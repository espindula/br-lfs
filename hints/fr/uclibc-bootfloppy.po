# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-09-02 09:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:2
msgid "AUTHOR:\t\tCsaba Henk <ekho@math-inst.hu>"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:4
msgid "DATE: 2003-10-27"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:6
msgid "LICENSE: The MIT License"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:8
msgid "SYNOPSIS: Making an uClibc-based bootfloppy"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:10
msgid "PRIMARY URI: http://www.math-inst.hu/~ekho/lowlife/"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:14
msgid ""
"DESCRIPTION: This hints shows how to create a cutting-edge bootfloppy from "
"scratch, based on uClibc, a lightweight C library."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:19
msgid ""
"PREREQUISITES: This hint should be useable on any not too aged Linux "
"installation with a non-broken toolchain. It was tested on a (by and large) "
"LFS-4.0 system. The sudo utility is advised to have."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:25
msgid ""
"ATTACHMENTS: "
"http://www.linuxfromscratch.org/hints/downloads/attachments/uclibc-bootfloppy/busybox-0.60.5-Config.h "
"http://www.linuxfromscratch.org/hints/downloads/attachments/uclibc-bootfloppy/linux-2.4.22-.config "
"http://www.linuxfromscratch.org/hints/downloads/attachments/uclibc-bootfloppy/mkbootdisk "
"http://www.linuxfromscratch.org/patches/downloads/devfsd/devfsd-1.3.25-uclibc-1.patch"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:27
msgid "HINT:"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:29
#, no-wrap
msgid ""
"Contents\n"
"--------\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:45
msgid ""
"Preface Introduction What do we need? The concept Setting up the development "
"environment Compiling the linux kernel Installing uClibc on the development "
"platform Creating the root filesystem Installing uClibc for the bootdisk "
"Installing busybox Installing gpm Other programs Creating the bootdisk Bugs "
"and weirdnesses, todo"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:47
#, no-wrap
msgid ""
"Preface\n"
"-------\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:51
#, no-wrap
msgid ""
"* This hint is co-developed with the svnc-thinclient hint in the\n"
"framework of the lowlife project,\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:53 origin/uclibc-bootfloppy.txt:518
msgid "http://www.math-inst.hu/~ekho/lowlife/"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:55
msgid "This file belongs to lowlife-0.5.1."
msgstr ""

#. type: Bullet: '* '
#: origin/uclibc-bootfloppy.txt:57
msgid "For the most recent version check out"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:59
msgid "http://www.math-inst.hu/~ekho/lowlife/uclibc-bootfloppy.txt"
msgstr ""

#. type: Bullet: '* '
#: origin/uclibc-bootfloppy.txt:61
msgid "Comments, ideas, critics, flames are welcome."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:69
#, no-wrap
msgid ""
"* (If you are an LFS user, you can skip this.) Although this document is\n"
"formally an LFS hint, you can see use of it without knowing what LFS is\n"
"(I tried to write it keeping this possibility in mind). Anyway, I\n"
"recommend you to check out what LFS is. If you are not familiar with\n"
"compiling source code in unix/linux environment, then there is no use of\n"
"going on without checking out what LFS is. Consult the following docs\n"
"first:\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:74
msgid ""
"http://www.linuxfromscratch.org/lfs/whatislfs.html "
"http://www.linuxfromscratch.org/faq/ "
"http://www.linuxfromscratch.org/hints/downloads/files/essential_prereading.txt "
"http://www.linuxfromscratch.org/lfs/view/stable/preface/prerequisites.html"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:76
#, no-wrap
msgid ""
"Introduction\n"
"------------\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:80
msgid ""
"When you are to put together a Linux bootfloppy, you need to decide what "
"implementation of the standard C libraries will you use."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:86
msgid ""
"One possibility is using the C library implementation which is common on "
"Linux based systems: glibc. It's advantage is that you have it at hand: to "
"make a glibc-based bootfloppy, the only thing you have to do is to is to "
"copy the necessary libs to the filesystem you will put on the floppy.  This "
"is way chosen by the rescue floppy described in the BLFS-book:"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:88
msgid "http://linuxfromscratch.org/blfs/view/test/postlfs/bootdisk.html"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:93
msgid ""
"However, glibc is far from being lightweight, and eats up much of the rather "
"limited space you have when working with a floppy. So you might like seek "
"for an alternative which suits much better to the capabilities of the floppy "
"environment."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:96
msgid ""
"Here we will create a bootfloppy based on the uClibc C library, which is "
"just made for such purposes."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:107
msgid ""
"The bootfloppy will be cutting edge: uses uClibc and Busybox which are "
"actively developed projects for the embedded platform. Moreover, I used a "
"kernel from the 2.4.* branch (but feel free to use other kernel "
"releases). It is a good question to ask whether this is useful: many floppy "
"distros use older kernels for reducing resource usage. I can say the "
"following: on the one hand, I can afford using a recent kernel as my "
"bootfloppy merrily runs on my 486 with 8M RAM; on the other hand, from the "
"moment I began to use this up-to-date stuff, the problems with handling the "
"terminal buffer and plip timeouts vanished. So unless you are really tight "
"in resources, I think using a recent kernel is a good idea."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:110
msgid ""
"We will also use some kind of development environment, just to stay on the "
"safe side."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:114
msgid ""
"This hint has a continuation: there we will describe how to install the svga "
"vncviewer on the bootfloppy, which then becomes capable of turning a machine "
"to an X terminal. (Check out the svnc-thinclient hint:"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:117
msgid ""
"http://www.linuxfromscratch.org/hints/downloads/files/svnc-thinclient.txt "
"http://www.math-inst.hu/~ekho/lowlife/svnc-thinclient.txt"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:119
msgid ")"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:122
msgid ""
"Additional info and downloadable bootdisk image with svnc can be found at "
"the lowlife homepage (or at its mirror):"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:125
msgid ""
"http://www.math-inst.hu/~ekho/lowlife/ "
"http://www.personal.ceu.hu/students/01/Csaba_Henk/lowlife/"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:131
msgid ""
"In this hint the assumption of using an x86 PC (both for making and booting "
"the floppy) and gcc is set. You may try to port it to another architecture / "
"compiler. Doing it on another architecture should not be hard. Doing it with "
"another compiler depends on how much does uClibc support that compiler."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:136
msgid ""
"If you copy command from this hint to your shell, be careful that "
"line-terminating backslashes (\\) keep their position (no whitespace "
"characters should follow them). A possible solution is open this hint in the "
"Vim GUI, and copy'n'paste from there."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:138
#, no-wrap
msgid ""
"What do we need?\n"
"----------------\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:144
msgid ""
"We will need the following programs; in general, most recent stable versions "
"are recommended. Those programs where I have a certain important comment on "
"the version are marked with (!) and you can find the comment at the "
"beginning of the respective install instructons."
msgstr ""

#. type: Bullet: '* '
#: origin/uclibc-bootfloppy.txt:146
msgid "Addons for the development platform:"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:149
#, no-wrap
msgid ""
"sudo (optional)\n"
" ftp://ftp.sudo.ws/pub/sudo/\n"
msgstr ""

#. type: Bullet: '* '
#: origin/uclibc-bootfloppy.txt:151
msgid "Programs for the bootfloppy:"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:160
#, no-wrap
msgid ""
"linux-2.4.* (!)\n"
" http://www.kernel.org\n"
"uClibc\n"
" http://www.uclibc.org/downloads/\n"
"busybox-0.60.5 (!)\n"
" http://www.busybox.net/downloads/\n"
"gpm (optional)\n"
" ftp://arcana.linux.it/pub/gpm\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:162
#, no-wrap
msgid ""
"The concept\n"
"-----------\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:167
msgid ""
"In LFS, bootstrapping a linux system goes in the following fashion: one "
"first installs kernel headers, then builds a toolchain against these "
"headers, finally builds a kernel using the shiny new toolchain."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:172
msgid ""
"We don't need to produce a new toolchain: we will use the one of the host "
"distro (to which we'll refer as \"development environment\") (though when "
"making the userspace of our tiny linux system, we will access that toolchain "
"via the uClibc wrappers)."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:176
msgid ""
"This lets us to proceed in a much simpler way: first we compile the kernel, "
"then build uClibc using the headers of this kernel, finally build the "
"userspace against uClibc."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:181
msgid ""
"We will use optimization for size (we'll pass the -Os flag to gcc). In "
"general you can delete sources after compilation if there is no specific "
"reasons to keep them. In those cases when you should *not* delete the source "
"I'll tell about it explicitly."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:183
#, no-wrap
msgid ""
"Setting up the development environment\n"
"--------------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:190
msgid ""
"We definitely need some kind of development environment to protect us from "
"mucking up our system; eg., if we are in the file system which we will put "
"on the floppy, it is very easy to mistake usr with /usr, and without such a "
"protection, you can imagine that this mistake can have serious "
"consequences..."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:194
msgid ""
"We will create a non-privileged user named bootdisk for doing the job. First "
"choose a home directory for bootdisk and store this value in "
"$BDISKHOME. Then type:"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:203
msgid ""
"groupadd bootdisk && useradd -g bootdisk -s /bin/bash -d $BDISKHOME bootdisk "
"&& mkdir -p $BDISKHOME && cat > $BDISKHOME/.bash_profile << \"EOF\" export "
"CFLAGS=-Os export PATH=/usr/i386-linux-uclibc/bin/:$PATH:$HOME/bin export "
"CC=i386-uclibc-gcc EOF"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:207
msgid ""
"Of course, you may specify more cflags, like -march=i486. The above setting "
"of the $PATH variable assumes that the usual directories to be contained in "
"the path are already set in /etc/profile."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:211
msgid ""
"So the idea is that we will work as user bootdisk; however, there are some "
"tasks during the bootdisk creation which require a privileged user -- "
"namely, mounting ext2 files and raw-copying to a floppy."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:213
msgid "We can do two things about this problem:"
msgstr ""

#. type: Bullet: '1) '
#: origin/uclibc-bootfloppy.txt:215
msgid "Ignore it, and execute these tasks as root."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:220
#, no-wrap
msgid ""
"2) Make a script named mkbootdisk for doing this tasks. This script must\n"
"be executable only by root (mode 744). With the help of the sudo utility\n"
"we let the bootdisk user to use this script as well. That is, we put it\n"
"to $BDISKHOME/bin and then type:\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:223
msgid "echo \" bootdisk ALL = NOPASSWD: $BDISKHOME/bin/mkbootdisk\" >> /etc/sudoers"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:226
msgid "A realization of mkbootdisk can be found as an attachment of this hint at"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:228
msgid "http://www.linuxfromscratch.org/hints/downloads/attachments/uclibc-bootfloppy/"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:230 origin/uclibc-bootfloppy.txt:511
msgid "or at"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:232
msgid "http://www.math-inst.hu/~ekho/lowlife/mkbootdisk"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:235
msgid ""
"or in the current directory if you read this hint as a file of the lowlife "
"tarball avaliable at"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:237
msgid "http://www.math-inst.hu/~ekho/lowlife"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:239
msgid "Typing \"mkbootdisk -h\" will print a brief information on usage."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:242
msgid ""
"We have the desired environment. We go on compiling the programs. Become "
"user bootdisk:"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:244
msgid "su - bootdisk"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:247
msgid ""
"In the rest of the hint we will act as user bootdisk, with the following "
"exceptions:"
msgstr ""

#. type: Bullet: '* '
#: origin/uclibc-bootfloppy.txt:249
msgid "as uClibc will be installed systemwise, you should install it as root;"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:252
#, no-wrap
msgid ""
"* if you don't use a mkbootdisk script, then the appropriate actions\n"
"are to be done as root;\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:255
#, no-wrap
msgid ""
"* doing a chroot test of your filesystem for the floppy is possible only\n"
"as root.\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:261
msgid ""
"This means that if you use a mkbootdisk script, then those steps of creating "
"the bootfloppy which shouldn't affect your development platform, *can't* "
"affect the development platform (provided your mkbootdisk script doesn't do "
"anything weird, which I think is fulfilled by the one written by me)."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:267
msgid ""
"Some of the commands below assume that the actual source archive is "
"decompressed in $HOME (which is the same as the prior $BDISKHOME).  Software "
"installation instructions always start at the point when the source tarball "
"is already decompressed and you entered the source directory (unless we "
"explicitely claim to act differently)."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:269
#, no-wrap
msgid ""
"Compiling the linux kernel\n"
"--------------------------\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:279
msgid ""
"At the moment the latest stable release of the linux kernel belong to the "
"2.4.* branch, but 2.6.0-test* releases are already out. This situaton might "
"change any time by the release of linux-2.6.0. The following instructions "
"regard to the 2.4.* releases; if you want to try linux-2.6.*, not only the "
"kernel compilation instructions but the whole bootdisk creation procedure is "
"to be revised (eg., you can't boot a 2.6.* kernel without a boot "
"loader). After linux-2.6.0 will be out I might consider to upgrade this hint "
"to that version."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:285
msgid ""
"We will compile a network-aware kernel optimized to size. I don't give a "
"complete reference, I just highlight some crucial points.If you need not "
"network-awareness, you may omit TCP/IP netowrking and network drivers; but "
"even in this case it is strongly recommended to include \"Unix domain "
"sockets\"."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:287
msgid "In the kernel source tree type:"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:291
#, no-wrap
msgid ""
"sed -e 's%-O2%-Os%g' -e '/^CFLAGS_KERNEL/s%\\(^.*$\\)%\\1 -Os%' Makefile > "
"\\\n"
" Makefile.tmp &&\n"
"mv Makefile.tmp Makefile\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:294
msgid ""
"The above commands set optimization for size in the Makefile. Edit the "
"Makefile if you want further optimizations."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:299
msgid ""
"Now you should configure the kernel with \"make menuconfig\". Choose "
"carefully the value in the \"Processor type and features ---> Processor "
"family\" menupoint. When choosing options, it is advised to include only "
"those features you really need. Some important ones:"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:303
#, no-wrap
msgid ""
"Networking options  --->\n"
"\t<*> Unix domain sockets\n"
"\t[*] TCP/IP networking\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:307
msgid ""
"In the \"Network device support --->\" menupoint choose those network "
"drivers you intend to use. If you want to use plip, choose it as a module, "
"and also set:"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:311
#, no-wrap
msgid ""
"Parallel port support  --->\n"
"\t<*> Parallel port support\n"
"\t<M>   PC-style hardware\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:319
msgid ""
"This is advised because of the following: as I experienced, if no option is "
"given, the kernel initializes the parallel port (PC-style)  IRQ-less! At "
"boot time we won't have the possibility to pass options to the kernel, as we "
"won't use a boot loader or initrd. Thus we can set the appropriate IRQ value "
"only if we load the parallel port driver as module. Also, to gain more "
"control over the NIC drivers, consider building them as modules."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:321
msgid "In this hint we use the devfs facility, so choose"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:325
#, no-wrap
msgid ""
"File systems  --->\n"
"\t[*] /dev file system support\n"
"  \t[*]   Automatically mount at boot\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:327
msgid "(See a more detailed description in the devfs hint:"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:329
msgid "http://www.linuxfromscratch.org/hints/downloads/files/devfs+kernel_modules.txt"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:331
msgid ")."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:334
msgid ""
"And don't forget to include support for the mouse type you will use with the "
"bootfloppy (if you will use any)."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:341
msgid ""
"OK, one more remark. Here I don't digress on how to use initrd, but you may "
"have some reason for doing that. In this case with some kernels (eg., with "
"linux-2.4.22) you might encounter with booting problems, which can be cured "
"by the appropriate kernel patch. For info on initrd and the patch you can "
"consult the \"Creating a Custom Boot Disk\" chapter of the BLFS-book, "
"referenced in the Introduction."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:343
msgid "Now compile the kernel with the"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:345
msgid "make dep && make bzImage && make modules"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:347
msgid "commands. Then type"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:349
msgid "mkdir $HOME/rfloppy/lib/modules"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:354
msgid ""
"and copy the NIC driver modules from the drivers/net directory to "
"$HOME/rfloppy/lib/modules, and also the other modules you built. Eg., if you "
"use plip, you will need the drivers/parport/parport_pc.o module."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:356
msgid "Do not delete the kernel source."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:359
msgid ""
"If you have troubles with configuring the kernel properly, my .config file "
"might be of your help:"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:362
msgid ""
"http://www.linuxfromscratch.org/hints/downloads/attachments/uclibc-bootfloppy/ "
"http://www.math-inst.hu/~ekho/lowlife/linux-2.4.22/.config"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:364
#, no-wrap
msgid ""
"Installing uClibc on the development platform\n"
"---------------------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:368
msgid "Usually we will optimize to size; in case of uClibc it's done automatically."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:371
msgid ""
"We install uClibc systemwise, thus the commands of this installation are to "
"be executed as root."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:373
msgid "In the uClibc source tree type"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:375
msgid "make menuconfig"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:378
msgid ""
"uClibc now has a configuration interface similar to that of the linux "
"kernel. Apply the following settings:"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:384
#, no-wrap
msgid ""
"Target Architecture Features and Options  --->\n"
"\t($BDISKHOME/<dir of your linux kernel for the floppy>) \n"
"\t\tLinux kernel header location\n"
"Library Installation Options  --->\n"
"\t(/lib) Shared library loader path \n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:387
msgid ""
"This was enough for uClibc-0.9.19; in case of uClibc-0.9.21 we also need the "
"following:"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:392
#, no-wrap
msgid ""
"General Library Settings  --->\n"
"\t[ ] Support gprof profiling\n"
"String and Stdio Support  --->\n"
"\t[*] Support sys_siglist[] (bsd-compat)\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:396
msgid ""
"[Explanation: with profiling support set, uClibc wasn't willing to build for "
"me. The sys_siglist[] support will be needed by busybox which encorporates "
"some BSD code by having ash as its shell.]"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:398
msgid "(Other uClibc versions may have their own gotchas.)"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:403
msgid ""
"Apart from this, the default configuration is quite suitable, probably you "
"need not change anything (especially you need not use full math "
"support). However, taking a look at the options never hurts; eg., you may "
"consider fine-tuning the target processor type. After you exit,"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:406
msgid "make && make install"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:409
msgid ""
"Further on we assume that you installed uClibc into /usr/i386-linux-uclibc/ "
"(the default installation location)."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:411
#, no-wrap
msgid ""
"Creating the root filesystem\n"
"----------------------------\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:416
msgid ""
"We will put the files of the root filesysem of the floppy to a directory "
"named rfloppy. Firstly we create the directory and a basic tree of "
"subdirectories which vaguley resembles the FHS idea:"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:423
msgid ""
"cd && mkdir -p rfloppy/{dev,proc,etc/init.d,sbin,bin,lib,mnt,usr,var/log} && "
"cat > rfloppy/etc/init.d/rcS << \"EOF\" && #!/bin/sh mount proc /proc -t "
"proc EOF"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:427
msgid ""
"The etc/init.d/rcS file will be the startup script for the floppy. Put there "
"what you want to be done in the beginnig -- eg., syslogd, klogd, loading "
"modules, starting gpm, etc."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:431
msgid ""
"A very minimal etc directory is used in this setup. Enriching it (with files "
"like passwd, group, fstab, modules.conf, and so on) is up to you -- this "
"minimalist solution works anyway."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:433
#, no-wrap
msgid ""
"Installing uClibc for the bootdisk \n"
"----------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:436
msgid "We copy the necessary libraries of uClibc to the bootdisk."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:439
#, no-wrap
msgid ""
"cp -a /usr/i386-linux-uclibc/lib/{ld-uClibc*,libc.so.0,libuClibc-*} \\\n"
" ~/rfloppy/lib \n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:441
#, no-wrap
msgid ""
"Installing busybox\n"
"------------------\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:451
msgid ""
"At the moment busybox has two branches: the development branch (1.00-pre* "
"releases) and the stable branch (0.60.* releases), but this situation might "
"change any time by busybox-1.00 being released. The following instructions "
"regard to the 0.60.* versions. The 1.00-pre* versions differ greatly "
"(encorporate much more utilities, eg.), so if you go experimenting with "
"them, these instructions probably need to be changed.  When the now-devel "
"branch get stable (1.00 comes out), this document will probably be upgraded "
"to that version of busybox."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:454
msgid ""
"Before making it, adjust the Config.h file according to your needs. To make "
"busybox work with devfs, be sure that the"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:456
msgid "#define BB_FEATURE_DEVFS"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:460
msgid ""
"line is uncommented (not prefixed with \"//\"); and it is advised to enable "
"standard Unix utilities, moreover if you want to use network with the "
"floppy, consider uncommenting:"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:465
msgid ""
"#define BB_IFCONFIG #define BB_TELNET #define BB_TFTP #define "
"BB_FEATURE_IFCONFIG_STATUS"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:467
msgid "Then install it with"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:470
msgid "make CROSS=i386-uclibc- && make PREFIX=$HOME/rfloppy install"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:473
msgid ""
"If you have troubles with configuring busybox properly, my Config.h file "
"might be of your help:"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:476
msgid ""
"http://www.linuxfromscratch.org/hints/downloads/attachments/uclibc-bootfloppy/ "
"http://www.math-inst.hu/~ekho/lowlife/busybox-0.60.5/Config.h"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:478
#, no-wrap
msgid ""
"Installing gpm\n"
"--------------\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:483
msgid ""
"Having mouse at the console is not necessary, but very comfortable for a "
"bootfloppy as well. If you want it, install gpm by running the following "
"commands:"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:490
msgid ""
"./configure && LDFLAGS=\"-lm\" make && strip src/gpm && mkdir -p "
"$HOME/rfloppy/{usr/sbin,var/run} && cp src/gpm $HOME/rfloppy/usr/sbin && cp "
"-a /usr/i386-linux-uclibc/lib/{libm-*,libm.so.0} ~/rfloppy/lib"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:492
msgid "[The /var/run directory is needed for gpm at runtime.]"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:494
#, no-wrap
msgid ""
"Other programs\n"
"--------------\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:499
msgid ""
"Now if there is anything more you want to have on the floppy, compile it and "
"put it to the appropriate place under $HOME/rfloppy. A list of some possible "
"extensions:"
msgstr ""

#. type: Bullet: '* '
#: origin/uclibc-bootfloppy.txt:501
msgid "devfsd ("
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:503
msgid "http://ftp.kernel.org/pub/linux/daemons/devfsd/"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:507
msgid ""
") is not necessary for the bootfloppy, devfs work fine without it. So "
"install it only if you know what you are doing. However, it needs to be "
"hacked to get it compiled against uClibc. There is a patch for devfsd at:"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:509
msgid "http://www.linuxfromscratch.org/patches/downloads/devfsd/devfsd-1.3.25-uclibc.patch"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:513
msgid "http://www.math-inst.hu/~ekho/lowlife/patches/devfsd-1.3.25-uclibc.patch"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:516
msgid ""
"(or in the patches directory if you read this hint as a file of the lowlife "
"tarball) and you can find some explanation on it at"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:522
msgid ""
"Note that devfsd depends on the libdl.so.0 library of uClibc (which is a "
"symlink to libdl-0.9.*.so). You have to put these to the /lib of your "
"filesystem."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:526
#, no-wrap
msgid ""
"* The svnc-thinclient hint tells you how to compile and install svgalib\n"
"and the svga vncviewer to the floppy, giving the bootfloppy the\n"
"capabilities of an X terminal.\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:529
msgid ""
"The (functionality of the) following utilities are already encorporated in "
"the development versions of busybox."
msgstr ""

#. type: Bullet: '* '
#: origin/uclibc-bootfloppy.txt:531
msgid "You can put tinylogin ("
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:533
msgid "http://tinylogin.busybox.net/"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:537
msgid ""
") to the floppy if you want a correct login system on it (with the "
"configuration described in this hint you just get a prompt after booting)."
msgstr ""

#. type: Bullet: '* '
#: origin/uclibc-bootfloppy.txt:539
msgid "You can put utelnetd ("
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:541
msgid "http://www.pengutronix.de/software/utelnetd_en.html"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:544
msgid ""
") to the floppy if you want to access it remotely. However, don't forget "
"that communication is not encrypted under telnet!"
msgstr ""

#. type: Bullet: '* '
#: origin/uclibc-bootfloppy.txt:546
msgid "One more useful program is hdparm ("
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:548
msgid "http://ftp.ibiblio.org/pub/Linux/system/hardware"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:552
msgid ""
"): if you boot with this floppy, the harddisk is probably not used, but "
"still is a source of noise by its spinning. You can stop it with "
"hdparm. (See its -y option.)"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:554
#, no-wrap
msgid ""
"Creating the bootdisk\n"
"---------------------\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:558
msgid ""
"Before creating the floppy, you may wish to test the proposed filesystem by "
"chrooting to it; if so, execute as root:"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:560
msgid "chroot $BDISKHOME/rfloppy /bin/sh"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:564
msgid ""
"Typing this you get the prompt of the busybox shell, and you should be able "
"to run those utilities which do not require much I/O (ls, cat, "
"echo,...). Proceed on again as the bootdisk user."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:574
msgid ""
"Put a floppy to the floppy drive (if you are not sure about its integrity, "
"you might want to run fdformat on it). If you use my mkbootdisk script, "
"check whether the device name of the floppy drive is set correctly in the "
"script (it is set to /dev/fd0 and no option can change it, in order to "
"prevent the bootdisk user in being able to muck up the development "
"platform), and whether the $MKE2FSAPP, $RDEVAPP variables in the script "
"store the correct path to the mke2fs, rdev utilities in your system (they "
"should if you follow standards). If everything is fine, simply run"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:577
msgid "cd && sudo mkbootdisk"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:587
msgid ""
"If you don't use the mkbootdisk script, become root, store the name of your "
"floppy device (typically /dev/fd0) in the variable $DISK. Now its time to "
"find out how big the root filesystem of the floppy should be, and how much "
"inodes should it have. Concerning the size, I think the size of the stuff in "
"the rfloppy directory + 150k is enough; concerning the number of inodes, I "
"think the number of files in rfloppy + 100 is enough. But you should "
"know. Store the chosen filesystem size in the variable $SIZE (the number of "
"kilobytes), and the chosen number of inodes in the variable $INODES. Then "
"type the following:"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:599
msgid ""
"cd $BDISKHOME && # We we create and compress the root filesystem of the "
"floppy: dd if=/dev/zero of=rootfs bs=1k count=$SIZE && yes | mke2fs -m 0 -N "
"$INODES rootfs && mkdir -p loop && mount rootfs -o loop loop && rmdir "
"loop/lost+found && cp -a rfloppy/* loop && chown -R 0:0 loop/* && umount "
"loop && dd if=rootfs bs=1k | gzip -v9 > rootfs.gz"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:604
msgid ""
"Now check whether rootfs.gz and your kernel image (probably "
"linux-2.4.*/arch/i386/boot/bzImage) fit on a floppy together (a floppy is of "
"1440k usually but it can be formatted to bigger sizes as well). If "
"everything is fine, go on:"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:615
#, no-wrap
msgid ""
"# We copy the kernel to the floppy:\n"
"let KERNELSIZE=`dd bs=1k of=$DISK < linux-2.4.*/arch/i386/boot/bzImage 2>&1 "
"| \n"
" sed -n '1s%\\([0-9][0-9]*\\).*%\\1%p'`+1 &&\n"
"# We perform some adjustments on the kernel copied to the floppy:\n"
"rdev $DISK 0,0 &&\n"
"rdev -R $DISK 0 &&\n"
"rdev -r $DISK `expr 16384 + $KERNELSIZE` &&\n"
"# Finally we copy the compressed filesystem to its appropriate place \\\n"
"# on the floppy:\n"
"dd if=rootfs.gz of=$DISK bs=1k seek=$KERNELSIZE\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:618
msgid "[Explanation -- also for those who wonder how the mkbootdisk script works"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:620
msgid "\"yes | mke2fs -m 0 -N $INODES rootfs\":"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:623
msgid ""
"This pipe construct is a common trick for answering stupid questions "
"non-interactively."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:625
msgid "\"# We copy the kernel to the floppy\" :"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:629
msgid ""
"In the command after this comment we not only copy the kernel to floppy, but "
"we also store the number of transferred kb's in the variable $KERNELSIZE."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:631
msgid "\"# We perform some adjustments on the kernel copied to the floppy\" :"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:642
msgid ""
"We won't have a bootloader to tell the kernel where to find its root "
"filesystem. The commands after this comment set some specified bits in the "
"kernel, thus hardwiring the location of the root filesystem to it: firstly, "
"we tell the kernel to seek for the filesystem in the floppy, secondly, we "
"tell the kernel that a ramdisk is to be made and the filesystem is to be "
"decompressed to it, thirdly, we tell the kernel the location of the "
"filesystem within the floppy. The number 16384 = 2^14 is used for shifting "
"within the range of bits in the kernel devoted for describing these "
"data. For more information consult with the Bootdisk HOWTO available at "
"tldp.org."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:644
msgid "\"# Finally we copy [...]\" :"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:647
msgid ""
"In the dd command after this comment we use the seek option to copy the "
"compressed filesystem nicely after the kernel image.]"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:649
msgid "Now you have the floppy, boot & enjoy!"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:651
#, no-wrap
msgid ""
"Bugs and weirdnesses, todo\n"
"--------------------------\n"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:656 origin/uclibc-bootfloppy.txt:662 origin/uclibc-bootfloppy.txt:667
msgid ""
"This hint is co-developed with the svnc-thinclient hint in the framework of "
"the lowlife project. These informations can be found in the svnc-thinclient "
"hint."
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:658
msgid "ACKNOWLEDGEMENTS:"
msgstr ""

#. type: Plain text
#: origin/uclibc-bootfloppy.txt:664
msgid "CHANGELOG:"
msgstr ""
