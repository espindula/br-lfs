# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-09-02 09:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: origin/boot_any_hd.txt:11
msgid ""
"AUTHOR: Bill Maltby <lfsbill@wlmcs.com> DATE: 2003-09-08 LICENSE: GPL "
"SYNOPSIS: Boot any OS from any hard drive.  DESCRIPTION: Many users have "
"platforms capable of booting from any hard drive. This hint is intended to "
"make it easier for users to take advantage of this capability with Lilo and "
"LFS.  PREREQUISITES: Lilo version with \"disk=\" sections and \"bios=\" "
"clause.  HINT:"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:17
msgid ""
"As is usual for me, I began explaining everything in the world while writing "
"this. But I came to my senses and wrote a (hopefully) more palatable version "
"(i.e. shorter) that I hope meets the needs of a wide range of users of "
"different levels of experience. Constructive suggestions are welcome."
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:20
msgid ""
"Also welcome are contributions regarding things strange to me, like devfs, "
"and any improvements in the text and scripts."
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:23
msgid ""
"I have checked, and this hint *is* shorter than the Lilo README, appearance "
"to the contrary notwithstanding. :)"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:44
#, no-wrap
msgid ""
"CONTENTS\n"
"   I. OBJECTIVES\n"
"  II. STRATEGY\n"
" III. BACKGROUND\n"
"  IV. BENEFITS\n"
"   V. CAVEATS\n"
"  VI. THANKS\n"
" VII. PREREQUISITES\n"
"VIII. MY CONFIGURATION\n"
"  IX. IMPLEMENTATION\n"
"      A) General.\n"
"      B) Minimal fall-back, hda (W98 drive) default boot.\n"
"      C) Better fall-back, hda boot, hdb Linux root.\n"
"      D) Better fall-back, hdb default boot, bios= changes.\n"
"      E) Examples summary.\n"
"   X. TESTING AND GOTCHAS\n"
"  XI. A PARTIALLY GENERALIZED BOOTBLOCK INSTALL\n"
" XII. FOLLOW ONS\n"
"XIII. SOME MORE READING\n"
" XIV. SUPPORT\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:51
#, no-wrap
msgid ""
"I. OBJECTIVES\n"
"    My three primary goals for this process are:\n"
"    a) faster reboot/recovery via enhanced \"fall-back\" capability;\n"
"    b) reduced upgrade risk of \"downtime\";\n"
"    c) more convenience by being able to boot from any hard drive in a\n"
"       node to any OS installed on any drive in that node.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:58
#, no-wrap
msgid ""
"II. STRATEGY\n"
"    Objective a) is supported by configuring a secondary drive that is "
"boot\n"
"    ready and has a root file system containing everything needed to cont-\n"
"    inue service in \"fall-back\" mode if the primary drive is not "
"available\n"
"    due to corruption or hardware problems. It is kept up-to-date via "
"cron-\n"
"    invoked drive-to-drive copies of selected portions of my primary "
"drive.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:64
#, no-wrap
msgid ""
"    Objective b) is supported by designating a drive/partition as my "
"\"sand-\n"
"    box\" and using it for making bootable images that can be tested "
"\"end-to-\n"
"    end\" with no hardware changes. For testing, I can boot it by just\n"
"    changing my BIOS boot sequence specification. If I trash that drive, a\n"
"    BIOS setup change gets me booting my primary drive again.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:68
#, no-wrap
msgid ""
"    Objective c) is supported by having every drive bootable as the \"pri-\n"
"    mary\" drive (from BIOS point of view) and configuring the boot loader "
"to\n"
"    boot any of the valid OSs on any drive that will support this.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:72
#, no-wrap
msgid ""
"    This is implemented by making use of the ability of BIOS to boot any "
"hard\n"
"    drive and making use of the ability of system loaders, like Lilo, to "
"sup-\n"
"    port that capability in an OS-independent fashion.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:78
#, no-wrap
msgid ""
"III. BACKGROUND\n"
"    Recent BIOSs (ca. mid-1990s and later) have the ability to boot from "
"any\n"
"    hard disk in the node. Use of secondary drives as a root file system "
"is\n"
"    common practice, but I have not seen this enhanced boot ability "
"exploited\n"
"    frequently for the benefits it can provide.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:86
#, no-wrap
msgid ""
"    Because cost per giga-byte of storage is now commonly below $1.00 "
"(US),\n"
"    it is feasible to consider secondary hard drives as reasonable "
"alterna-\n"
"    tives in recovery scenarios. When compared to the costs (in time, "
"money\n"
"    and lost availability) of traditional recovery activities, a bootable\n"
"    secondary drive alternative may be quite attractive. It is even more\n"
"    attractive when you consider that the drive can also be used in daily\n"
"    operations, with some safeguards preventing loss of recovery utility.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:92
#, no-wrap
msgid ""
"    Common practice, when upgrading a node or building hard drive images "
"that\n"
"    are destined for other nodes, has required either hardware "
"reconfiguration\n"
"    (jumper changes, removal of the primary drive or its cabling) in order "
"to\n"
"    adequately test \"end-to-end\". This increases risk of something going\n"
"    wrong and slows progress.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:102
#, no-wrap
msgid ""
"    In my past life (before BIOS had the capabilities) I provided similar\n"
"    capabilities with a simple home-made switch attached to the case that\n"
"    would swap drive assignments by changing the jumpering of the drives.\n"
"    Since this was in the days when drives were much less reliable than "
"now,\n"
"    there were several occasions when I looked like a hero when full "
"service\n"
"    was restored by simply flipping a switch. Now you can buy those "
"switches\n"
"    ready-made. Better (maybe) is the fact that you can accomplish almost "
"the\n"
"    same function through the combination of BIOS, boot loader and "
"adequate\n"
"    planning and implementation.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:106
#, no-wrap
msgid ""
"IV. BENEFITS\n"
"    Here is where I cut a lot of verbiage. Apply your knowledge of your\n"
"    situation to see how you benefit. I'll just give some \"one-liners\" "
"here.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:110
#, no-wrap
msgid ""
"    Workstation users who run different OSs on separate drives, can have\n"
"    quicker recovery when the primary boot drive/partition fails or gets\n"
"    corrupted. Boot floppy usage may become a \"last resort\" scenario.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:116
#, no-wrap
msgid ""
"    Administrators responsible for high-availability systems on-the-cheap\n"
"    can recover much more quickly than with typical alternative processes\n"
"    and might continue to provide service, at possibly reduced levels, "
"even\n"
"    when the primary drive has failed. This \"buys time\" while awaiting "
"the\n"
"    hardware repair.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:123
#, no-wrap
msgid ""
"    Developers/experimenters that must engage in constant upgrade and test\n"
"    of their OS, as many (B)LFSers do, can reduce risk of catastrophe by\n"
"    having the primary boot stuff be \"sacrosanct\" and untouched by the\n"
"    development activities. If you trash your development drive to the "
"point\n"
"    it is not bootable or recoverable, change the BIOS setting and reboot.\n"
"    You are back in business (hope you backed up your development stuff).\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:129
#, no-wrap
msgid ""
"    When compiling for another node onto a drive that will be inserted on\n"
"    the target node, you can configure the boot process to boot in that "
"node\n"
"    as any of the BIOS-bootable drives. You may not need to even change\n"
"    jumpers and should not need to remove any existing drive if a \"slot\" "
"is\n"
"    available on one of the IDE cables.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:133
#, no-wrap
msgid ""
"    Lastly, all benefit because you have the full set of tools available "
"to\n"
"    recover the failed stuff. No more working in the restricted "
"boot-diskette\n"
"    environment (unless you get *really* inattentative).\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:142
#, no-wrap
msgid ""
"V. CAVEATS\n"
"    As with any reasonably complex procedure, there are many opportunities\n"
"    for mistakes and unexpected circumstances to foil your best efforts\n"
"    against disaster. It is very important that you plan for and test any\n"
"    recovery procedures that might be needed to restore service as quickly\n"
"    as possible. A multi-tier plan that covers from minor damage to a "
"comp-\n"
"    lete disaster should be in place and tested. Be sure that your "
"recovery\n"
"    media is reliable and available.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:146
#, no-wrap
msgid ""
"    If you use devfs(d), you will need to make the necessary adjustments "
"on\n"
"    your own (for now) - I use a static /dev directory as provided by "
"(B)LFS.\n"
"    Contributions from devfs users are appreciated.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:149
#, no-wrap
msgid ""
"    As I've seen posted somewhere, \"If you break it, you get to keep the\n"
"    pieces\". I have *no* responsibility whatsoever for your results.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:155
#, no-wrap
msgid ""
"VI. THANKS\n"
"    John McGinn - who posted to LFS development when he first discovered "
"and\n"
"    used the \"bios=\" Lilo parameter while creating a boot drive that was\n"
"    destined for another box. That post may have saved me a lot of "
"research\n"
"    and additional experimentation.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:158
#, no-wrap
msgid ""
"    The LFS and BLFS projects, and all those who constructively "
"participate,\n"
"    for the on-going education provided to me.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:178
#, no-wrap
msgid ""
"VII. PREREQUISITES\n"
"    a) Determine the capabilities of the BIOS for any nodes involved in "
"the\n"
"       process you will undertake. Be sure that they will support your "
"inten-\n"
"       tions. As example, one BIOS I have will allow selection of a non-\n"
"       primary drive for boot, but then will not allow another HD to boot "
"if\n"
"       that drive fails to boot. Another BIOS may allow \"fail-over\" to "
"other\n"
"       drives to be specified. This may be important if you are planning "
"to\n"
"       use this hint's techniques to provide automatic \"fail-over\". You "
"may\n"
"       need to temporarily add drives to a node to make this "
"determination,\n"
"       as a BIOS may not allow selection unless it detects a drive.\n"
"    b) Educate yourself. If you are somewhat new to these processes, a "
"review\n"
"       and understanding of some of the documents in the references at the\n"
"       end of this hint will make your efforts more likely successful.\n"
"    c) Have a recovery plan, in place and tested, that is appropriate to "
"your\n"
"       situation, as mentioned above.\n"
"    d) A working GNU/Linux host node (preferably a (B)LFS one).\n"
"    e) A hardware and drive partition configuration that will support your\n"
"       goals (placement of user data, mounting of various directories and "
"so\n"
"       on).\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:185
#, no-wrap
msgid ""
"VIII. MY CONFIGURATION\n"
"    A small private network with nodes having various CPUs (486 DX2/66, "
"AMD\n"
"    5x86, Cyrix 6x86, AMD K6-III and others), various memory "
"configurations,\n"
"    some BIOS that support secondary-drive boot and some that may not "
"(don't\n"
"    know yet), various OSs (recent CVS (B)LFS, RH 6.2, RH 6.0, W95, "
"W98). All\n"
"    nodes have multiple HDs.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:191
#, no-wrap
msgid ""
"    I use Lilo. You may be able to use Grub, or another loader. I have not\n"
"    tried any others, because of a lack of interest. As I figured, the\n"
"    expected benefits to the list of the switch to Grub haven't "
"(apparently,\n"
"    based on list traffic) materialized. It seems the \"weaknesses\" in "
"Lilo\n"
"    traveled with the users and also affects Grub.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:194
#, no-wrap
msgid ""
"    The platform upon which this procedure was developed is a workstation\n"
"    configuration as follows.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:203
#, no-wrap
msgid ""
"    PC CHIPS M-571 mainboard (updated BIOS), AMD K6-III 380MHz, 256MB "
"SDRAM,\n"
"    4GB primary drive W98 (seldom used) /dev/hda, 20GB 10K RPM drive "
"\"pure\"\n"
"    LFS pre-cvs (my normal boot drive) /dev/hdb, CD-RW as /dev/hdc, 40GB\n"
"    7800 RPM utility drive (my \"fall-back\") /dev/hdd. The OS is a Pure "
"LFS\n"
"    installation based on Ryan Oliver's 2.2.8 scripts, slightly modified.\n"
"    Tested with lilo versions 22.2 and 22.5 (which needs nasm installed).\n"
"    I've not tested the nerw master boot or other new parameters available\n"
"    with 22.5. But the setup I used for 22.2 worked unchanged with 22.5.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:208
#, no-wrap
msgid ""
"    My normal boot is /dev/hdb, first fall-back is /dev/hdd, second is\n"
"    /dev/hda (W98) and last is my boot diskette. You need to adjust the\n"
"    examples to account for the normal boot drive (primary drive from BIOS\n"
"    point of view).\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:210
#, no-wrap
msgid "    My mount configuration (edited out non-significant things) is:\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:216
#, no-wrap
msgid ""
"\t/dev/hdb7 on / type ext2 (rw)\t\t   # Normal root\n"
"\t/dev/hdb1 on /boot type ext2 (rw)\t   # Normal boot\n"
"\t/dev/hda1 on /mnt/hda1 type vfat (rw)      # Fallback boot 2\n"
"\t/dev/hdd7 on /mnt/hdd7 type ext2 (rw)      # Fallback root 1\n"
"\t/dev/hdd1 on /mnt/hdd7/boot type ext2 (rw) # Fallback boot 1\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:221
#, no-wrap
msgid ""
"    Although I have separate /boot partitions, this is not mandatory. But "
"it\n"
"    does allow additional security because I can leave it unmounted (or\n"
"    mounted read-only) so it is less likely to be damaged. The aggravation "
"comes\n"
"    when you run Lilo and forget to (re)mount it read-write. *sigh*\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:231
#, no-wrap
msgid ""
"    Of note above is the /mnt/hda1 listing. It is a 4GB drive dedicated to\n"
"    W98. So there is no room for a separate boot/root LFS partition. That "
"is\n"
"    handled by configuring the Linux kernel to support vfat and creating a\n"
"    directory in W98 of /liloboot with a copy of the needed parts of my\n"
"    normal boot directory (actually, it has everything because I haven't\n"
"    taken the time yet to clean it up). The important things are those\n"
"    needed when installing the Lilo boot blocks (kernel image, boot.b,\n"
"    etc.) and the things needed at boot time. See the Lilo man pages and\n"
"    README for a list of them.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:235
#, no-wrap
msgid ""
"    WARNING! The normal /boot/boot.b is a symlink to boot-menu.b or some\n"
"    equivalent. The Win* OSs I've used don't support symlinks. So you must\n"
"    copy the target of the symlink to liloboot and name it boot.b. Like "
"so:\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:237
#, no-wrap
msgid ""
"    cp -avL /boot/boot.b /mnt/hda1/liloboot # Derefs, copies target, "
"renames\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:242
#, no-wrap
msgid ""
"    You must adjust these examples to fit your configuration and "
"intentions.\n"
"    I use each drive as backup to the other, as needed. That is, if "
"/dev/hdb\n"
"    fails, I use /dev/hdd as my primary drive and /dev/hdb will become the\n"
"    \"fail-over\" drive until I have reason to switch them again.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:249
#, no-wrap
msgid ""
"    I run Lilo boot installs to all three of my hard drives. This way, "
"even\n"
"    if two of my drives fail, I can still boot *something* from the\n"
"    remaining drive. I even have a minimal RH 6.0 that I can boot for\n"
"    recovery purposes. I also keep a recovery diskette (see the BLFS book,\n"
"    chapter 3) as a \"last resort\" tool. But I doubt I will need it again "
"(I\n"
"    had to use it while testing these procedures - more on that later).\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:254
#, no-wrap
msgid ""
"IX. IMPLEMENTATION\n"
"    A) General. I have structured my /etc/lilo components to reduce acci-\n"
"       dental running of the wrong configuration. For this reason, I have "
"no\n"
"       file named \"/etc/lilo.conf\" and I have a directory structure like "
"this.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:259
#, no-wrap
msgid ""
"       /etc/LiloBootInst\n"
"\t   LiloBootInst/a-boot - for setting up hda as default boot drive\n"
"\t   LiloBootInst/b-boot -  \"     \"    \"  hdb \"     \"     \"     \"\n"
"\t   LiloBootInst/d-boot -  \"     \"    \"  hdd \"     \"     \"     \"\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:261
#, no-wrap
msgid "       In each of those sub-directories are files named similar to this.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:266
#, no-wrap
msgid ""
"\t   ?-boot.PR0?-test     - shell to install Lilo boot blocks on hd?\n"
"\t   ?-boot.PR0?-test.out - output from shell a-boot.PR01-test\n"
"\t   ?-boot.PR01\t\t- conf for W98/LFS hdb boot\n"
"\t   ?-boot.PR02\t\t- conf for W98/LFS hdb/LFS hdd/LFS boot\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:268
#, no-wrap
msgid "       Contents of shell a-boot.PR01-test is\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:271
#, no-wrap
msgid ""
"\t   lilo -v3 -C /etc/LiloBootInst/a-boot/a-boot.PR01 \\\n"
"\t       -t &> a-boot.PR01-test.out\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:276
#, no-wrap
msgid ""
"       Until you remove the \"-t\" on the second line, no update will be "
"done\n"
"       by Lilo. But you will get an output that shows what Lilo sees and\n"
"       what decisions Lilo makes. When you are satisfied with that, remove\n"
"       the \"-t\".\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:281
#, no-wrap
msgid ""
"       All the ?-boot.PR0? scripts are the same but for the changing of "
"\"1\"\n"
"       to \"2\" and \"a-\" to \"b-\" or \"d-\", depending on what drive is "
"being\n"
"       set up. To run the script(s) as root, (after assuring execute "
"permis-\n"
"       sion is set):\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:284
#, no-wrap
msgid ""
"\t   cd /etc/LiloBootInst/?-boot    # ?=a or b or d\n"
"\t   ./?-boot.PR0n-test\t\t  # ?=a or b or d, n=1 or 2\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:291
#, no-wrap
msgid ""
"       It is important to keep in mind the difference between the \"boot\" "
"and\n"
"       \"root\" terms. Boot means the components used by the BIOS to get\n"
"       needed parts to find loaders and begin getting the operating system\n"
"       going. Root is the Linux file system that will be mounted when the\n"
"       kernel has been loaded. It may be on the same or a different\n"
"       partition from the \"boot\" components. Don't get confused.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:299
#, no-wrap
msgid ""
"       In all the below examples, the \"bios=\" in the \"disk=\" sections "
"refer\n"
"       to the BIOS devices assignments *at_boot_time*, not what they are\n"
"       now. Don't get confused by thinking of what the devices assignments\n"
"       (0x80, 0x81,...) are now, in your current boot environment. For\n"
"       example, if booted off hdb, its assignment is 0x80, hda is "
"0x81. But\n"
"       if I boot from hda, those assignments are reversed. The important\n"
"       thing to remember is the assignments at boot-time.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:305
#, no-wrap
msgid ""
"    B) Minimal fall-back, hda (W98 drive) default boot.\n"
"       The contents of a-boot.PR01 (edited to remove unimportant things "
"and\n"
"       annotated) are as follows. Don't forget to add in any additional\n"
"       things you need, like linear or lba32, append=\"pci=biosirq\" or\n"
"       \"prompt\", \"delay=100\", \"timeout=100\" and other things you "
"need/want.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:313
#, no-wrap
msgid ""
"       # In the \"disk=\" sections, \"bios=\" reflects what the BIOS "
"device\n"
"       # assignment (0x80, 0x81, ...) *will* be when BIOS IDE0 (hda, "
"\"C:\"\n"
"       # for you MSers) is default boot. Though not needed here, they are\n"
"       # shown for later comparison. Why do I show the geometry here? Be-\n"
"       # cause I want Lilo to do its matches on the *real* device "
"geometry,\n"
"       # *not* the (possibly) phony geometry contained in the partition\n"
"       # tables of the master boot block.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:319 origin/boot_any_hd.txt:375
#, no-wrap
msgid ""
"       disk=/dev/hda\n"
"\t   sectors=63\n"
"\t   heads=16\n"
"\t   cylinders=6296\n"
"\t   bios=0x80\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:325 origin/boot_any_hd.txt:381
#, no-wrap
msgid ""
"       disk=/dev/hdb\n"
"\t   sectors=63\n"
"\t   heads=16\n"
"\t   cylinders=39560\n"
"\t   bios=0x81\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:341
#, no-wrap
msgid ""
"       # To reduce error by \"loose nut behind the wheel\", add a custom "
"menu\n"
"       # that shows the boot drive and menu being used. Also, note the "
"cus-\n"
"       # tom \"map=\" parameter. This allows me to back up all boot "
"related\n"
"       # information from any drive without stepping on the \"map\" file "
"from\n"
"       # other bootable disk setups. Note that all components are gotten "
"from\n"
"       # the liloboot directory. That way, if hdb has failed due to just\n"
"       # loss of the /boot directory, I can recover that directory from "
"the\n"
"       # W98 directory. Also, Lilo will reference *at boot-time* the "
"needed\n"
"       # components in the liloboot directory. So if hdb is not bootable, "
"I\n"
"       # can still boot anything else in the system that is still good.\n"
"       # IMPORTANT! If you do *anything* that may change physical "
"locations\n"
"       # on the drive, RERUN LILO. Lilo is OS independent. It works on "
"phys-\n"
"       # ical locations. If you defrag, replace a kernel image or copy "
"some\n"
"       # files in/out of the directory, locations may change (usually do).\n"
"       # RERUN LILO so it can update the hda1map with the new information.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:344
#, no-wrap
msgid ""
"       menu-title=\"A Drive Boot Menu PR01\"\n"
"       boot=/dev/hda\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:346
#, no-wrap
msgid "       map=/mnt/hda1/liloboot/hda1map\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:348
#, no-wrap
msgid "       install=/mnt/hda1/liloboot/boot.b\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:357
#, no-wrap
msgid ""
"       # Default is W98 because it is first in the file and no \"-D\" on "
"the\n"
"       # command line or \"default=\" in the configuration file was given.\n"
"       # Note that the loader is required for W98 because it is not a "
"Linux\n"
"       # system. Also, we get it from the liloboot drive, as we do for the\n"
"       # Linux stuff.\n"
"       other=/dev/hda1\n"
"\t   lable=W98\n"
"\t   loader=/mnt/hda1/liloboot/chain.b\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:362 origin/boot_any_hd.txt:404
#, no-wrap
msgid ""
"       image=/mnt/hda1/liloboot/K6-20030530\n"
"\t   label=B7-K6-20030530\n"
"\t   root=/dev/hdb7\n"
"\t   read-only\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:369
#, no-wrap
msgid ""
"    C) Better fall-back, hda boot, hdb Linux root.\n"
"       Contents of a-boot.PR02 (edited to remove some things) are here.\n"
"       Since we just add another drive here, and change the default OS we\n"
"       run, I've not annotated it. Just take note that we've added "
"parameter\n"
"       \"default=\" and the menu name is changed. As before, don't forget "
"to\n"
"       add in any additional things you need.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:387 origin/boot_any_hd.txt:441
#, no-wrap
msgid ""
"       disk=/dev/hdd\n"
"\t   sectors=63\n"
"\t   heads=15\n"
"\t   cylinders=82714\n"
"\t   bios=0x82\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:389
#, no-wrap
msgid "       menu-title=\"A Drive Boot Menu PR02\"\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:393
#, no-wrap
msgid ""
"       boot=/dev/hda\n"
"       map=/mnt/hda1/liloboot/hda1map\n"
"       install=/mnt/hda1/liloboot/boot.b\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:395
#, no-wrap
msgid "       default=D7-K6-20030530\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:399
#, no-wrap
msgid ""
"       other=/dev/hda1\n"
"\t   label=W98\n"
"\t   loader=/mnt/hda1/liloboot/chain.b\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:409
#, no-wrap
msgid ""
"       image=/mnt/hda1/liloboot/K6-20030530\n"
"\t   label=D7-K6-20030530\n"
"\t   root=/dev/hdd7\n"
"\t   read-only\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:416
#, no-wrap
msgid ""
"    D) Better fall-back, hdb default boot, bios= changes.\n"
"       As before, unrelated stuff is removed. The below is from "
"b-boot.PR02,\n"
"       the equivalent of the a-boot.PR02. The significant changes are in "
"the\n"
"       \"bios=\" in the \"disk=\" sections and new statements in the "
"\"other=\"\n"
"       section. As before, a changed boot menu title is used and a "
"\"default=\"\n"
"       parameter is used. Annotations have been inserted.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:423
#, no-wrap
msgid ""
"       # Since the BIOS setup has been changed to default-boot IDE1 (hdb),\n"
"       # the device assignments (0x80, 0x81, ...) are different than they\n"
"       # were when booting from IDE0. It's a \"shuffle down\" process. So "
"if\n"
"       # boot is IDE2, it becomes device 0x80, hda becomes 0x81 and hdb "
"be-\n"
"       # comes 0x82. Here we are using IDE1 as default boot, so only the "
"hda\n"
"       # and hdb \"bios=\" parameters are affected. Hdd is still 0x82.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:429
#, no-wrap
msgid ""
"       disk=/dev/hda\n"
"\t   sectors=63\n"
"\t   heads=16\n"
"\t   cylinders=6296\n"
"\t   bios=0x81\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:435
#, no-wrap
msgid ""
"       disk=/dev/hdb\n"
"\t   sectors=63\n"
"\t   heads=16\n"
"\t   cylinders=39560\n"
"\t   bios=0x80\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:448
#, no-wrap
msgid ""
"       # Now we get all components from hdb because that is considered the\n"
"       # \"reliable\" drive. We could still get things from hda, but we "
"are\n"
"       # booting hdb and hda may have failed. If hdb is good, all its\n"
"       # components should be considered more reliable than a potentially\n"
"       # failed drive (we don't know if drives are good yet, but BIOS may\n"
"       # \"fail over\" under certain failure conditions).\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:454
#, no-wrap
msgid ""
"       menu-title=\"B Drive Boot Menu PR02\"\n"
"       boot=/dev/hdb\n"
"       map=/boot/hdb1map\n"
"       install=/boot/boot.b\n"
"       default=B7-K6-20030530\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:465
#, no-wrap
msgid ""
"       # Look at the \"map-drive=\" parameters. Since at boot time hdb is "
"now\n"
"       # device 0x80 and hda is 0x81, we need to switch them if we want to\n"
"       # run W98. These statements reassign hdb to 0x81 and hda to 0x80\n"
"       # before loading the W98 stuff, so it will still work. But we still\n"
"       # get chain.b from the (currently) known good drive, hdb. If you "
"have\n"
"       # shown more than two drives, don't try to \"map-drive\" more than "
"two\n"
"       # in this section. It will make the results unbootable. You can "
"(ap-\n"
"       # parently) re-map only two devices. If you have DOS partitions "
"scat-\n"
"       # tered among your drives, this may have nasty implications when "
"you\n"
"       # boot from other than your normal drive - I don't know.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:473
#, no-wrap
msgid ""
"       other=/dev/hda1\n"
"\t   label=W98\n"
"\t   loader=/boot/chain.b\n"
"\t   map-drive=0x80\n"
"\t       to=0x81\n"
"\t   map-drive=0x81\n"
"\t       to=0x80\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:478
#, no-wrap
msgid ""
"       image=/boot/K6-20030530\n"
"\t   label=B7-K6-20030530\n"
"\t   root=/dev/hdb7\n"
"\t   read-only\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:483
#, no-wrap
msgid ""
"       image=/boot/K6-20030530\n"
"\t   label=D7-K6-20030530\n"
"\t   root=/dev/hdd7\n"
"\t   read-only\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:487
#, no-wrap
msgid ""
"    E) Examples summary.\n"
"       I also have hdd boot examples, but they are just extensions of what\n"
"       you've seen already. Things to keep in mind are listed here.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:491
#, no-wrap
msgid ""
"       1) Use the \"menu-title=\" parameter to help protect against\n"
"\t  inadvertently booting the wrong drive. Of course, you must look at\n"
"\t  the menu title for it to do any good.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:494
#, no-wrap
msgid ""
"       2) The \"bios=\" always refers to the BIOS device assignments\n"
"\t  *at_boot_time*, not what the assignments are now.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:499
#, no-wrap
msgid ""
"       3) The \"bios=\" parameters change as you change the BIOS boot "
"drive\n"
"\t  sequence(s) in BIOS setup. They \"shuffle down\". If you have four\n"
"\t  drives and you set BIOS boot to IDE3 (normally 0x83), your dev-\n"
"\t  ice assignments will become like these.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:501
#, no-wrap
msgid "\t      hdd = 0x80, hda = 0x81, hdb = 0x82, hdc = 0x83\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:507
#, no-wrap
msgid ""
"       4) Things which are not bootable are not included in the device\n"
"\t  assignments series 0x80, 0x81, ... So if you have a CD as master\n"
"\t  on the second IDE channel (hdc), it will not affect the device\n"
"\t  assignments with which we are concerned now. You will have 0x80\n"
"\t  and 0x81, but 0x82 will be assigned to hdd, not 0x83.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:511
#, no-wrap
msgid ""
"\t  NOTE! I haven't yet tested with a bootable CD installed in the CD\n"
"\t  drive. I do know that \"El Torito\" spec bootable CDs get defined as\n"
"\t  the floppy drive. I have not investigated other boot formats yet.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:518
#, no-wrap
msgid ""
"       5) Store all needed components, and references to them at boot "
"time,\n"
"          on the drive the BIOS will successfully boot. That way if the OS\n"
"\t  or partition you are targeting is bad, you can still reference\n"
"\t  other OSs and partitions from the drive that is still good. If your\n"
"\t  normal boot drive fails, or its components get corrupted, you can\n"
"\t  change the BIOS boot device and boot from the other good drives.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:523
#, no-wrap
msgid ""
"X. TESTING and GOTCHAS\n"
"    Make sure that all BIOS boot-time needed components occur where your\n"
"    BIOS can find them (below cyl 1024 for some old BIOSs). Lilo uses BIOS\n"
"    to read several of the early components (see \"SOME MORE READING\" "
"below).\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:527
#, no-wrap
msgid ""
"    The most important testing tools are various type of backups and\n"
"    recovery tools that allow recovery from disasters. Have them available\n"
"    and well-tested.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:536
#, no-wrap
msgid ""
"    The next most important testing tool is Lilo itself. The -v and -t "
"para-\n"
"    meters get information about what Lilo will do and the decisions it\n"
"    makes. Examine the output from a Lilo run with the -t parameter (and "
"-v)\n"
"    before doing anything that will actually update your boot blocks. Be\n"
"    especially alert that you have specified the correct drive(s) and the\n"
"    correct locations of components needed at boot time. It is very easy "
"to\n"
"    copy configurations and forget to change drive specifications, a "
"\"bios=\"\n"
"    parameter or other parameters.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:540
#, no-wrap
msgid ""
"    Copy *at least* the boot blocks of any drive you *might* affect,\n"
"    intentionally or accidentally. I usually just get the first track like\n"
"    this. Change the ? to the drive specifier and the 63 to whatever.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:542
#, no-wrap
msgid "\tdd if=/dev/hd? bs=512 count=63 of=/hd?_1st_track.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:544
#, no-wrap
msgid "    Then if the worst happens, I can recover the original by\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:546
#, no-wrap
msgid "\tdd of=/dev/hd? if=/hd?_1st_track.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:555
#, no-wrap
msgid ""
"    Watch out for the LFS book bootscripts. They are brain-damaged wrt\n"
"    handling detected file system error conditions. For example, when run-\n"
"    ning from hdb and with hdd7 mount required by your normal boot, if you\n"
"    test by wiping the partition information on hdd, you will no longer be\n"
"    able to access hdd and you can't boot into the root on hdb because the\n"
"    missing hdd partitions will cause the LFS bootscripts to shutdown your\n"
"    machine. Wip out the old recovery diskette (it better be very good).\n"
"    Don't ask how I know. Someday I'll submit a fix and see what happens.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:561
#, no-wrap
msgid ""
"    That problem can be circumvented by adding \"noauto\" to all the fstab\n"
"    entries that reference the drive to be \"crash tested\". If you forget "
"and\n"
"    get burned by that \"gotcha\", you can still copy back the saved first\n"
"    blocks (you *did* copy them as shown above, didn't you) and not lose\n"
"    anything if you have a bootable recovery floppy.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:570
#, no-wrap
msgid ""
"    Rerun Lilo anytime you change anything in a /boot directory (Linux) or\n"
"    defrag a W* partition containing boot components or copy new "
"components\n"
"    into/out of the directory containing the boot components. Remember "
"that\n"
"    Lilo, being OS independent, is physical-location dependent at boot "
"time.\n"
"    These locations are resolved at Lilo boot-block install time (this is\n"
"    *not* the same as installing the Lilo package time) and any changes in\n"
"    physical location *after* the boot blocks are installed will cause a\n"
"    boot failure of some kind (depends on what has been relocated).\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:580
#, no-wrap
msgid ""
"    Note that there is no boot flag (partition activation) on my non-M$\n"
"    drives. If Lilo is installed into the master boot block, activating a\n"
"    partition may provide all sorts of confusion and opportunities for "
"some\n"
"    fun. It won't always cause problems, but I have seen certain "
"situations\n"
"    where it did. It works fine on my W98 drive (which does have Lilo in "
"the\n"
"    master boot record). IIRC, the problem was with two partitions active "
"at\n"
"    the same time (an older version of Lilo, or LVM related? - I don't\n"
"    recall). BIOS expects the master boot record to take care of "
"situations\n"
"    when no partition is \"active\".\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:588
#, no-wrap
msgid ""
"    Don't forget to modify the /etc/fstab on the non-primary drive to boot\n"
"    so that it will correctly access things when it is booted/rooted. For\n"
"    example, on my hdd root, I change the hdb7 (root file system) entry to\n"
"    /mnt/hdb7 and change the hdd7 (/mnt/hdd7) entry to be /. Per a post to\n"
"    LFS sometime back (search if you need to know who - I'm too lazy to "
"look\n"
"    it up, but I thank them anyway), /rootfs can be used to eliminate one "
"of\n"
"    the alterations. I haven't tested this yet.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:597
#, no-wrap
msgid ""
"    Depending on your configuration of root/boot stuff, it may be safer to\n"
"    run Lilo in a chroot environment. Use the -r parameter (man Lilo) for\n"
"    this. This is most useful when you've installed a whole new LFS into a\n"
"    mount partition(s) and want all components to be referenced relative "
"to\n"
"    the mounted components. Remember, at boot time the pathnames do not "
"come\n"
"    into play. Lilo has resolved them to physical locations. If you change\n"
"    the contents of the (relative) /boot in any way, it is safest to RERUN\n"
"    LILO.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:599
msgid "XI. A PARTIALLY GENERALIZED BOOTBLOCK INSTALL"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:605
#, no-wrap
msgid ""
"    This was been tested using lilo 22.{2,5} on a \"pure\" (B)LFS system,\n"
"    *before* it was integrated into this hint and text was changed\n"
"    accordingly. So please test carefully and let me know about any\n"
"    discrepancies in these instructions that may have crept in during this\n"
"    process.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:611
#, no-wrap
msgid ""
"    In the download section of the LFS hints, there is a tarball named\n"
"    boot_any_hd.tar.bz2 that contains some supporting prototype scripts\n"
"    that you can modify and use to ease maintenance of your multi-boot\n"
"    configuration. Its contents will make a directory called boot_any_hd\n"
"    that will contain:\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:616
#, no-wrap
msgid ""
"\tLiloBootInst\t      : Directory to be moved to /etc/LiloBootInst\n"
"\t    a) lilo.conf-proto: Prototype file used by LBI.sh\n"
"\t    b) LBI.conf\t      : File for *some* local customization\n"
"\t    c) LBI.sh\t      : Script to help you install boot blocks\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:620
#, no-wrap
msgid ""
"    After making any changes to the files in this directory, copy the "
"whole\n"
"    directory to /etc and chown ownership and group to root:root on\n"
"    everything, including the directory.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:632
#, no-wrap
msgid ""
"    a) File lilo.conf-proto is a \"ptototype\" file that is used by LBI.sh\n"
"    to automatically \"do the right thing\" when installing lilo boot "
"blocks\n"
"    for a multi-drive boot configuration.  Adjust everything to fit your\n"
"    configuration. It is important that the \"bios=\" values \"match\" the\n"
"    \"disk=/dev/hd...\" declarations. So \"disk=/dev/hda\" needs "
"\"bios=$HDA\"\n"
"    and \"disk=/dev/hdb\" needs \"bios=$HDB\" and so on. Also, be sure to\n"
"    adjust the \"sectors\", \"heads\" and \"cylinders\" parameters to match "
"your\n"
"    drive geometries. These three should really be added into the LBI.conf\n"
"    file and LBI.sh should have supporting code added. Maybe in a future\n"
"    version. Adjust the \"prompt\", \"delay\", \"timeout\" and \"lba32\" "
"if\n"
"    desired.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:636
#, no-wrap
msgid ""
"    In the images sections, adjust the image names (leave the $TBBOOT\n"
"    there) and the \"label=\" values to suit yourself. Remove or change, "
"your\n"
"    choice the \"default=\" parameter.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:642
#, no-wrap
msgid ""
"    The lines beginning with \"###### lfs20030504\" are markers that the\n"
"    shell script uses to tag start/end of code in the generated "
"files. This\n"
"    is so that when you run again, it removes lines inside those tags from\n"
"    the generated file before adding the new versions in again. The "
"\"BEG\"\n"
"    and \"END\" lines must match.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:645
#, no-wrap
msgid ""
"    There are other adjustments you will want to make. Use your common\n"
"    sense and the \"man lilo.conf\" pages for additional guidance.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:650
#, no-wrap
msgid ""
"    b) File LBI.conf is a local configuration file. Adjust it for your\n"
"    configuration. This really needs more added to it also, along with\n"
"    supporting code in LBI.sh. Probably the only changes will be to the\n"
"    \"DISKS=\", and the \"HDPFX\" and \"CONSOLE=\" parameters if you use "
"devfs.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:654
#, no-wrap
msgid ""
"    c) Script LBI.sh helps get things right during the grind of daily\n"
"    operations. It depends on being able to find the prototype file,\n"
"    discused in a) above, and the configuration file mentioned in b).\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:657
#, no-wrap
msgid ""
"    To run it, cd to /etc/LiloBootInst and run this command, with the\n"
"    substitutions noted in the text following.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:659
#, no-wrap
msgid "        ./LBI.sh {-t|-i} -d X -p N [ -D <default-image-label>\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:665
#, no-wrap
msgid ""
"    The \"-t\" means test only - don't actually install, but do everything\n"
"    else. If you give it \"-i\", the boot blocks will be installed. The "
"\"X\"\n"
"    should be replaced with the drive this run is to affect: a for hda, b\n"
"    for hdb, etc. The \"N\" is replaced by the partition number containing\n"
"    the root file system.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:671
#, no-wrap
msgid ""
"    If you provide the \"-D\" and the label of an image, it will be used "
"as\n"
"    the default boot image, overriding any \"default=\" within the "
"file. If\n"
"    there is no \"default=\" and no \"-D ...\" is provided, the system "
"will\n"
"    generate a \"-D ...\" for you and tell you that it is doing that. This\n"
"    will be the same default as lilo would take.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:677
#, no-wrap
msgid ""
"    For first runs, be sure to use the \"-t\" parameter, test. It will "
"process\n"
"    the prototype file and leave the results in a file named *-boot.conf.\n"
"    This is the lilo.conf file that will be referenced by a shell script\n"
"    that is also created, *-boot.sh. You can examine and adjust either of\n"
"    these files as needed.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:682
#, no-wrap
msgid ""
"    A file, *-boot.out will also be created, using a lilo debug level of "
"v3,\n"
"    showing the information lilo garnered and the decisions made. When "
"this\n"
"    looks good using the \"-t\" parameter, you can then remove the \"-t\" "
"and\n"
"    run the *-boot.sh script or rerun LBI.sh and give the \"-i\" "
"parameter.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:687
#, no-wrap
msgid ""
"    If you provide the \"-i\", install parameter, the shell will warn you\n"
"    that you are going to install the boot blocks and ask if you want to "
"do\n"
"    it. Either way, both the \"-t\" and \"-i\" leave the *-boot.conf, "
"*-boot.sh\n"
"    and *-boot.out files there for you to examine.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:690
#, no-wrap
msgid ""
"    The created shell has a \"less\" at the end that will page through the\n"
"    corresponding *-boot.out file created when the *-boot.sh script is "
"run.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:692
#, no-wrap
msgid "    The output log has a copy of the lilo command that runs.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:700
#, no-wrap
msgid ""
"XII. FOLLOW ONS\n"
"    In my real Lilo configuration files, I have removed everything that I\n"
"    can specify on the Lilo command line. That, combined with a little "
"shell\n"
"    scripting, allows me to have a single configuration file that works "
"with\n"
"    installing boot blocks on all three of my drives. The last thing I "
"need\n"
"    to add to it is the adjustment of the \"bios=\" parameters.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:711
#, no-wrap
msgid ""
"    I have a rudimentary script that generates a find with a prune command\n"
"    that backs up just my root partition, regardless of what else is\n"
"    mounted. With automatic cron invocation at ungodly wee hours of the\n"
"    morning, I'm assured of having a reasonably current root backup that I\n"
"    can boot and root if needed. BTW, it automatically runs Lilo for the\n"
"    backup drive after the backup (not completed yet). If the normal\n"
"    boot/root drive gets corrupted, but is still mechanically/electrically\n"
"    sound, I can just boot into the backup and do a find|cpio operation or "
"a\n"
"    cp -pDr (?) to recover the normal root after doing any *e2fs* "
"operations\n"
"    needed.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:715
#, no-wrap
msgid ""
"    Since I have, essentially, 3 copies of my /boot directory, I can "
"recover\n"
"    a corrupted boot directory from any of them and RERUN Lilo (very "
"important to\n"
"    remember to do this).\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:725
#, no-wrap
msgid ""
"    I have yet to implement the reduced service capability of my main\n"
"    server. But I have tested the BIOS fail-over capability and it works "
"*if*\n"
"    the BIOS can not detect a valid boot block (the signature must be\n"
"    missing). Unfortunately, if it sees a valid boot signature and loads\n"
"    what it thinks is a good loader, and that loader fails (corrupted boot\n"
"    information, kernel or root file system) then no fail-over will "
"occur. I\n"
"    have worked on IBM servers that have custom BIOS and hardware "
"monitoring\n"
"    and a timer that we were able to use to get around this. If you have "
"one\n"
"    of those, there is more that can be done.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:731
#, no-wrap
msgid ""
"XIII. SOME MORE READING\n"
"    See the man pages for lilo and lilo.conf.\n"
"    Read the README in /usr/src/Lilo*.\n"
"    Get to The Linux Documentation Project site (http://www.tldp.org) and\n"
"    look at the various things having to do with booting.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:736
#, no-wrap
msgid ""
"XIV. SUPPORT\n"
"    All the Lilo error codes are documented in the Lilo README. However,\n"
"    they don't necessarily increase your understanding by themselves.\n"
"    Additional research in that (and other documents) may be required.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:741
#, no-wrap
msgid ""
"    Post to blfs-support. But, if you have problems and the nature of your\n"
"    post indicates that you have not made a good-faith effort to read the\n"
"    stuff I mentioned above, I will not reply. Some others on the list may\n"
"    be more tolerant.\n"
msgstr ""

#. type: Plain text
#: origin/boot_any_hd.txt:759
#, no-wrap
msgid ""
"    This is an early version. I gratefully accept constructive criticism\n"
"    posted publicly to blfs-support.\n"
"ACKNOWLEDGEMENTS: John McGinn - see \"Thanks\" in the hint.\n"
"CHANGELOG:\n"
"   0.9.5 2003-09-08 - Convert to new LFS hints format requirements.\n"
"\t\t    - Integrate the semi-automated lilo.conf processing\n"
"\t\t      into this hint.\n"
"   0.9.4 2003-07-03 - Testing completed with lilo-22.5 ok. Update text.\n"
"   0.9.3 2003-06-27 - Correct typo, minor phrasing changes.\n"
"   0.9.2 2003-06-14 - Add warning about symlink in liloboot dir in Win*\n"
"\t\t      partition. Forgot to mention in earlier versions.\n"
"   0.9.1 2003-06-14 - Discovered that Lilo 22.2 doesn't support swapping\n"
"\t\t      more than two device assignments in the \"other=\"\n"
"\t\t      section of a configuration file. Add a note about it.\n"
"\t\t    - Miscellaneous typographical error fixes and a few word-\n"
"\t\t      ing changes to increase clarity, hopefully. No\n"
"\t\t      substantive changes.\n"
"   0.9   2003-06-12 - Initial release\n"
msgstr ""
