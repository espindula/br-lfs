# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-09-02 09:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:2
msgid "AUTHOR: Randy McMurchy <randy_at_linuxfromscratch_dot_org>"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:4
msgid "DATE: 2007-07-01"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:7
#, no-wrap
msgid ""
"LICENSE: Creative Commons Attribution-NonCommercial-ShareAlike License\n"
"         http://creativecommons.org/licenses/by-nc-sa/1.0/\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:9
msgid "SYNOPSIS: Installing all the GCC compilers while building LFS"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:18
msgid ""
"DESCRIPTION: This hint will guide you through the installation of any or all "
"the GCC compilers while building an LFS system. These instructions target "
"the 4.x.x series of GCC as there have been significant changes since the "
"3.x.x series. Prior to the 4.x.x series, only the Ada compiler could not be "
"installed during Chapter 6 of an LFS build. See my "
"http://www.linuxfromscratch.org/hints/downloads/files/ada_install_during_lfs.txt "
"hint for instructions to install the Ada compiler during an LFS build if you "
"are using a version of GCC prior to 4.x.x."
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:20
msgid "ATTACHMENTS: None"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:22
msgid "REQUIRED DOWNLOADS:"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:25
#, no-wrap
msgid ""
"1. The GCC tarball for whatever version of GCC called for in LFS. This "
"will\n"
"be a file named something similar to gcc-4.1.2.tar.bz2\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:34
#, no-wrap
msgid ""
"2. The 2005 version of the GNAT compiler found on the AdaCore site. The\n"
"download location (https://libre.adacore.com/dynamic/download_page) "
"requires\n"
"that you create an account on the AdaCore site before you can download the\n"
"package. Nothing is required other than a valid email address. Ensure you\n"
"download the 2005 version of the GNAT compiler. The 2006 version will not "
"work.\n"
"The file name you need is: "
"gnat-gpl-2005-i686-gnu-linux-gnu-libc2.3-bin.tar.gz. \n"
"(not required if your host system has an existing Ada compiler, or you "
"don't\n"
"plan on installing the GCC Ada compiler)\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:38
#, no-wrap
msgid ""
"3. A GMP tarball if you plan on installing the Fortran compiler. See\n"
"http://www.linuxfromscratch.org/blfs/view/svn/general/gmp.html for "
"download\n"
"locations.\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:41
#, no-wrap
msgid ""
"4. An MPFR tarball if you plan on installing the Fortran compiler. See\n"
"http://www.mpfr.org/mpfr-current/ for download locations.\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:43
msgid "PREREQUISITES:"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:45
msgid "None"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:47
msgid "HINT:"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:48
#, no-wrap
msgid "=========\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:50
#, no-wrap
msgid ""
"CONTENTS:\n"
"=========\n"
msgstr ""

#. type: Bullet: '        1.  '
#: origin/all_of_gcc_during_lfs.txt:69
msgid "Introduction"
msgstr ""

#. type: Bullet: '        2.  '
#: origin/all_of_gcc_during_lfs.txt:69
msgid "The Treelang compiler"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:69
#, no-wrap
msgid ""
"        3.  The Fortran compiler\n"
"              GMP installation\n"
"              MPFR installation\n"
"              GCC installation\n"
"        4.  The Ada compiler\n"
"        5.  Package dependencies\n"
"        6.  Installing the GNAT Ada compiler\n"
"        7.  Configuring the PATH variable\n"
"        8.  Chapter 5 GCC-Pass1 Modifications\n"
"        9.  Reconfiguring the PATH variable\n"
"        10. Chapter 5 GCC-Pass2 Modifications\n"
"        11. Chapter 5 Ncurses modifications\n"
"        12. Chapter 6 GCC Modifications\n"
"        13. Chapter 6 Ncurses modifications\n"
"        14. Closing\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:70
#, no-wrap
msgid "================\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:72
#, no-wrap
msgid ""
"1. INTRODUCTION:\n"
"================\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:86
msgid ""
"The default installation during LFS only installs a C and C++ compiler. If "
"you know that you'll need additional compilers after LFS is built, it is "
"easier to just build the additional compilers during LFS. So, you say to "
"yourself, when I get to the GCC installation in Chapter 6 of LFS, I'll just "
"add additional compilers to the configure script command and I'll build them "
"then. This won't work for the Ada, Fortran or Treelang compilers. For these "
"three compilers, you cannot wait until the GCC installation in Chapter 6 to "
"decide you want/need to install them (Fortran is a slight exception to "
"this). At this point of Chapter 6, you are in a chroot environment working "
"with whatever is installed in the /tools directory you created in Chapter 5 "
"and there are not adequate tools, nor any real way to add them, to compile "
"Ada and Treelang."
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:91
msgid ""
"In summary, if you need to install the Ada, Fortran or Treelang compilers "
"during Chapter 6 of an LFS build, you'll need to do some extra work. The "
"Java and Objective C compilers can be installed by simply adding them to the "
"list of compilers in the configure script parameter, --enable-languages=..."
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:97
msgid ""
"In order to install the GCC Ada compiler, you must have an existing Ada "
"compiler available so GCC can boostrap its version of Ada. If your host has "
"an existing Ada compiler, you can omit some of this hint and simply use the "
"updated Chapter 5 and Chapter 6 GCC installation instructions. More on this "
"in the appropriate sections later in the hint."
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:98
#, no-wrap
msgid "=========================\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:100
#, no-wrap
msgid ""
"2. THE TREELANG COMPILER:\n"
"=========================\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:106
msgid ""
"You probably don't need the Treelang compiler. It is only good for "
"developers who are developing a new compiler for GCC. However, if you wish "
"to build it during a build of LFS, you'll need to install the Bison and Flex "
"packages before starting the Chapter 6 build of GCC."
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:107 origin/all_of_gcc_during_lfs.txt:199
#, no-wrap
msgid "========================\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:109
#, no-wrap
msgid ""
"3. THE FORTRAN COMPILER:\n"
"========================\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:116
msgid ""
"Starting with version 4.x.x of GCC, there is no longer support for the "
"Fortran 77 series of compilers. Fortran 95 is now included with GCC. In "
"order to build the Fortran 95 compiler, the system must have the GMP and "
"MPFR packages installed. See the \"REQUIRED DOWNLOADS\" section above for "
"links to information about these packages."
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:123
msgid ""
"Installing these packages in Chapter 5 may end up producing undesireable "
"results as GCC may look for bits of these packages later in a /tools "
"directory which won't exist any longer. So, it is safer to install these "
"packages in Chapter 6. Installation of packages is somewhat wierd before GCC "
"is installed in Chapter 6, but using the extra parameters shown below seemed "
"to get GMP, MPFR and Fortran 95 installed correctly."
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:126
msgid ""
"Both of these packages should be built after Binutils and before GCC in "
"Chapter 6. GMP should be installed first."
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:127 origin/all_of_gcc_during_lfs.txt:162
#, no-wrap
msgid "----------------\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:129
#, no-wrap
msgid ""
"GMP Installation\n"
"----------------\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:136
msgid ""
"In order to build the GMP C++ extension library (by passing --enable-cxx "
"parameter to configure), you'll need to fake an installation of the "
"libstdc++ library in /usr/lib of the new LFS partition. Issue the two "
"commands below before building the GMP package to provide temporary symlinks "
"to the library in the /tools/lib directory:"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:139
#, no-wrap
msgid ""
"ln -v -s /tools/lib/libstdc++.so.6 /usr/lib\n"
"ln -v -s /tools/lib/libstdc++.so   /usr/lib\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:143
msgid ""
"Additionally, you'll need to install the M4 package at the end of Chapter 5 "
"or before the GMP installation in Chapter 6. You can use the existing LFS "
"Chapter 6 instructions for installing the M4 package."
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:144
#, no-wrap
msgid "-----------------\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:146
#, no-wrap
msgid ""
"MPFR Installation\n"
"-----------------\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:152
msgid ""
"The installation of MPFR must also be slightly modified at this point for a "
"good installation. I found that I had to add --with-gmp-include=/usr/include "
"to the configure script so MPFR could find GMP's library interface header.  "
"Here are the commands I used to install MPFR:"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:161
#, no-wrap
msgid ""
"./configure --prefix=/usr \\\n"
"            --enable-thread-safe \\\n"
"            --enable-shared \\\n"
"            --with-gmp-include=/usr/include\n"
"make\n"
"make html\n"
"make check\n"
"make install\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:164
#, no-wrap
msgid ""
"GCC Installation\n"
"----------------\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:173
msgid ""
"At this point (GMP and MPFR installations complete), you can add the fortran "
"language to the --enable-languages switch on GCC's configure and expect it "
"to successfully build Fortran 95. However, you also need to add a couple "
"more parameters to the configure script so that configure can find the two "
"packages you just installed. I'm not certain, but apparently it must look in "
"/tools for these packages, so parameters are added to configure to tell it "
"to look in /usr. Add these two parameters to GCC's configure script:"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:176
#, no-wrap
msgid ""
"        --with-mpfr=/usr\n"
"        --with-gmp=/usr\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:178
msgid "The complete command I used to install all the compilers was:"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:189
#, no-wrap
msgid ""
"../gcc-4.0.3/configure \\\n"
"        --prefix=/usr \\\n"
"        --libexecdir=/usr/lib \\\n"
"        --enable-shared \\\n"
"        --enable-threads=posix \\\n"
"        --enable-__cxa_atexit \\\n"
"        --enable-clocale=gnu \\\n"
"        --with-mpfr=/usr \\\n"
"        --with-gmp=/usr \\\n"
"        --enable-languages=c,c++,objc,fortran,ada,java,treelang\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:190
#, no-wrap
msgid "====================\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:192
#, no-wrap
msgid ""
"4. THE ADA COMPILER:\n"
"====================\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:198
msgid ""
"Starting with version 4.x.x of GCC, the Ada installation is simpler, but it "
"still requires an initial boostrap using an existing Ada compiler. If you "
"have an Ada compiler on the host system you're building LFS on, there isn't "
"much required before you can just build GCC."
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:201
#, no-wrap
msgid ""
"5. PACKAGE DEPENDENCIES:\n"
"========================\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:206
msgid ""
"As previously mentioned, if you already have an existing Ada compiler on the "
"host system, you won't need to install the GNAT binary Ada compiler. You can "
"skip to step 7 and configure your path."
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:210
msgid ""
"If you don't have an existing Ada compiler, you'll need to install the GNAT "
"binary version available from the URL shown in the \"REQUIRED DOWNLOADS\" "
"section at the beginning of the hint."
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:211
#, no-wrap
msgid "====================================\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:213
#, no-wrap
msgid ""
"6. INSTALLING THE GNAT ADA COMPILER:\n"
"====================================\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:218
msgid ""
"You'll need to install the GNAT Ada compiler before starting the Chapter 5 "
"GCC-Pass1 instructions in the LFS book. This is right after the "
"Binutils-Pass1 installation."
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:220
msgid "Here's the simple installation procedure for the GNAT Ada compiler:"
msgstr ""

#. type: Bullet: '1. '
#: origin/all_of_gcc_during_lfs.txt:222
msgid "Download the tarball from the Adacore site."
msgstr ""

#. type: Bullet: '2. '
#: origin/all_of_gcc_during_lfs.txt:224
msgid "Unpack the tarball and change directories into the root of the source tree."
msgstr ""

#. type: Bullet: '3. '
#: origin/all_of_gcc_during_lfs.txt:226
msgid "Issue the following command to install the GNAT compiler:"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:228
msgid "make ins-all prefix=/tools/gnat"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:231
msgid ""
"You should check and ensure that the /tools/gnat directory was created and "
"populated with files. The GNAT source tree can then be removed."
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:232
#, no-wrap
msgid "=================================\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:234
#, no-wrap
msgid ""
"7. CONFIGURING THE PATH VARIABLE:\n"
"=================================\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:238
msgid ""
"You'll need to modify the PATH variable so that the newly installed GNAT "
"compiler is used to bootstrap GCC. Issue the following commands:"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:241
msgid "PATH_HOLD=$PATH export PATH=/tools/gnat/bin:$PATH_HOLD"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:243 origin/all_of_gcc_during_lfs.txt:286
msgid "Ensure your PATH variable was changed properly:"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:245 origin/all_of_gcc_during_lfs.txt:288
msgid "echo $PATH"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:247 origin/all_of_gcc_during_lfs.txt:290
msgid "And if you have the 'which' command installed on your host:"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:249
msgid "which gcc"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:253
msgid ""
"NOTE: if you're using an existing Ada compiler from your host, make the "
"appropriate substitutions above so this compiler is invoked by the 'gcc' "
"command."
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:254 origin/all_of_gcc_during_lfs.txt:294
#, no-wrap
msgid "=====================================\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:256
#, no-wrap
msgid ""
"8. CHAPTER 5 GCC-PASS1 MODIFICATIONS:\n"
"=====================================\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:259
msgid "There's some changes required to the Chapter 5 installation of GCC-Pass1."
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:263
#, no-wrap
msgid ""
"1. You'll need to unpack the gcc-ada tarball along with the gcc-core "
"tarball\n"
"so the GCC Ada sources are available. Alternatively, just unpack the "
"combined\n"
"GCC tarball which contains all the compilers.\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:266
#, no-wrap
msgid ""
"2. Modify the ./configure command to pass --enable-languages=c,ada\n"
"(Note the addition of \",ada\")\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:269
msgid ""
"Except for the changes shown above, follow the commands as outlined in the "
"Chapter 5 GCC-Pass1 instructions in LFS."
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:274
msgid ""
"If desired, remove the /tools/gnat directory at the conclusion of the "
"Chapter 5 GCC-Pass1 instructions, as the GNAT compiler won't be required any "
"longer. All remaining GCC installations are done using the now existing GCC "
"version of Ada."
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:275 origin/all_of_gcc_during_lfs.txt:310 origin/all_of_gcc_during_lfs.txt:348
#, no-wrap
msgid "===================================\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:277
#, no-wrap
msgid ""
"9. RECONFIGURING THE PATH VARIABLE:\n"
"===================================\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:281
msgid ""
"Now that you are done with the GNAT compiler, put your PATH variable back "
"like it was using the following commands:"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:284
msgid "export PATH=$PATH_HOLD unset PATH_HOLD"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:293
msgid "which gcc which gnat"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:296
#, no-wrap
msgid ""
"10. CHAPTER 5 GCC-PASS2 MODIFICATIONS:\n"
"=====================================\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:299
msgid "There's some changes required to the Chapter 5 installation of GCC-Pass2."
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:303
#, no-wrap
msgid ""
"1. You'll need to unpack the gcc-ada tarball along with the gcc-core and \n"
"gcc-g++ tarballs so the GCC Ada sources are available. Alternatively, just "
"\n"
"unpack the combined GCC tarball which contains all the compilers.\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:306 origin/all_of_gcc_during_lfs.txt:336
#, no-wrap
msgid ""
"2. Modify the ./configure command to pass --enable-languages=c,c++,ada\n"
"(Note the addition of \",ada\")\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:309
msgid ""
"Except for the changes shown above, follow the commands as outlined in the "
"Chapter 5 GCC-Pass2 instructions in LFS."
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:312
#, no-wrap
msgid ""
"11. CHAPTER 5 NCURSES MODIFICATIONS:\n"
"===================================\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:318
msgid ""
"Remove the --without-ada switch in the Chapter 5 installation of the Ncurses "
"package if you desire for Ncurses to be Ada-aware and build the Ada hooks.  "
"I'm not real sure this is required in Chapter 5, but I've never bothered to "
"test and see. I just remove the switch and let it build the Ada components."
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:319
#, no-wrap
msgid "===============================\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:321
#, no-wrap
msgid ""
"12. CHAPTER 6 GCC MODIFICATIONS:\n"
"===============================\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:324
msgid "There's some changes required to the Chapter 6 installation of GCC."
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:333
#, no-wrap
msgid ""
"1. You'll need to unpack the gcc-ada tarball along with the gcc-core and \n"
"gcc-g++ tarballs so the GCC Ada sources are available. Alternatively, just "
"\n"
"unpack the combined GCC tarball which contains all the compilers. At this\n"
"point also decide if you'd like to install additional (or all) compilers.\n"
"There's nothing keeping you from installing all of the compilers included\n"
"in the GCC source tarball (providing you followed the other instructions "
"in\n"
"this hint for Fortran 95 and Treelang). Do remember to also unpack the\n"
"testsuite tarball if you used the individual compiler tarballs.\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:339
#, no-wrap
msgid ""
"***** Alternatively, use --enable-languages=all, or add any other "
"additional\n"
"***** compilers on the --enable-languages= parameter.\n"
msgstr ""

#. type: Bullet: '3. '
#: origin/all_of_gcc_during_lfs.txt:341
msgid "After the \"make install\" step, issue the following command:"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:344
msgid ""
"chown -v -R root:root /usr/lib/gcc/i686-pc-linux-gnu/4.1.2/adainclude "
"(modify the GCC version number in the path shown above)"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:347
msgid ""
"Except for the changes shown above, follow the commands as outlined in the "
"Chapter 6 GCC instructions in LFS."
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:350
#, no-wrap
msgid ""
"13. CHAPTER 6 NCURSES MODIFICATIONS:\n"
"===================================\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:356
msgid ""
"If you installed an Ada compiler and you didn't use a parameter to the "
"Ncurses configure script to prevent it from building the Ncurses Ada "
"components, issue the following command to change the ownership of some "
"installed files to the root user."
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:358
msgid "chown -v -R root:root /usr/lib/ada/adainclude"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:359
#, no-wrap
msgid "===========\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:361
#, no-wrap
msgid ""
"14. CLOSING:\n"
"===========\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:367
msgid ""
"Following these easy instructions allows you to install the full suite of "
"GCC compilers during your LFS build, eliminating the time-consuming and "
"perhaps risky process of reinstalling C and C++ later on during your BLFS "
"adventure."
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:370
msgid "ACKNOWLEDGEMENTS:"
msgstr ""

#. type: Bullet: '* '
#: origin/all_of_gcc_during_lfs.txt:373
msgid "Jim Gifford for the tip about using the existing Makefile to install GNAT."
msgstr ""

#. type: Bullet: '* '
#: origin/all_of_gcc_during_lfs.txt:373
msgid "The LFS community for creating and maintaining such a cool project."
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:376
msgid "CHANGELOG:"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:381
#, no-wrap
msgid ""
"[2007-07-01]\n"
"    * Updated the Gnat download instructions\n"
"    * Updated the requirements to install the 'treelang' language\n"
"    * Updated the GMP installation instructions\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:385
#, no-wrap
msgid ""
"[2006-05-18]\n"
"    * Changed the GNAT installation to use the existing Makefile, which\n"
"      eliminates the need to install Tcsh.\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:390
#, no-wrap
msgid ""
"[2006-05-03]\n"
"    * Updated for the LFS-6.2 version, including installing the 4.0.3\n"
"      compiler. Added instructions to install all the compilers, not just\n"
"      the Ada compiler.\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:394
#, no-wrap
msgid ""
"[2005-03-14]\n"
"    * Fixed typo\n"
"    * Modified the Chapter 5 instructions to not use forced static build\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:398
#, no-wrap
msgid ""
"[2005-03-13]\n"
"    * Added instructions to change the ownership of the Ada interface header "
"\n"
"      include files to root\n"
msgstr ""

#. type: Plain text
#: origin/all_of_gcc_during_lfs.txt:401
#, no-wrap
msgid ""
"[2005-03-12]\n"
"    * Original draft\n"
msgstr ""
