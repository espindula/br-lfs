# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-09-02 09:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: origin/lpm.txt:2
msgid "AUTHOR:\t\tDaniel Zilli (daniel@zilli.gulinuxsul.org)"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:4
msgid "DATE:\t\t2004-12-07"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:6
#, no-wrap
msgid "LICENSE:      \tGNU Free Documentation License Version 1.2\n"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:8
#, no-wrap
msgid "SYNOPSIS:   \tLPM - Linux from scratch Package Manager.\n"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:10
msgid "PREREQUISITES: \tNA"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:18
msgid ""
"DESCRIPTION: The great thing about source code is the control that you have "
"about it, and install software by source code is a must for any LFS user, "
"but uninstall it is big a problem. I had severals searches for a easy and "
"efficient method to uninstall a program by source, unfortunately i didn't "
"have successful with my quest. So i decided make this hint. I sure that the "
"LPM will be useful not just for the LFS folks, but to everyone that want to "
"control your codes."
msgstr ""

#. type: Plain text
#: origin/lpm.txt:20
msgid "ATTACHMENTS:"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:22
msgid "Install-log software"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:24
#, no-wrap
msgid "\t\thttp://ioioio.net/devel/install-log/install-log-cvs.tar.bz2\n"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:27
#, no-wrap
msgid ""
"LPM script:\n"
"\t\thttp://www.zilli.gulinuxsul.org/lpm/lpm\n"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:30
msgid "HINT:"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:32
#, no-wrap
msgid ""
"Contents\n"
"========\n"
msgstr ""

#. type: Bullet: '    1. '
#: origin/lpm.txt:40
msgid "Introduction"
msgstr ""

#. type: Bullet: '    2. '
#: origin/lpm.txt:40
msgid "Notes"
msgstr ""

#. type: Bullet: '    3. '
#: origin/lpm.txt:40
msgid "Downloading and Installing"
msgstr ""

#. type: Bullet: '    4. '
#: origin/lpm.txt:40
msgid "How this works"
msgstr ""

#. type: Bullet: '    5. '
#: origin/lpm.txt:40
msgid "How to use"
msgstr ""

#. type: Bullet: '    6. '
#: origin/lpm.txt:40
msgid "End"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:43
#, no-wrap
msgid ""
"1. Introduction\n"
"====================================\n"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:52
msgid ""
"Everyone know that there is no package management system on LFS and for me, "
"must keep this way.  A package management system is not obligatorily (just "
"RPM if you plan make your system LSB compatible)  but, that it can make our "
"life easier there is no doubt, specialty if you prefer binary packages than "
"source codes packages. Unfortunately the packages management like rpm, dpkg "
"and pkgtool don't handle with source codes. So here where I get in. My work "
"here is produce a simple (I like this word!) and efficient environment to "
"work with source code. This works is based on the Installwatch and "
"Install-log hints and other things."
msgstr ""

#. type: Plain text
#: origin/lpm.txt:55
#, no-wrap
msgid ""
"2. Notes\n"
"====================================\n"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:60
msgid ""
"a) In an attempt to make this easier to read, all \"code blocks\" that you "
"should execute on the command line start with \"##--BEGIN-CODE--##\" and end "
"with \"##--END-CODE--##\"."
msgstr ""

#. type: Plain text
#: origin/lpm.txt:62
msgid "b) Do not use this hint before the chapter 6.  Reason: No test !"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:65
#, no-wrap
msgid ""
"3. Downloading and Installing\n"
"====================================\n"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:68
msgid "Configuration, building, and installation of install-log is very simple."
msgstr ""

#. type: Plain text
#: origin/lpm.txt:74
#, no-wrap
msgid ""
"\t##--BEGIN-CODE--##\n"
"\t./configure \n"
"\tmake \n"
"\tmake install\n"
"\t##--END-CODE--##\n"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:77
msgid "The LPM script is easier."
msgstr ""

#. type: Plain text
#: origin/lpm.txt:82
#, no-wrap
msgid ""
"\t##--BEGIN-CODE--##\n"
"\tchmod +x lpm\n"
"\tmv lpm /usr/sbin\n"
"\t##--END-CODE--##\n"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:85
#, no-wrap
msgid ""
"4. How this works\n"
"==================================\n"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:93
msgid ""
"The install-log is a simple shell script to aid in package management when "
"installing from source code.  Run \"install-log <package-name>\" immediately "
"after you type \"make install\" (or whatever you do to install something), "
"and it'll make a list of all the changes to your filesystem to a file and "
"store in /var/log/install-log, for you uninstal, upgrad, or just simply "
"taking account of your system."
msgstr ""

#. type: Plain text
#: origin/lpm.txt:96
#, no-wrap
msgid ""
"5. How to use\n"
"===========================\n"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:99
msgid "#Loggin#"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:102
msgid ""
"When you are reading installation instructions for something, and you see "
"\"make install\", after this you made:"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:106
#, no-wrap
msgid ""
"\t##--BEGIN-CODE--##\n"
"\tlpm -l\n"
"\t##--END-CODE--##\n"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:108
msgid "Example:"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:110
msgid "Every time when you going to compile a software generally you make :"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:114
#, no-wrap
msgid ""
"\t##--BEGIN-CODE--##\n"
"\t./configure && make && make install\n"
"\t##--END-CODE--##\n"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:116
msgid "Now you will make"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:120
#, no-wrap
msgid ""
"\t##--BEGIN-CODE--##\n"
"\t./configure && make && make install && lpm -l\n"
"\t##--END-CODE--##\n"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:124
msgid ""
"By default LPM will record the name of current dirctory as the log file name "
"in /var/log/install-log. If you want to change this, just pass as the second "
"argument the name that you want. Example:"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:128
#, no-wrap
msgid ""
"\t##--BEGIN-CODE--##\n"
"\t./configure && make && make install && lpm -l superfoo\n"
"\t##--END-CODE--##\n"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:130
msgid "That is it!"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:132
msgid "#Erase#"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:137
msgid ""
"Uninstalling software is extremely easy with LMP, you simply give it a log "
"file name from /var/log/install-log, and it will remove the software from "
"your system. Lets say for example, you wanted to uninstall a program called "
"'foobar 1.0'. Since we have the foobar-1.0 log file, we can simply do this:"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:141
#, no-wrap
msgid ""
"\t##--BEGIN-CODE--##\n"
"\tlpm -e foobar-1.0\n"
"\t##--END-CODE--##\n"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:143
msgid "And LPM will produce some output like this:"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:145
#, no-wrap
msgid "\t##..Uninstalling foobar-1.0 is done!..##\n"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:148
msgid "#Report#"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:152
msgid ""
"I already showed you how to use it to uninstall software, now I'm going to "
"show you how to use it to simply see what files got installed with each "
"program.  All you have to do is add \"-r\" to LMP's argument list. See:"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:156
#, no-wrap
msgid ""
"\t##--BEGIN-CODE--##\n"
"\tlpm -r foobar-1.0\n"
"\t##--END-CODE--##\n"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:158
msgid "Now LPM will show all the files that the program installed"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:161
msgid ""
"If you want to see all the log files into the /var/log/install-log directory "
"just don't pass any argument to the \"-r\" option, or simply do this:"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:165
#, no-wrap
msgid ""
"\t##--BEGIN-CODE--##\n"
"\tlpm -r \n"
"\t##--END-CODE--##\n"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:168
#, no-wrap
msgid ""
"6. End\n"
"==================\n"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:175
msgid ""
"Yes! Is just it! This is all you need to control your softwares installed by "
"source. Some hints show how create a binary package using the source "
"installation. I don't see any reason to this. If you installed a package by "
"source, why do you want make a binary package? Anyway, your problems with "
"source code is over!"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:177
msgid "It's just the begin, but I will try make this hint best as I can."
msgstr ""

#. type: Plain text
#: origin/lpm.txt:179
msgid "Any suggestion is welcome, so please let me know."
msgstr ""

#. type: Plain text
#: origin/lpm.txt:182
msgid "ACKNOWLEDGEMENTS:"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:185
msgid ""
"Robert Park <rbpark@ualberta.ca> - Installwatch Andy Goth "
"<unununium@openverse.com> - Install-log"
msgstr ""

#. type: Plain text
#: origin/lpm.txt:209
#, no-wrap
msgid ""
"CHANGELOG:\n"
"[2004-05-19]\n"
"  * Initial release\n"
"[2004-05-20]\n"
"  * Add the official intall-log url.\n"
"  * Remove the old section 2.\n"
"  * Made the hint's text more clean.\n"
"  * Improve the LPM scritp(v.1.1). Now the option -l works!\n"
"[2004-05-21]\n"
"  * LPM scritp(v.1.2). Now you can pass a second argument as a new name to "
"the\n"
"    log file.\n"
"  * Fix some typos and make the hint' text better.\n"
"[2004-05-22]\n"
"   * Improve the layout of the hint. Now the 80 columns is on!\n"
"   * Fix some typos.\n"
"[2004-05-24]\n"
"   * LPM script(v.1.3). Now if you don't pass any argument to the \"-r\" "
"option,\n"
"     it will show a list of all the logfiles from /var/log/install-log.\n"
"   * Improve the comments on the LPM script.      \n"
"   * Fix some typos.\n"
"[2004-12-07]\n"
"   * Made the hint's text more easy to understand.\n"
"   * Updated the urls.\n"
msgstr ""
