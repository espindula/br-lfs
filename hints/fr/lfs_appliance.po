# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-09-02 09:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: origin/lfs_appliance.txt:4
msgid ""
"TITLE:\t\tLinux Appliance LFS VERSION:\tTested Against 4.0 AUTHOR:\t\tRobert "
"Petersen <robert_lfshint@orangefood.com> (LFS ID:2092)"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:8
#, no-wrap
msgid ""
"SYNOPSIS:\n"
"\tBuild a very small LFS based GNU/Linux system suitable for use as a \n"
"\"network appliance.\"\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:10
msgid "HINT:"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:12
msgid "HINT VERSION: 0.0.1 (20030329)"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:16
#, no-wrap
msgid ""
"CHANGELOG:\n"
"\t0.0.1\n"
"\t\tInitial Draft Version\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:18 origin/lfs_appliance.txt:34 origin/lfs_appliance.txt:99 origin/lfs_appliance.txt:119 origin/lfs_appliance.txt:150 origin/lfs_appliance.txt:297 origin/lfs_appliance.txt:358 origin/lfs_appliance.txt:363 origin/lfs_appliance.txt:379 origin/lfs_appliance.txt:495 origin/lfs_appliance.txt:594 origin/lfs_appliance.txt:696
#, no-wrap
msgid "==================================\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:20
#, no-wrap
msgid ""
"0. Table of Content\n"
"==================================\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:33
msgid ""
"1...................................Introduction "
"2.......................................Packages "
"3.........................LFS Chapter 5 Addendum "
"4.............................Post LFS Chapter 5 "
"5.........................Configuring the system "
"6............................................FAQ Appendix "
"A............................References Appendix "
"B..........................LFS Packages Appendix "
"C...............................Patches Appendix "
"D..........................init Scripts Appendix "
"E......................Hardware Example"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:36
#, no-wrap
msgid ""
"1. Introduction\n"
"==================================\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:39
msgid ""
"The purpose of this hint is to create a \"network appliance.\" What this "
"means for each person is an object of some debate.  Webopedia says:"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:47
#, no-wrap
msgid ""
"     A typically inexpensive personal computer, sometimes called \n"
"     a thin client, that enables Internet access and some business-\n"
"     related activities but lacks many features of a fully equipped \n"
"     PC, such as a hard drive or CD-ROM. Applications used on \n"
"     network appliances typically are housed on a Web server accessed\n"
"     by the appliance. Network appliances are used to ease remote \n"
"     management and cut costs.\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:49
#, no-wrap
msgid "     http://networking.webopedia.com/TERM/N/network_appliance.html  \n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:57
#, no-wrap
msgid ""
"Despite the various meanings which exist, for the purposes of this hint a \n"
"network appliance is:\n"
"- An inexpensive computer, x86 based in this case\n"
"- Limited utility outside it's particular purpose, e.g. file serving, mp3\n"
"  playing, X10 controlling, firewall, etc.\n"
"- Limited resources such as: minimal storage(e.g. fit on a CF card), not an "
"\n"
"  very fast processor, minimal memory.\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:64
msgid ""
"To get a better idea if this hint will be right for you it might helpful to "
"understand what my initial project was.  I wanted a small and quite computer "
"which will play MP3s streamed from a remote \"server\" and show a slide show "
"of images also hosted on a remote computer.  The details of the hardware I "
"used in my project are listed in Appendix E, though this hint should work on "
"hardware other than that which is listed."
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:70
msgid ""
"So, \"why not use vanilla LFS,\" you ask? Well LFS was a little bit big for "
"me.  Part of the \"quite\" part of the target system was to use a CF card "
"rather than a hard drive (see Appendix E).  Also LFS makes a rather useful "
"generic system, I had a specific purpose in mind, and development and the "
"associated tools, were not part of that purpose, so no GCC."
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:78
msgid ""
"In a nutshell here are the changes I made to the standard LFS: - No "
"development tools on the target system - No documentation - No glibc, used "
"uClibc instead - Use busybox rather than various miscellaneous utilities and "
"the shell - No getty or login - No system v init scripts, use the busybox "
"version."
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:81
msgid ""
"This leaves a platform perfect adding whatever functionality you want with a "
"minimal amount of overhead, but on it's own has very limited functionality."
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:84
msgid ""
"If this sounds like what you are looking for then keep reading.  If this "
"sounds a bit too striped down then you may want to read these hints instead:"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:87
#, no-wrap
msgid ""
"uclibc-lfs:\n"
"\thttp://hints.linuxfromscratch.org/hints/uclibc-lfs.txt\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:90
#, no-wrap
msgid ""
"Stripping down an LFS:\n"
"\thttp://hints.linuxfromscratch.org/hints/stripped-down.txt\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:92
msgid "Glad you decided to keep reading!"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:98
msgid ""
"Despite your willingness to continue on you might want the above hints "
"anyway, as they inform a lot of what happens here.  Also your success with "
"this hint is more likely if you have actually built a \"regular\" LFS "
"system.  Also the instructions here are _very_ brief and not really "
"explained well, so reading LFS will help you gain a greater understanding."
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:101
#, no-wrap
msgid ""
"2. Packages\n"
"==================================\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:106
msgid ""
"One of the benefits of building a smaller system is that you need to "
"download fewer packages.  While there is no harm in downloading all the LFS "
"packages. If you would rather download only the necessary files then "
"checkout Appendix B and download only those files."
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:109
msgid ""
"In addition to the set of \"standard\" LFS packages you'll need to download "
"the following packages and extract them in the same directory as the other "
"packages."
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:112
msgid ""
"uClibc Patches "
"ftp://ftp.linuxfromscratch.org/lfs-hints/patches/uclibc-lfs-patches-0.3.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:115
msgid "uClibc 0.9.14 http://www.uclibc.org/downloads/uClibc-0.9.14.tar.gz"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:118
msgid "BusyBox 0.60.5 http://www.busybox.net/downloads/busybox-0.60.5.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:121
#, no-wrap
msgid ""
"3. LFS Chapter 5 Addendum\n"
"==================================\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:136
msgid ""
"Chapter 5 created a bunch of tools which are statically linked.  Thus, when "
"we enter the chroot environment the tools will continue to work in the "
"absence shared libraries, a more detailed and undoubtedly more correct "
"explanation can be found here: "
"http://www.linuxfromscratch.org/view/4.0/chapter05/whystatic.html.  Chapter "
"6 continues to build the main system the LFS system once we enter the chroot "
"environment (Chapter 6).  However given that we will not be building all the "
"packages in Chapter 6, specifically some of the necessary development "
"packages, we need to create statically linked versions of those which are "
"needed.  It turns out that we really only need to build two packages: - Perl "
"(for the uClibc build)  - modutils (for the kernel build)"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:144
#, no-wrap
msgid ""
"--INSTALL STATICALY LINKED PERL 5.8.0--\n"
"./Configure -Dprefix=/static -Dinstallprefix=$LFS/static -Dso=none \\\n"
"  -Dldflags=-static -Uinstallusrbinperl -Uusedl -Dman1dir=none \\\n"
"  -d -e &&\n"
"make &&\n"
"make install\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:149
msgid ""
"--INSTALL STATICALY LINKED MODUTILS 2.4.19-- ./configure "
"--prefix=$LFS/static/usr && make LDFLAGS=-static && make install"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:152
#, no-wrap
msgid ""
"4. Post LFS Chapter 5\n"
"==================================\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:159
msgid ""
"This section of the hint is an alternative to rest of LFS only insomuch as "
"it provides the commands to execute to build the basic LFS appliance "
"system.  If you've not built the full LFS system then you should give the "
"original LFS a read, as it explains the purpose of each command, the files "
"in the packages and is very educational.  That being said to actually build "
"the system you should execute the commands listed here."
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:164
msgid ""
"As an aside, I don't really trust \"make clean\" so as a personal preference "
"I usually delete the source and start over.  By the way there is no real "
"basis for this irrational disbelief in \"make clean\" so a reasonable person "
"would ignore me."
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:166
msgid "Before you begin make sure you are root again and the $LFS is set."
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:172
#, no-wrap
msgid ""
"--ENTER THE CHROOT ENVIRONMENT--\n"
"chroot $LFS /static/bin/env -i \\\n"
"    HOME=/root TERM=$TERM PS1='\\u:\\w\\$ ' \\\n"
"    PATH=/bin:/usr/bin:/sbin:/usr/sbin:/static/bin \\\n"
"    /static/bin/bash --login\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:175
msgid "--CHANGE OWNERSHIP-- chown -R 0:0 *"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:183
msgid ""
"--CREATE DIRECTORIES-- mkdir -p /{bin,boot,dev/pts,etc,home,lib,mnt,proc} && "
"mkdir -p /{root,sbin,tmp,usr,var} && mkdir -p "
"/usr/{bin,etc,lib,sbin,include,share} mkdir /var/{lock,log,mail,run,spool} "
"&& mkdir -p /var/{tmp,cache,lib/misc,local} && ln -s ../var/tmp /usr"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:191
#, no-wrap
msgid ""
"*note: This directory tree is based on the LFS tree which is based on FHS\n"
"(http://www.pathname.com/fhs/) but lacks /usr/local/games and "
"/usr/share/games.\n"
"This tree lacks additional directories:\n"
"/usr/src\n"
"/usr/share/*\n"
"/usr/local/*\n"
"/opt/*\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:193
msgid "/usr/include is created but will be deleted during the cleanup."
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:197
msgid "--SET PERMISSIONS-- chmod 0750 /root && chmod 1777 /tmp /var/tmp"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:200
msgid "--MOUNT THE PROC FILE SYSTEM-- mount proc /proc -t proc"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:203
#, no-wrap
msgid ""
"*note: The message \"warning: can't open /etc/fstab: No such file or "
"directory\"\n"
"is ok\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:213
msgid ""
"--CREATE THE SYMLINKS-- ln -sf /proc/mounts /etc/mtab && ln -sf "
"/static/bin/bash /bin && ln -sf bash /bin/sh && ln -sf /static/bin/perl "
"/usr/bin && ln -sf /static/bin/true /bin && ln -sf /static/usr/sbin/depmod "
"/sbin && ln -sf /static/bin/find /usr/bin/ && ln -sf /static/bin/gzip "
"/bin/gzip"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:230
msgid ""
"--CREATE THE PASSWD AND GROUP FILES-- echo "
"\"root:x:0:0:root:/root:/bin/bash\" > /etc/passwd && cat > /etc/group << "
"\"EOF\" root:x:0: bin:x:1: sys:x:2: kmem:x:3: tty:x:4: tape:x:5: daemon:x:6: "
"floppy:x:7: disk:x:8: lp:x:9: dialout:x:10: audio:x:11: EOF"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:236
msgid ""
"--CREATE DEVICES-- cp MAKEDEV-1.7 /dev/MAKEDEV && cd /dev && chmod 754 "
"MAKEDEV && ./MAKEDEV -v generic"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:248
msgid ""
"--INSTALL KERNAL HEADERS-- ln -sf /static/bin/pwd /bin/pwd && make mrproper "
"&& make include/linux/version.h && make symlinks && mkdir /usr/include/asm "
"&& cp include/asm/* /usr/include/asm && cp -R include/asm-generic "
"/usr/include && cp -R include/linux /usr/include && touch "
"/usr/include/linux/autoconf.h && rm /bin/pwd"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:255
#, no-wrap
msgid ""
"--INSTALL UCLIBC --\n"
"patch -Np1 < ../uclibc-lfs-patches/uClibc-0.9.14.patch &&\n"
"ln -sf extra/Configs/Config.i386 Config &&\n"
"make DOSHAREDMAIN=true DO_C99_MATH=true HAS_SHADOW=true DOLFS=true \\\n"
"  INCLUDE_RPC=true HAS_WCHAR=true KERNEL_SOURCE=/usr/src/linux-2.4.19 \\\n"
"  all install\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:260
msgid ""
"--INSTALL BUSYBOX-- patch -Np1 < ../busybox-0.60.5-appliance.patch && make "
"&& make PREFIX=/ install"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:265
msgid ""
"--INSTALL LINUX KERNEL-- Installing Linux is a bit interesting in our chroot "
"environment.  The first thing to do is prepare the source code by executing "
"the command:"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:267
msgid "make mrproper"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:275
msgid ""
"Next is to configure the kernel.  You ought to read this: "
"http://www.linuxfromscratch.org/view/4.0/chapter08/kernel.html You should "
"include what your system needs.  Helpful statement huh? Well I'll tell you "
"for my project I configured the following; - My network card (as a module)  "
"- My sound card (as a module)  - Frame buffer support"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:279
msgid ""
"We don't have ncurses so \"make menuconfig\" will _not_ work in the chroot "
"environment, so if you want to configure the kernel in the chroot "
"environment then your are stuck with this:"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:281
msgid "make config"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:285
#, no-wrap
msgid ""
"* What I do, and this is very ungeek because it involves a gui, is switch "
"to\n"
"another terminal window in X and do a \"make xconfig\".  The same technique "
"\n"
"applies to menuconfig.\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:287
msgid "Now you we actually build the kernel:"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:296
msgid ""
"make dep && make bzImage && make modules && make modules_install && cp "
"arch/i386/boot/bzImage /boot/kernel-2.4.19 && ln -sf kernel-2.4.19 "
"/boot/bzImage && cp System.map /boot/System.map-2.4.19 && ln -sf "
"System.map-2.4.19 /boot/System.map"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:299
#, no-wrap
msgid ""
"5. Configuring the system\n"
"==================================\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:304
msgid ""
"You've now got actually have _very_ basic system which is essentially the "
"appliance platform. As it is not configured if you started it up you would "
"get a prompt, some nifty programs and not much else.  This chapter "
"introduces the init system and does some cleanup"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:309
msgid ""
"--init scripts-- The details of the init script are highly specific to my "
"purposes.  Your needs will likely be different.  Therefore the scripts here "
"are presented as a guide rather something which should be copied."
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:314
msgid ""
"In our system init program is actually BusyBox.  BusyBox _does not_ provide "
"a full System V style init.  To understand how it works read the \"init\" "
"description on: http://www.busybox.net/downloads/BusyBox.html"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:317
msgid ""
"BusyBox looks for a program called /etc/init.d/rcS.  The listing of all the "
"init scripts in Appendix D.  Briefly, my scripts do this:"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:334
#, no-wrap
msgid ""
"/etc/init.d/rcS\n"
"  This program simply looks in /etc/init.d/rcS.d/ for any scripts that \n"
"  start with an 'S' and runs that program.  If there is an error then \n"
"  a message is printed to the console.\n"
"/etc/init.d/rcS.d/S01rd\n"
"  Sets up a ram disk\n"
"/etc/init.d/rcS.d/S02syslog\n"
"  Starts logging\n"
"/etc/init.d/rcS.d/S03mount\n"
"  Mounts the filesystems\n"
"/etc/init.d/rcS.d/S04network\n"
"  Starts the network\n"
"/etc/init.d/rcS.d/S05sound\n"
"  Loads the sound modules\n"
"/etc/init.d/rcS.d/S04modules\n"
"  Loads kernel modules\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:338
msgid ""
"-- Clean Up -- If you have more programs to build, which you should because "
"they system isn't very useful right now, then do that first."
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:341
msgid "Exit the chroot environment: exit"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:348
msgid ""
"At this point we move the sources, the headers and the statically linked "
"tools.  Insure that $LFS is set.  Also there should be a place to hold the "
"sources, headers and tools.  I create a directory, /lfs_static and set the "
"environment variable $LFS_STATIC.  The point of moving the files is so that "
"if later some additional software needs to be build or some kernel modules "
"added then that can be done."
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:357
msgid ""
"mv $LFS/usr/include $LFS_STATIC && mv $LFS/usr/src $LFS_STATIC && mv "
"$LFS/static $LFS_STATIC && rm /bin/bash && rm /sbin/depmod && ln -sf busybox "
"/bin/sh && ln -sf busybox /bin/gzip && ln -sf ../../bin/busybox "
"/usr/bin/find"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:360
#, no-wrap
msgid ""
"6. FAQ\n"
"==================================\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:362
msgid "There are no FAQ, yet."
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:365
#, no-wrap
msgid ""
"Appendix A: References\n"
"==================================\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:368
msgid "LFS, this is base LFS book http://www.linuxfromscratch.org/"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:374
msgid ""
"BusyBox, provides commands, a simple shell and init.  \"The Swiss Army Knife "
"of Embedded Linux\" http://www.busybox.net/ uClibc (yew-see-lib-see), a much "
"smaller glibc replacement http://www.uclibc.org/"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:378
msgid ""
"udhcp, a small dhcp client/server.  Indirectly referenced in the init script "
"appendix.  http://udhcp.busybox.net/"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:381
#, no-wrap
msgid ""
"Appendix B: LFS Packages\n"
"==================================\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:386
msgid ""
"Bash (2.05a) - 1,400 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/bash-2.05a.tar.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/bash-2.05a.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:390
msgid ""
"Binutils (2.13) - 9,651 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/binutils-2.13.tar.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/binutils-2.13.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:394
msgid ""
"Bzip2 (1.0.2) - 610 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/bzip2-1.0.2.tar.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/bzip2-1.0.2.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:398
msgid ""
"Diffutils (2.8.1) - 642 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/diffutils-2.8.1.tar.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/diffutils-2.8.1.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:402
msgid ""
"Fileutils (4.1) - 1,217 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/fileutils-4.1.tar.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/fileutils-4.1.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:406
msgid ""
"Fileutils Patch (4.1) - 1 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/fileutils-4.1.patch.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/fileutils-4.1.patch.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:410
msgid ""
"Findutils (4.1) - 226 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/findutils-4.1.tar.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/findutils-4.1.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:414
msgid ""
"Findutils Patch (4.1) - 1 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/findutils-4.1.patch.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/findutils-4.1.patch.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:418
msgid ""
"Gawk (3.1.1) - 1,420 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/gawk-3.1.1.tar.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/gawk-3.1.1.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:422
msgid ""
"Gawk Patch (3.1.1-2) - 1 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/gawk-3.1.1-2.patch.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/gawk-3.1.1-2.patch.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:426
msgid ""
"GCC (3.2) - 20,043 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/gcc-3.2.tar.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/gcc-3.2.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:430
msgid ""
"GCC Patch (3.2) - 4 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/gcc-3.2.patch.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/gcc-3.2.patch.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:434
msgid ""
"Grep (2.5) - 545 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/grep-2.5.tar.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/grep-2.5.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:438
msgid ""
"Gzip (1.2.4a) - 179 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/gzip-1.2.4a.tar.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/gzip-1.2.4a.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:442
msgid ""
"Gzip Patch (1.2.4b) - 1 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/gzip-1.2.4b.patch.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/gzip-1.2.4b.patch.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:446
msgid ""
"Linux (2.4.19) - 25,432 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/linux-2.4.19.tar.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/linux-2.4.19.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:450
msgid ""
"Make (3.79.1) - 794 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/make-3.79.1.tar.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/make-3.79.1.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:454
msgid ""
"Modutils (2.4.19) - 213 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/modutils-2.4.19.tar.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/modutils-2.4.19.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:458
msgid ""
"Patch (2.5.4) - 149 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/patch-2.5.4.tar.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/patch-2.5.4.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:462
msgid ""
"Perl (5.8.0) - 8,416 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/perl-5.8.0.tar.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/perl-5.8.0.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:466
msgid ""
"Sed (3.02) - 221 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/sed-3.02.tar.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/sed-3.02.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:470
msgid ""
"Sh-utils (2.0) - 824 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/sh-utils-2.0.tar.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/sh-utils-2.0.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:474
msgid ""
"Sh-utils Patch (2.0) - 1 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/sh-utils-2.0.patch.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/sh-utils-2.0.patch.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:478
msgid ""
"Tar (1.13) - 730 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/tar-1.13.tar.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/tar-1.13.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:482
msgid ""
"Tar Patch (1.13) - 1 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/tar-1.13.patch.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/tar-1.13.patch.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:486
msgid ""
"Texinfo (4.2) - 1,175 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/texinfo-4.2.tar.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/texinfo-4.2.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:490
msgid ""
"Textutils (2.1) - 1,847 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/textutils-2.1.tar.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/textutils-2.1.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:494
msgid ""
"Util-linux (2.11u) - 1,073 KB: "
"ftp://ftp.linuxfromscratch.org/lfs-packages/4.0/util-linux-2.11u.tar.bz2 "
"http://ftp.linuxfromscratch.org/lfs-packages/4.0/util-linux-2.11u.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:497
#, no-wrap
msgid ""
"Appendix C: Patches\n"
"==================================\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:501
msgid ""
"This patch to the BusyBox Config.h enables a few extra featurs, like insmod, "
"without which our system would be really useless.  If you plan on adjusting "
"Config.h to suit your own needs then you don't need this patch"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:590
#, no-wrap
msgid ""
"diff -ru busybox-0.60.5.orig/Config.h busybox-0.60.5/Config.h\n"
"--- busybox-0.60.5.orig/Config.h\t2002-09-17 15:04:28.000000000 -0700\n"
"+++ busybox-0.60.5/Config.h\t2003-03-19 22:54:19.000000000 -0800\n"
"@@ -38,7 +38,7 @@\n"
" #define BB_ECHO\n"
" #define BB_ENV\n"
" //#define BB_EXPR\n"
"-//#define BB_FBSET\n"
"+#define BB_FBSET\n"
" //#define BB_FDFLUSH\n"
" #define BB_FIND\n"
" #define BB_FREE\n"
"@@ -51,12 +51,12 @@\n"
" #define BB_HALT\n"
" #define BB_HEAD\n"
" //#define BB_HOSTID\n"
"-//#define BB_HOSTNAME\n"
"+#define BB_HOSTNAME\n"
" //#define BB_HUSH\n"
" #define BB_ID\n"
"-//#define BB_IFCONFIG\n"
"+#define BB_IFCONFIG\n"
" #define BB_INIT\n"
"-//#define BB_INSMOD\n"
"+#define BB_INSMOD\n"
" #define BB_KILL\n"
" #define BB_KILLALL\n"
" #define BB_KLOGD\n"
"@@ -75,9 +75,9 @@\n"
" //#define BB_MD5SUM\n"
" #define BB_MKDIR\n"
" //#define BB_MKFIFO\n"
"-//#define BB_MKFS_MINIX\n"
"+#define BB_MKFS_MINIX\n"
" #define BB_MKNOD\n"
"-#define BB_MKSWAP\n"
"+//#define BB_MKSWAP\n"
" //#define BB_MKTEMP\n"
" #define BB_MODPROBE\n"
" #define BB_MORE\n"
"@@ -86,9 +86,9 @@\n"
" //#define BB_MT\n"
" #define BB_MV\n"
" //#define BB_NC\n"
"-//#define BB_NSLOOKUP\n"
"+#define BB_NSLOOKUP\n"
" #define BB_PIDOF\n"
"-//#define BB_PING\n"
"+#define BB_PING\n"
" //#define BB_PIVOT_ROOT\n"
" #define BB_POWEROFF\n"
" //#define BB_PRINTF\n"
"@@ -102,7 +102,7 @@\n"
" #define BB_RM\n"
" #define BB_RMDIR\n"
" //#define BB_RMMOD\n"
"-//#define BB_ROUTE\n"
"+#define BB_ROUTE\n"
" //#define BB_RPM2CPIO\n"
" #define BB_SED\n"
" //#define BB_SETKEYCODES\n"
"@@ -134,7 +134,7 @@\n"
" //#define BB_UPDATE\n"
" #define BB_UPTIME\n"
" //#define BB_USLEEP\n"
"-//#define BB_VI\n"
"+#define BB_VI\n"
" //#define BB_WATCHDOG\n"
" #define BB_WC\n"
" //#define BB_WGET\n"
"@@ -333,7 +333,7 @@\n"
" //#define BB_FEATURE_MINIX2\n"
" //\n"
" // Enable ifconfig status reporting output -- this feature adds 7k.\n"
"-//#define BB_FEATURE_IFCONFIG_STATUS\n"
"+#define BB_FEATURE_IFCONFIG_STATUS\n"
" //\n"
" // Enable ifconfig slip-specific options \"keepalive\" and \"outfill\"\n"
" //#define BB_FEATURE_IFCONFIG_SLIP\n"
"diff -ru busybox-0.60.5.orig/Makefile busybox-0.60.5/Makefile\n"
"--- busybox-0.60.5.orig/Makefile\t2002-10-26 21:47:54.000000000 -0700\n"
"+++ busybox-0.60.5/Makefile\t2003-03-19 21:07:34.000000000 -0800\n"
"@@ -49,7 +49,7 @@\n"
" # just 1.4k to the binary size (which is a _lot_ less then glibc NSS "
"costs).\n"
" # Note that if you want hostname resolution to work with glibc, you still "
"need\n"
" # the libnss_* libraries.  \n"
"-USE_SYSTEM_PWD_GRP = true\n"
"+USE_SYSTEM_PWD_GRP = false\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:593
#, no-wrap
msgid ""
" # This enables compiling with dmalloc ( http://dmalloc.com/ )\n"
" # which is an excellent public domain mem leak and malloc problem\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:596
#, no-wrap
msgid ""
"Appendix D: init Scripts\n"
"==================================\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:602
msgid ""
"-- /etc/init.d/rcS -- This program simply looks in /etc/init.d/rcS.d/ for "
"any scripts that start with an 'S' and runs that program.  If there is an "
"error then a message is printed to the console."
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:605
msgid "#!/bin/sh # Begin /etc/init.d/rcS"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:611
#, no-wrap
msgid ""
"for i in /etc/init.d/rcS.d/S*\n"
"do\n"
"  [ ! -f  \"$i\" ] && continue;\n"
"  $i start\n"
"  error_value=$?\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:620
#, no-wrap
msgid ""
"  if [ $error_value != 0 ]\n"
"  then\n"
"    echo \"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\"\n"
"    echo \"An unexpected error has occurred is the script $i.\"\n"
"    echo \"The script exited with a return value of $error_value.\"\n"
"    echo \"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\"\n"
"  fi\n"
"done\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:622
msgid "# End /etc/init.d/rcS"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:629
msgid ""
"-- /etc/init.d/rcS.d/S01rd -- On the system I build I mount the root "
"partition as read only.  The root partition is a CF card and I didn't want "
"to use up the 100,000 write cycles with a bunch of logging and temp stuff.  "
"So the writable areas are mapped to a ram disk.  The kernel will need to be "
"compiled with ram disk support, but initrd is not necessary for this.  This "
"is useful for CD-ROM as well."
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:634
msgid ""
"Preparations: The first thing to do is setup the writable bits of the LFS "
"partition to link to the ram disk, in this case /mnt/ram.  Execute these "
"commands, insure that $LFS is set:"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:641
msgid ""
"mkdir $LFS/mnt/ram ln -sf /mnt/ram/etc/resolv.conf $LFS/etc/resolv.conf && "
"rm -Rf $LFS/var && ln -sf /mnt/ram/var $LFS/var && rm -Rf $LFS/tmp && ln -sf "
"var/tmp $LFS/tmp &&"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:645
msgid ""
"The dhcp client will write the names servers to use to /etc/resolv.conf so "
"this file is linked to the ram disk. The /var and /tmp areas need to be "
"writable by various programs and for logging so they too are linked to the "
"ram disk."
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:650
msgid ""
"The script creates ram disk of 20MB, though you can make it what ever size "
"suits your needs.  It then creates a filesystem. Minix is used because it's "
"the only thing BusyBox knows how to create.  The ram disk is mounted and the "
"appropriate directories are created to satisfy the links."
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:660
msgid ""
"echo Setting up ramdisk insmod rd rd_size=20000 dd if=/dev/zero of=/dev/ram "
"mkfs.minix /dev/ram mount /dev/ram /mnt/ram -t minix mkdir -p "
"/mnt/ram/var/log mkdir /mnt/ram/var/tmp mkdir /mnt/ram/etc echo Setting up "
"ramdisk complete"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:663
msgid "-- /etc/init.d/rcS.d/S02syslog -- Simply starts up the logging daemons."
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:668
msgid ""
"echo Starting system logging klogd syslogd echo Starting system logging "
"complete"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:673
msgid ""
"-- /etc/init.d/rcS.d/S03mount -- Mounts the file systems, in this case "
"/proc.  A mount -a could be thrown in if you have other filesystems listed "
"in /etc/fstab (I don't)."
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:677
msgid ""
"echo Mounting file systems mount /proc /proc -t proc echo Mounting file "
"systems complete"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:682
msgid ""
"-- /etc/init.d/rcS.d/S04network -- Loads the correct network module, yours "
"will likely be different and starts the udhcp client.  *note the udhcp "
"client is not installed as part of this hint see the URL in the references "
"appendix for more information."
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:688
msgid ""
"echo Bringing up network modprobe via-rhine ifconfig eth0 up udhcpc echo "
"Bringing up network complete"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:691
msgid ""
"-- /etc/init.d/rcS.d/S05sound -- Loads the sound card module.  Your sound "
"card will likely be different."
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:695
msgid ""
"echo Starting sounds subsystems modprobe via82cxxx_audio echo Starting "
"sounds subsystems complete"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:698
#, no-wrap
msgid ""
"Appendix E: Hardware Example\n"
"==================================\n"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:705
msgid ""
"This is a list of the hardware I used for my project.  You don't need to use "
"this hardware, though I've only tested on the hardware listed below.  I main "
"reason for this selection of hardware is that it was relatively inexpensive "
"and quite.  I have no fans or moving parts in this system.  The three main "
"pieces a computer which move and make noise are the CPU fan on the "
"mainboard, the hard drive and the power supply."
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:712
msgid ""
"-- Mainboard -- VIA EPIA M "
"(http://www.viavpsd.com/product/epia_m_spec.jsp?motherboardId=81)  This "
"mainboard was selected because of it's size and fanless operation. The "
"mainboard includes a network interface, sound subsystem, 1 PCI slot, "
"fireware, USB 2.0 and TV out.  Full details at the link above."
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:716
msgid ""
"Unfortunately as a Linux platform it is less that perfect.  Driver support "
"isn't fantastic.  A good thread on the current support is here: "
"http://forums.viaarena.com/messageview.cfm?catid=28&threadid=33324"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:721
msgid ""
"I have not tried to use the USB or the firewire, they are not even compiled "
"into the kernel, so I have no idea if they will work.  The network device "
"works with the VIA Rhine module that comes with the stock kernel "
"(CONFIG_VIA_RHINE)."
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:728
msgid ""
"The sound drives were a bit of a trick, as they are not supported in the "
"2.4.19 kernel, the kernel which this hint and LFS are based on.  The modules "
"in the Alan Cox patched 2.4.20 kernel (2.4.20-ac2) do work.  You can get "
"them from kernel.org: "
"http://www.kernel.org/pub/linux/kernel/v2.4/linux-2.4.20.tar.bz2 "
"http://www.kernel.org/pub/linux/kernel/people/alan/linux-2.4/2.4.20/patch-2.4.20-ac2.bz2"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:735
msgid ""
"-- Hard drive -- I replaced the hard drive with a CF card, I'm using a 16 MB "
"CF card and have about 10 MB left over.  It looks like a regular hard drive "
"with the help of an IDE/CF adapter, the software doesn't need to be changed "
"at all.  I bought this one: "
"http://www.acscontrol.com/Index_ACS.asp?Page=/Pages/Products/CompactFlash/IDE_To_CF_Adapter.htm"
msgstr ""

#. type: Plain text
#: origin/lfs_appliance.txt:741
msgid ""
"-- Power Supply -- As of this moment my power supply is on back order.  I am "
"planning on using This one, which has no fan and produces 60 watts of power "
"from a 12 volt input: http://www.mini-box.com/PW-60.htm It's been a couple "
"of weeks now so I may end up building one myself."
msgstr ""
