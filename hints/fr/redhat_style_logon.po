# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-09-02 09:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: origin/redhat_style_logon.txt:4
msgid ""
"TITLE:\t\tThe RedHat-Style Logon Prompt Hint LFS VERSION:\tAll "
"AUTHOR:\t\tChris Baker <chris@aoe.vt.edu>"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:11
#, no-wrap
msgid ""
"SYNOPSIS:\n"
"\tRedHat Linux presents the user with a customized login prompt immediately "
"\n"
"after booting and whenever you logout.  This prompt neatly clears the screen "
"\n"
"and displays the version of RedHat and the Linux kernel in use just above "
"the \n"
"login prompt.  The following hint describes how to achieve a similar effect "
"\n"
"with your Linux From Scratch system.\n"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:13
msgid "HINT:"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:16
#, no-wrap
msgid ""
"Background\n"
"------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:18
msgid "Anyone familiar with RedHat Linux has seen its attractive login prompt:"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:21
#, no-wrap
msgid ""
"\tRedHat Linux 7.1 (Seawolf)\n"
"\tKernel 2.4.8 on an i686\n"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:23 origin/redhat_style_logon.txt:31
#, no-wrap
msgid "\tlocalhost login:\n"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:27
msgid ""
"After you terminate your session, the screen clears, and the prompt is again "
"displayed.  You'll notice that your new LFS system will instead leave you "
"dangling after you logout:"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:29
#, no-wrap
msgid "\t[root@localhost:~]# logout\n"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:33
msgid "Functional, yes, but polished, no."
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:35
#, no-wrap
msgid ""
"What's Really Happening?\n"
"------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:40
msgid ""
"The local login process is really a two-step affair.  By default, LFS calls "
"the program /sbin/agetty, which opens a tty port, prompts for a login name, "
"and invokes the /bin/login command.  The login executable verifies your "
"password and completes the housekeeping necessary to drop you off in a "
"shell."
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:45
msgid ""
"(By contrast, RedHat uses mingetty, and both agetty and mingetty are "
"descendents of the original getty.  I believe it's the differences between "
"mingetty and agetty that allows for the screen to be cleared without a "
"complicated workaround in RedHat Linux, but I'm getting ahead of myself.)"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:48
msgid ""
"In reality, agetty is actually configured from within the /etc/inittab file "
"by a series of six lines similar to"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:52
#, no-wrap
msgid ""
"\t1:2345:respawn:/sbin/agetty tty1 9600\n"
"\t...\n"
"\t6:2345:respawn:/sbin/agetty tty6 9600\n"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:58
msgid ""
"which basically define six \"virtual consoles\" (on devices tty1 through "
"tty6) to be invoked during runlevels 2-5 (basically everything but halt, "
"single-user, and reboot modes), and set to \"respawn\" continuously.  In "
"other words, while the system is in multi-user mode, whenever a virtual "
"console session terminates, another login is immediately displayed courtesy "
"of agetty."
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:60
#, no-wrap
msgid ""
"Customizing the Logon Message\n"
"------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:63
msgid ""
"The first step, integrating a customized message to display before the login "
"prompt, is extremely straightforward.  Simply create the file /etc/issue:"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:67
#, no-wrap
msgid ""
"\tcat > /etc/issue << \"EOF\"\n"
"\tLinux From Scratch 3.0-rc2\n"
"\tKernel 2.4.8 on an i686\n"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:69
#, no-wrap
msgid "\tEOF\n"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:71
msgid "Now, after you login and logout again, you'll see the following:"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:74
#, no-wrap
msgid ""
"\tLinux From Scratch 3.0-rc2\n"
"\tKernel 2.4.8 on an i686\n"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:76 origin/redhat_style_logon.txt:143
#, no-wrap
msgid "\tlocalhost login: \n"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:80
msgid ""
"We're halfway there, but we still haven't got the screen clearing before our "
"message is displayed, which means that whatever leftovers are there from our "
"previous session are still visible above the prompt."
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:82
#, no-wrap
msgid ""
"Clearing the Screen\n"
"------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:87
msgid ""
"One way to solve this problem is to create a .bash_logout file in your home "
"directory containing the command \"clear\".  This will clear the screen "
"after you log out, but it won't clear the screen right after the system "
"boots, and you'll have to set one up for each individual user.  That's not "
"very elegant."
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:93
msgid ""
"Instead, we'll take advantage of a feature built into agetty for the purpose "
"of initializing modems and other serial devices through which one might "
"connect in addition to the more common tty interface.  By adding the \"-I "
"<initstring>\" option to agetty in the /etc/inittab file, we can pass raw "
"characters to the tty interface."
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:99
msgid ""
"In order to clear the screen and position the cursor at the upper-left "
"corner, we need to take advantage of two ANSI escape sequences.  The first, "
"\"ESC[2J\", clears the screen, while the second, \"ESC[f\", positions the "
"cursor.  Since the ESC key is a special non-printing character, we have to "
"use alternate means to inject it into the data stream."
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:105
msgid ""
"ESC has an ASCII value of 27, which corresponds to an octal value of 033.  "
"According to the man page for agetty, we can pass non-printing characters "
"via the -I option by prepending them with a backslash followed by their "
"octal value, so in this case ESC = \\033.  (Octal numbers always have a "
"leading zero to differentiate them from decimal numbers.)"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:110
msgid ""
"Putting it all together, we have the sequence '\\033[2J\\033[f' which will "
"clear the screen and reposition the cursor to the upper-left corner.  All "
"that's left to do is to modify /etc/inittab so that the above-mentioned "
"agetty lines now read like so:"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:114
#, no-wrap
msgid ""
"\t1:2345:respawn:/sbin/agetty -I '\\033[2J\\033[f' tty1 9600\n"
"\t...\n"
"\t6:2345:respawn:/sbin/agetty -I '\\033[2J\\033[f' tty6 9600\n"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:117
msgid ""
"Now all that remains is to bring the new /etc/inittab file into play.  To do "
"so, simply issue the command:"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:119
#, no-wrap
msgid "\ttelinit q\n"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:124
msgid ""
"(Thanks to Randy Hron for pointing this out to me, and to Edward Ellis for "
"suggesting the equivalent command \"init q\".  Luis Miguel Lourenco also "
"wrote to me mentioning \"kill -HUP 1\" as another way to restart the init "
"process without rebooting.)"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:126
#, no-wrap
msgid ""
"Conclusion\n"
"------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:131
msgid ""
"Now you should have a fully-functional, clear screen, custom login prompt.  "
"As an aside, check the man page for agetty for some nifty backslash codes "
"that can be inserted into /etc/issue to pull values out automatically.  For "
"instance \\r will spit out the current kernel revision, and \\d inserts the "
"date."
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:133
msgid "I've modified mine to read"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:136
#, no-wrap
msgid ""
"\tLinux From Scratch 3.0-rc2\n"
"\tKernel \\r on an \\m (\\l)\n"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:138
msgid "which expands to"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:141
#, no-wrap
msgid ""
"\tLinux From Scratch 3.0-rc2\n"
"\tKernel 2.4.8 on an i686 (tty1)\n"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:145
msgid "Good luck!"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:147
#, no-wrap
msgid ""
"Update\n"
"------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:154
msgid ""
"Shaun O'Neil has figured out a way to implement the screen clearing codes in "
"the manner I had originally intended--by including them in /etc/issue, "
"instead of passing them via agetty as configured in /etc/inittab.  I had "
"originally tried putting the sequence \"\\033[2J\\033[f\" at the beginning "
"of /etc/issue, however, I quickly learned that it was just printed verbatim."
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:161
msgid ""
"Instead, Shaun used vim to insert the escape character thusly: while editing "
"the /etc/issue file in vim, use the sequence CTRL-V CTRL-ESC to insert a "
"literal escape character.  Follow this with [2J and repeat for the second "
"code.  (Note that the escape character will print as \"^[\" on the screen, "
"and you must put in the left bracket again after it.  In other words, the "
"final sequence will display as"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:163
#, no-wrap
msgid "\t^[[2J^[[f\n"
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:166
msgid ""
"on the screen in vim.  Put this sequence before your logon message, and "
"you're all set."
msgstr ""

#. type: Plain text
#: origin/redhat_style_logon.txt:169
msgid ""
"Once you've modified /etc/issue in this manner, there is no need to pass "
"codes to the terminal through agetty, so there is no need to edit "
"/etc/inittab at all as detailed in this hint.  Shaun's proves to be a much "
"cleaner and easier method!"
msgstr ""
