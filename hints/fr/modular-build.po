# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-09-02 09:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: origin/modular-build.txt:2
#, no-wrap
msgid "AUTHOR:         Jim Gifford <lfs-hints at jg555.com>\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:4
#, no-wrap
msgid "DATE: \t\t2004-05-18\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:6
msgid "LICENSE: \tGNU Free Documentation License Version 1.2"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:8
msgid "SYNOPSIS:\tGuide for a Modular Kernel"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:12
#, no-wrap
msgid ""
"DESCRIPTION:\tThis hint will provide information to assist in the\n"
"\t\tuse of a modular kernel. This is a guide, not detailed\n"
"\t\tinformation on how to build a kernel.\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:14
msgid "PREREQUISITES:\tNONE"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:16
msgid "HINT:"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:18
msgid "INTRODUCTION:"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:22
#, no-wrap
msgid ""
"\tIn this hint we will explain how to use modules with LFS. This is \n"
"\tnot a requirement. The information here is used as an example, since "
"every\n"
"\tLFS build is specific to the equipment that it's built on. \n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:27
#, no-wrap
msgid ""
"\tIf you are not sure of what modules to load, you may not\n"
"\twant to use the information that is listed in this appendix. If this is "
"your\n"
"\tfirst LFS build, it is recommended to use a a monolithic kernel. Read "
"this\n"
"\tentire appendix before attempting a modular build.\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:29
msgid "REQUIREMENTS:"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:32
#, no-wrap
msgid ""
"\tThis section will explain how to properly setup the 2.6 Kernel\n"
"\tfor module support.\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:34
#, no-wrap
msgid "\tKernel Requirements for Modules\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:37
#, no-wrap
msgid ""
"\tTo use modules with the kernel it is recommended that you compile in\n"
"\tthe following options. Listed are the minimal requirements only.\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:41
#, no-wrap
msgid ""
"\tFirst select \n"
"\t\t\tLoadable module support  --->\n"
"\t\t\tCheck [*] Enable loadable module support\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:43
#, no-wrap
msgid "\tThis will allow you to compile system components as modules. \n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:45
#, no-wrap
msgid "\tCaveats\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:49
#, no-wrap
msgid ""
"\tNot everything in the kernel can be compiled as a module, to\n"
"\tverify that a particular option can be compiled as a module look for\n"
"\t< > brackets before a kernel component.\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:55
#, no-wrap
msgid ""
"\tEven if the component compiles as a module, your particular setup\n"
"\tmay not work properly with modules. A good example of this would be an\n"
"\tinitrd. You can compile <M> RAM disk support as a module, but you would\n"
"\tlose the initrd functionality since initrd depends on ramfs, and since\n"
"\tramfs is a module, your initrd functionality is no longer available. \n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:60
#, no-wrap
msgid ""
"\tAnother example of this is Frame Buffer Console devices, if you want\n"
"\tthem available at boot-up, you need to compile them into the kernel and "
"not as\n"
"\tmodules. The list goes on, but most of the time it is trial and error to "
"figure\n"
"\tout why a modular system doesn't work.\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:62
#, no-wrap
msgid "\tCheck [*] Enable loadable module support\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:66
#, no-wrap
msgid ""
"\tAfter selecting the above option, you will now be able to create \n"
"\tloadable modules on your LFS system. This also adds more build steps to\n"
"\tyour final kernel build.\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:70
#, no-wrap
msgid ""
"\tSince you have selected loadable module support, you will need at adjust\n"
"\tyour build of the kernel by adding the next two commands to the build "
"process\n"
"\tafter make bzImage you will need to issue the following commands.\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:73
#, no-wrap
msgid ""
"\tmake modules\n"
"\tmake modules_install\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:75
#, no-wrap
msgid "\tCheck <userinput>[*]   Automatic kernel module loading\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:78
#, no-wrap
msgid ""
"\tAfter selection these options your kernel will support modules and the\n"
"\tautoloading of modules via the modprobe command.\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:80
msgid "MODPROBE:"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:83
#, no-wrap
msgid ""
"\tIn this section we will explain how to use setup a proper\n"
"\tmodprobe.conf file for use with LFS.\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:85
#, no-wrap
msgid "\tBasic Configuration\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:92
#, no-wrap
msgid ""
"\tThe modprobe.conf file follows the devices structure layout that is\n"
"\tincluded with the kernel. Check your "
"linux-{linux-version}/Documentation/devices.txt\n"
"\tfor information. That file is you guide on how to configure\n"
"\tmodprobe.conf. WARNING - This may be overwhelming to the novice user\n"
"\tand directions need to be followed exactly for everything to work\n"
"\tproperly.\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:99
#, no-wrap
msgid ""
"\tI will give you an example using the floppy drive. Each floppy drive\n"
"\thas a major # and a minor number. But each floppy drive uses the same\n"
"\tdriver named floppy. So we can look into devices.txt file and we\n"
"\twill find that the major # for a floppy drive is 2, and that it is\n"
"\ta block device. In our modprobe.conf file we would specify the\n"
"\tfollowing:\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:101
#, no-wrap
msgid "\talias block-major-2 floppy\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:103
#, no-wrap
msgid "\tAdvanced Configuration\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:120
#, no-wrap
msgid ""
"\tIf you have more than one SCSI interface the same rules do apply, \n"
"\tbut with a slight variance. Say we have a mega-raid controller and a "
"aic7xxx\n"
"\tdevice. We want the mega-raid adapter to be the first one loaded, and "
"the\n"
"\taic7xx the next device. We would search are devices.txt and figure out\n"
"\twhat the first SCSI drive major and minor # is. In this example the "
"major\n"
"\tis 8 and the minor is 1. Remember before a SCSI disk can be used, the\n"
"\tsd_mod driver needs to be loaded first. Now depending the # of \n"
"\tdrives you have on your mega-raid controller, you will need to\n"
"\tfigure out what the first drive is going to be for your aic7xxx\n"
"\tcontroller. Remember to check you devices.txt and figure out\n"
"\twhat is the interval between drives, for SCSI drives it is 16.\n"
"\tYou will need to add take the # of drives available on your mega-raid\n"
"\tcontroller, which we will use 3 and multiply that by 16, which would "
"give\n"
"\tyou 48. So the next controllers drive would start out 64, the next "
"logical\n"
"\tvalue. To accomplish this, you will need to specify the following\n"
"\tin your modprobe.conf:\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:124
#, no-wrap
msgid ""
"\talias block-major-8 sd_mod\n"
"\talias block-major-8-1 megaraid\n"
"\talias block-major-8-48 aic7xxx\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:126
msgid "MODPROBE.CONF:"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:129
#, no-wrap
msgid ""
"\tIn this section we will give you an working example of a proper\n"
"\tmodprobe.conf file for use with LFS. </para>\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:131
#, no-wrap
msgid "\tSample modprobe.conf\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:135
#, no-wrap
msgid ""
"\tBelow is an example modprobe.conf file. You will need to edit\n"
"\tthis file and replace the values that are in brackets with the unique\n"
"\tvalues from your system.\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:138
#, no-wrap
msgid ""
"\tCreate the /etc/modprobe.conf file by running the following\n"
"\tcommand:\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:140
#, no-wrap
msgid "\tcat > /etc/modprobe.conf << \"EOF\"\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:143
#, no-wrap
msgid ""
"\t# Binary Format\n"
"\talias binfmt-0000 binfmt_misc\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:155
#, no-wrap
msgid ""
"\t# Block Major\n"
"\talias block-major-1 rd\n"
"\talias block-major-2 floppy\n"
"\talias block-major-7 loop\n"
"\talias block-major-8 sd_mod\n"
"\talias block-major-8-1 [scsi module for /dev/sda]\n"
"\talias block-major-8-16 [scsi module for /dev/sdb]\n"
"\talias block-major-8-32 [scsi module for /dev/sdc]\n"
"\talias block-major-11 sr_mod\n"
"\talias block-major-11-0 [scsi module for /dev/sr0]\n"
"\talias block-major-11-1 [scsi module for /dev/sr1]\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:184
#, no-wrap
msgid ""
"\t# Character Major\n"
"\talias char-major-3 ide-core\n"
"\talias char-major-4 serial_core\n"
"\talias char-major-5 serial_core\n"
"\talias char-major-4-64 8250\n"
"\talias char-major-4-65 8250\n"
"\talias char-major-5-64 8250\n"
"\talias char-major-5-65 8250\n"
"\talias char-major-6 lp\n"
"\talias char-major-9 st\n"
"\talias char-major-9-1 [scsi module for /dev/st0]\n"
"\talias char-major-10 misc\n"
"\talias char-major-10-1 psaux\n"
"\talias char-major-10-130 softdog\n"
"\talias char-major-10-135 rtc\n"
"\talias char-major-10-144 nvram\n"
"\talias char-major-10-184 microcode\n"
"\talias char-major-13 input\n"
"\talias char-major-13-32 mousedev\n"
"\talias char-major-21 sg\n"
"\talias char-major-22 ide-core\n"
"\talias char-major-33 ide-core\n"
"\talias char-major-34 ide-core\n"
"\talias char-major-37 ide-tape\n"
"\talias char-major-56 ide-core\n"
"\talias char-major-57 ide-core\n"
"\talias char-major-108 ppp_generic\n"
"\talias char-major-188 usbserial\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:190
#, no-wrap
msgid ""
"\t# Net PF\n"
"\talias net-pf-1 unix\n"
"\talias net-pf-2 ipv4\n"
"\talias net-pf-10 off\n"
"\talias net-pf-17 af_packet\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:197
#, no-wrap
msgid ""
"\t# Aliases\n"
"\talias dos msdos\n"
"\talias dummy0 dummy\n"
"\talias dummy1 dummy\n"
"\talias iso9660 isofs\n"
"\talias parport_lowlevel parport_pc\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:208
#, no-wrap
msgid ""
"\t# Network Devices\n"
"\talias eth0 [network module for eth0]\n"
"\talias eth1 [network module for eth1]\n"
"\talias ppp0 ppp\n"
"\talias ppp-compress-18 ppp_mppe\n"
"\talias ppp-compress-21 bsd_comp\n"
"\talias ppp-compress-24 ppp_deflate\n"
"\talias ppp-compress-26 ppp_deflate\n"
"\talias tty-ldisc-3 ppp_async\n"
"\talias tty-ldisc-14 ppp_synctty\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:212
#, no-wrap
msgid ""
"\t# SCSI Devices\n"
"\talias scsi_hostadapter [first scsi device module]\n"
"\talias scsi_hostadapter1 [second scsi device module]\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:218
#, no-wrap
msgid ""
"\t# USB Devices\n"
"\talias usbdevfs usbcore\n"
"\talias usb-controller [module for first usb controller]\n"
"\talias usb-controller1 [module for second usb controller]\n"
"\talias char-major-81 videodev\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:222
#, no-wrap
msgid ""
"\t# Video Devices\n"
"\talias fb0 [module for framebuffer]\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:228
#, no-wrap
msgid ""
"\t# Character Sets\n"
"\talias charCE nls_iso8859_1\n"
"\talias codeUS nls_cp437\n"
"\talias codeUTF nls_utf8\n"
"\tEOF\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:230
#, no-wrap
msgid "\tHow to update modprobe.conf\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:235
#, no-wrap
msgid ""
"\tIf you need to add more devices to the modprobe.conf you will\n"
"\tneed to use information from the help screen of the module and from the\n"
"\tdevices.txt file that is the Documentation directory of the kernel "
"source.\n"
"\tBelow is sample data from devices.txt and how to use it in modprobe.conf\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:243
#, no-wrap
msgid ""
"\tFrom devices.txt\n"
"\t        8 block       SCSI disk devices (0-15)\n"
"        \t              0 = /dev/sda          First SCSI disk whole disk\n"
"                             16 = /dev/sdb          Second SCSI disk whole "
"disk\n"
"                       \t     32 = /dev/sdc          Third SCSI disk whole "
"disk\n"
"                             ...\n"
"                             240 = /dev/sdp          Sixteenth SCSI disk "
"whole disk\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:247
#, no-wrap
msgid ""
"                     Partitions are handled in the same way as for IDE\n"
"                     disks (see major number 3) except that the limit on\n"
"                     partitions is 15.\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:253
#, no-wrap
msgid ""
"\tYou will need to extract the need information from above. Let's say we\n"
"\thave a /dev/sdp which is connected to aic7xxx controller. To add it to our "
"existing\n"
"\tmodprobe.conf. We would need to know the major number, in this case is "
"block 8\n"
"\tand the minor number, in this case is 240. Now to add it to our "
"modprobe.conf\n"
"\tfile, we would add the following:\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:255
#, no-wrap
msgid "\talias block-major-8-240 [scsi module for /dev/sdp]\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:257
msgid "INITRD:"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:261
#, no-wrap
msgid ""
"\tThis is not recommended if you have never built a LFS system\n"
"\tbefore. If you attempt this, it is at your own risk. Deviating from the "
"book may\n"
"\tresult in a non-working LFS build.\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:265
#, no-wrap
msgid ""
"\tIf you are going to make a fully modular kernel, you will need to create "
"an initrd\n"
"\tto boot your system. You can get full instructions be following the "
"detailed\n"
"\tinstructions listed in linux-{linux-version}/Documentation/initrd.txt.\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:268
#, no-wrap
msgid ""
"\tYou can also follow the information listed in the initrd hint located at\n"
"\thttp://www.linuxfromscratch.org/hints/downloads/files/initrd.txt\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:270
#, no-wrap
msgid "VERSION:        1.0\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:272
#, no-wrap
msgid "CHANGELOG:     \t1.0 Initial Release\n"
msgstr ""

#. type: Plain text
#: origin/modular-build.txt:274
#, no-wrap
msgid ""
" New Version of this document can be viewed from "
"http://cvs.jg555.com/viewcvs.cgi/lfs-hints\n"
msgstr ""
