# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-09-02 09:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: origin/jlenv.txt:1
#, no-wrap
msgid "--------------------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:4
#, no-wrap
msgid ""
"Building a Japanese Environment from Scratch\n"
"�̣ƣӤ����ܸ��Ķ��ι���\n"
"--------------------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:7
msgid "AUTHOR: Dan Bernard <dan.bernard@cwru.edu>"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:9
msgid "DATE: 2005-04-14"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:11
msgid "LICENSE: GNU Free Documentation License v1.2"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:15
#, no-wrap
msgid ""
"         Other versions of this document may be released under the\n"
"         BSD Documentation License (FreeBSD sample license below)\n"
"         http://www.freebsd.org/doc/en/books/handbook/ln16.html\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:17
msgid ""
"SYNOPSIS: Setting up Japanese input and output for terminals and "
"applications"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:18 origin/jlenv.txt:29 origin/jlenv.txt:44 origin/jlenv.txt:672 origin/jlenv.txt:769
#, no-wrap
msgid "--------------------------------------------------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:20
#, no-wrap
msgid ""
"DESCRIPTION:\n"
"--------------------------------------------------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:28
#, no-wrap
msgid ""
"  A number of applications and libraries are required for practical "
"support\n"
"  of the Japanese language in a UNIX-based environment.  There is no "
"single\n"
"  standard for any of them.  This hint will cover the basics for setting "
"up\n"
"  a working Japanese environment that supports input and output of "
"standard\n"
"  Japanese characters.  Localization and specialized applications should "
"be\n"
"  regarded separately.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:31
#, no-wrap
msgid ""
"PREREQUISITES:\n"
"--------------------------------------------------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:40
#, no-wrap
msgid ""
"  Depending on what you may have already installed with regard to general\n"
"  libraries and applications from Beyond Linux from Scratch (BLFS), and\n"
"  which optional programs you choose to install, you could require\n"
"  between 60 MB and 200 MB of free hard disk space for retrieving,\n"
"  unpacking, building, and installing this software.  In any event,\n"
"  The build should require less than five static Binutils units (SBU)\n"
"  of compile time.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:43
#, no-wrap
msgid ""
"  This hint is good for any build of LFS with either framebuffer\n"
"  support or X windowing system.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:46
#, no-wrap
msgid ""
"HINT:\n"
"--------------------------------------------------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:50
#, no-wrap
msgid ""
"  1. Background\n"
"  --------------------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:72
#, no-wrap
msgid ""
"  The de-facto standard for setting up Japanese language support in "
"Unix-based\n"
"  environments today is package management.  Either scripted builds with "
"auto-\n"
"  mated dependency resolution or strictly managed binary package "
"distributions\n"
"  are the only documented ways of making your Linux machine capable of "
"reading\n"
"  and writing Japanese text in a way that you can use.  However, such "
"packages\n"
"  can not reasonably be managed in a scratch-built Linux environment.  "
"Because\n"
"  building from scratch is the only feasible and desirable way to achieve "
"this\n"
"  interaction in such an environment, it helps to have proper documentation "
"on\n"
"  the subject.  Unfortunately, due to the prevalence of package management "
"and\n"
"  fully localized distributions, no complete documentation exists publicly "
"for\n"
"  those who may want or need to make a Japanese Linux environment from "
"scratch\n"
"  without any sort of package management.  It requires many different "
"programs\n"
"  and libraries, a good deal of configuration, and a fundamental "
"understanding\n"
"  of client-server models for input and conversion, which is largely "
"different\n"
"  from simply installing certain applications which may have their own "
"methods\n"
"  for input and conversion.  The purpose of this document is to provide "
"anyone\n"
"  the basic knowledge and guidance necessary to install complete support for "
"a\n"
"  Japanese environment.  This document will not demonstrate how to install "
"any\n"
"  other applications that may use Japanese input as supported by the "
"Japanese\n"
"  environment, but only the underlying utilities that allow such "
"applications\n"
"  to function properly with Japanese input and output.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:75
#, no-wrap
msgid ""
"  2. Requirements\n"
"  --------------------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:79
#, no-wrap
msgid ""
"  The following software may have X11 dependencies (X11R4 or later), so it\n"
"  is best to install X11 first before attempting to install programs that\n"
"  have X11 dependencies.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:91
#, no-wrap
msgid ""
"  Libraries:\n"
"                Imlib2\n"
"                libpng\n"
"                libast\n"
"                libjpeg\n"
"                freetype\n"
"  Programs:\n"
"                FreeWnn\n"
"                Canna (optional)\n"
"                kinput2 (requires any version of X)\n"
"                Eterm (optional in XFree86 4.4 or later)\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:94
#, no-wrap
msgid ""
"  FreeWnn and Canna are some of many kana-kanji conversion servers.  Only "
"one\n"
"  is absolutely needed, although some applications prefer FreeWnn or "
"Canna.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:99
#, no-wrap
msgid ""
"  For most applications, kinput2 is a general input and conversion client\n"
"  which connects to conversion servers and provides input to applications\n"
"  whose interfaces do not support Japanese input by default.  Even without\n"
"  a conversion server, kinput2 can still input kana and convert from "
"romaji.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:102
#, no-wrap
msgid ""
"  Eterm is a versatile terminal emulator for X11 with many graphical "
"features.\n"
"  Eterm supports many languages in addition to having full CJK support.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:105
#, no-wrap
msgid ""
"  3. Download\n"
"  --------------------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:108
#, no-wrap
msgid ""
"  The following links point to places on the Internet where the latest\n"
"  versions of the required software can be found.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:111
#, no-wrap
msgid ""
"  freetype:\n"
"                http://freetype.sf.net/\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:114
#, no-wrap
msgid ""
"  libjpeg:\n"
"                http://ijg.org/files/\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:117
#, no-wrap
msgid ""
"  libpng:\n"
"                http://sourceforge.net/projects/libpng/\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:120
#, no-wrap
msgid ""
"  Imlib2:\n"
"                http://freshmeat.net/projects/imlib2/\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:123
#, no-wrap
msgid ""
"  libast:\n"
"                http://site.n.ml.org/info/libast/\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:126
#, no-wrap
msgid ""
"  Canna:\n"
"                http://download.sourceforge.jp/canna/\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:129
#, no-wrap
msgid ""
"  FreeWnn:\n"
"                ftp://ftp.freewnn.org/pub/FreeWnn/alpha/\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:132
#, no-wrap
msgid ""
"  kinput2:\n"
"                ftp://ftp.sra.co.jp/pub/x11/kinput2/\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:135
#, no-wrap
msgid ""
"  Eterm:\n"
"                http://www.eterm.org/download/\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:138
#, no-wrap
msgid ""
"  jfbterm:\n"
"\t\thttp://jfbterm.sourceforge.jp/\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:143
#, no-wrap
msgid ""
"  If any of the above links happen to be inaccessible when you attempt to\n"
"  connect, try doing a Google search for the name of the given project.\n"
"  I found each of these links from Google, and there are many more\n"
"  sites that distribute these popular sources.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:146
#, no-wrap
msgid ""
"  4. Installation\n"
"  --------------------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:154
#, no-wrap
msgid ""
"  Now that you have all the source tarballs unpacked in their appropriate\n"
"  directories, it is time to commence the build.  Make sure that you know\n"
"  your installation paths before installation.  I am assuming PREFIX=/usr\n"
"  as that is for compatibility with the official BLFS documentation, but\n"
"  of course any location should work fine.  I use /usr/local personally. \n"
"  If you install any of the libraries in a non-default directory, be sure\n"
"  to run ldconfig after each build and installation.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:156
#, no-wrap
msgid "  freetype:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:158
#, no-wrap
msgid "      FreeType is a portable ANSI C-based TrueType font rendering library.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:160
#, no-wrap
msgid "      freetype2:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:162
#, no-wrap
msgid "          Last checked against version 2.1.5\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:165
#, no-wrap
msgid ""
"          This library is a part of the BLFS CVS.\n"
"          For more details, look at the latest BLFS.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:169 origin/jlenv.txt:185
#, no-wrap
msgid ""
"            ./configure --prefix=/usr &&\n"
"            make &&\n"
"            make install\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:171
#, no-wrap
msgid "      freetype:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:175
#, no-wrap
msgid ""
"          This library only needs to be installed if your system cannot\n"
"          use the FreeType2 library.  If you already have the above\n"
"          library installed, then skip this part.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:177
#, no-wrap
msgid "          Last checked against version 1.3.1\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:181
#, no-wrap
msgid ""
"          Download size:                  1.4 MB\n"
"          Estimated disk space required:  9.3 MB\n"
"          Estimated build time:          0.19 SBU\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:187
#, no-wrap
msgid "  libjpeg:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:190
#, no-wrap
msgid ""
"      libjpeg is a package of libraries that handle image compression based "
"on\n"
"      the standard of the Joint Photographic Experts Group (JPEG "
"standard).\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:192
#, no-wrap
msgid "      Last checked against version 6b (IJG)\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:195 origin/jlenv.txt:209 origin/jlenv.txt:223
#, no-wrap
msgid ""
"      This library is a part of the BLFS CVS.\n"
"      For more details, look at the latest BLFS.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:199
#, no-wrap
msgid ""
"        ./configure --enable-static --enable-shared --prefix=/usr &&\n"
"        make &&\n"
"        make install\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:201
#, no-wrap
msgid "  libpng:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:204
#, no-wrap
msgid ""
"      libpng is the official library that support all features of\n"
"      the Portable Network Graphics format.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:206
#, no-wrap
msgid "      Last checked against version 1.2.5\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:213
#, no-wrap
msgid ""
"        make prefix=/usr ZLIBINC=/usr/include            \\\n"
"             ZLIBLIB=/usr/lib -f scripts/makefile.linux &&\n"
"        make prefix=/usr install -f scripts/makefile.linux\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:215
#, no-wrap
msgid "  Imlib2:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:218
#, no-wrap
msgid ""
"      Imlib2 is an image library for X11 that transparently handles\n"
"      multiple image formats in a number of applications.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:220
#, no-wrap
msgid "      Last checked against version 1.1.0\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:227 origin/jlenv.txt:243
#, no-wrap
msgid ""
"        ./configure --prefix=/usr &&\n"
"        make &&\n"
"        make install\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:229
#, no-wrap
msgid "  libast:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:233
#, no-wrap
msgid ""
"      libast stands for \"Library of Assorted Spiffy Things.\"\n"
"      It handles string manipulation, text parsing, and memory\n"
"      tracking, among other things.  libast was originally libmej.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:235
#, no-wrap
msgid "      Last checked against version 0.5\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:239
#, no-wrap
msgid ""
"      Download size:                  270 kB\n"
"      Estimated disk space required:  9.7 MB\n"
"      Estimated build time:          0.24 SBU\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:245
#, no-wrap
msgid "  Canna:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:248
#, no-wrap
msgid ""
"      Canna is a popular kana-kanji conversion server made by NEC.\n"
"      Canna is formerly known as Iroha, but the protocol is still the "
"same.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:255
#, no-wrap
msgid ""
"      Canna requires that your system have a user and group named 'bin' "
"for\n"
"      the ownership of certain files.  On a default LFS install, the group\n"
"      bin should already exist with gid=1.  Therefore, I suggest that user\n"
"      bin have uid=1.  This, however is arbitrary.  Popular uid's for user\n"
"      bin also include 2 and 3 on other UNIX systems where 1 may already "
"be\n"
"      used.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:257
#, no-wrap
msgid "      Last checked against version 3.6p3\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:261
#, no-wrap
msgid ""
"      Download size:                  1.4 MB\n"
"      Estimated disk space required: 28.8 MB\n"
"      Estimated build time:          0.69 SBU\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:269
#, no-wrap
msgid ""
"        useradd -u 1 -g 1 -d / -s /bin/false bin &&\n"
"        xmkmf &&\n"
"        make Makefile &&\n"
"        make canna &&\n"
"        make install &&\n"
"        make install.man &&\n"
"        cp -a /usr/local/canna/include/canna/ /usr/include/\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:271
#, no-wrap
msgid "  FreeWnn:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:277
#, no-wrap
msgid ""
"      FreeWnn is a popular kana-kanji conversion server based on Wnn.\n"
"      Wnn was developed jointly by Kyoto University, ASTEC Incorporated,\n"
"      and Tateishi Electronics Company (now OMRON Corporation).  Wnn was\n"
"      the first full-featured kana-kanji conversion server available to\n"
"      the public.  The latest version (Wnn6) is proprietary.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:282
#, no-wrap
msgid ""
"      FreeWnn also comes with uum, although it has to be built separately.\n"
"      Uum is a Japanese input method for any terminal, which means X is\n"
"      not necessary.  This is thus especially handy on consoles, including\n"
"      jfbterm on Linux framebuffer consoles.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:287
#, no-wrap
msgid ""
"      Take note now that this package is optional, especially if you are\n"
"      running low on available hard disk space.  I recommend installing\n"
"      FreeWnn only if you know that you need a third-party application\n"
"      that prefers interfacing with a Wnn server, or if you need uum.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:294
#, no-wrap
msgid ""
"      FreeWnn requires that your system have a user and group named 'wnn'\n"
"      in order to install and run.  Therefore, I suggest that user wnn "
"have\n"
"      uid=22273 and gid=22273.  This is because the standard TCP/UDP port\n"
"      number for Wnn's Japanese kanji conversion server is 22273.  This is\n"
"      arbitrary, however.  Popular uid's for user wnn also include 49 and\n"
"      69 on other UNIX systems where other versions of Wnn may be used.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:296
#, no-wrap
msgid "      Last checked against version 1.1.1-a020\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:301
#, no-wrap
msgid ""
"      Download size:                  2.9 MB\n"
"      Estimated disk space required: 61.8 MB\n"
"      Estimated build time:          0.93 SBU\n"
"      Estimated build time with uum: 0.99 SBU\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:308
#, no-wrap
msgid ""
"        groupadd -g 22273 wnn &&\n"
"        useradd -u 22273 -g 22273 -d / -s /bin/false wnn &&\n"
"        ./configure --prefix=/usr --sysconfdir=/etc &&\n"
"        make &&\n"
"        make install &&\n"
"        make install.man\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:310
#, no-wrap
msgid ""
"      To compile and install uum, it will be necessary to run the "
"following:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:316
#, no-wrap
msgid ""
"        cd Wnn/uum &&\n"
"        sed -e 's/termcap/curses/g' ../../makerule.mk > makerule.mk.bak &&\n"
"        mv makerule.mk.bak ../../makerule.mk &&\n"
"\tmake &&\n"
"\tmake install\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:318
#, no-wrap
msgid "  kinput2:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:327
#, no-wrap
msgid ""
"      kinput2 is a Japanese input method for X11.  It can interface\n"
"      with a variety of kana-kanji conversion servers and input\n"
"      Japanese text into any kinput2 client.  Supported input\n"
"      styles include on-the-spot, off-the-spot, over-the-spot,\n"
"      and root-window styles.  kinput2 supports the new XIM\n"
"      Protocol.  By default, kinput2 is configured to connect\n"
"      to Canna (Iroha) and Sj3 for kana-kanji conversion, and\n"
"      does not, by default, interface with any Wnn servers.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:332
#, no-wrap
msgid ""
"      This hint disables Sj3 support, leaving only support for\n"
"      a Canna server.  If you wish for kinput2 to interface with\n"
"      Wnn or Sj3 or not to interface with Canna, simply edit the\n"
"      Kinput2.conf file in the root of the kinput2 source tree.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:334
#, no-wrap
msgid "      Last checked against version 3.1\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:338
#, no-wrap
msgid ""
"      Download size:                  500 kB\n"
"      Estimated disk space required: 19.7 MB\n"
"      Estimated build time:          0.17 SBU\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:347
#, no-wrap
msgid ""
"        cp Kinput2.conf Kinput2.conf.bak &&\n"
"        sed 's%#define\\ UseSj3%\\/\\*\\ #define\\ UseSj3\\ \\*\\/%' \\\n"
"            Kinput2.conf.bak > Kinput2.conf &&\n"
"        xmkmf &&\n"
"        make Makefiles &&\n"
"        make depend &&\n"
"        make &&\n"
"        make install\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:349
#, no-wrap
msgid "  Eterm:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:351
#, no-wrap
msgid "      Eterm is a full-featured VT102 terminal emulator.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:353
#, no-wrap
msgid "      Last checked against version 0.9.2\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:357
#, no-wrap
msgid ""
"      Download size:                  647 kB\n"
"      Estimated disk space required:  3.4 MB\n"
"      Estimated build time:          0.58 SBU\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:363
#, no-wrap
msgid ""
"        ./configure --prefix=/usr --sysconfdir=/etc --without-terminfo       "
"\\\n"
"                    --with-backspace=bs --enable-utmp --enable-auto-encoding  "
"\\\n"
"                    --enable-multi-charset=kanji --enable-xim --enable-trans "
"&&\n"
"        make &&\n"
"        make install\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:365
#, no-wrap
msgid "  jfbterm:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:368
#, no-wrap
msgid ""
"      Jfbterm is a terminal emulator capable of displaying Japanese "
"character\n"
"      sets (and other multibyte character sets) on a Linux framebuffer "
"console.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:378
#, no-wrap
msgid ""
"      First off, while this can work (working version released right after "
"I\n"
"      tested the buggy one that didn't make it into my original hint!), it "
"can\n"
"      still be very touchy depending on what else is on your system.  While "
"it\n"
"      is not absolutely required to have X installed, it does depend on a "
"lot\n"
"      of fonts that would usually be bundled with an X11 install.  It may "
"not\n"
"      look clean, but the easiest way I got this to build and run on a "
"machine\n"
"      without X was to copy /usr/X11R6 from another machine and keep the "
"fonts.\n"
"      You may also need to create a fonts directory in your $PREFIX/share "
"for\n"
"      whatever reason if you do not already have it.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:386
#, no-wrap
msgid ""
"      There may also be a very annoying dependency on automake-1.4, which "
"may\n"
"      require you to have another local install of automake if you already "
"use\n"
"      another version.  I tried many things to rectify this, but always "
"came\n"
"      up short, and did not want to learn more about automake/autoconf "
"given\n"
"      that they are both more trouble than they are worth.  The least "
"painful\n"
"      measure I can recommend is installing automake-1.4 locally, "
"compiling\n"
"      jfbterm, and then deleting automake-1.4 if no longer necessary.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:394
#, no-wrap
msgid ""
"      Another important thing that may not be present on a default LFS "
"system\n"
"      is a framebuffer device node.  If `ls /dev/fb*` comes up blank, "
"you'll\n"
"      need to make one.  If you have a script in your /dev directory, you "
"can\n"
"      modify that and run it appropriately, or just use the appropriate "
"mknod\n"
"      command depending on your system, e.g. `mknod /dev/fb0 c 29 0`.  "
"This\n"
"      would also be a good time to check the permissions on your device "
"nodes\n"
"      and set them accordingly.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:396
#, no-wrap
msgid "      Last checked against version 0.4.6\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:400
#, no-wrap
msgid ""
"      Download size:                  121 kB\n"
"      Estimated disk space required: 1.78 MB\n"
"      Estimated build time:          0.05 SBU\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:408
#, no-wrap
msgid ""
"\t./configure --prefix=/usr --enable-reverse-video --enable-color-gamma \\\n"
"\t            --enable-dimmer &&\n"
"\tsed -e 's/utmp/root/' Makefile > Makefile.bak &&\n"
"\tmv Makefile.bak Makefile &&\n"
"\tchmod 755 configure &&\n"
"\tmake &&\n"
"\tmake install\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:410
#, no-wrap
msgid "      Now, make sure that the jfbterm terminfo exists.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:412
#, no-wrap
msgid "\ttic terminfo.jfbterm\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:415
#, no-wrap
msgid ""
"  5. Configuration\n"
"  --------------------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:419
#, no-wrap
msgid ""
"  After all the necessary software libraries and programs have been "
"installed,\n"
"  there still remains some configuration that must be done in order for "
"the\n"
"  Japanese environment to work.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:421
#, no-wrap
msgid "  Conversion Servers and Scripts:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:423
#, no-wrap
msgid "    Canna:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:428
#, no-wrap
msgid ""
"      It is necessary first to start your kana-kanji conversion server.  It "
"is\n"
"      easy to start Canna, but an adjustment needs to be made first.  "
"Because\n"
"      all Canna programs are located in /usr/local/canna/bin by default, "
"they\n"
"      need to be added to the default PATH.  In a csh-compatible shell, "
"run\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:430
#, no-wrap
msgid "        setenv PATH `echo $PATH`:/usr/local/canna/bin\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:432
#, no-wrap
msgid "      If you use a Bourne-compatible shell, then you can run\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:434
#, no-wrap
msgid "        export PATH=`echo $PATH`:/usr/local/canna/bin\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:440
#, no-wrap
msgid ""
"      Since you must run cannaserver as root, then you will be setting "
"environment\n"
"      variables quite often.  To modify your default PATH so that it "
"contains the\n"
"      Canna programs each time you log in, then you can change the PATH "
"settings\n"
"      in your login scripts, preferably the global /etc/login.defs file, and "
"be\n"
"      sure to include that path in the superuser settings.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:443
#, no-wrap
msgid ""
"      To start the Canna conversion server, become root, verify that your "
"PATH\n"
"      environment variable is correct, and then run\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:445
#, no-wrap
msgid "        cannaserver start\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:448
#, no-wrap
msgid ""
"      To make sure that your Canna server is running, run cannastat (as any "
"user),\n"
"      and you should see something resembling\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:451
#, no-wrap
msgid ""
"        Connected to unix\n"
"        Canna Server (Ver. 3.6)\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:454
#, no-wrap
msgid ""
"      followed by the number of clients connected to the server, of which "
"there\n"
"      should be none at this point.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:456
#, no-wrap
msgid "    FreeWnn:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:464
#, no-wrap
msgid ""
"      If you wish to invoke FreeWnn at this point, it is best that you use\n"
"      a simple init script.  However, if you do not need to start it right\n"
"      away, then it would probably be better to wait until you need it.\n"
"      Because the script handles most of the crucial Wnn operations, it\n"
"      is not necessary to modify the default path.  FreeWnn, by default,\n"
"      has its programs in the /usr/bin/Wnn4 directory.  If this is not\n"
"      the case on your system, then modify your script accordingly.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:470
#, no-wrap
msgid ""
"      To make the script, create a file in your default PATH and give it\n"
"      a descriptive name such as FreeWnn.  Set permissions accordingly\n"
"      for an init script on your system.  Keep in mind that the Wnn\n"
"      server does not need to be started as root.  Once the file\n"
"      is created, then copy the following twenty lines into it:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:491
#, no-wrap
msgid ""
"        #!/bin/sh\n"
"        case \"$1\" in\n"
"        start)\n"
"          if [ -x /usr/bin/Wnn4/jserver ]; then\n"
"            /usr/bin/Wnn4/wnnstat localhost > /dev/null 2>&1\n"
"            if [ $? = 255 ]; then\n"
"              rm -f  /tmp/jd_sockV4\n"
"              /usr/bin/Wnn4/jserver > /dev/null\n"
"            fi\n"
"          fi\n"
"          ;;\n"
"        stop)\n"
"          /usr/bin/Wnn4/wnnkill localhost\n"
"          ;;\n"
"        *)\n"
"          echo \"Usage: $0 {start|stop}\" >&2\n"
"          exit 1\n"
"          ;;\n"
"        esac\n"
"        exit 0\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:497
#, no-wrap
msgid ""
"      Also note that if this script is run more than once by a "
"non-privileged\n"
"      user to start the Wnn server, it may not work if /tmp/jd_sockV4 can "
"not\n"
"      be deleted.  This is why it is still usually a good idea to run this "
"as\n"
"      root and to retain executable privileges for the superuser.  When Wnn "
"is\n"
"      running, /usr/bin/Wnn4/wnnstat can be used to retrieve its "
"information.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:499
#, no-wrap
msgid "  Input Method Environment:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:501
#, no-wrap
msgid "    uumkey:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:509
#, no-wrap
msgid ""
"      While the main configuration file for uum is located in a "
"/usr/lib/wnn\n"
"      subdirectory, it can be regarded as independent of wnn for "
"configuring\n"
"      the input method itself.  As uum is essentially a shell environment, "
"no\n"
"      configuration is necessary just to get it to run.  However, the "
"default\n"
"      settings can be annoying if you are used to other UNIX input "
"methods.\n"
"      The file to modify for changing Japanese input settings is "
"ja_JP/uumkey\n"
"      ignoring other files with similar filenames.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:512
#, no-wrap
msgid ""
"      The following parameters represent escape sequences that can be "
"changed\n"
"      to resemble, say, kinput2, as I have done on my setup.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:518
#, no-wrap
msgid ""
"        henkan\n"
"        nobi_henkan_dai\n"
"        select_jikouho_dai\n"
"\tkakutei\n"
"        hindo_set\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:523
#, no-wrap
msgid ""
"      There are other configuration options specifically regarding "
"conversion\n"
"      that are good to get familiar with, given that such options may be "
"more\n"
"      intuitive within other conversion environments, although some "
"shortcuts\n"
"      therein can be quite useful.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:525
#, no-wrap
msgid "    Xresources:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:528
#, no-wrap
msgid ""
"      Append the following six lines to your Xresources file if you intend\n"
"      to take advantage of Japanese Eterm sessions:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:535
#, no-wrap
msgid ""
"        ##### Eterm #####\n"
"        Eterm*InputMethod:      kinput2\n"
"        Eterm*allowSendEvents:  true\n"
"        Eterm*VT100*translations:\n"
"        Shiftspace:     begin-conversion(_JAPANESE_CONVERSION)\n"
"        Eterm*kanjiMode:        euc\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:537
#, no-wrap
msgid ""
"      Your global Xresources file could be in any of the following "
"locations:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:542
#, no-wrap
msgid ""
"        /etc/X11/xdm/Xresources\n"
"        /etc/X11/xinit/Xresources\n"
"        /usr/X11R6/lib/X11/xdm/Xresources\n"
"        /usr/X11R6/lib/X11/xinit/Xresources\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:544
#, no-wrap
msgid "      or if you would rather add it on a per-user basis, use\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:546
#, no-wrap
msgid "        ~/.Xresources\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:549
#, no-wrap
msgid ""
"      This may or may not be necessary depending on your X11 settings.\n"
"      However, it is not likely to cause problems if it is not necessary.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:551
#, no-wrap
msgid "    Xsession/xinit:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:556
#, no-wrap
msgid ""
"      For the sake of convenience, it helps to invoke your input server "
"upon\n"
"      starting your X server.  While this is not essential, bear in mind "
"that\n"
"      kinput2 will need to be started at some point during your X11 "
"session,\n"
"      and it is highly advisable that it run in the background.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:564
#, no-wrap
msgid ""
"      Depending on the configuration of your X server, startup commands "
"will\n"
"      be invoked from a file either named Xsession or xinitrc.  The global\n"
"      settings for xinit are located either in /usr/X11R6/lib/X11/xinit or\n"
"      /etc/X11/xinit by default.  The global Xsession files are also "
"likely\n"
"      to be found in one of the X11 configuration directories.  These "
"settings\n"
"      may also be specified locally in ~/.Xsession or ~/.xinitrc for a "
"given\n"
"      user.  Add the following line to any of these files:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:566
#, no-wrap
msgid "        kinput2 &\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:569
#, no-wrap
msgid ""
"    When kinput2 is running, an entry should appear in the server "
"statistics\n"
"    report from cannastat or wnnstat.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:571
#, no-wrap
msgid "  Environment Variables:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:579
#, no-wrap
msgid ""
"    When you have X running, as well as all your other servers, you must\n"
"    now establish an interface with the input method.  That must usually\n"
"    be defined as an environment variable upon the invocation of the\n"
"    input method client program.  For example, if you are running\n"
"    X and open an Eterm from an xterm, that Eterm will not be able\n"
"    to handle Japanese input unless the environment variable for the\n"
"    input method was set properly in the xterm.  To accomplish this, run\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:581
#, no-wrap
msgid "      setenv XMODIFIERS \"@im=kinput2\"\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:583
#, no-wrap
msgid "    or\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:585
#, no-wrap
msgid "      export XMODIFIERS=\"@im=kinput2\"\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:587
#, no-wrap
msgid "    according to your shell's specifications, and then start an Eterm.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:589
#, no-wrap
msgid "    Locale:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:597
#, no-wrap
msgid ""
"      If your libc locale is not set to a Japanese setting at the time an\n"
"      application is invoked, it can possibly be set locally afterward.\n"
"      However, in the case of Eterm, for example, this also needs to be\n"
"      set in the parent application beforehand, as it determines the\n"
"      resulting execution in the same manner as the XMODIFIERS variable\n"
"      concerning the input method.  Different systems use different ways\n"
"      of specifying locales.  The first thing you should do is run\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:599
#, no-wrap
msgid "        setenv LANG ja_JP.EUC\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:601 origin/jlenv.txt:620 origin/jlenv.txt:628
#, no-wrap
msgid "      or\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:603
#, no-wrap
msgid "        export LANG=ja_JP.EUC\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:608
#, no-wrap
msgid ""
"      according to your shell's specifications.  If for some reason, you\n"
"      have an application that utilizes JIS as its primary encoding, then\n"
"      simply substitute JIS for EUC in the above environment variables.\n"
"      Most UNIX applications these days, however, use EUC.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:611
#, no-wrap
msgid ""
"      If your system uses other language and locale settings as "
"environment\n"
"      variables, then it is a good idea to set those too.  If you run\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:613
#, no-wrap
msgid "        echo $LANGUAGE ; echo $LC_ALL\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:616
#, no-wrap
msgid ""
"      and see two undefined variables, then you are okay and should not "
"worry\n"
"      about them.  If LANGUAGE is defined and is not Japanese, then run\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:618
#, no-wrap
msgid "        setenv LANGUAGE jp\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:622
#, no-wrap
msgid "        export LANGUAGE=jp\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:624
#, no-wrap
msgid "      If you LC_ALL is defined and is not Japanese, then you should run\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:626
#, no-wrap
msgid "        setenv LANGUAGE ja_JP\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:630
#, no-wrap
msgid "        export LC_ALL=ja_JP\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:632
#, no-wrap
msgid "  After all environment variables are properly set, then start Eterm with\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:634
#, no-wrap
msgid "    Eterm &\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:641
#, no-wrap
msgid ""
"  This Eterm should have everything you need for proper Japanese input\n"
"  and output.  The environment variables will be the same as in the parent\n"
"  application, so you can start more Eterms from this one and not have to\n"
"  readjust environment variables every time.  Nevertheless, there is one\n"
"  last trick that can remove all the worry about environment variables\n"
"  from the simple invocation of a Japanese-enabled terminal emulator.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:643
#, no-wrap
msgid "  Additional Options:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:649
#, no-wrap
msgid ""
"    If you use a window manager, as most X11 users do, you may be able to\n"
"    simplify the process of invoking an Eterm with all the correct "
"settings.\n"
"    If you happen to use TWM like I do, then the process is "
"straightforward,\n"
"    because it is just another menu entry in the system.twmrc file.  "
"Simply\n"
"    add the following line in the appropriate part of your TWM main menu:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:651
#, no-wrap
msgid ""
"      \"Eterm\"         f.exec \"XMODIFIERS='@im=kinput2' LANG=ja_JP Eterm "
"&\"\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:659
#, no-wrap
msgid ""
"    Add more environment variable settings as necessary.  The system.twmrc\n"
"    file is located in either /etc/X11/twm or /usr/X11R6/lib/X11/twm by\n"
"    default.  Once this is set and TWM is restarted, you'll see an extra\n"
"    \"Eterm\" entry in the main menu, and if you select it, it will start\n"
"    an Eterm with all the environment variables already set.  Of course,\n"
"    Eterm can also be invoked with arguments just as if it were run from\n"
"    another shell, but those are spared here for concision.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:663
#, no-wrap
msgid ""
"    I have also gotten a similar setup in WindowMaker/GNUstep by adding a\n"
"    line in the appropriate place in the ~/GNUstep/Defaults/WMRootMenu "
"file\n"
"    such as the following:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:665
#, no-wrap
msgid ""
"      (\"ETerm [JP]\", SHEXEC, \"XMODIFIERS='@im=kinput2' LANG=ja_JP.EUC "
"Eterm\"),\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:667
#, no-wrap
msgid "    This also allows for additional arguments to Eterm.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:671
#, no-wrap
msgid ""
"    Other window managers may be more complicated, but there are probably "
"a\n"
"    number of analogous options therein to provide for quick execution of\n"
"    your favorite localized terminal emulator.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:674
#, no-wrap
msgid ""
"NOTES:\n"
"--------------------------------------------------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:678
#, no-wrap
msgid ""
"  * New in This Version\n"
"  --------------------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:685
#, no-wrap
msgid ""
"  Followers of the original hint may have noticed some things that\n"
"  did not quite match up with the current situation soon after that\n"
"  hint was released.  Unfortunately, my testing occured right before\n"
"  a new working release of jfbterm, after which I became far too busy\n"
"  to update this hint accordingly.  All should be well now regarding\n"
"  console support with jfbterm+uum.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:696
#, no-wrap
msgid ""
"  Additionally, I did get some feedback via e-mail with suggestions to\n"
"  improving utilization options.  While these suggestions were well taken,\n"
"  the cumulative effect of all of them was that my suggestions were too\n"
"  specific, and that the real implementation of the Japanese environment\n"
"  should be left to the users, since they should know what is best for\n"
"  their preferences.  As a side note, the settings I suggested did not\n"
"  even relate to what I personally use, but were what I thought would\n"
"  be easy for an absolute beginner.  From now on, I will defer to the\n"
"  individual user's preferences and omit explicit suggestions for how\n"
"  to use the installed software mentioned in this hint.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:703
#, no-wrap
msgid ""
"  I may also see if it would be good to have an addendum to this hint\n"
"  specifically regarding Japanese keyboards with relation to Japanese\n"
"  LFS setups.  I have literally hundreds of Japanese keyboards at my\n"
"  disposal, although lately no desire to mess around with them.  If,\n"
"  however, at any point I should try to find relevant applications in\n"
"  a JLFS environment, it may merit some documentation here.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:706
#, no-wrap
msgid ""
"  * Future Proposals\n"
"  --------------------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:713
#, no-wrap
msgid ""
"  Not for this hint specifically, but for other projects as well, I\n"
"  am stating here what I would like to do or have done in the future.\n"
"  First with regard to documentation, I believe that this hint itself\n"
"  fulfills its purpose in simply setting up a localized environment.\n"
"  There are many other things that pertain to Japanese computing,\n"
"  however, and those could be addressed in separate hints.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:719
#, no-wrap
msgid ""
"  Another particular thing I was interested in was updating uum.\n"
"  This would be a larger-scale project, but there are a few things\n"
"  that would really be nice if they were supported by uum, namely\n"
"  Unix98 and UTF-8.  Maybe I can devote some time to hacking uum\n"
"  in the near future.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:722
#, no-wrap
msgid ""
"  * Dated Material\n"
"  --------------------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:739
#, no-wrap
msgid ""
"  Given my the complexity of this project, the comprehensiveness\n"
"  of this document, and my busy schedule, it is worth noting that\n"
"  a number of the libraries and programs that I compiled when I\n"
"  first tested my methods for this hint (18 January 2005) may\n"
"  be outdated.  I may update this hint if there are any significant\n"
"  changes in the sources for this Japanese environment.  However, if\n"
"  you notice a new version of some software mentioned above, go ahead\n"
"  and try to substitute it in for the older versions that I may have\n"
"  used.  Unless a major version change has occurred, there should not\n"
"  be any problems with a minor upgrade.  If, however, any problems\n"
"  should arise out of any newer versions, then I would recommend\n"
"  reverting back to the versions I last compiled against, unless,\n"
"  of course, any security vulnerabilities were to have been found\n"
"  in said software after I release this hint.  Install software\n"
"  at your own risk, and please use common sense.  The author\n"
"  of this hint is not liable for any problems you may incur!\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:742
#, no-wrap
msgid ""
"  * Acknowledgements\n"
"  --------------------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:745
#, no-wrap
msgid ""
"  Special thanks go to Kazunari Manabe for sparing extra hardware\n"
"  for testing, as well as assisting in translations of this text.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:748
#, no-wrap
msgid ""
"  * Document Formatting\n"
"  --------------------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:759
#, no-wrap
msgid ""
"  This document exists in plain text, pLaTeX source, DVI, and maybe\n"
"  other document formats as markup or portable compiled documents.\n"
"  While the organizational layout may change with formatting, the\n"
"  content will remain the same.  The reason for this is not only\n"
"  to make this document easy to maintain, but also so that it may\n"
"  be read on systems with or without Japanese language support.\n"
"  This issue of compatibility will be even more important if this\n"
"  document is ever translated to Japanese, as that translation will\n"
"  be useless if it cannot be read due to incompatibility of formats.\n"
"  See the notes below for the status of this document's translation.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:762
#, no-wrap
msgid ""
"  Alternately formatted documents should be temporarily hosted at the\n"
"  following locations:\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:764
#, no-wrap
msgid "  http://vorlon.cwru.edu/~djb29/\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:768
#, no-wrap
msgid ""
"  Should any new servers be added, or the above removed, this hint will\n"
"  be updated and changes noted in the changelog at the very end of this\n"
"  document.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:771
#, no-wrap
msgid ""
"CHANGELOG:\n"
"--------------------------------------------------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:775
#, no-wrap
msgid ""
"  [2003-11-11]\n"
"    * Initial hint.\n"
msgstr ""

#. type: Plain text
#: origin/jlenv.txt:786
#, no-wrap
msgid ""
"  [2005-04-14]\n"
"    * Upgraded SBU's from Static Bash Units to Static Binutils Units.\n"
"    * Added new proposals for future related projects.\n"
"    * Added (overdue) sections for jfbterm and uum.\n"
"    * Changed mirror sites for other formats.\n"
"    * Removed unnecessary utilization hints.\n"
"    * Removed alternative suggestions.\n"
"    * Removed request for assistance.\n"
"    * Updated notes on dated material.\n"
"    * Reduced prerequisites.\n"
"    * Improved introduction.\n"
msgstr ""
