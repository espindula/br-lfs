# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-09-02 09:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: origin/installwatch.txt:4
msgid ""
"TITLE:\t\tUsing Installwatch as a Package Manager LFS VERSION:\tAny "
"AUTHOR:\t\tRobert Park <rbpark@ualberta.ca>"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:9
#, no-wrap
msgid ""
"SYNOPSIS: \n"
"\tUse installwatch to keep track of what files got installed when you "
"compiled\n"
"\tsomething from source. Includes an easy method for removing those files,\n"
"\tpackaging those files up, and installing said packages.\n"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:11
msgid "HINT:"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:13
#, no-wrap
msgid ""
"Changelog\n"
"---------\n"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:17
msgid "Revision 1.14 2003/01/22 07:52:43 feztaa Fixed URL to the nuke script."
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:20
msgid ""
"Revision 1.13 2002/09/15 05:39:34 feztaa Changed email address, among other "
"fixes."
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:24
msgid ""
"Revision 1.12 2002/08/08 02:23:05 feztaa Nuke script updated to version "
"1.13; major rewrite to enhance readability and to reflect new features."
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:27
msgid "Revision 1.11 2002/07/31 07:14:50 feztaa Updated nuke script to version 1.12"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:30
msgid "Revision 1.10 2002/07/27 01:06:27 feztaa Updated nuke script to version 1.11"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:33
msgid "Revision 1.9 2002/06/15 18:03:12 feztaa Updated nuke script to version 1.9"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:35
#, no-wrap
msgid ""
"Intro\n"
"-----\n"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:40
msgid ""
"One big problem with LFS is that there is no package management system.  "
"This means that it is a *HUGE* pain in the butt to uninstall something, "
"since there is no record of what got installed where, and by what program."
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:43
msgid ""
"There are lots of other ways to implement \"package management\" in LFS; but "
"this is the one that I use ;)"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:45
#, no-wrap
msgid ""
"Notes\n"
"-----\n"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:50
msgid ""
"In an attempt to make this easier to read, all \"code blocks\" that you "
"should execute on the commandline start and end with "
"\"##--CODE--##\". Quoted text, such as the output of a program, is prefixed "
"with four spaces."
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:59
msgid ""
"Also, if you're trying to use this during the early stages of Chapter 6 in "
"the LFS book, it will fail miserably for you. The reason is that "
"installwatch needs programs to be dynamically linked for it to work; in "
"Chapter 6, all of your programs are statically linked. Installwatch *might* "
"work for you near the end of chapter 6 when most of the static stuff is "
"gone, but I advise not using it until chapter 6 is finished and you're "
"installing other stuff. I've yet to find a program that wouldn't install "
"properly with installwatch, just as long as your stuff is dynamically "
"linked."
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:61
#, no-wrap
msgid ""
"Requirements\n"
"------------\n"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:65
msgid ""
"You'll need to download installwatch, which you can get from one of these "
"locations:"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:68
msgid ""
"http://asic-linux.com.mx/~izto/checkinstall/installwatch.html "
"http://proyectos.glo.org.mx/checkinstall/installwatch.html"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:70
msgid "If both these sites are down, try this one (but only as a last resort):"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:72
msgid "http://www.google.ca/search?hl=en&q=installwatch+izto+0.6.3&meta="
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:75
msgid ""
"I used version 0.6.3 to write this hint, but other versions should work as "
"well (just as long as their logfiles are in the same format)."
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:78
msgid ""
"You'll also need my 'nuke' script, which is used for uninstalling software, "
"among other things. You can get that here:"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:80
msgid "http://www.ualberta.ca/~rbpark/projects/nuke"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:83
msgid ""
"You'll need to download that into /usr/sbin, and chmod it to 750 "
"(rwxr-x---).  Yep, it finally grew too large to be included within this hint "
"itself ;)"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:85
#, no-wrap
msgid ""
"Instructions\n"
"------------\n"
msgstr ""

#. type: Bullet: '1. '
#: origin/installwatch.txt:88
msgid "Install Installwatch."
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:90
msgid "Unpack and compile installwatch. Compilation is done like so:"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:95
msgid "##--CODE--## make && make install ##--CODE--##"
msgstr ""

#. type: Bullet: '2. '
#: origin/installwatch.txt:97
msgid "Fix Make."
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:99
msgid "Make must be owned by the root group:"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:103
msgid "##--CODE--## chgrp root /usr/bin/make ##--CODE--##"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:106
msgid ""
"I've also heard that installwatch will not work if make is setgid. I'm not "
"sure if this is true, but you might want to make sure it isn't:"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:110
msgid "##--CODE--## chmod -s /usr/bin/make ##--CODE--##"
msgstr ""

#. type: Bullet: '3. '
#: origin/installwatch.txt:112
msgid "Prepare the Filesystem."
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:116
msgid ""
"To use the nuke script, you'll need the /var/install, /var/uninstall, and "
"/var/packages directories, which will be explained later. Create them like "
"this (as root):"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:121
msgid ""
"##--CODE--## mkdir /var/{install,uninstall,packages} chmod 750 "
"/var/{install,uninstall,packages} ##--CODE--##"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:126
msgid ""
"The install directory will be where we put installwatch's logfiles, and the "
"uninstall directory will be where we put the log of what we deleted with the "
"\"nuke\" script that I am going to show you next. The packages directory is "
"where we'll store the packages that we can create from installed software."
msgstr ""

#. type: Bullet: '4. '
#: origin/installwatch.txt:128
msgid "Using Installwatch."
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:131
msgid ""
"Now I'm going to show you how to use installwatch to create the logfiles "
"that will be used by the nuke script."
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:134
msgid ""
"When you are reading installation instructions for something, and you see "
"\"make install\", you'll want to replace that with this:"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:138
msgid ""
"##--CODE--## installwatch -o /var/install/programname-version make install "
"##--CODE--##"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:141
msgid ""
"But, if you're too lazy and don't want to remember all that, create an alias "
"similar to this one:"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:145
msgid ""
"##--CODE--## alias iw='installwatch -o /var/install/$(basename $(pwd))' "
"##--CODE--##"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:153
msgid ""
"This will take the name of the current directory, and use that as the "
"logfile name to use in /var/install. The idea is that the name of the "
"directory you are compiling source in is descriptive of the software you are "
"compiling. For example, I compiled XMMS in /usr/src/xmms-1.2.7, and this "
"alias created the logfile named \"/var/install/xmms-1.2.7\". You'll want to "
"put this alias into your bashrc, so that you won't have to recreate the "
"alias every time you start a new shell."
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:158
msgid ""
"If you're going to use this alias as-is, then wherever you see \"make "
"install\" in the installation instructions for something, you'll have to "
"prefix it with \"iw\". For example, instead of the standard \"./configure && "
"make && make install\", you'd type this:"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:162
msgid "##--CODE--## ./configure && make && iw make install ##--CODE--##"
msgstr ""

#. type: Bullet: '5. '
#: origin/installwatch.txt:164
msgid "Using Nuke."
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:167
msgid ""
"The nuke script has many uses, the first and foremost of which is to "
"uninstall software by analyzing installwatch logfiles."
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:172
msgid ""
"Uninstalling software is extremely easy with the nuke script, you simply "
"give it a logfile from /var/install, and it will remove the software from "
"your system, and then create a logfile in /var/uninstall telling you how the "
"uninstall went."
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:175
msgid ""
"Lets say for example, you wanted to uninstall a program called 'foobar "
"1.0'.  Since we have the foobar-1.0 logfile, we can simply do this:"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:179
msgid "##--CODE--## nuke foobar-1.0 ##--CODE--##"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:181
msgid "And nuke will produce some output like this:"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:184
#, no-wrap
msgid ""
"    Processing foobar-1.0 ... done.\n"
"    Uninstalling foobar-1.0 ... successful.\n"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:187
msgid ""
"The first line simply means it was processing the logfile to determine what "
"files to delete, and the second line means that it deleted them."
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:191
msgid ""
"It also keeps a logfile of what got deleted. This is in /var/uninstall, and "
"has the same name as the logfile in /var/install. This new logfile will look "
"something like this:"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:194 origin/installwatch.txt:204
#, no-wrap
msgid ""
"    Removed Files/Directories\n"
"    -------------------------\n"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:197
#, no-wrap
msgid ""
"    /usr/share/man/man1/foobar.1\n"
"    /usr/bin/foobar\n"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:201
msgid ""
"This file is in the format of one filename per line, and if there were any "
"errors removing files, the filename will be followed by \" -- \" and the "
"error message. So you might see something like this:"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:207
#, no-wrap
msgid ""
"    /usr/share/foobar/foo -- Permission denied\n"
"    /usr/share/foobar -- Directory not empty\n"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:209
msgid "Which means that neither were removed."
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:213
msgid ""
"Once you are satisfied that the program was uninstalled properly, you can "
"remove the logfile from /var/uninstall. The nuke script will automatically "
"remove the logfile from /var/install if all of the files were removed "
"properly."
msgstr ""

#. type: Bullet: '6. '
#: origin/installwatch.txt:215
msgid "Nuke's 'Report' Mode."
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:219
msgid ""
"As I mentioned before, nuke has many uses. I already showed you how to use "
"it to uninstall software, now I'm going to show you how to use it to simply "
"see what files got installed with each program."
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:222
msgid ""
"All you have to do is add \"--report\" (or \"-r\") to nuke's argument list, "
"like so:"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:226
msgid "##--CODE--## nuke --report foobar-1.0 ##--CODE--##"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:228
msgid ""
"Now nuke won't remove the program. Instead, it will produce output like "
"this:"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:232
#, no-wrap
msgid ""
"    Processing foobar-1.0 ... done.\n"
"    Files/Directories installed by foobar-1.0\n"
"    -----------------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:235
#, no-wrap
msgid ""
"    /usr/share/man/man1/foobar.1:  open, chown, and chmod\n"
"    /usr/bin/foobar:  open, chown, and chmod\n"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:238
msgid ""
"And this simply means that both of the listed files were created (open), "
"chown'ed, and chmod'ed."
msgstr ""

#. type: Bullet: '7. '
#: origin/installwatch.txt:240
msgid "Nuke's 'Package' Mode."
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:245
msgid ""
"Nuke now has an experimental method of producing packages from logfiles.  "
"These packages are not intended for general distribution (and aren't meant "
"as a replacement for RPMs or anything fancy like that). They don't store any "
"dependancy information, and in fact they are just tarballs."
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:250
msgid ""
"The primary use of these tarballs would be for easily installing a program "
"onto many identical systems (compile once, install everywhere), or as "
"backups for users with lots of HD space, but little processing power (for "
"them, it's easier to install the package than to recompile it)."
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:255
msgid ""
"Anyway, to make a package, first you must have installed something with "
"installwatch, and you must have the installwatch logfile (in /var/install).  "
"Then you just call nuke with the \"--package\" (or \"-p\") option, and it "
"creates the package for you, like this:"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:259
msgid "##--CODE--## nuke --package foobar-1.0 ##--CODE--##"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:261
msgid "This will produce output similar to the following:"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:267
#, no-wrap
msgid ""
"    Processing foobar-1.0 ... done.\n"
"    Packing files from foobar-1.0 into /var/packages/foobar-1.0.fez.pkg "
"... \n"
"    /usr/bin/foobar\n"
"    /usr/share/man/man1/foobar.1\n"
"    /var/install/foobar-1.0\n"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:272
msgid ""
"The .fez.pkg file itself is just a .tar.bz2 file in reality, but there are "
"special options that you have to pass to tar for it to unpack properly, and "
"instead of trying to force you to remember them, I just let the nuke script "
"handle that as well."
msgstr ""

#. type: Bullet: '8. '
#: origin/installwatch.txt:274
msgid "Nuke's 'Install' Mode."
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:279
msgid ""
"The other part of the experimental packaging support in the nuke script is "
"it's ability to install the packages that it creates. All you have to do is "
"put the .fez.pkg file into /var/packages (it's placed there by default), and "
"then run nuke with the \"--install\" (or \"-i\") option, like this:"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:283
msgid "##--CODE--## nuke --install foobar-1.0.fez.pkg ##--CODE--##"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:285
msgid "This will produce output similar to this:"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:290
#, no-wrap
msgid ""
"    Unpacking files from /var/packages/foobar-1.0.fez.pkg ... \n"
"    /usr/bin/foobar\n"
"    /usr/share/man/man1/foobar.1\n"
"    /var/install/foobar-1.0\n"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:292
msgid "Which just tells us which files it unpacked, and to where."
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:294
#, no-wrap
msgid ""
"The End\n"
"-------\n"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:299
msgid ""
"Congratulations! You now have an extremely easy method of removing software, "
"packaging software, and installing packages for software that was compiled "
"from source!"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:302
msgid ""
"If you encounter any problems, please let me know. I want to make this as "
"good as it can possibly be ;)"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:304
#, no-wrap
msgid ""
"Thanks To\n"
"---------\n"
msgstr ""

#. type: Plain text
#: origin/installwatch.txt:308
msgid ""
"'Lovechild' (from the linuxjunior.org forums), for the original idea, Zenith "
"Lau <zenithlau@sniic.com>, for symlink fixes in the nuke script, and "
"everybody who reported problems that they found."
msgstr ""
