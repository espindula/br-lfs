# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-09-02 09:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: origin/paco.txt:2
#, no-wrap
msgid "AUTHOR:   David Rosal <davidrr@users.sourceforge.net>\n"
msgstr ""

#. type: Plain text
#: origin/paco.txt:4
#, no-wrap
msgid "DATE:     2005-02-03\n"
msgstr ""

#. type: Plain text
#: origin/paco.txt:6
msgid "LICENSE: GNU Free Documentation License Version 1.2"
msgstr ""

#. type: Plain text
#: origin/paco.txt:8
msgid "SYNOPSIS: Paco - source code package manager"
msgstr ""

#. type: Plain text
#: origin/paco.txt:14
msgid ""
"DESCRIPTION: Yet another try to provide a package manager for source code "
"based systems, such as LFS. But paco comes with some nice features, such as "
"an optional GTK+ graphic interface, and the use of the LD_PRELOAD method to "
"keep track of the files installed by the packages."
msgstr ""

#. type: Plain text
#: origin/paco.txt:17
#, no-wrap
msgid ""
"PREREQUISITES:\n"
"  * For the (optional) GUI: GTK+ >= 2.4 and pkg-config.\n"
msgstr ""

#. type: Plain text
#: origin/paco.txt:21
#, no-wrap
msgid ""
"PRIMARY URL:\n"
"  The latest version of this hint and the sources of paco can be found at:\n"
"    --> http://paco.sourceforge.net\n"
msgstr ""

#. type: Plain text
#: origin/paco.txt:24
msgid "HINT:"
msgstr ""

#. type: Plain text
#: origin/paco.txt:26
#, no-wrap
msgid ""
"0. Introduction\n"
"===============\n"
msgstr ""

#. type: Plain text
#: origin/paco.txt:29
msgid ""
"I wrote paco because I couldn't get satisfied with any existent package "
"manager to keep track of my LFS installation."
msgstr ""

#. type: Plain text
#: origin/paco.txt:34
msgid ""
"I used to work with Andy Goth's install-log, which I like much; but "
"install-log has some serious limitations due to the use of the \"timestamp "
"method\" to keep track of the files installed by the packages.  As said in "
"the BLFS book:"
msgstr ""

#. type: Plain text
#: origin/paco.txt:40
#, no-wrap
msgid ""
"    In this technique, a file is timestamped before the installation of\n"
"    the package. After the installation, a simple use of the find\n"
"    command with the appropriate options can generate a log of all the\n"
"    files installed after the timestamp file was created. A package\n"
"    manager written with this approach is install-log.\n"
msgstr ""

#. type: Plain text
#: origin/paco.txt:47
#, no-wrap
msgid ""
"    Though this scheme has the advantage of being simple, it has two\n"
"    drawbacks. If during installation, the files are installed with any\n"
"    timestamp other than the current time, those files will not be\n"
"    tracked by the package manager. Also, this scheme can only be used\n"
"    when one package is installed at a time. The logs are not reliable\n"
"    if two packages are being installed on two different consoles.  \n"
msgstr ""

#. type: Plain text
#: origin/paco.txt:50
msgid ""
"I also tried CheckInstall, which is widely used by the Linux community, and "
"based on the LD_PRELOAD method, which I find better. From the BLFS book:"
msgstr ""

#. type: Plain text
#: origin/paco.txt:60
#, no-wrap
msgid ""
"    In this approach, a library is preloaded before installation. During\n"
"    installation, this library tracks the packages that are being "
"installed\n"
"    by attaching itself to various executables such as cp, install, mv and\n"
"    tracking the system calls that modify the filesystem. For this "
"approach\n"
"    to work, all the executables need to be dymanically linked without the\n"
"    suid or sgid bit. Preloading the library may cause some unwanted\n"
"    side-effects during installation; hence do perform some tests to "
"ensure\n"
"    that the package manager does not break anything and logs all the\n"
"    appropriate files.\n"
msgstr ""

#. type: Plain text
#: origin/paco.txt:64
msgid ""
"But though CheckInstall is very efficient, it finally depends on the package "
"manager of the host system (rpm, dpkg or installpkg), so it doesn't fit the "
"needs of the LFS community."
msgstr ""

#. type: Plain text
#: origin/paco.txt:68
msgid ""
"So finally I decided to put my fingers on the keyboard, and write a package "
"manager with the pros of the above and without their cons. And the result is "
"paco (pacKAGE oRGANIZER)."
msgstr ""

#. type: Plain text
#: origin/paco.txt:71
#, no-wrap
msgid ""
"1. Usage\n"
"========\n"
msgstr ""

#. type: Plain text
#: origin/paco.txt:73
msgid "Paco works mainly in two modes:"
msgstr ""

#. type: Plain text
#: origin/paco.txt:77
msgid ""
"In log mode, it keeps track of a package installation (though it can be used "
"to follow the trace of any command or script), and generates a list of all "
"installed files."
msgstr ""

#. type: Plain text
#: origin/paco.txt:80
msgid ""
"In list mode, which is the default, paco retrieves information from the "
"generated logs and displays it in a friendly format."
msgstr ""

#. type: Plain text
#: origin/paco.txt:83
msgid ""
"Paco can be used also to remove a package, query for the owner of files or "
"print extended information about the packages."
msgstr ""

#. type: Plain text
#: origin/paco.txt:85
msgid "The output of 'paco --help' follows:"
msgstr ""

#. type: Plain text
#: origin/paco.txt:142
#, no-wrap
msgid ""
"+-----\n"
"| Usage:\n"
"|   paco [OPTIONS] <packages|files|command>\n"
"| \n"
"| General options:\n"
"|   -i, --info             Print extended package information, if "
"available.\n"
"|   -L, --logdir=DIR       Use DIR as the paco log directory.\n"
"|   -x, --expand           Expand the command line package names.\n"
"|   -a, --all              Apply to all logged packages (not with -r).\n"
"|   -q, --query            Query for the owners of files.\n"
"|   -u, --update           Update the log of the package.\n"
"|   -U, --unlog            Remove the log of the package.\n"
"|   -v, --verbose          Verbose output (-vv to increase verbosity).\n"
"|   -?, --help             Display this help message.\n"
"|       --usage            Display option summary.\n"
"|   -V, --version          Display version information.\n"
"| \n"
"| List options:\n"
"|   -1, --one-column       List one package per line.\n"
"|   -b, --block-size=SIZE  Show sizes in SIZE-byte blocks.\n"
"|   -k, --kilobytes        Show sizes in 1024-byte blocks.\n"
"|   -d, --date             Show installation date (-dd shows the hour "
"too).\n"
"|   -f, --files            List installed files.\n"
"|   -m, --missing-files    List missing files.\n"
"|   -c, --shared           List shared files.\n"
"|   -w, --who-shares       With -c: Print the packages that share each "
"file.\n"
"|   -F                     Print the number of installed files.\n"
"|   -M                     Print the number of missing files.\n"
"|   -C                     Print the number of shared files.\n"
"|   -s, --size             Show the size of each package or file.\n"
"|   -n, --missing-size     Print the total missing size of the package.\n"
"|       --sort=WORD        Sort by WORD: 'name', 'date', 'size', "
"'missing-size',\n"
"|                           'files', or 'missing-files'.\n"
"|   -R, --reverse          Reverse order while sorting.\n"
"|   -t, --total            Print the total.\n"
"|   -y, --symlinks         With -f: Print the contents of symbolic links.\n"
"|   -z, --no-package-name  With -f, -c, -m: Do not print the name of the "
"package.\n"
"| \n"
"| Remove options:\n"
"|   -r, --remove           Remove the (non shared) files of the package.\n"
"|       --remove-shared    Remove also the shared files.\n"
"|       --batch            Don't ask for confirmation when removing.\n"
"| \n"
"| Log options:\n"
"|   -l, --log              Log mode.\n"
"|   -p, --package=PKG      Name of the package to log.\n"
"|   -D, --dirname          Use the name of the current directory as the name "
"of\n"
"|                           the package.\n"
"|   -S, --stdin            Read the list of files directly from stdin.\n"
"|   -I, --include=DIR:...  Colon-separated list of paths to include in the "
"log.\n"
"|   -E, --exclude=DIR:...  Colon-separated list of paths to skip.\n"
"|   -+, --append           With -p, -D: If the package is already logged, "
"append\n"
"|                           the list of files to the log.\n"
"| \n"
"| Note: The list mode is enabled by default.\n"
"+-----\n"
msgstr ""

#. type: Plain text
#: origin/paco.txt:145
#, no-wrap
msgid ""
"2. Gpaco\n"
"========\n"
msgstr ""

#. type: Plain text
#: origin/paco.txt:152
msgid ""
"Gpaco is the GTK+ frontend of paco.  Its aim is not to replace paco, since "
"it does not provide all of its functionalities. Currently supported features "
"are: listing packages or files, update the database, query package "
"information and remove packages.  Gpaco can't log a package installation or "
"query for the owner of files.  Paco should be used instead."
msgstr ""

#. type: Plain text
#: origin/paco.txt:155
#, no-wrap
msgid ""
"3. Examples\n"
"===========\n"
msgstr ""

#. type: Bullet: '1) '
#: origin/paco.txt:158
msgid ""
"To log the installation of the package 'boofar-1.0', wich is installed by "
"'make -C src install':"
msgstr ""

#. type: Plain text
#: origin/paco.txt:160
#, no-wrap
msgid "        paco -lp boofar-1.0 \"make -C src install\"\n"
msgstr ""

#. type: Plain text
#: origin/paco.txt:165
#, no-wrap
msgid ""
"   This will create a log file named 'boofar-1.0' in the log directory, "
"with\n"
"   the list of all installed files.\n"
"   (Note that in this example the quotes are required in order to prevent\n"
"   paco to parse '-C' as a command line option).\n"
msgstr ""

#. type: Bullet: '2) '
#: origin/paco.txt:168
msgid ""
"Alternatively, we can use the name of the current directory as the name of "
"the package to log, using the option -D:"
msgstr ""

#. type: Plain text
#: origin/paco.txt:170
#, no-wrap
msgid "        paco -lD \"make install && make install.man\"\n"
msgstr ""

#. type: Bullet: '3) '
#: origin/paco.txt:173
msgid ""
"If we have forgotten to install a file, it can be added to a previously "
"created log with the option -+:"
msgstr ""

#. type: Plain text
#: origin/paco.txt:175
#, no-wrap
msgid "        paco -lp+ boofar-1.0 \"install boofile /usr/bin/boofile\"\n"
msgstr ""

#. type: Bullet: '4) '
#: origin/paco.txt:178
msgid ""
"To remove all versions of the package boofar, without asking for "
"confirmation:"
msgstr ""

#. type: Plain text
#: origin/paco.txt:180
#, no-wrap
msgid "        paco -rx --batch boofar\n"
msgstr ""

#. type: Plain text
#: origin/paco.txt:185
#, no-wrap
msgid ""
"CHANGELOG:\n"
"[2005-02-03]\n"
"  * Upgraded to paco-1.8.0.\n"
msgstr ""

#. type: Plain text
#: origin/paco.txt:191
#, no-wrap
msgid ""
"[2004-11-28]\n"
"  * Changed the email address.\n"
"  * Upgraded to paco-1.7.1\n"
"  * Slight changes in Introduction, Usage and Examples.\n"
"  * Added gpaco description.\n"
msgstr ""

#. type: Plain text
#: origin/paco.txt:194
#, no-wrap
msgid ""
"[2004-09-03]\n"
"  * Almost everything changed.\n"
msgstr ""

#. type: Plain text
#: origin/paco.txt:199
#, no-wrap
msgid ""
"[2004-06-22]\n"
"  * Replaced the tarball URL with the project web site one.\n"
"  * Added introduction.\n"
"  * Corrected the 'paco --help' output to include the '-l' option.\n"
msgstr ""

#. type: Plain text
#: origin/paco.txt:202
#, no-wrap
msgid ""
"[2004-06-08]\n"
"  * Initial hint.\n"
msgstr ""
