# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-09-02 09:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: origin/autotools.txt:6
#, no-wrap
msgid ""
"TITLE:          GNU Autotools\n"
"AUTHOR:         Elko Holl <elko@home.nl> <elko@cyberspace.org>\n"
"DATE:           2003-09-16\n"
"LICENSE:        GNU Free Documentation License Version 1.2\n"
"SYNOPSIS:       Introduction to the GNU Autotools.\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:11
msgid ""
"DESCRIPTION: This document describes the steps you must take to start a "
"project in GNU fashion. You'll learn to use autoconf and automake to create "
"portable configure scripts and Makefiles."
msgstr ""

#. type: Plain text
#: origin/autotools.txt:14
msgid ""
"PREREQUISITES: This hint requires that you have a little general knowledge "
"of programming."
msgstr ""

#. type: Plain text
#: origin/autotools.txt:16
msgid "HINT:"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:18
msgid "$Id: autotools.txt,v 1.3 2003/09/16 19:10:55 tushar Exp $"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:20
#, no-wrap
msgid ""
"Contents\n"
"--------\n"
msgstr ""

#. type: Bullet: '  * '
#: origin/autotools.txt:33
msgid "Preface"
msgstr ""

#. type: Bullet: '  * '
#: origin/autotools.txt:33
msgid "Versions"
msgstr ""

#. type: Bullet: '  * '
#: origin/autotools.txt:33
msgid "Creating the source file(s)"
msgstr ""

#. type: Bullet: '  * '
#: origin/autotools.txt:33
msgid "Adapting configure.in"
msgstr ""

#. type: Bullet: '  * '
#: origin/autotools.txt:33
msgid "Creating config.h.in"
msgstr ""

#. type: Bullet: '  * '
#: origin/autotools.txt:33
msgid "Creating Makefile.am and Makefile.in"
msgstr ""

#. type: Bullet: '  * '
#: origin/autotools.txt:33
msgid "Creating the configure script"
msgstr ""

#. type: Bullet: '  * '
#: origin/autotools.txt:33
msgid "Testing the result"
msgstr ""

#. type: Bullet: '  * '
#: origin/autotools.txt:33
msgid "Making a distribution"
msgstr ""

#. type: Bullet: '  * '
#: origin/autotools.txt:33
msgid "Related documents and links"
msgstr ""

#. type: Bullet: '  * '
#: origin/autotools.txt:33
msgid "Suggestions"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:35
#, no-wrap
msgid ""
"Preface\n"
"-------\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:41
#, no-wrap
msgid ""
"  Ok, so you have your BLFS finished and have all the applications you can\n"
"  think of installed. Now what? You start to learn BaSH, Perl, C and "
"kernel\n"
"  internals and finally, you code up some cool program which you think is\n"
"  worth uploading to SourceForge or Freshmeat for example.\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:47
#, no-wrap
msgid ""
"  But how are you going to distribute your program? Just pack everything "
"in\n"
"  a tarball and present a Makefile to your users that they have to modify? "
"NO!\n"
"  You want your project to be like all the packages you already installed, "
"so\n"
"  that means having a configure script so you can at least specify the\n"
"  installation --prefix for your program.\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:51
#, no-wrap
msgid ""
"  With the GNU range of applications this means using autoconf and "
"automake,\n"
"  rather then coding the required files yourself; these programs are part "
"of\n"
"  the GNU Autotools collection.\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:53
#, no-wrap
msgid "  Here is a quote from the autoconf manual:\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:58
#, no-wrap
msgid ""
"  \"Autoconf is a tool for producing shell scripts that automatically "
"configure\n"
"  software source code packages to adapt to many kinds of UNIX-like "
"systems.\n"
"  The configuration scripts produced by Autoconf are independent of "
"Autoconf\n"
"  when they are run, so their users do not need to have Autoconf.\"\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:61
#, no-wrap
msgid ""
"  For more information on autoconf and automake skip to the section at the\n"
"  bottom titled \"Related documents\".\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:64
#, no-wrap
msgid ""
"  It is assumed that you already know a bit about writing a Makefile. If "
"this\n"
"  is not the case, then you can use this Make manual (if needed) while "
"reading:\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:66
#, no-wrap
msgid "        http://www.gnu.org/manual/make/\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:71
#, no-wrap
msgid ""
"  Note: You can use Makefiles for more then C-program compilation, you can "
"for\n"
"        example create targets for commonly used functions "
"(shell-scripts). If\n"
"        this doesn't ring a bell right now, read the Make manual and it "
"will\n"
"        start to make sense (i.e. `make backup' for your system "
"operators).\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:74
#, no-wrap
msgid ""
"Versions\n"
"--------\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:77
#, no-wrap
msgid "  The versions of autoconf and automake used in this document are:\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:81
#, no-wrap
msgid ""
"  [elko@elkos ~]$ (autoconf -V;automake --version) 2>&1 | grep \"^auto\"\n"
"  autoconf (GNU Autoconf) 2.52\n"
"  automake (GNU automake) 1.6.1\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:87
#, no-wrap
msgid ""
"  Sometimes, newer versions of autoconf and automake may cause some not so\n"
"  up-to-date applications to fail to compile on your system. You can "
"always\n"
"  downgrade autoconf or automake again; so if you experience any problems\n"
"  building certain packages after upgrading to the versions used in this\n"
"  document, try to downgrade first before complaining somewhere.\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:92
#, no-wrap
msgid ""
"  If you are happy with your autoconf and automake release, and don't want "
"to\n"
"  upgrade, then this document can still be used as a quick guide to start "
"a\n"
"  project; some of the semantics may differ though, consult the "
"documentation\n"
"  of your release for the details.\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:95
#, no-wrap
msgid ""
"Creating the source file(s)\n"
"---------------------------\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:103
#, no-wrap
msgid ""
"  This document only uses one source file, since it's just a quick guide "
"to\n"
"  start a GNU fashion project. In almost any situation, your project will\n"
"  have more then one source file. That is why it is wishful that you know "
"how\n"
"  to write Makefiles, since more sourcefiles mean more described "
"dependencies\n"
"  in your 'Makefile.am'; more on that later. Read along or skip to the "
"section\n"
"  called \"Related documents\" (at the bottom) and get your information "
"there.\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:106
#, no-wrap
msgid ""
"  First, create a directory where you start your project and create the "
"famous\n"
"  \"Hello World!\" source-file (a slightly altered version though):\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:113
#, no-wrap
msgid ""
"cd $HOME && mkdir hello && cd hello &&\n"
"cat >hello.c <<EOHF\n"
"/*\n"
" * hello.c example for the autotools.txt hint\n"
" *\n"
" */\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:117
msgid "#ifdef HAVE_CONFIG_H #include <config.h> #endif"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:120
msgid "#include <stdio.h> #include <unistd.h>"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:124
#, no-wrap
msgid ""
"int main()\n"
"{\n"
"        fprintf (stdout, \"Hello World!\\n\");\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:129
#, no-wrap
msgid ""
"#ifdef _WITH_GOODBYE\n"
"        sleep (1);\n"
"        fprintf (stdout, \"Goodbye Cruel World!\\n\");\n"
"#endif\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:133
#, no-wrap
msgid ""
"        return (0);\n"
"}\n"
"EOHF\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:140
#, no-wrap
msgid ""
"  Note that there are some header-files included and there is a symbol\n"
"  definition check present to change the behavior of the program. This is\n"
"  done on purpose to show some details of the Autotools; almost every "
"project\n"
"  you create will have conditionals in the source to enhance or alter the\n"
"  behavior of your software. The #ifdef and #ifndef statements play an\n"
"  important part in your flexibility with the GNU Autotools.\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:143
#, no-wrap
msgid ""
"  The next step is to create the 'config.h' file, which autoscan uses to\n"
"  create the input file for autoheader:\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:147
msgid "cat >config.h <<EOHF #define VERSION=1.0 EOHF"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:150
#, no-wrap
msgid ""
"Adapting configure.in\n"
"---------------------\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:156
#, no-wrap
msgid ""
"  Now that you have your source-file(s) in place, you have to create a "
"file\n"
"  for autoconf - which describes your project - called 'configure.in'.\n"
"  To generate a template for this file, you can use `autoscan', which will\n"
"  create a file named 'configure.scan'; rename that file to "
"'configure.in':\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:159
msgid "autoscan && mv configure.scan configure.in"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:162
#, no-wrap
msgid ""
"  You have to adapt 'configure.in' for your project now. In this example,\n"
"  it is modified as follows (some blank lines removed):\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:170
#, no-wrap
msgid ""
"  -[snip]-\n"
"  # Process this file with autoconf to produce a configure script.\n"
"  # - Change program presets\n"
"  AC_INIT(hello, 1.0, elko@home.nl)\n"
"  AC_CONFIG_SRCDIR([hello.c])\n"
"  # - Change AC to AM (automake version)\n"
"  AM_CONFIG_HEADER([config.h])\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:173
#, no-wrap
msgid ""
"  # - Add this line for a bzip2 dist\n"
"  AM_INIT_AUTOMAKE(dist-bzip2)\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:194
#, no-wrap
msgid ""
"  # - The following lines adds the --enable-goodbye option to configure:\n"
"  #\n"
"  # Give the user the choice to enter one of these:\n"
"  # --enable-goodbye\n"
"  # --enable-goodbye=yes\n"
"  # --enable-goodbye=no\n"
"  #\n"
"  AC_MSG_CHECKING([whether we are enabling goodbye])\n"
"  AC_ARG_ENABLE(goodbye,\n"
"        AC_HELP_STRING([--enable-goodbye], [Say goodbye as well]),\n"
"        [if test \"${enable_goodbye}\" = \"yes\" ; then\n"
"                AC_DEFINE(_WITH_GOODBYE, 1, Say goodbye as well)\n"
"                AC_MSG_RESULT([yes])\n"
"        else\n"
"                AC_DEFINE(_WITH_GOODBYE, 0, Say goodbye as well)\n"
"                AC_MSG_RESULT([no])\n"
"        fi],\n"
"        # Default value for configure\n"
"        AC_MSG_RESULT([no])\n"
"        )\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:199
#, no-wrap
msgid ""
"  # Checks for programs.\n"
"  AC_PROG_CC\n"
"  # Checks for libraries.\n"
"  # Checks for header files.\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:202
#, no-wrap
msgid ""
"  # Automatically added by autoscan\n"
"  AC_CHECK_HEADERS([unistd.h])\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:207
#, no-wrap
msgid ""
"  # - The following line demonstrates checking for header files yourself:\n"
"  #\n"
"  # do nothing if stdio.h is found, else print an error\n"
"  AC_CHECK_HEADER(stdio.h, , AC_MSG_ERROR([stdio.h not found!]))\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:210
#, no-wrap
msgid ""
"  # Checks for typedefs, structures, and compiler characteristics.\n"
"  # Checks for library functions.\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:215
#, no-wrap
msgid ""
"  # - Add Makefile\n"
"  AC_CONFIG_FILES([Makefile])\n"
"  AC_OUTPUT\n"
"  -[snip]-\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:220
#, no-wrap
msgid ""
"  The 'AM_INIT_AUTOMAKE' is specified because I wish to have a make target\n"
"  called 'dist-bzip2', which makes a bzipped tarball from my development "
"tree.\n"
"  AC in the AC_CONFIG_HEADER is changed to AM because the version of "
"automake\n"
"  used in this document prefers it over the AC prefix.\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:223
#, no-wrap
msgid ""
"  For other options you can specify in the 'configure.in' file, skip to "
"the\n"
"  section \"Related documents\" at the bottom of this document.\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:226
#, no-wrap
msgid ""
"Creating aclocal.m4\n"
"-------------------\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:231
#, no-wrap
msgid ""
"  In order for autoconf and automake to recognize and translate defined\n"
"  macro's, you have to run `aclocal', which generates the 'aclocal.m4'\n"
"  macro-file:\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:233
msgid "aclocal"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:236
#, no-wrap
msgid ""
"Creating config.h.in\n"
"--------------------\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:240
#, no-wrap
msgid ""
"  This file is required by automake because you created a 'config.h' file,\n"
"  so just run `autoheader' and your done:\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:242
msgid "autoheader"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:245
#, no-wrap
msgid ""
"Creating Makefile.am and Makefile.in\n"
"------------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:250
#, no-wrap
msgid ""
"  Now you need a way to specify the rules which make must follow. The "
"syntax\n"
"  of a 'Makefile.am' (AutoMake) almost resembles that of an ordinary "
"Makefile,\n"
"  in this example, you create the 'Makefile.am' like this:\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:253
msgid "cat >Makefile.am 2>/dev/null <<EOHF bin_PROGRAMS = hello"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:259
#, no-wrap
msgid ""
"CC = @CC@\n"
"program:\n"
"        $(CC) -o hello hello.c     # <-- this line starts with a TAB!\n"
"#\n"
"EOHF\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:263
#, no-wrap
msgid ""
"  The 'Makefile.am' file is used to generate a 'Makefile.in', that is used "
"by\n"
"  the configure script, which enables the user of your package to specify\n"
"  system specifics that will be reflected in the final (real) Makefile.\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:267
#, no-wrap
msgid ""
"  Once you have 'Makefile.am', you can run `automake' to create "
"'Makefile.in'.\n"
"  If you do so at this moment however, it will complain about missing "
"files,\n"
"  which are normally part of a standard GNU package. These files are:\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:270
#, no-wrap
msgid ""
"        install-sh, mkinstalldirs, missing, ChangeLog, depcomp,\n"
"        INSTALL, NEWS, README, COPYING, AUTHORS.\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:274
#, no-wrap
msgid ""
"  However, automake provides an option to add those missing files\n"
"  (in case they are found on your system) if you add the -a flag\n"
"  to automake (short for --add-missing). So let's do that:\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:276
msgid "automake --add-missing"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:278
#, no-wrap
msgid "  The output of this command looks something like:\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:289
#, no-wrap
msgid ""
"        configure.in: installing `./install-sh'\n"
"        configure.in: installing `./mkinstalldirs'\n"
"        configure.in: installing `./missing'\n"
"        Makefile.am: installing `./INSTALL'\n"
"        Makefile.am: required file `./NEWS' not found\n"
"        Makefile.am: required file `./README' not found\n"
"        Makefile.am: installing `./COPYING'\n"
"        Makefile.am: required file `./AUTHORS' not found\n"
"        Makefile.am: required file `./ChangeLog' not found\n"
"        Makefile.am: installing `./depcomp'\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:293
#, no-wrap
msgid ""
"  Some symbolic links will be created in your project directory, pointing\n"
"  to the various locations where the files are found. As you can see,\n"
"  some files are still missing: NEWS, README, AUTHORS and ChangeLog.\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:297
#, no-wrap
msgid ""
"  If you want those files to also be installed when you add the -a flag\n"
"  to automake, create those files in the same place where the symlinks\n"
"  point to.\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:301
#, no-wrap
msgid ""
"  The missing files are just informal ones. It's up to you to decide if\n"
"  you want them, though it isn't a bad idea to follow the GNU convention\n"
"  and execute the following command to create the missing files:\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:303
msgid "touch NEWS README AUTHORS ChangeLog"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:305
#, no-wrap
msgid "  Run `automake' again to verify it isn't complaining anymore:\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:307
msgid "automake"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:311
#, no-wrap
msgid ""
"  In case you are wondering, the symbolic links will be replaced by the\n"
"  programs themselves if you do a `make dist' when you are ready to\n"
"  distribute your project, read along.\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:314
#, no-wrap
msgid ""
"Creating the configure script\n"
"-----------------------------\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:317
#, no-wrap
msgid "  To create the configure script, just run `autoconf' and you're done:\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:319
msgid "autoconf"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:322
#, no-wrap
msgid ""
"Testing the result\n"
"------------------\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:325
#, no-wrap
msgid ""
"  Before you test the result, it is always a good idea to backup your "
"work:\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:329
msgid "cd .. && cp -a hello hello.ok && cd -"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:333
#, no-wrap
msgid ""
"  Now test if the configure script works as expected; while testing, pay\n"
"  close attention to the output that you get from the configure script,\n"
"  especially the '--enable-goodbye' option and the 'stdio.h' check:\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:338
#, no-wrap
msgid ""
"./configure --prefix=$HOME/hello-test \\\n"
"        --bindir=$HOME/hello-test &&\n"
"make &&\n"
"make install\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:340
#, no-wrap
msgid "  See if the program works:\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:343
msgid "ls -l ../hello-test && ../hello-test/hello"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:345
#, no-wrap
msgid "  Now test if our configure-option gets recognized:\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:351
#, no-wrap
msgid ""
"./configure --prefix=$HOME/hello-test\\\n"
"        --bindir=$HOME/hello-test \\\n"
"        --enable-goodbye &&\n"
"make &&\n"
"make install\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:353
#, no-wrap
msgid "  And again, see if the program works:\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:356
msgid "./hello && ../hello-test/hello"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:361
#, no-wrap
msgid ""
"  If you execute a `make uninstall', you will notice the binary is "
"removed,\n"
"  but the directory is still there; this is a good thing, because if you\n"
"  installed the package in /usr/bin for example, you wouldn't want the\n"
"  uninstall rule to `rm -fr' your entire /usr/bin as well.\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:365
#, no-wrap
msgid ""
"  You could enhance the Makefile to test for an empty directory and then\n"
"  remove it, or just add a `rmdir --i <prefix>', which will quietly fail\n"
"  if the directory is not empty.\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:368
#, no-wrap
msgid ""
"Making a distribution\n"
"---------------------\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:371
#, no-wrap
msgid "  It is possible to create a tarball from your project by executing:\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:373
msgid "make dist"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:377
#, no-wrap
msgid ""
"  In this example you would end up with a file called "
"\"hello-1.0.tar.gz\",\n"
"  and a file \"hello-1.0.tar.bz2\" since the target has dependencies, "
"check\n"
"  what the package contains:\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:379
msgid "tar tvzf hello-1.0.tar.gz"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:381
#, no-wrap
msgid "  If you would only like a bzipped tarball, execute:\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:385
msgid "make dist-bzip2 && ls -l hello-1.0.tar.bz2 && tar tvjf hello-1.0.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:391
#, no-wrap
msgid ""
"  Hint: If you install \"bash_completion\" (available on "
"http://freshmeat.net),\n"
"        then you can get all available make targets by entering 'make ' "
"and\n"
"        pressing TAB twice (notice the space after the `make' "
"command!). With\n"
"        bash_completion, the same is true for `./configure --<TAB><TAB>',\n"
"        which will list the available configure options; very neat indeed!\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:395
#, no-wrap
msgid ""
"  To end the foolishness of making a GNU package of a 326 byte hello.c\n"
"  sourcefile, unpack the distribution you just made and see that it is\n"
"  258048 bytes now; that is ~791.56 times bigger then the original "
"sourcefile:\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:398
msgid "tar xjf hello-1.0.tar.bz2 && du -sb hello-1.0"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:400
#, no-wrap
msgid "  But it is supposed to be portable now.\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:403
#, no-wrap
msgid ""
"Related documents and links\n"
"---------------------------\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:406
#, no-wrap
msgid "  For a full description and all the macros's you can use, visit:\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:410
#, no-wrap
msgid ""
"        http://www.gnu.org/manual/make/\n"
"        http://www.gnu.org/manual/autoconf/\n"
"        http://www.gnu.org/manual/automake/\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:412
#, no-wrap
msgid "  For information about installing the Autotools, see Linuxfromscratch:\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:416
#, no-wrap
msgid ""
"        http://www.linuxfromscratch.org/view/cvs/chapter06/make.html\n"
"        http://www.linuxfromscratch.org/view/cvs/chapter06/autoconf.html\n"
"        http://www.linuxfromscratch.org/view/cvs/chapter06/automake.html\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:418
#, no-wrap
msgid "  I recommend reading this as well:\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:420
#, no-wrap
msgid "        http://sources.redhat.com/autobook/autobook/autobook_toc.html\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:422
#, no-wrap
msgid "  Other links to sites mentioned in this document:\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:425
#, no-wrap
msgid ""
"        http://sourceforge.net\n"
"        http://freshmeat.net\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:428
#, no-wrap
msgid ""
"Suggestions\n"
"-----------\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:432
#, no-wrap
msgid ""
"  If you have any questions about, or suggestions for this document,\n"
"  then please contact the author.\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:436
#, no-wrap
msgid ""
"  If this document has been of any use to you or if you are making a\n"
"  translation of it, please drop the author an email, your feedback\n"
"  is very WelkoM.\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:438
#, no-wrap
msgid "  Happy Landings!\n"
msgstr ""

#. type: Plain text
#: origin/autotools.txt:445
#, no-wrap
msgid ""
"CHANGELOG:\n"
"[2002/07/15]\n"
"  * Initial hint.\n"
"[2003-09-16]\n"
"  * Just some textual changes for the new format.\n"
msgstr ""
