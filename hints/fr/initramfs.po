# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-09-02 09:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: origin/initramfs.txt:2
#, no-wrap
msgid "AUTHOR:   Bryan Kadzban <bryan_at_kadzban.is-a-geek.net)\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:4
#, no-wrap
msgid "DATE:     2005-11-25\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:7
#, no-wrap
msgid ""
"LICENSE:  Creative Commons Attribution-ShareAlike License, version 2.5\n"
"          (http://creativecommons.org/licenses/by-sa/2.5/)\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:10
#, no-wrap
msgid ""
"SYNOPSIS: Build a very basic initramfs that creates, then mounts, then\n"
"          runs /sbin/init on, the real root FS device.\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:12
msgid "DESCRIPTION:"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:17
msgid ""
"This hint will guide you through the process used to build an initramfs.  "
"The resulting initramfs will be fairly simple, only able to create the "
"device node for the root FS, figure out its filesystem (within limits), "
"mount it, then boot to it."
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:19
msgid "ATTACHMENTS:"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:21
msgid "http://www.linuxfromscratch.org/hints/downloads/attachments/initramfs/initramfs-scripts.tar.gz"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:23
msgid "PREREQUISITES:"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:28
msgid ""
"An LFS system, using kernel 2.6 (preferably the latest stable version) and "
"any version of lfs-bootscripts whose mountkernfs script can handle /proc "
"being mounted when it runs.  (If your mountkernfs script runs \"mountpoint "
"/proc\", then it's probably OK.)"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:31
msgid ""
"Also make sure you read Appendix B (possible gotchas)! You may have to "
"modify the /init script on your own."
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:33
msgid "HINT:"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:34 origin/initramfs.txt:45 origin/initramfs.txt:196
#, no-wrap
msgid "=============================\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:36
#, no-wrap
msgid ""
"Contents:\n"
"=============================\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:39
msgid "1-8.  Initramfs build instructions"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:41
msgid "Appendices:"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:44
#, no-wrap
msgid ""
"A.    Possible enhancements\n"
"B.    Possible gotchas\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:47
#, no-wrap
msgid ""
"Initramfs build instructions\n"
"=============================\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:53
#, no-wrap
msgid ""
"1.  Install LFS, by the book all the way through.  Make sure you have a\n"
"working kernel configuration (i.e., make sure you can boot to it), so that\n"
"if the initramfs fails, you'll still have a fallback.\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:57
#, no-wrap
msgid ""
"2.  Export some variables to be used later (you may change the first path\n"
"at will):\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:60
msgid "export INITRAMFS=~/initramfs export SCRIPTS=$INITRAMFS/scripts"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:63
msgid ""
"If you ever exit the shell that you're using to do these instructions, you "
"MUST reset these variables before resuming the instructions."
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:66
msgid ""
"Now create the directories required (there's no need to make $SCRIPTS, "
"because the initramfs-scripts tarball will create it):"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:68
msgid "mkdir -p $INITRAMFS"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:73
#, no-wrap
msgid ""
"3.  Download klibc from http://www.kernel.org/pub/linux/libs/klibc/, and\n"
"extract it into $INITRAMFS.  (The latest version at the time of this\n"
"writing is v1.1.1.)  Then:\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:78
msgid ""
"cd $INITRAMFS/klibc-1.1.1 ln -s /usr/src/linux-2.6.14 linux # (substitute "
"the correct path to your LFS kernel's source tree)  make SUBDIRS=utils"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:83
msgid ""
"This will build several tools in $INITRAMFS/klibc-1.1.1/utils/static/, which "
"will be used by the /init script below to mount filesystems, find the "
"filesystem type of the root FS, and nuke-initramfs-then-run-the- "
"final-init.  (The last task is carried out by one utility, run-init.)"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:90
msgid ""
"These tools can be run on any kernel whose version is greater than or equal "
"to the version of the kernel that you build them against.  (In this example, "
"they may not work under kernels earlier than 2.6.14, since the symlink "
"pointed at 2.6.14 when they were built.  Later kernels will include "
"backward-compatibility code to keep them working, but earlier kernels will "
"not necessarily be forward-compatible.)"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:96
#, no-wrap
msgid ""
"4.  Extract the initramfs-scripts.tar.gz tarball from inside the "
"$INITRAMFS\n"
"directory.  This will create the scripts (NOTE: not initramfs-scripts!)\n"
"subdirectory, and extract this hint's init and initramfs-list files into\n"
"it.\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:100
msgid ""
"We must modify the initramfs-list, so that it has the correct directories in "
"it.  The kernel's build process (which interprets this file) does not "
"substitute shell variables, so we must do this manually:"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:103
#, no-wrap
msgid ""
"sed -e \"s@\\$SCRIPTS@$SCRIPTS@g\" -e \"s@\\$INITRAMFS@$INITRAMFS@g\" \\\n"
"    <$SCRIPTS/initramfs-list-with-vars >$SCRIPTS/initramfs-list\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:108
msgid ""
"This will replace all occurrences of $SCRIPTS and $INITRAMFS in the file "
"with the current values of the corresponding shell variables.  Make SURE you "
"don't miss the backslash escape character before the first $ in each sed "
"script!"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:124
msgid ""
"If you feel the need to modify the init script, you should know a few things "
"about it.  First, it gets run under bash, so you can use *almost* any "
"construct that bash provides.  Second, we will not be copying glibc's NSS "
"libraries, so anything that requires NSS will fail.  (Name lookups are one "
"thing that require NSS; this is why not everything bash is capable of will "
"work.  For instance, the fake /dev/tcp/www.kernel.org/80 \"file\" that bash "
"provides won't actually work, because bash can't look up www.kernel.org.)  "
"Third, the last line of the script must *exec* run-init.  You can't just run "
"run-init without the exec statement, because if you do, your final system's "
"/sbin/init won't work properly.  (/sbin/init from the sysvinit package needs "
"to have PID 1, otherwise it acts like /sbin/telinit, and tries to signal PID "
"1 to change runlevels.  This obviously won't work unless PID 1 is also "
"/sbin/init.  If you don't exec the run-init utility, it won't have PID 1, so "
"when it exec's /sbin/init, it won't work right.)"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:128
msgid ""
"Other than that, this script can do anything you want.  For this hint, it "
"just does what I consider the bare minimum (create the root block device, "
"mount it, then change over to it and run the final system's /sbin/init)."
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:135
msgid ""
"If you need to modify the initramfs-list file, the syntax should be fairly "
"obvious.  But run \"usr/gen_init_cpio --help\" from the base of your kernel "
"tree to see the full syntax.  Note that if you create any other directories "
"to put files into, you have to list the directory before you list the "
"file(s) that go into it."
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:142
msgid ""
"This will create about a 1-2 megabyte initramfs; this is definitely small "
"enough to fit in even the most RAM-strapped machine's memory at startup.  "
"And it deletes everything from the initramfs just before running the final "
"system's /sbin/init, so it won't take any more memory while your system is "
"running, either."
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:149
#, no-wrap
msgid ""
"5.  Change the kernel's version string, so you won't overwrite your old\n"
"kernel's modules (if you configured a modular kernel).  The easiest way\n"
"to do this is to edit the kernel's top-level Makefile, and change the\n"
"EXTRAVERSION variable at the top.  Adding \"-initramfs\" to the end would\n"
"be sufficient, but you can make any change you wish.\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:161
#, no-wrap
msgid ""
"6.  Build and install the \"new\" kernel version.  Make sure you set\n"
"CONFIG_INITRAMFS_SOURCE (in menuconfig, it's under \"General setup\") to\n"
"$SCRIPTS/initramfs-list during the kernel configuration.  (You will need\n"
"to manually expand the $SCRIPTS variable -- the kernel will not do it for\n"
"you.)  DO NOT move the initramfs-list file without updating the kernel\n"
"configuration, and DO NOT move any files referred to by the initramfs-list\n"
"file without updating it!  Files referred to by initramfs-list can be\n"
"upgraded at will (and the next time initramfs-list is touched, the kernel\n"
"will rebuild the whole initramfs, including the new versions), but not\n"
"moved.\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:170
msgid ""
"The kernel's build process will inspect the file that INITRAMFS_SOURCE "
"points to, and build an initramfs using the files, directories, and devices "
"described in the file.  (You could also use a directory, and the build will "
"create an initramfs from all the files in that directory.  But I think using "
"a file is simpler, and as above, just touching that file and rebuilding the "
"kernel is enough to get upgrades to take effect.  Also, I'm not sure whether "
"using a directory requires the \"cpio\" tool to be installed; this method "
"definitely does not.)"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:178
#, no-wrap
msgid ""
"7.  Create a grub menu.lst entry for your initramfs kernel.  *DO NOT*\n"
"overwrite a kernel you already have installed, just in case the initramfs\n"
"doesn't work -- then you'll have a backup way to get a usable system, and\n"
"you will be able to fix the initramfs from there.  It's probably a good\n"
"idea to always keep a kernel around that's not based on an initramfs, just\n"
"in case.\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:184
msgid ""
"You don't have to pass any special parameters to the kernel to tell it to "
"use the initramfs you just built (this is different from an initrd) -- the "
"kernel will extract the initramfs image automatically, then check whether "
"there's an /init file.  If so, it will try to run it; if not, it will boot "
"like normal.  (This also means there's no way to disable the initramfs.)"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:195
#, no-wrap
msgid ""
"8.  Boot to the new kernel.  If you see the LFS bootscripts running, then\n"
"the initramfs worked.  If you get an error before the bootscripts start,\n"
"then you will have to investigate what's wrong in the initramfs -- "
"probably\n"
"the easiest way is to change the init script and add a \"/bin/bash\" line\n"
"just before the point where the error happens.  (Some echos won't hurt,\n"
"either.)  Then, you can look around the environment a bit.  But note: you\n"
"don't have very many commands.  Just the shell builtins (\"echo *\" makes "
"a\n"
"halfway-decent replacement for ls, although it doesn't have an \"ls -l\"\n"
"mode), cat, mount, mknod, and fstype.\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:198
#, no-wrap
msgid ""
"Appendices:\n"
"=============================\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:201
msgid "A.  Possible enhancements:"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:204
msgid ""
"This initramfs structure can do just about anything.  Here are the first few "
"things that I can think of that might be useful:"
msgstr ""

#. type: Bullet: '  (1) '
#: origin/initramfs.txt:207
msgid ""
"LVM, etc. for a root FS -- anything that requires special setup.  (In fact, "
"I got the basis for this /init script from an LVM howto.)"
msgstr ""

#. type: Bullet: '  (2) '
#: origin/initramfs.txt:211
msgid ""
"A \"make allmodules\" kernel -- an initramfs, like an initrd, gives you the "
"ability to build *everything* as a module, including the driver for your "
"root filesystem, the driver for your root disk, etc."
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:217
#, no-wrap
msgid ""
"  (3) A LiveCD -- when making a LiveCD, you don't know which device file\n"
"      will be holding the LiveCD image.  So you have to run a script that\n"
"      checks all possible devices to see whether each is actually holding\n"
"      the LiveCD.   The current LiveCD hints use an initrd for this "
"script,\n"
"      but it would not be difficult to adapt them to an initramfs.\n"
msgstr ""

#. type: Bullet: '  (4) '
#: origin/initramfs.txt:221
msgid ""
"Others -- anything that requires code to run before the kernel init= or "
"root= arguments are interpreted is a prime candidate for an initrd or "
"initramfs."
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:224
msgid "B.  Possible gotchas:"
msgstr ""

#. type: Bullet: '  (1) '
#: origin/initramfs.txt:231
msgid ""
"The /init script creates the correct root device based on the \"root=\" "
"argument given to the kernel.  But it can only handle IDE disks, and then "
"only /dev/hda through /dev/hdd.  Anything not meeting these criteria will "
"give an error when /init gets run.  It is certainly possible to modify /init "
"to handle more devices, and I would suggest you do so if you use a SCSI hard "
"drive or a secondary IDE card."
msgstr ""

#. type: Bullet: '  (2) '
#: origin/initramfs.txt:237
msgid ""
"The \"fstype\" program can only handle certain filesystem types.  If the "
"filesystem on your root device is not among the supported list, fstype will "
"output \"unknown\", and you will get an error from /init.  You can test "
"before you create the initramfs, if you have permission to read your raw "
"root device, by running:"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:239
#, no-wrap
msgid "      $INITRAMFS/klibc-1.1.1/utils/static/fstype </dev/hdXY\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:242
#, no-wrap
msgid ""
"      (where hdXY is your root FS device).  klibc must be built first, of\n"
"      course.  If you get output like this:\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:245
#, no-wrap
msgid ""
"      FSTYPE=ext3\n"
"      FSSIZE=whatever\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:248
#, no-wrap
msgid ""
"      then fstype is able to recognize your root filesystem type.  But if\n"
"      you get this output:\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:251
#, no-wrap
msgid ""
"      FSTYPE=unknown\n"
"      FSSIZE=0\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:257
#, no-wrap
msgid ""
"      then fstype will not work for you.  The solution would be to either\n"
"      try a newer version of fstype, or enhance it yourself to recognize\n"
"      your filesystem, or forget about it altogether and just hard-code\n"
"      your root FS type into /init.  (There are some comments in the "
"script\n"
"      showing where to do that if you need to.  It's near the:\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:259
#, no-wrap
msgid "      mount -t $FSTYPE $root /new-root\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:261
#, no-wrap
msgid "      command.)\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:264
msgid "ACKNOWLEDGEMENTS:"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:267
#, no-wrap
msgid ""
"Benjamin Smee (strerror_at_disciplina.net): Writing the LVM-DMcrypt-HOWTO,\n"
"  which this hint's /init script is based on\n"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:269
msgid "CHANGELOG:"
msgstr ""

#. type: Plain text
#: origin/initramfs.txt:270
msgid "2005-11-25: Initial release"
msgstr ""
