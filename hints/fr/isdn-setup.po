# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-09-02 09:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: origin/isdn-setup.txt:4
msgid ""
"TITLE:\t\tISDN Setup LFS VERSION:\t3.3 and higher AUTHOR:\t\tEric "
"Dillenseger <eric@naxalite.homelinux.org>"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:7
#, no-wrap
msgid ""
"SYNOPSIS:\n"
"\tSetting up ISDN on LFS and using ISDN4Linux.\n"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:11
msgid "HINT: version 0.1.0 Nov. 03 2002"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:13
#, no-wrap
msgid ""
"CONTENT:\n"
"--------\n"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:19
#, no-wrap
msgid ""
"\t1� What do I need?\n"
"\t2� Setting up ISDN support in the linux kernel.\n"
"\t3� Installing ISDN4Linux\n"
"\t4� Configuring ISDN interfaces\n"
"\t5� The end\n"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:21
#, no-wrap
msgid ""
"1� What do I need?\n"
"------------------\n"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:24
msgid "For this hint I used a 2.4.18 kernel and isdn4k-utils.v3.1pre1"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:30
#, no-wrap
msgid ""
"-Linux kernel sources at http://kernel.org\n"
"-ISDN4Linux at http://www.isdn4linux.de\n"
"\t(requires sgml2html for FAQ installation and gdbm for isdnlog)\n"
"-Know how to compile a kernel\n"
"-Some time ;)\n"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:32
#, no-wrap
msgid ""
"2� Setting up ISDN support in the linux kernel.\n"
"-----------------------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:36
msgid ""
"I suppose you have the source for your kernel in /usr/src/linux We start "
"from a clean source by runing:"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:38
msgid "#: make mrproper"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:41
msgid ""
"Now you can choose your own way to configure it "
"(config/menuconfig/xconfig).  I use menuconfig."
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:43
msgid "#: make menuconfig"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:56
#, no-wrap
msgid ""
"There you set up your configuration the way you want it.\n"
"For ISDN support, you need to go in 'ISDN subsytem' then select \n"
"\t-'ISDN support' as a module <M>\n"
"\t\t(Activates ISDN subsystem)\n"
"\t-'Support synchronous PPP' <Y>\n"
"\t\t(To use synchronous transmit on ISDN line)\n"
"\t-'Use VJ-compression with synchronous PPP' <Y>\n"
"\t\t(Van Jacobson compression)\n"
"\t-'Support generic MP (RFC 1717)' <Y>\n"
"\t\t(To be able to connect at 128k)\n"
"\t-'Support BSD compression' as a module <M>\n"
"\t\t(BSD compression)\n"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:61
#, no-wrap
msgid ""
"Depending on your card, choose the appropriate driver from\n"
"\t-Passive ISDN cards\n"
"\t-Active ISDN cards\n"
"It depends of your card' chipset.\n"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:67
#, no-wrap
msgid ""
"I have an Olitec card with ISDN 128 Gazel chipset so:\n"
"\t-Passive ISDN cards\n"
"\t+->HiSax SiemensChipset driver support <M>\n"
"\t|+->HiSax support for EURO/DSS1 <Y>\n"
"\t+->Gazel cards <Y>\n"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:69
msgid "Once again, this is my configuration, adapt to yours."
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:74
#, no-wrap
msgid ""
"*Note*\n"
"\tIf you have an Olitec 128 RNIS PCI card (like me), there's a little "
"trick\n"
"\tto make it work before compiling the new kernel.\n"
"\tHere it is for 2.2.17 kernel:\n"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:76
#, no-wrap
msgid "\t#: cat /proc/pci\n"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:78
#, no-wrap
msgid "\tthere should be an entry like \n"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:81
#, no-wrap
msgid ""
"\tNetwork controler : PLX Unknown device?\n"
"\tVendor id=10b5. Device id=1187\n"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:98
#, no-wrap
msgid ""
"\tWrite down this device id and go to /usr/src/linux/drivers/isdn/hisax\n"
"\tedit gazel.c and replace\n"
"\t\t#DEFINE GAZEL_R753 0x1152\n"
"\tby\n"
"\t\t#DEFINE GAZEL_R753 0x1187\n"
"\tand save it.\n"
"\tFor 2.4.18 kernel:\n"
"\tgo to /usr/src/linux/include/linux\n"
"\tedit pci_ids.h and replace line 766\n"
"\t\t#define PCI_DEVICE_ID_PLX_R753          0x1152\n"
"\tby\n"
"\t\t#define PCI_DEVICE_ID_PLX_R753          0x1187\n"
"\tand save it.\n"
"\tDon't ask me where to find it for other kernel, i don't know.\n"
"\tBut it seems that they're keeping the 2.4.18 way.\n"
"\tLet's see how it'll be in 2.6.x next year (or maybe 2004 ;)\n"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:100
msgid "Ok, now we can compile the kernel as usual:"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:102
msgid "#: make dep && make bzImage && make modules && make modules_install"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:104
msgid "copy the kernel to /boot"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:109
msgid ""
"#: cp arch/i386/boot/bzImage /boot/lfskernel-isdn #: cp System.map "
"/boot/System.map-isdn #: rm /boot/System.map #: ln -s /boot/System.map-isdn "
"/boot/System.map"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:111
msgid "Edit /etc/lilo.conf to reflect the new configuration"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:113
msgid "# Begin /etc/lilo.conf"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:127
#, no-wrap
msgid ""
"lba32\n"
"boot=/dev/hda\n"
"root=/dev/hda1\n"
"install=/boot/boot-menu.b\n"
"prompt\n"
"timeout=50\n"
"default=lfsisdn\n"
"image=/boot/lfskernel-isdn\n"
"       label=lfs-isdn\n"
"       read-write\n"
"image=/boot/lfskernel\n"
"        label=lfs\n"
"\tread-write\n"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:129
msgid "# End /etc/lilo.conf"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:131
msgid "Then run lilo to update the mbr"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:135
msgid "#: /sbin/lilo Added lfs-isdn * Added lfs"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:138
msgid "And now, the moment of truth, reboot your system.  Log in as root, and type:"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:140
msgid "#: modprobe hisax type=xx protocol=x"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:144
msgid ""
"Replace by the values corresponding to your card, in doubt, read "
"/usr/src/linux/Documentation/isdn/README.hisax It should load without "
"problem."
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:146
#, no-wrap
msgid ""
"3� Installing ISDN4Linux\n"
"------------------------\n"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:149
msgid "Unpack the source in a directory:"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:151
msgid "#: tar xzf isdn4k-utils.v3.1pre1.tar.gz"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:153
msgid "go to the new directory and run:"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:155
msgid "#: make config"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:162
msgid ""
"This brings you to a screen looking like menuconfig for the kernel.  There "
"you can choose what you want to enable/disable and set the path where the "
"stuff will be installed.  Use help anytime if you don't know the meaning of "
"an item.  Once you're done, you may save your config to a file for further "
"use or simply exit. The program will configure everything."
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:164
msgid "#: make && make install"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:166
msgid "At the end of make install, devices are automatically created."
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:168
msgid "#: ls /dev/ippp* && ls /dev/isdn*"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:170
msgid "Should show them, and you should have isdnctrl, hisaxctrl and ipppd in /sbin"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:172
#, no-wrap
msgid ""
"4� Configuring ISDN interfaces\n"
"------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:177
msgid ""
"First, we're going to write the config file for isdnctrl that will set ippp0 "
"interface for single channel connection.  Feel free to modify it to suit "
"your needs."
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:197
#, no-wrap
msgid ""
"/etc/isdn/isdn1B.conf\n"
"[ISDNCTRL]\n"
"\tINTERFACES = {\n"
"\t\tINTERFACE]\n"
"\t\tNAME = ippp0\n"
"\t\tEAZ = <EAZ>\t\t#this is your line number w/o <>\n"
"\t\tPHONE_OUT = <ISP>\t#this is the phone number of your ISP\n"
"\t\tSECURE = on\n"
"\t\tDIALMODE = auto\n"
"\t\tDIALMAX = 1\n"
"\t\tHUPTIMEOUT= 180\n"
"\t\tIHUP = on\n"
"\t\tCHARGEHUP = off\n"
"\t\tL2_PROT = hdlc\n"
"\t\tL3_PROT = trans\n"
"\t\tENCAP = syncppp\n"
"\t\tSDELAY = 10\n"
"\t\tPPPBIND = 0\n"
"\t}\n"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:199
msgid "for dual channel connection:"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:234
#, no-wrap
msgid ""
"/etc/isdn/isdn2B.conf\n"
"[ISDNCTRL]\n"
"\tINTERFACES = {\n"
"\t\t[INTERFACE]\n"
"\t\tNAME = ippp0\n"
"\t\tEAZ = <EAZ>\n"
"\t\tPHONE_OUT = <ISP>\n"
"\t\tSECURE = on\n"
"\t\tDIALMODE = auto\n"
"\t\tDIALMAX = 1\n"
"\t\tHUPTIMEOUT= 170\n"
"\t\tIHUP = on\n"
"\t\tCHARGEHUP = off\n"
"\t\tL2_PROT = hdlc\n"
"\t\tL3_PROT = trans\n"
"\t\tENCAP = syncppp\n"
"\t\tADDSLAVE = ippp1\n"
"\t\tSDELAY = 30\n"
"\t\tPPPBIND = 0\n"
"\t\t[SLAVE]\n"
"\t\tNAME = ippp1\n"
"\t\tEAZ = <EAZ>\n"
"\t\tPHONE_OUT = <ISP>\n"
"\t\tSECURE = on\n"
"\t\tDIALMODE = auto\n"
"\t\tDIALMAX = 3\n"
"\t\tHUPTIMEOUT= 170\n"
"\t\tIHUP = on\n"
"\t\tCHARGEHUP = off\n"
"\t\tL2_PROT = hdlc\n"
"\t\tL3_PROT = trans\n"
"\t\tENCAP = syncppp\n"
"\t\tPPPBIND = 1\n"
"\t}\n"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:236
msgid "Now we can test our configuration by passing the file to isdnctrl with:"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:240
msgid ""
"#: cd /etc/isdn #: ln -s isdn1B.conf device.conf #: isdnctrl readconf "
"/etc/isdn/device.con"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:257
msgid ""
"You should see something like: [root@lfs] /etc/isdn #:> isdnctrl readconf "
"device.conf ippp0 added EAZ/MSN for ippp0 is <EAZ> Security for ippp0 is on "
"Dialmax for ippp0 is 1 times.  Hangup-Timeout for ippp0 is 180 sec.  "
"Incoming-Hangup for ippp0 is on Charge-Hangup for ippp0 is off "
"Layer-2-Protocol for ippp0 is hdlc Layer-3-Protocol for ippp0 is trans "
"Encapsulation for ippp0 is syncppp Slave-activation delay for ippp0 is 10 "
"sec.  ippp0 bound to 0 ISDN Configuration read from device.conf."
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:261
msgid ""
"Now you should be able to connect to internet. You have no gateway or "
"nameserver set so you may not browse the net.  Simply type:"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:263
msgid "#: isdnctrl dial ippp0"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:265
msgid "To erase this configuration, type"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:267
msgid "#: isdnctrl delif ippp0"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:271
msgid ""
"Now we're going to set some startup script to automate the configuration of "
"ipppd daemon. ipppd expect to find a file called ioptions in /etc/ppp even "
"if it's empty so create it to avoid some errors:"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:273
msgid "#: touch /etc/ppp/ioptions"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:275
msgid "For one channel (64kb):"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:277
msgid "/etc/isdn/ioptions1B"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:279
msgid "# Begin /etc/isdn/ioptions1B"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:285
msgid ""
"/dev/ippp0 defaultroute debug +pwlog name !!login-name!! # replace with your "
"ISP login name"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:287
msgid "# End /etc/isdn/ioptions1B"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:289
msgid "For two channels (128kb):"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:291
msgid "/etc/isdn/ioptions2B"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:293
msgid "# Begin /etc/isdn/ioptions2B"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:301
msgid ""
"/dev/ippp0 /dev/ippp1 +mp defaultroute debug +pwlog name !!login-name!! # "
"replace with your ISP login name"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:303
msgid "# End /etc/isdn/ioptions2B"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:305
msgid "Now we need to create a chap-secrets or pap-secrets file."
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:309
#, no-wrap
msgid ""
"#: mkdir /etc/ppp\n"
"#: echo \"\\\"login-name\\\"    *    \\\"password\\\"\" > "
"/etc/ppp/chap-secrets\n"
"#: chmod 600 /etc/ppp/chap-secrets\n"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:314
msgid ""
"As this file contains our login/password for our ISP, we don't want "
"everybody to be able to read them.  At this point, don't forget to add users "
"who will be able to connect to internet to the dialout group:"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:316
msgid "#: usermod -G dialout user"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:320
msgid ""
"Check the rights on /dev/isdninfo and /dev/isdnctrl* All should belong to "
"user root and group dialout and be crw-rw---- except /dev/isdnctrl wich is a "
"symlink to /dev/isdnctrl0"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:327
#, no-wrap
msgid ""
"#: ls /dev/isdninfo\n"
"crw-rw----    1 root     dialout   45, 255 nov  3 20:14 /dev/isdninfo\n"
"#: ls /dev/isdnctrl\n"
"lrwxrwxrwx    1 root     dialout         9 nov  3 20:14 /dev/isdnctrl -> "
"isdnctrl0\n"
"#: ls /dev/isdnctrl0\n"
"crw-rw----    1 root     dialout   45,  64 nov  3 20:14 /dev/isdnctrl0\n"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:332
msgid ""
"Correct if needed: #: chown root:dialout /dev/isdninfo #: chmod 660 "
"/dev/isdninfo #: chown root:dialout /dev/isdnctrl"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:334
msgid "Now we can start ipppd to see if everything works fine:"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:338
#, no-wrap
msgid ""
"#: ipppd file /etc/isdn.ioptions1B\n"
"#: ps aux | grep ipppd\n"
"root      4705  0.0  0.2  2088 1068 ?        S    21:10   0:00 ipppd file "
"/etc/i\n"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:347
msgid ""
"This means that everything is ok, you can check your logs to be sure, I'm "
"using metalog so I give you the files from sysklogd from my old debian: in "
"/var/log/kern.log: Nov 3 15:56:38 naxalite kernel: ippp, open, slot: 0, "
"minor: 0, state: 0000 Nov 3 15:56:38 naxalite kernel: ippp_ccp: allocated "
"reset data structure c4f29 Nov 3 15:56:38 naxalite kernel: ippp_ccp: freeing "
"reset data structure c384080 Nov 3 15:56:38 naxalite kernel: ippp0: dialing "
"1 0860095557...  Nov 3 15:56:40 naxalite kernel: isdn_net: ippp0 connected"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:366
msgid ""
"This shows a succesfull connection.  in /var/log/messages: Nov 3 15:56:38 "
"naxalite ipppd[231]: reinit_unit: 0 Nov 3 15:56:38 naxalite ipppd[231]: "
"Connect[0]: /dev/ippp0, fd: 8 Nov 3 15:56:38 naxalite kernel: ippp0: dialing "
"1 ...  Nov 3 15:56:40 naxalite ipppd[231]: Local number: , Remote number: , "
"Type: out Nov 3 15:56:40 naxalite kernel: isdn_net: ippp0 connected Nov 3 "
"15:56:40 naxalite ipppd[231]: ChapReceiveChallenge: Rcvd id 27.  Nov 3 "
"15:56:40 naxalite ipppd[231]: ChapReceiveChallenge: received name field: Nov "
"3 15:56:41 naxalite ipppd[231]: ChapReceiveSuccess: Rcvd id 27.  Nov 3 "
"15:56:41 naxalite ipppd[231]: MPPP negotiation, He: Yes We: Yes Nov 3 "
"15:56:41 naxalite ipppd[231]: CCP enabled! Trying CCP.  Nov 3 15:56:41 "
"naxalite ipppd[231]: ccp_resetci! Nov 3 15:56:41 naxalite ipppd[231]: "
"Compressor BSD Compress loaded! Nov 3 15:56:41 naxalite ipppd[231]: "
"ccp_resetci! Nov 3 15:56:41 naxalite ipppd[231]: Compressor BSD Compress "
"loaded! Nov 3 15:56:41 naxalite ipppd[231]: local IP address 212.83.145.79 "
"Nov 3 15:56:41 naxalite ipppd[231]: remote IP address 212.47.226.2"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:368
msgid "This shows ipppd connection."
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:372
msgid ""
"Now we almost have a working internet connection via ISDN, we just need to "
"setup some system boot scripts to load ipppd and set the default gateway on "
"dial."
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:374
msgid "#: touch /etc/rc.d/init.d/hisax"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:376
msgid "Edit /etc/rc.d/init.d/hisax"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:399
#, no-wrap
msgid ""
"#!/bin/sh\n"
"# Begin of /etc/rc.d/init.d/hisax\n"
"case \"$1\" in\n"
"\tstart)\n"
"\t\t/sbin/modprobe hisax type=34 protocol=2\n"
"\t\t/sbin/isdnctrl readconf /etc/isdn/device.conf\n"
"\t\t/sbin/ipppd file /etc/isdn/ioptions1B\n"
"\t;;\n"
"\tstop)\n"
"\t\t/sbin/ifconfig ippp0 down\n"
"\t\t/sbin/isdnctrl delif ippp0\n"
"\t;;\n"
"\trestart)\n"
"\t\t$0 stop\n"
"\t\twait 3\n"
"\t\t$0 start\n"
"\t;;\n"
"\t*)\n"
"\t\techo \"Usage: $0 {start|stop|restart}\"\n"
"\t\texit 1\n"
"\t;;\n"
"esac\n"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:402
msgid "exit 0 # End /etc/rc.d/init.d/hisax"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:404
msgid "Make it executable:"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:406
msgid "#: chmod +x /etc/rc.d/init.d/hisax"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:408
msgid "Link it to the differents runlevels, replace XX by the levels tou want:"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:416
msgid ""
"#: ln -sf /etc/rc.d/init.d/hisax /etc/rc.d/rc0.d/KXXhisax #: ln -sf "
"/etc/rc.d/init.d/hisax /etc/rc.d/rc1.d/KXXhisax #: ln -sf "
"/etc/rc.d/init.d/hisax /etc/rc.d/rc2.d/KXXhisax #: ln -sf "
"/etc/rc.d/init.d/hisax /etc/rc.d/rc3.d/SXXhisax #: ln -sf "
"/etc/rc.d/init.d/hisax /etc/rc.d/rc4.d/SXXhisax #: ln -sf "
"/etc/rc.d/init.d/hisax /etc/rc.d/rc5.d/SXXhisax #: ln -sf "
"/etc/rc.d/init.d/hisax /etc/rc.d/rc6.d/KXXhisax"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:418
msgid "We need to define a gateway:"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:420
msgid "/etc/ppp/ip-down.local"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:425
msgid ""
"#!/bin/sh # Begin of /etc/ppp/ip-down.local route add default dev ippp0 # "
"End of /etc/ppp/ip-down.local"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:428
msgid ""
"Now we can create a small script to dial/hangup or check the status of our "
"connection:"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:447
#, no-wrap
msgid ""
"#!/bin/sh\n"
"# Begin /bin/isdn\n"
"case \"$1\" in\n"
"\ton)\n"
"\t\t/sbin/isdnctrl dial ippp0\n"
"\t;;\n"
"\toff)\n"
"\t\t/sbin/isdnctrl hangup ippp0\n"
"\t;;\n"
"\tinfo)\n"
"\t\t/sbin/isdnctrl list ippp0 | egrep \"Dial mode|Hangup-Timeout\" \\\n"
"\t\t\t&& /sbin/isdnctrl status ippp0\n"
"\t;;\n"
"\t*)\n"
"\t\techo \"Usage: $0 {on|off|info}\"\n"
"\t\texit 1\n"
"\t;;\n"
"esac\n"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:450
msgid "exit 0 # End /bin/isdn"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:452
msgid "#: chmod +x /bin/isdn"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:463
msgid ""
"Don't forget to set tour nameservers in /etc/resolv.conf and check "
"/etc/sysconfig/network-devices/ifconfig.ethX for GATEWAY=xxx.xxx.xxx.xxx "
"value.  I wrotte this hint while installing isdn4linux on my box without "
"problem.  I repeat it again, the main problem comes from your chipset and "
"how you load the hisax module. Check your reseller or the card box to figure "
"out wich chipset your card use.  Another hint: If you have an ISA/PnP card, "
"dont forget to add io= and irq= to modprobe (cat /proc/isapnp is your "
"friend)"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:465
msgid "You may create /etc/isapnp.conf with pnpdump:"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:467
msgid "#: pnpdump > /etc/isapnp.conf"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:470
msgid ""
"For more information, check the kernel documentation, isdn4linux website, "
"newsgroups, IRC, google, etc."
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:472
#, no-wrap
msgid ""
"5� The end:\n"
"-----------\n"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:479
msgid ""
"Well, we're done, we have a working ISDN connection.  This document is a "
"very beta version, it may contain some erros, feel free to mail me any "
"correction or addition I should/may add.  If you have question, I may try to "
"help you in the scope of my little knowledge but don't expect too much ;)"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:482
msgid ""
"Some script from this document are from a french document written by "
"Philippe Latu, and the adaptation to LFS and is from me ;p"
msgstr ""

#. type: Plain text
#: origin/isdn-setup.txt:483
msgid "I hope this document helped you."
msgstr ""
