# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-09-02 09:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: origin/crypt-rootfs.txt:2
msgid "AUTHOR: Lars Bamberger <Lars.Bamberger at gmx dot de>"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:4
msgid "DATE: 2009-12-30"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:6
msgid "LICENSE: GNU Free Documentation License Version 1.2"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:8
msgid "SYNOPSIS: How to setup an encrypted file system including the rootfs."
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:14
msgid ""
"DESCRIPTION: This describes one possible way of encrypting your hard drive, "
"including the root file system. It is intended for experienced users and "
"tries to circumnavigate the pitfalls of encrypting your root file system in "
"a straightforward way."
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:26
msgid ""
"PREREQUISITES: This hint requires that you have sufficient knowledge of "
"BeyondLinuxFromScratch and reasonably up to date software. You must be "
"comfortable building software, finding, reading and understanding other "
"pertinent documentation.  You must know how to set up an initramfs. (See "
"'filesystems/ramfs-rootfs-initramfs.txt' in the kernel's documentation.)  "
"You must be aware why you'd want an encrypted file system and you must "
"understand the nature of the threat you're trying to protect yourself "
"against.  You must also understand shortcomings and security issues if you "
"follow the instructions contained in this hint."
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:29
msgid ""
"You must have a complete backup of you system somewhere safe! That includes "
"an alternative boot device."
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:31
msgid ""
"You ABSOLUTELY MUST READ AND UNDERSTAND THIS HINT BEFORE YOU MODIFY YOUR "
"SYSTEM!"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:34
msgid "HINT:"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:36
#, no-wrap
msgid ""
"1. What is this about?\n"
"======================\n"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:46
msgid ""
"This is about encrypting all but one of your hard drive partitions using "
"LUKS for dm-crypt. We'll boot from one small unencrypted partition using "
"initramfs in order to decrypt the rootfs.  This hint assumes that a small "
"partition from where to boot from is already set up. This partition should "
"be 10 to 15 MB in size in order to store more than one kernel and more than "
"one initramfs image for testing and upgrading purposes. Avoid any larger "
"partition because during every boot we'll calculate a checksum for this "
"partition, a time consuming process."
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:49
#, no-wrap
msgid ""
"2. Required software and dependencies\n"
"=====================================\n"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:52
msgid "2.1 Software in the BLFS book"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:57
msgid ""
"You need to install 'Popt' as 'cryptsetup' depends on this.  Furthermore you "
"need 'uuencode' to create key files. 'uuencode' is included in 'sharutils' "
"and 'GMime' which has further dependencies mentioned in the BLFS book. To "
"create the initramfs, you need 'Cpio'."
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:59
msgid "2.2 Software not in the BLFS book"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:61
msgid "2.2.1 devmapper"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:64
msgid ""
"Get it from http://packages.debian.org/stable/source/devmapper Compile and "
"install it. Required for 'cryptsetup'."
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:67
msgid "2.2.2 cryptsetup with LUKS extension"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:70
msgid ""
"Get it from http://code.google.com/p/cryptsetup/ Compile and install "
"it. Required to handle encrypted partitions."
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:73
msgid "2.2.3 busybox"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:80
msgid ""
"Get it from http://www.busybox.net/ The minimum required configuration "
"includes: * cp * hush (interactive shell not required)  * mount (with "
"support for lots of -o flags) and * switch_root."
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:87
msgid ""
"Compile it, but DO NOT install it. Keep the binary and name it "
"'busybox-minimum'. Next, reconfigure busybox for a full-blown desktop "
"system.  You will need all the standard tools and utilities for the purpose "
"of initially encrypting your root partition and for troubleshooting. (Don't "
"forget 'mkefs'.)  Name this binary 'busybox-large' or something "
"similar. Again, it is not required to install it."
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:90
#, no-wrap
msgid ""
"3. Recompiling the kernel\n"
"=========================\n"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:98
msgid ""
"Decide what algorithm you would like to use to encrypt your hard drive "
"with. Note that this is a crucial decision and you should read more "
"background information on this. (See ACKNOWLEDGMENTS below.)  The "
"appropriate modules need to be compiled (hard-coded, not as modules) into "
"the kernel.  As an example you could use the \"twofish-cbc-essiv:sha256\" "
"method."
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:102
msgid ""
"Also, from the 'Device Drivers' -> 'Multiple devices driver support' menu in "
"the kernel configuration, select the 'Device mapper support' and the 'Crypt "
"target support' as well."
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:105
msgid ""
"Under 'Device Drivers' -> 'Block devices', select 'RAM block device support' "
"and from 'General setup', select 'Initial RAM filesystem and RAM disk'."
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:107
msgid "NOTE: You must boot this new kernel before proceeding."
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:110
#, no-wrap
msgid ""
"4. Encrypting partitions partitions other than rootfs and other than swap\n"
"=========================================================================\n"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:116
msgid ""
"You need to modify your system in order for it to be able to handle "
"encrypted partitions. In the first step, we modify the system so that it can "
"handle encrypted partitions OTHER than the rootfs. It is strongly suggested "
"that you keep a backup of all files you modify in the process."
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:118
msgid "4.1 Encrypting the partitions"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:124
#, no-wrap
msgid ""
"NOTE: This document describes how to encrypt every partition separately. If "
"you\n"
"      have more than one HDD in your system, you might consider encrypting "
"the\n"
"      whole device including the partition table. Using the method described "
"in\n"
"      this document leaves the partition table unencrypted and thus may be\n"
"      exposed to an attack. Consider this a potential security risk.\n"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:131
#, no-wrap
msgid ""
"*** PITFALL ***\n"
"If /usr is a separate partition, cryptsetup and all libraries needed to "
"run\n"
"cryptsetup must be on the root partition. Use 'ldd cryptsetup' to find "
"out.\n"
"It may be necessary to switch to runlevel 1 because you need to be able to\n"
"unmount /usr. Also, make sure that root's shell does not use any libs on "
"that\n"
"partition. If required, compile a statically linked shell for root's use.\n"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:133
msgid "The process is as follows for every partition:"
msgstr ""

#. type: Bullet: '1) '
#: origin/crypt-rootfs.txt:137
msgid ""
"Create as many keys as you like for the partition, for example: head -c 2880 "
"/dev/urandom | uuencode -m - | head -n-1 | tail -n+2 > keyfile or use an "
"easy to remember passphrase."
msgstr ""

#. type: Bullet: '2) '
#: origin/crypt-rootfs.txt:142
msgid ""
"Make a secure backup of your keys and secure the keyfile by 'chmod 0400' or "
"so. Your backup keys must be absolutely secure (i.e. not on your computer).  "
"Remember: If you lose your key, you will absolutely, definitely NOT be able "
"to access you data!"
msgstr ""

#. type: Bullet: '3) '
#: origin/crypt-rootfs.txt:144
msgid "Make a backup of the data on the partition."
msgstr ""

#. type: Bullet: '4) '
#: origin/crypt-rootfs.txt:146
msgid "Un-mount the partition."
msgstr ""

#. type: Bullet: '5) '
#: origin/crypt-rootfs.txt:152
msgid ""
"Create an encrypted partition. (All data will be lost on that partition.)  "
"Do a cryptsetup -c $cipher-algorithm luksFormat /dev/sd?? $keyfile Replace "
"'$cipher-algorithm', '/dev/sd??' and '$keyfile' with the corresponding "
"values."
msgstr ""

#. type: Bullet: '6) '
#: origin/crypt-rootfs.txt:157
msgid ""
"Optionally, add more keys to the partition. Do a cryptsetup -y -d $keyfile "
"luksAddKey /dev/sd?? Replace '$keyfile' with the same as above and "
"'/dev/sd??' with the corresponding partition."
msgstr ""

#. type: Bullet: '7) '
#: origin/crypt-rootfs.txt:164
msgid ""
"Open the encrypted partition. Do a cryptsetup -d $keyfile luksOpen /dev/sd?? "
"sd?? Replace '$keyfile' and '/dev/sd??' with the corresponding "
"values. Replace 'sd??' with a meaningful name. If everything worked out, the "
"unencrypted partition will appear as '/dev/mapper/sd??' with sd?? being the "
"name you chose."
msgstr ""

#. type: Bullet: '8) '
#: origin/crypt-rootfs.txt:169
msgid ""
"Create a filesystem on the partition. Do a mkefs.$WHATEVER /dev/mapper/sd?? "
"Replace '$WHATEVER' with the type of filesystem you would like to use "
"(e.g. ext2) and '/dev/mapper/sd??' with the corresponding partition."
msgstr ""

#. type: Bullet: '9) '
#: origin/crypt-rootfs.txt:174
msgid ""
"Adjust /etc/fstab Because the device for the partition has changed, you need "
"to tell the system where to find it. Change the device by inserting "
"\"mapper/\" in the device field."
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:179
#, no-wrap
msgid ""
"   Example:\n"
"   /dev/sda4         /home ext2 defaults 1 2\n"
"   becomes\n"
"   /dev/mapper/sda4  /home ext2 defaults 1 2\n"
msgstr ""

#. type: Bullet: '10) '
#: origin/crypt-rootfs.txt:181
msgid "Mount the filesystem by 'mount /dev/mapper/sd??'"
msgstr ""

#. type: Bullet: '11) '
#: origin/crypt-rootfs.txt:183
msgid "Copy the data back to the partition."
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:186
msgid "4.2 Making the system automatically decrypt and mount the partition(s)"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:191
msgid ""
"Create a bootscript that will decrypt your encrypted partition. It is "
"assumed that the passphrases are stored in /etc/crypt for example. Note that "
"storing the passphrases on disk might pose a security problem! Use the "
"template for bootscripts included with BLFS and make it do:"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:194
#, no-wrap
msgid ""
"/sbin/cryptsetup -d /etc/crypt/$PARTITION.key luksOpen \\\n"
"   /dev/$PARTITION $PARTITION\n"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:197
msgid ""
"for every encrypted partition other than the root partition and the swap "
"partition(s)."
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:199
msgid "Example:"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:217
#, no-wrap
msgid ""
"#!/bin/sh\n"
"########################################################################\n"
"# Begin $rc_base/init.d/cryptsetup\n"
"#\n"
"# Description : Make encrypted filesystems available for mounting\n"
"#               And clean up afterwards\n"
"#\n"
"# Authors     : Lars Bamberger\n"
"#\n"
"# Version     : 00.01\n"
"#\n"
"# Notes       : This should never be automatically called with any\n"
"#               argument other than \"start\". During shutdown and reboot,\n"
"#               it is sufficient to umount the filesystems. /dev/mapper/*\n"
"#               will be gone when the kernel stops or reboots.\n"
"#\n"
"########################################################################\n"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:221
msgid ". /etc/sysconfig/rc . ${rc_functions} PROC=/sbin/cryptsetup"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:251
#, no-wrap
msgid ""
"case \"${1}\" in\n"
"\tstart)\n"
"\t\tboot_mesg \"luksOpen Home...\"\n"
"\t\t$PROC -d /etc/crypt/home.key luksOpen /dev/sda4 sda4\n"
"\t\tevaluate_retval\n"
"\tstop)\n"
"\t\tboot_mesg \"luksClose Home...\"\n"
"\t\t$PROC luksClose sda4\n"
"\t\tevaluate_retval\n"
"\t\t;;\n"
"\treload)\n"
"\t\tboot_mesg \"Reloading home...\"\n"
"\t\t$PROC reload sda4\n"
"\t\tevaluate_retval\n"
"\t\t;;\n"
"\trestart)\n"
"\t\t${0} stop\n"
"\t\tsleep 1\n"
"\t\t${0} start\n"
"\t\t;;\n"
"\tstatus)\n"
"\t\t$PROC status sda4\n"
"\t\t;;\n"
"\t*)\n"
"\t\techo \"Usage: ${0} {start|stop|reload|restart|status}\"\n"
"\t\texit 1\n"
"\t\t;;\n"
"esac\n"
"# End $rc_base/init.d/cryptsetup\n"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:255
msgid ""
"Now, before proceeding, make sure everything works as expected up until "
"now.  Become familiar with encrypting your partitions this way.  Make an "
"appropriate softlink so that this script is called at boottime:"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:258
msgid "# cd /etc/rc.d/rcsysinit.d # ln -s ../init.d/cryptsetup S19cryptsetup"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:261
msgid ""
"Double-check everything so that booting, rebooting, shutting down etc. works "
"as expected."
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:264
#, no-wrap
msgid ""
"5. A word about encrypting the swap partition(s)\n"
"================================================\n"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:279
msgid ""
"Do not omit encrypting your swap partitions. Lot's of interesting data can "
"be found on swap spaces. Do not consider you data safe if you don't use "
"encrypted swap spaces.  In theory, the data on the swap partition(s) does "
"not need to be consistent between reboots. This means we could create a swap "
"space anew during boottime, using a random (and thus different) cryptokey "
"every time the system boots. This way you don't have to bother with managing "
"swap's cryptokeys and you won't have to store them anywhere (except in "
"memory). This can be considered an additional security feature.  However, if "
"you suspend your system (either to RAM or to disk), data in swap space must "
"remain consistent. Therefore you have to treat the swap partition(s) just as "
"if they were a regular partition, meaning you should encrypt them like "
"explained above."
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:282
#, no-wrap
msgid ""
"6. Encrypting rootfs \n"
"====================\n"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:289
msgid ""
"You can't just encrypt the rootfs the way the other partitions were "
"encrypted because the system is running on it. The idea is to create an "
"initramfs containing everything you need to encrypt (and decrypt) the "
"rootfs. (Details can be found in the kernel's documentation: "
"'filesystems/ramfs-rootfs-initramfs.txt'.)"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:297
msgid ""
"You'll need the standard directories (bin, sbin, usr/{bin,sbin}, proc, sys, "
"dev, lib). In bin we put our busybox-large (rename to busybox) and a "
"softlink to busybox named hush. Copy cryptsetup to sbin.  In dev put some "
"useful devices: console, null, urandom, sd?? and a directory 'mapper' "
"containing 'control'. Then make a copy of dev: cp -a dev init-dev In lib "
"(and dev) put everything needed to run busybox and cryptsetup."
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:306
msgid ""
"The init script is like this: #!/bin/hush /bin/busybox mount -t proc proc "
"/proc /bin/busybox mount -t sysfs sysfs /sys /bin/busybox mount -t tmpfs "
"tmpfs /dev /bin/busybox cp -a /init-dev/* /dev /bin/busybox --install -s "
"exec /bin/busybox hush"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:313
msgid ""
"Put all this into one directory (init goes there as well and not into "
"sbin). Cd into this directory and create the image using find . | cpio "
"--quiet -H newc -o | gzip -9 -n > /boot/initramfs.img Pass the appropriate "
"initrd argument (e.g. initrd (hd0,0)/initramfs.img) to the kernel when "
"booting and this will drop you into the hush shell after system boot."
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:320
#, no-wrap
msgid ""
"*** PITFALL ***\n"
"Cryptsetup needs /proc and /sys mounted. It also requires the /dev "
"directory.\n"
"As we want to save /dev when we switch_root later, we mount it as "
"tmpfs. This\n"
"means that the devices in /dev will be gone, so copy them back into "
"/dev. Be\n"
"aware that you need at least 'null' and 'console' in /dev before mounting\n"
"tmpfs on /dev.\n"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:325
msgid ""
"Once in the shell, encrypt your rootfs like any other partition as described "
"above. Don't forget the backup! ABSOLUTELY, POSITIVELY make certain that you "
"are able to mount and access the unencrypted backup of the rootfs from "
"within the hush shell!"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:332
msgid ""
"Next, create the encrypted root partition. Note that the passphrase won't be "
"stored anywhere on disk, so do: cryptsetup -y -c $cipher-algorithm "
"luksFormat /dev/sd?? to create the encrypted rootfs. Replace "
"'$cipher-algorithm' and '/dev/sd??' with the respective values. Next, open "
"the partition, format it and recover the backup:"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:338
msgid ""
"cryptsetup luksOpen /dev/sd?? sd?? $BACKUPROOTFS/mkefs.$TYPE "
"/dev/mapper/sd?? mkdir /new-root mount -t $FSTYPE /dev/mapper/sd?? /new-root "
"cp -a $BACKUPROOTFS /new-root"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:344
#, no-wrap
msgid ""
"*** PITFALL ***\n"
"Since your old rootfs isn't mounted, you might not be able to to run 'mkefs' "
"do\n"
"to missing libraries. Either copy everything needed to where the linker "
"can\n"
"find it, or use the 'mkefs' from busybox. Be sure to configure busybox\n"
"accordingly.\n"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:347
msgid ""
"Next, modify /etc/fstab (on /new-root) to reflect the new device for the "
"rootfs.  Also modify the cryptsetup script as described below (7. PITFALL)."
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:350
#, no-wrap
msgid ""
"7. Decrypting the rootfs on subsequent boots\n"
"============================================\n"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:357
msgid ""
"Like in 6., create an initramfs. The difference is that now the "
"\"busybox-minimum\" binary is used and you'll need an additional directory "
"new-root. Don't forget the 'hush' softlink.  The init is like this: (Replace "
"'sd??' with your root-device and adjust for the fstype.)"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:369
msgid ""
"#!/bin/hush /bin/busybox mount -t proc proc /proc /bin/busybox mount -t "
"sysfs sysfs /sys /bin/busybox mount -t tmpfs tmpfs /dev /bin/busybox cp -a "
"/init-dev/* /dev /sbin/cryptsetup luksOpen /dev/sd?? sd?? /bin/busybox mount "
"-r -t ext2 /dev/mapper/sd?? /new-root /bin/busybox mount --move /proc "
"/new-root/proc /bin/busybox mount --move /sys /new-root/sys /bin/busybox "
"mount --move /dev /new-root/dev exec /bin/busybox switch_root /new-root "
"/sbin/init $@"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:376
#, no-wrap
msgid ""
"*** PITFALL ***\n"
"You want to keep /proc, /sys and /dev after switch_root because cryptsetup "
"uses\n"
"them. Hence the 'mount --move' commands. Note that /dev/mapper/sd?? (the "
"root\n"
"device) will be gone once you mount the true root partition, switch_root and "
"the\n"
"rootfs proper starts udev. That's the reason why this device needs to be\n"
"recreated. So, modify the cryptsetup bootscript to include \n"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:383
#, no-wrap
msgid ""
"\t\tif [[ ! -b /dev/mapper/sd?? ]];\n"
"\t\tthen\n"
"\t\t\tboot_mesg \"Making device for rootfs...\"\n"
"\t\t\t/bin/mknod -m 0600 /dev/mapper/sd?? b 254 0\n"
"\t\t\tevaluate_retval;\n"
"\t\tfi\n"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:385
msgid "in the start section of the script."
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:388
#, no-wrap
msgid ""
"8. Making sure security is not compromised\n"
"==========================================\n"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:395
msgid ""
"Once everything works as it should, remove the unencrypted backup of your "
"rootfs. Protect your bootloader (and possibly the BIOS) with a password to "
"disable unauthorized fiddling with the boot parameters.  Create a bootscript "
"(checkbootfs) that makes sure that the unencrypted partition we booted from "
"was not compromised. Use something like:"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:411
#, no-wrap
msgid ""
"\t\tboot_mesg \"Checking integrity of boot FS...\"\n"
"\t\tif\n"
"\t\t[[ $(/bin/md5sum -b /dev/sd??) == \\\n"
"\t\t\"$whatevermd5sum */dev/sd??\" ]] \\\n"
"\t\t\t&& \\\n"
"\t\t[[ $(/bin/sha1sum -b /dev/sd??) == \\\n"
"\t\t\"$whatevensha1sum */dev/sd??\" ]];\n"
"\t\tthen\n"
"\t\t\techo_ok;\n"
"\t\telse\n"
"\t\t\techo_failure\n"
"boot_mesg -n \"FAILURE:\\n\\nThe boot file system seems to have been\n"
"altered!\\n\\n\" ${FAILURE}\n"
"        boot_mesg -n \" DO NOT TRUST THIS SYSTEM!\\n\\n\"\n"
"        boot_mesg_flush\n"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:416
#, no-wrap
msgid ""
"*** PITFALL ***\n"
"Make sure this is the very last thing you implement, as the hashsums will\n"
"change as we go on. The hashsums will also change if you run a fsck on the "
"boot\n"
"partition.\n"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:424
#, no-wrap
msgid ""
"ACKNOWLEDGMENTS:\n"
"  * Emmanuel Trillaud for some suggestions and pointers.\n"
"  * Various for the Gentoo-Wiki at\n"
"    http://en.gentoo-wiki.com/wiki/DM-Crypt_with_LUKS\n"
"  * Clemens Fruhwirth (http://clemens.endorphin.org/) for LUKS for "
"dm-crypt:\n"
"    http://code.google.com/p/cryptsetup\n"
msgstr ""

#. type: Plain text
#: origin/crypt-rootfs.txt:442
#, no-wrap
msgid ""
"CHANGELOG:\n"
"[2009-12-30]\n"
"  * Merged suggestions (typos, format and others) from Emmanuel Trillaud\n"
"  * More verbosity on the boot partition size\n"
"  * Some reformatting\n"
"[2009-11-23]\n"
"  * list dependencies in the BLFS book\n"
"[2009-11-20]\n"
"  * cryptsetup needs /dev/urandom\n"
"  * mkefs might not work from initramfs\n"
"  * update some URLs\n"
"  * some minor touchups\n"
"[2009-02-15]\n"
"  * Basic rewrite.\n"
"[2008-02-17]\n"
"  * Initial hint.\n"
msgstr ""
