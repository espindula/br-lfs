# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-09-02 09:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: origin/uclibc.txt:2
msgid "AUTHOR: Robert Connolly <robert@linuxfromscratch.org>"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:4
msgid "DATE: 2005-11-03"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:6
msgid "LICENSE: Public Domain"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:8
msgid "SYNOPSIS: uClibc C/C++ library"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:15
msgid ""
"DESCRIPTION: The uClibc libraries are designed to be small, for embeded "
"systems, while having most of the features of Glibc so that most software "
"will be able to use uClibc, even Xorg and KDE. uClibc also features a "
"menuconfig similar to the Linux kernel, so that features can be configured "
"to talior the library for your specific needs. uClibc is an excelent choice "
"for any small system, but can be used for desktops as well."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:22
msgid ""
"Also see: http://www.uclibc.org/ http://cxx.uclibc.org/ "
"http://www.linuxfromscratch.org/hlfs/view/unstable/uclibc/ "
"http://busybox.net/ http://buildroot.uclibc.org/"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:24
msgid "PREREQUISITES: Sed version 4 (or higher)"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:26
msgid "HINT:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:30
msgid ""
"# This hint will show how to install uClibc either as part of an LFS build, "
"or beside # an existing system. If you choose to install to an existing "
"system then you will # simply need to change your CC and CXX environment "
"variables to use it."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:34
msgid ""
"# This hint may be a bit hard to follow because it covers two installation "
"types. Be # sure to take your time, to make sure you follow the parts "
"relevant to you. Plan on # botching the first try (like any typical LFS "
"build)."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:36
msgid "# Needed package(s):"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:38
msgid "# http://www.uclibc.org/downloads/uClibc-0.9.28.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:40
msgid "# Locales (optional):"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:42
msgid "# http://www.uclibc.org/downloads/uClibc-locale-030818.tgz"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:44
msgid "# The uClibc C++ library (optional):"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:46
msgid "# http://cxx.uclibc.org/src/uClibc++-0.1.11.tbz2"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:48
msgid "# Needed patches:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:57
msgid ""
"# "
"http://www.linuxfromscratch.org/patches/downloads/uClibc/uClibc-0.9.28-config-1.patch "
"# http://www.linuxfromscratch.org/patches/downloads/uClibc/\\ "
"#\tuClibc-0.9.28-libc_stack_end-1.patch # "
"http://www.linuxfromscratch.org/patches/downloads/binutils/\\ "
"#\tbinutils-2.16.1-uClibc_conf-1.patch # "
"http://www.linuxfromscratch.org/patches/downloads/gcc/gcc-3.4.4-uClibc_conf-1.patch "
"# "
"http://www.linuxfromscratch.org/patches/downloads/gcc/gcc-3.4.4-no_fixincludes-1.patch "
"# "
"http://www.linuxfromscratch.org/patches/downloads/gcc/gcc-3.4.4-specs_x86-1.patch"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:63
msgid ""
"# For g++ (not uClibc++): # "
"http://www.linuxfromscratch.org/patches/downloads/gcc/\\ "
"#\tgcc-3.4.3-uClibc_libstdc++-1.patch # "
"http://www.linuxfromscratch.org/patches/downloads/gcc/gcc-3.4.3-uClibc_conf-1.patch "
"# "
"http://www.linuxfromscratch.org/patches/downloads/gcc/gcc-3.4.3-uClibc_locale-1.patch"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:73
msgid ""
"# To use the uClibc support for SSP (optional): # Also see: "
"http://www.linuxfromscratch.org/hints/downloads/files/ssp.txt # "
"http://www.linuxfromscratch.org/patches/downloads/linux-libc-headers/\\ "
"#\tlinux-libc-headers-2.6.11.2-pseudo_random-1.patch # "
"http://www.linuxfromscratch.org/patches/downloads/gcc/gcc-3.4.4-ssp-1.patch "
"# http://www.linuxfromscratch.org/patches/downloads/uClibc/\\ "
"#\tuClibc-0.9.28-arc4random-2.patch # "
"http://www.linuxfromscratch.org/patches/downloads/linux/\\ "
"#\tlinux-2.6.11.12-pseudo_random-1.patch"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:78
msgid ""
"# Additional patches: # "
"http://www.linuxfromscratch.org/patches/downloads/sed/sed-4.1.4-uClibc-1.patch "
"# "
"http://www.linuxfromscratch.org/patches/downloads/shadow/shadow-4.0.13-uClibc-1.patch "
"# "
"http://www.linuxfromscratch.org/patches/hlfs/svn/psmisc-21.6-rpmatch-1.patch"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:81
msgid "# Attention: # Do not expect many package testsuites to pass."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:87
msgid ""
"# If you are installing to an existing system then add a uclibc user and a "
"dedicated # uclibc directory. After installation this user can be "
"removed. If you are installing # a new LFS then ignore this. If you want to "
"install a i386 or i486 toolchain, then # use \"i386-pc-linux-uclibc\" or "
"\"i486-pc-linux-uclibc\". Compiling for i386 makes smaller # programs."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:91
msgid ""
"groupadd uclibc && useradd -g uclibc -s /bin/bash -d /home/uclibc -m uclibc "
"&& install -d -o uclibc /usr/i386-pc-linux-uclibc/"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:99
msgid ""
"# If you are installing beside an existing system then you are probably "
"planning to # use the uClibc libraries on another system, like a floppy disk "
"or cdrom. It's best # to link to / instead of /usr/i386-pc-linux-uclibc/lib, "
"because the later is clumsy.  # To do this, without messing up our existing "
"system, we will symlink # /usr/i386-pc-linux-uclibc/lib to /ulib. Header "
"files, the compiler, and linker will # be installed in "
"/usr/i386-pc-linux-uclibc, but the compiler will link to /ulib. This # will "
"allow us to build and test packages linked to uClibc, without a chroot."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:102
msgid ""
"# I decided not to try symlinking "
"/usr/i386-pc-linux-uclibc/lib/ld-uClibc.so.0 to /lib # so it does not "
"conflict with my host system, which is also uClibc."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:104
msgid "ln -s /usr/i386-pc-linux-uclibc/lib /ulib"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:107
msgid ""
"# If you are installing LFS-uClibc then su to user lfs and don't adjust the "
"$PATH.  # if you are installing to an existing system, then su to user "
"uclibc:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:110
msgid "su - uclibc export PATH=/usr/i386-pc-linux-uclibc/bin:$PATH"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:113
msgid ""
"# We will use the $prefix variable in this hint. If you are installing to an "
"existing # system then it will point to /usr. We also set the ldso directory "
"to /ulib:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:116
msgid "export prefix=/usr/i386-pc-linux-uclibc && export ldso_dir=/ulib"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:119
msgid ""
"# If you are installing a new LFS system then the $prefix will be /tools, "
"and the ldso # directory will be /tools/lib:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:122
msgid "export prefix=/tools && export ldso_dir=/tools/lib"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:125
msgid ""
"# We will also use the $target variable. This is the same regardless of "
"where you are # installing to:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:127
msgid "export target=i386-pc-linux-uclibc"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:129
msgid "# Now we start the installation."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:131
msgid "### Chapter 5 ###"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:133
msgid "# First install the linux-libc-headers:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:135
msgid "# If you plan to use SSP, apply this patch:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:137
msgid "patch -Np1 -i ../linux-libc-headers-2.6.11.2-pseudo_random-1.patch"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:139
msgid "# Then install the kernel headers:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:143
msgid ""
"install -d ${prefix}/include && cp -R include/asm-i386 ${prefix}/include/asm "
"&& cp -R include/linux ${prefix}/include"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:145
msgid "# Secondly we install the uClibc headers:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:150
msgid ""
"patch -Np1 -i ../uClibc-0.9.28-config-1.patch && make "
"KERNEL_SOURCE=${prefix} headers && rm include/{asm,asm-generic,linux} && "
"make DEVEL_PREFIX=${prefix}/ install_dev"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:152
msgid "# Don't worry about the \"lib/: No such file or directory\" message."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:154
msgid "# Thirdly, install the Binutils Cross Linker:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:164
#, no-wrap
msgid ""
"patch -Np1 -i ../binutils-2.16.1-uClibc_conf-1.patch &&\n"
"mkdir ../binutils-build &&\n"
"cd ../binutils-build &&\n"
"../binutils-2.16.1/configure --prefix=${prefix} \\\n"
"\t--disable-shared  --disable-nls --target=${target} &&\n"
"make &&\n"
"make install &&\n"
"make -C ld clean &&\n"
"make -C ld LIB_PATH=${ldso_dir}\n"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:166
msgid "# Do not remove the binutils-2.16.1/ and binutils-build/ directories yet."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:168
msgid "# Fourthly, install the GCC Cross Compiler (C only):"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:171
msgid ""
"# GCC will try to use ${prefix}/${target}/include because GCC is a cross "
"compiler. Fix # that with this command:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:174
#, no-wrap
msgid ""
"sed -e \"s@\\(^CROSS_SYSTEM_HEADER_DIR =\\).*@\\1 ${prefix}/include@g\" \\\n"
"\t-i gcc/Makefile.in\n"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:176
msgid "# Add this patch so we can specify where our ld.so library will be:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:178
msgid "patch -Np1 -i ../gcc-3.4.4-specs_x86-1.patch"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:181
msgid ""
"# GCC will default to use ${prefix}/${target}/lib for the startfile prefix "
"because GCC # is a cross compiler here. Fix that with this command:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:185
msgid ""
"echo \" #undef STARTFILE_PREFIX_SPEC #define STARTFILE_PREFIX_SPEC "
"\\\"${prefix}/lib/\\\"\" >> gcc/config/linux.h"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:187
msgid "# Build and install GCC:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:197
#, no-wrap
msgid ""
"patch -Np1 -i ../gcc-3.4.4-uClibc_conf-1.patch &&\n"
"touch ${ldso_dir}/ld-uClibc.so.0 &&\n"
"mkdir ../gcc-build &&\n"
"cd ../gcc-build &&\n"
"../gcc-3.4.4/configure --prefix=${prefix} --target=${target} \\\n"
"\t--disable-nls --disable-shared --enable-languages=c \\\n"
"\t--with-dynamic-linker=${ldso_dir}/ld-uClibc.so.0 --with-nostdinc &&\n"
"make &&\n"
"make install\n"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:199
msgid "# Now install uClibc:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:201 origin/uclibc.txt:302 origin/uclibc.txt:344 origin/uclibc.txt:501
msgid "# To use SSP:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:203 origin/uclibc.txt:346
msgid "patch -Np1 -i ../uClibc-0.9.28-arc4random-2.patch"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:205
msgid "# If you want locales:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:207 origin/uclibc.txt:350 origin/uclibc.txt:424
msgid "install -m444 ../uClibc-locale-030818.tgz extra/locale/"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:209
msgid ""
"# Add a config file (with just enough enabled to be able to build any "
"package):"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:211 origin/uclibc.txt:354 origin/uclibc.txt:428
msgid "patch -Np1 -i ../uClibc-0.9.28-config-1.patch"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:214
msgid ""
"# This patch is needed to fix a bug in this version of uClibc. It is only "
"needed in # the first uClibc build (stage 1 of bootstrap):"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:216
msgid "patch -Np1 -i ../uClibc-0.9.28-libc_stack_end-1.patch"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:218 origin/uclibc.txt:356
msgid "# Reset the installation paths:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:226
#, no-wrap
msgid ""
"sed -e "
"\"s@.*SHARED_LIB_LOADER_P.*@SHARED_LIB_LOADER_PREFIX=\\\"${prefix}/lib\\\"@g\" "
"\\\n"
"\t-i .config &&\n"
"sed -e \"s@.*RUNTIME_PREFIX.*@RUNTIME_PREFIX=\\\"${prefix}\\\"@g\" \\\n"
"\t-i .config &&\n"
"sed -e \"s@.*DEVEL_PREFIX.*@DEVEL_PREFIX=\\\"${prefix}/\\\"@g\" \\\n"
"\t-i .config &&\n"
"sed -e \"s@.*KERNEL_SOURCE.*@KERNEL_SOURCE=\\\"${prefix}\\\"@g\" -i "
".config\n"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:232
msgid ""
"# Now you can run \"make menuconfig\". The defaults from the config patch "
"will let # you build almost anything. If you do not want locales you should "
"disable: # UCLIBC_HAS_LOCALE under \"String and Stdio Support\".  # If you "
"do not want to use SSP, then disable: # UCLIBC_HAS_SSP under \"uClibc "
"security related options\"."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:236
msgid ""
"# If you are installing beside an existing system, and you modified the "
"config, you # should save the .config file for later, because make "
"menuconfig won't work without # ncurses. If you're installing a new LFS, "
"make menuconfig will work in chapter 6."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:238
msgid "# Build uClibc:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:240
msgid "make CROSS=${target}- all"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:242
msgid "# And install uClibc (after removing some symlinks):"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:245
msgid "rm include/{asm,asm-generic,linux} && make install"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:248
msgid ""
"# uClibc does not supply a libintl.so. If you installed locales then you "
"should install # Gettext's libintl too:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:255
#, no-wrap
msgid ""
"cd gettext-runtime/ &&\n"
"env CC=${target}-gcc \\\n"
"\t./configure --prefix=${prefix} --with-included-gettext \\\n"
"\t--without-csharp --disable-libasprintf &&\n"
"make -C intl/ &&\n"
"make -C intl/ install\n"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:258
msgid ""
"# Then make GCC link everything to libintl (this fixes bugs in several "
"packages). To # disable this linking on specific packages, use "
"CFLAGS=\"-nointl\":"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:261
#, no-wrap
msgid ""
"sed -e 's/%{shared:-lc}/%{!nointl: -lintl} &/' \\\n"
"\t-i `${target}-gcc --print-file specs`\n"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:263
msgid "# Now adjust the toolchain:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:266
msgid ""
"install ld/ld-new ${prefix}/bin/${target}-ld ln -f "
"${prefix}/bin/${target}-ld ${prefix}/${target}/bin/ld"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:268
msgid "# And test it:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:271
msgid ""
"echo 'main(){}' | ${prefix}/bin/${target}-gcc -x c - readelf -l a.out | grep "
"\": ${prefix}\""
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:276
msgid ""
"# This should return: # Requesting program interpreter: "
"/usr/i386-pc-linux-uclibc/lib/ld-uClibc.so.0] # or # Requesting program "
"interpreter: /tools/lib/ld-uClibc.so.0]"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:278
msgid "# Now remove the binutils-2.16.1/ and binutils-build/ directories."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:280
msgid "# If you are installing LFS-uclibc, then install TCL, Expect, and DejaGNU."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:282
msgid "# Binutils Native Linker:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:294
#, no-wrap
msgid ""
"patch -Np1 -i ../binutils-2.16.1-uClibc_conf-1.patch &&\n"
"mkdir ../binutils-build &&\n"
"cd ../binutils-build &&\n"
"env CC=${target}-gcc \\\n"
"../binutils-2.16.1/configure --prefix=${prefix} \\\n"
"    --host=${target} --build=${target} --target=${target} \\\n"
"    --enable-shared --with-lib-path=${ldso_dir} &&\n"
"make &&\n"
"make install &&\n"
"make -C ld clean &&\n"
"make -C ld LIB_PATH=/usr/lib:/lib\n"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:298
msgid ""
"# If you're installing LFS-uClibc, then do not remove the binutils-2.16.1/ "
"and # binutils-build directories, until readjusting in chapter 6. If you're "
"installing # beside an existing system, then these directories can be "
"removed."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:300
msgid "# GCC Native Compiler (C and C++):"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:306 origin/uclibc.txt:505
#, no-wrap
msgid ""
"patch -Np1 -i ../gcc-3.4.4-ssp-1.patch &&\n"
"sed -e 's@gcc.gnu.org/bugs.html@bugs.linuxfromscratch.org/@' \\\n"
"\t-e 's/3.4.4/3.4.4 (ssp)/' -i gcc/version.c\n"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:308
msgid "# To link libintl to everything:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:311
#, no-wrap
msgid ""
"sed -e 's/%{shared:-lc}/%{!nointl: -lintl} &/' \\\n"
"        -i gcc/config/linux.h\n"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:313
msgid "# Now patch, build, and install GCC:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:333
#, no-wrap
msgid ""
"patch -Np1 -i ../gcc-3.4.4-uClibc_conf-1.patch &&\n"
"patch -Np1 -i ../gcc-3.4.4-uClibc_libstdc++-1.patch &&\n"
"patch -Np1 -i ../gcc-3.4.4-uClibc_locale-1.patch &&\n"
"patch -Np1 -i ../gcc-3.4.4-specs_x86-1.patch &&\n"
"patch -Np1 -i ../gcc-3.4.4-no_fixincludes-1.patch &&\n"
"mkdir ../gcc-build &&\n"
"cd ../gcc-build &&\n"
"env CC=${target}-gcc \\\n"
"../gcc-3.4.4/configure --prefix=${prefix} \\\n"
"\t--host=${target} --build=${target} --target=${target} \\\n"
"\t--libexecdir=${ldso_dir} --with-local-prefix=${prefix} \\\n"
"\t--enable-shared --enable-threads=posix \\\n"
"\t--enable-__cxa_atexit --enable-languages=c,c++ \\\n"
"\t--disable-libstdcxx-pch --enable-clocale \\\n"
"\t--with-dynamic-linker=${ldso_dir}/ld-uClibc.so.0 --with-nostdinc \\\n"
"\t--enable-multilib=no &&\n"
"make &&\n"
"make install &&\n"
"ln -s gcc ${prefix}/bin/cc\n"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:336
msgid ""
"# To enable SSP by default, and test it, see section 5.12.2 and 5.12.3 of: # "
"http://www.linuxfromscratch.org/hlfs/view/unstable/uclibc/chapter05/gcc.html"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:339
msgid ""
"# If you are building LFS-uclibc, finish building chapter 5 normally, "
"starting after # the second GCC build."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:342
msgid ""
"# If you have installed uClibc beside an existing system, then rebuild "
"uClibc now so # that it becomes bootstraped. The libc_stack_end patch "
"shouldn't be needed anymore."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:348
msgid "# To use locales:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:352
msgid "# Add the config patch (or copy the one you saved before):"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:364
#, no-wrap
msgid ""
"sed -e "
"\"s@.*SHARED_LIB_LOADER_P.*@SHARED_LIB_LOADER_PREFIX=\\\"${prefix}/lib\\\"@g\" "
"\\\n"
"        -i .config &&\n"
"sed -e \"s@.*RUNTIME_PREFIX.*@RUNTIME_PREFIX=\\\"${prefix}\\\"@g\" \\\n"
"        -i .config &&\n"
"sed -e \"s@.*DEVEL_PREFIX.*@DEVEL_PREFIX=\\\"${prefix}/\\\"@g\" \\\n"
"        -i .config &&\n"
"sed -e \"s@.*KERNEL_SOURCE.*@KERNEL_SOURCE=\\\"${prefix}\\\"@g\" -i "
".config\n"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:366 origin/uclibc.txt:442
msgid "# Make uClibc a little smaller and faster:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:368 origin/uclibc.txt:444
msgid "sed -e 's/^OPTIMIZATION:=.*$/& -fomit-frame-pointer/' -i Rules.mak"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:370
msgid "# The build and reinstall uClibc:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:374
msgid ""
"make CROSS=${target}- all && rm include/{asm,asm-generic,linux} && make "
"install"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:376
msgid "# If you want ldconfig installed too:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:381
#, no-wrap
msgid ""
"make headers &&\n"
"make CC=\"gcc -Wl,--dynamic-linker,${ldso_dir}/ld-uClibc.so.0 "
"${ldso_dir}/libc.so.0\" \\\n"
"\t-C utils &&\n"
"make -C utils install\n"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:383
msgid "# Then relocate ldconfig:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:386
msgid "mv ${prefix}/sbin/ldconfig ${prefix}/bin && rmdir ${prefix}/sbin/"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:388
msgid ""
"# And reinstall Gettext too (the uClibc reinstall removed the libintl.h "
"header):"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:395
#, no-wrap
msgid ""
"cd gettext-runtime/ &&\n"
"env CC=${target}-gcc \\\n"
"        ./configure --prefix=${prefix} --with-included-gettext \\\n"
"        --without-csharp --disable-libasprintf &&\n"
"make -C intl/ &&\n"
"make -C intl/ install\n"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:398
msgid ""
"# If you're installing beside an existing system, you're almost "
"finished. Skip the # Chapter 6 section below, and start reading from "
"\"Installing uClibc++\"."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:401
msgid "### Chapter 6 ### (Installing a new LFS-uClibc system)"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:403
msgid "# Install Linux-libc-headers:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:411
#, no-wrap
msgid ""
"patch --no-backup-if-mismatch -Np1 -i \\\n"
"\t../linux-libc-headers-2.6.11.2-pseudo_random-1.patch &&\n"
"cp -R include/asm-i386 /usr/include/asm &&\n"
"cp -R include/linux /usr/include &&\n"
"chown -R root:root /usr/include/{asm,linux} &&\n"
"find /usr/include/{asm,linux} -type d -exec chmod 755 {} \\; &&\n"
"find /usr/include/{asm,linux} -type f -exec chmod 644 {} \\;\n"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:413
msgid "# Install Man-pages..."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:415
msgid "# Install uClibc:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:417
msgid "# With SSP:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:420
msgid ""
"patch -Np1 -i ../uClibc-0.9.28-arc4random-2.patch && install -m644 "
"libc/stdlib/man/arc4random.3 /usr/share/man/man3"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:422
msgid "# With locales:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:426
msgid "# Patch the config file:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:430
msgid "# Run menuconfig if you want:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:432
msgid "make menuconfig"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:434
msgid "# Fix the installation paths (this installs to /):"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:440
#, no-wrap
msgid ""
"sed -e 's@.*SHARED_LIB_LOADER_PREFIX.*@SHARED_LIB_LOADER_PREFIX=\"/lib\"@g' "
"\\\n"
"\t-i .config &&\n"
"sed -e 's@.*RUNTIME_PREFIX.*@RUNTIME_PREFIX=\"/\"@g' -i .config &&\n"
"sed -e 's@.*DEVEL_PREFIX.*@DEVEL_PREFIX=\"/usr/\"@g' -i .config &&\n"
"sed -e 's@.*KERNEL_SOURCE.*@KERNEL_SOURCE=\"/usr\"@g' -i .config\n"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:446
msgid "# Then make and install uClibc:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:456
#, no-wrap
msgid ""
"make &&\n"
"rm include/{asm,asm-generic,linux} &&\n"
"make install &&\n"
"make headers &&\n"
"make CC=\"gcc -Wl,--dynamic-linker,/lib/ld-uClibc.so.0 /lib/libc.so.0\" \\\n"
"\t-C utils &&\n"
"make -C utils install &&\n"
"echo \"/usr/local/lib\" > ld.so.conf.new &&\n"
"install -m644 ld.so.conf.new /etc/ld.so.conf\n"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:459
msgid ""
"# Adjust your timezone: # Also see: "
"http://leaf.sourceforge.net/doc/guide/buci-tz.html#id25991"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:462
msgid "echo \"EST5EDT\" > TZ.new install -m644 TZ.new /etc/TZ"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:464
msgid "# If you installed uClibc with locales support, install Gettext now:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:472
#, no-wrap
msgid ""
"cd gettext-runtime/\n"
"./configure --prefix=/usr --libdir=/lib --with-included-gettext \\\n"
"\t--disable-static --enable-relocatable --disable-rpath\n"
"make -C intl/ &&\n"
"make -C intl/ install &&\n"
"rm /lib/libintl.so &&\n"
"ln -sf ../../lib/libintl.so.3 /usr/lib/libintl.so\n"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:474
msgid "# Readjust the toolchain:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:479
#, no-wrap
msgid ""
"install ld/ld-new /tools/bin/ld &&\n"
"perl -pi -e 's: /tools/lib/ld-uClibc.so.0: /lib/ld-uClibc.so.0:g;' \\\n"
"\t-e 's@\\*startfile_prefix_spec:\\n@$_/usr/lib/@g;' \\\n"
"\t$(gcc --print-file specs)\n"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:481
msgid "# Test it:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:485
msgid "echo 'main(){}' > dummy.c cc dummy.c readelf -l a.out | grep ': /lib'"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:487
msgid "# Install Binutils:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:497
#, no-wrap
msgid ""
"patch -Np1 -i ../binutils-2.16.1-uClibc_conf-1.patch &&\n"
"mkdir ../binutils-build &&\n"
"cd ../binutils-build &&\n"
"../binutils-2.16.1/configure --prefix=/usr --enable-shared \\\n"
"\t--host=i386-pc-linux-uclibc --build=i386-pc-linux-uclibc \\\n"
"\t--target=i386-pc-linux-uclibc &&\n"
"make tooldir=/usr &&\n"
"make tooldir=/usr install &&\n"
"install -m644 ../binutils-2.16.1/include/libiberty.h /usr/include\n"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:499
msgid "# Install GCC:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:507
msgid "# Then patch GCC:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:527
#, no-wrap
msgid ""
"patch -Np1 -i ../gcc-3.4.4-uClibc_conf-1.patch &&\n"
"patch -Np1 -i ../gcc-3.4.4-uClibc_libstdc++-1.patch &&\n"
"patch -Np1 -i ../gcc-3.4.4-uClibc_locale-1.patch &&\n"
"patch -Np1 -i ../gcc-3.4.4-specs_x86-1.patch &&\n"
"patch -Np1 -i ../gcc-3.4.4-no_fixincludes-1.patch &&\n"
"patch -Np1 -i ../gcc-3.4.4-linkonce-1.patch &&\n"
"sed -e 's/install_to_$(INSTALL_DEST) //' -i libiberty/Makefile.in &&\n"
"mkdir ../gcc-build &&\n"
"cd ../gcc-build &&\n"
"../gcc-3.4.4/configure --prefix=/usr --host=i386-pc-linux-uclibc \\\n"
"\t--build=i386-pc-linux-uclibc --target=i386-pc-linux-uclibc \\\n"
"\t--libexecdir=/usr/lib --enable-threads=posix \\\n"
"\t--enable-shared --enable-__cxa_atexit \\\n"
"\t--with-dynamic-linker=/lib/ld-uClibc.so.0 --enable-clocale \\\n"
"\t--enable-languages=c,c++ --enable-multilib=no &&\n"
"make &&\n"
"make install &&\n"
"ln -s ../usr/bin/cpp /lib &&\n"
"ln -s gcc /usr/bin/cc\n"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:529
msgid ""
"# If you are using SSP, then rerun /tools/bin/hardened-specs.sh and redo the "
"tests."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:531
msgid ""
"# Now the rest of Chapter 6 can be built normally, and/or install uClibc++ "
"now."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:533
msgid "### Installing uClibc++ ###"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:535
msgid "# For LFS-uClibc:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:537
msgid "export prefix=/usr"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:539
msgid "# To install beside an existing system leave $prefix alone."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:543
msgid ""
"# LFS-uClibc can run 'make menuconfig'. If you installed beside an existing "
"system, # then your ncurses library will not be found in ${prefix}, so only "
"make config will # work."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:545
msgid "# To enable everything:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:547
msgid "yes \"\" | make config"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:549
msgid "# Then fix the installation path:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:552
#, no-wrap
msgid ""
"sed -e "
"\"s@.*UCLIBCXX_RUNTIME_PREFIX.*@UCLIBCXX_RUNTIME_PREFIX=\\\"${prefix}\\\"@g\" "
"\\\n"
"\t-i .config\n"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:554
msgid "# The build and install uClibc++:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:557
msgid "make && make install"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:559
msgid ""
"# If you're installing beside an existing system, then make \"g++-uc\" link "
"to /ulib:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:561
msgid "sed -e 's@/usr/i386-pc-linux-uclibc/lib/@/ulib@g' -i ${prefix}/bin/g++-uc"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:563
msgid "# To use gcc++-uc, run:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:565
msgid "export CXX=\"g++-uc\""
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:568
msgid ""
"# uClibc++ may not work with all packages, try it out and see. Also, "
"uClibc++ depends # on g++, so it is unable to bootstrap itself."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:570
msgid "# If you installed beside an existing system, then also run:"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:572
msgid "export CC=\"/usr/i386-pc-linux-uclibc/bin/i386-pc-linux-uclibc-gcc\""
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:575
msgid ""
"# If you installed uClibc beside an existing system, you can now remove the "
"uclibc user # and change the ownership of /usr/i386-pc-linux-uclibc."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:577
msgid "chown -R 0:0 /usr/i386-pc-linux-uclibc"
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:580
msgid ""
"# Anything else you need to know should be covered by other documentation, "
"such as # the \"Boot Disk Howto\", etc."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:582
msgid "# Send me comments or questions if you like."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:585
msgid "ACKNOWLEDGMENTS: * Thanks to the uClibc team for creating this software."
msgstr ""

#. type: Plain text
#: origin/uclibc.txt:589
msgid "CHANGELOG: [2005-11-03] * Initial hint"
msgstr ""
