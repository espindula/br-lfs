# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-09-02 09:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: origin/network-recognition.txt:2
msgid "AUTHOR: Eloi Primaux eloi AT bliscat dot org"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:4
msgid "DATE: 2007-10-11"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:6
msgid "LICENSE: GNU Free Documentation License Version 2"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:8
msgid "SYNOPSIS: Very basic network recognition using MAC address"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:11
msgid ""
"PRIMARY URL: "
"https://www.harasdebondereau.com/bliscat/hints/network-recognition/network-recognition-0.0.2.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:15
#, no-wrap
msgid ""
"DESCRIPTION:\n"
"\tThis hint explains how to make a very basic automatic network "
"recognition\n"
"ATTACHMENTS:\n"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:17
msgid "http://www.linuxfromscratch.org/hints/downloads/files/ATTACHMENTS/network-recognition/network-recognition-0.0.2.tar.bz2"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:19
msgid "PREREQUISITES:"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:22
msgid ""
"- A working LFS-6.2 system or newer with wireless capabilities - Almost two "
"networks services like ipv4-static/dhcpcd installed"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:24
msgid "HINT:"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:27
#, no-wrap
msgid ""
"0) Requirement and Optional tools\n"
"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:32
msgid ""
"Well, we will need the arpdiscover tool which comes from the arptools "
"package.  The ArpTools package provides arpdiscover, arpfool and the so "
"called arpflush.  You should only install the arpdiscover program, the "
"others are used for network security check."
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:34
msgid "The ArpTools package requires libnet and libpcap"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:39
msgid ""
"0.1) libpcap >= 0.8.1 ~~~~~~~~~~~~~~~~~~~~~~ download it from: "
"http://ovh.dl.sourceforge.net/sourceforge/libpcap/libpcap-0.8.1.tar.gz"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:44 origin/network-recognition.txt:54 origin/network-recognition.txt:64
msgid ""
"install it with these commands: ./configure --prefix=/usr && make && make "
"install"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:49
msgid ""
"0.2) libnet >= 1.1.3-RC-01 ~~~~~~~~~~~~~~~~~~~~~~~~~~ download it from: "
"http://www.packetfactory.net/libnet/dist/libnet-1.1.3-RC-01.tar.gz"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:59
msgid ""
"0.3) ArpTools >= 1.0.2 'The core' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ "
"download it from: "
"http://freshmeat.net/redir/arptools/63568/url_tgz/arptools-1.0.2.tar.gz"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:69
msgid ""
"0.3) NetDiscover >= 0.3-beta6 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ you can "
"download it from: "
"http://nixgeneration.com/~jaime/netdiscover/releases/netdiscover-0.3-beta6.tar.gz"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:74
msgid "install it with: ./configure --prefix=/usr && make && make install"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:81
msgid ""
"0.3) ifplugd >= 0.28 ~~~~~~~~~~~~~~~~~~~~~ you can download it from: "
"http://0pointer.de/lennart/projects/ifplugd/ifplugd-0.28.tar.gz patches from "
"ubuntnu: "
"http://launchpadlibrarian.net/6580436/ifplugd_0.28-2.3ubuntu1.diff.gz"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:87
msgid ""
"in the package directory, run this command to really apply the patch: gunzip "
"../ifplugd_0.28-2.3ubuntu1.diff patch -Np1 -i "
"../ifplugd_0.28-2.3ubuntu1.diff patch -Np1 -i "
"debian/patches/01_fix_ftbfs_feisty.dpatch"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:92
msgid ""
"ifplugd install it's configuration in /etc/ifplugd, i don't like this run: "
"sed 's,/ifplugd/ifplugd.action,/sysconfig/ifplugd/ifplugd.action,' -i "
"src/ifplugd.c sed 's,ifplugd/ifplugd.conf,/sysconfig/ifplugd/ifplugd.conf,' "
"-i conf/ifplugd.init.in"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:97
msgid ""
"now compile and install: ./configure --prefix=/usr --sysconfdir=/etc && make "
"&& make install"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:104
#, no-wrap
msgid ""
"1) This Hints\n"
"~~~~~~~~~~~~~\n"
"Well ...\n"
"now we have a tool which can discover MAC address  \n"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:109
msgid ""
"1.1) Install Files and Directories (this is only a proposal)  "
"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Extract "
"network-recognition-0.0.1.tar.bz2 and in the extracted directory and run the "
"following commands:"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:111
msgid "OPION 1 :"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:115
#, no-wrap
msgid ""
"  install -dv -m 700 /etc/sysconfig/network.d\n"
"  install -dv /etc/sysconfig/network-recognition\n"
"  install -dv /usr/share/doc/network-recognition\n"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:119
#, no-wrap
msgid ""
"  install -m 744 netdevices-example "
"/etc/sysconfig/network.d/netdevice.example\n"
"  install -v -m644 network-recognition-conf "
"/etc/sysconfig/network-recognition/network-recognition.conf\n"
"  install -v -m750 network-recognition-script "
"/usr/sbin/network-recognition\n"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:123
#, no-wrap
msgid ""
"OPTION 2: same as above but in a script\n"
"        ./install.sh (if present ;)\n"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:126
#, no-wrap
msgid ""
"2) The principle\n"
"~~~~~~~~~~~~~~~~\n"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:132
msgid ""
"The network-recognition script use a netdevices file in which are stored "
"network names, with specific ip and mac address of knowned permanent network "
"devices such as routers. The script call arpdiscover to check if that device "
"is present, if the device is present the script exit the loop and returns "
"the name of the network it successfully recognized."
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:135
msgid ""
"This first discovering method is really slow (10-15 sec per scan), it uses "
"arpdiscover, the second method is faster and uses netdiscover."
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:140
#, no-wrap
msgid ""
"2) IP service integration\n"
"~~~~~~~~~~~~~~~~~~~~~~~~~\n"
"In the case of wpa-service you simply edit the wpa-actions file and "
"replace\n"
"the function get_ssid by :\n"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:151
#, no-wrap
msgid ""
"function get_ssid {\n"
"if [ \"$EVENT\" == \"CONNECTED\" ]; then\n"
"\tRET=`network-discover $IFACE`\n"
"\techo $RET > \"$WPA_ACCESS_DIR/$IFACE.ssid\"\n"
"\telse\n"
"\tif [ -e \"$WPA_ACCESS_DIR\" ]; then\n"
"\t\tRET=$(cat \"$WPA_ACCESS_DIR/$IFACE.ssid\")\n"
"\tfi\n"
"fi\n"
"}\n"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:153
msgid "In the case of ifplugd you can modify the ifplugd.action file like this:"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:157
msgid ""
"BEGIN of ifplugd.action set -e "
". /etc/sysconfig/network-recognition/network-recognition.conf"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:162
#, no-wrap
msgid ""
"if [ -z \"$1\" ] || [ -z \"$2\" ] ; then\n"
"\techo \"Wrong arguments\" > /dev/stderr\n"
"\texit 1\n"
"fi\n"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:170
#, no-wrap
msgid ""
"function reload_avahi {\n"
"\t$AVAHI_DAEMON -c\n"
"\tRET=$?\n"
"\tif [ \"$RET\" == \"0\" ]; then\n"
"\t        $AVAHI_DAEMON -r\n"
"\tfi\n"
"}\n"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:174
msgid ""
"IFACE=$1 [ \"$2\" == \"up\" ] && EVENT=\"CONNECTED\" [ \"$2\" == \"down\" ] "
"&& EVENT=\"DISCONNECTED\""
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:185
#, no-wrap
msgid ""
"function get_ssid {\n"
"if [ \"$EVENT\" == \"CONNECTED\" ]; then\n"
"\tRET=`network-recognition $IFACE` &> /dev/null\n"
"\techo $RET > \"/tmp/$IFACE.ssid\"\n"
"\telse\n"
"\tif [ -e \"/tmp/$IFACE.ssid\" ]; then\n"
"\t\tRET=$(cat \"/tmp/$IFACE.ssid\")\n"
"\tfi\n"
"fi\n"
"}\n"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:208
#, no-wrap
msgid ""
"if [ \"$EVENT\" == \"CONNECTED\" ]; then\n"
"\tget_ssid\n"
"\tSSID=$RET\n"
"\t# configure network, signal DHCP client, etc.\n"
"\t# If special networks definition exist, use it\n"
"\tif [ -f \"$NETWORKDIR/$SSID\" ]; then\n"
"\t\tIFCONFIG=\"$NETWORKDIR/$SSID\"\n"
"\t\t. $IFCONFIG\n"
"\t\texport IFCONFIG\n"
"\t\t$SERVICESDIR/$SERVICE $IFACE up\n"
"\telse\n"
"\t\tIFCONFIG=\"$NETWORKDIR/AUTO\"\n"
"\t\t. $IFCONFIG\n"
"\t\texport IFCONFIG\n"
"\t\t$SERVICESDIR/$SERVICE $IFACE up\n"
"\tfi\n"
"\tRET=$?\n"
"\t# reload the Avahi daemon if it runs\n"
"\treload_avahi\n"
"\texit $RET\n"
"fi\n"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:237
#, no-wrap
msgid ""
"if [ \"$EVENT\" == \"DISCONNECTED\" ]; then\n"
"    # remove network configuration, if needed\n"
"\tget_ssid\n"
"\tif [ \"x$RET\" != \"x\" ]; then\n"
"\t# this is false when there is nothing known around\n"
"\t# and when the system is disabling the service\n"
"\tSSID=$RET\n"
"\t# configure network, signal DHCP client, etc.\n"
"\t# If special networks definition exist, use it\n"
"\tif [ -f \"$NETWORKDIR/$SSID\" ]; then\n"
"\t\tIFCONFIG=\"$NETWORKDIR/$SSID\"\t\t\n"
"\t\t. $IFCONFIG\n"
"\t\texport IFCONFIG\n"
"\t\t$SERVICESDIR/$SERVICE $IFACE down\n"
"\telse\n"
"\t\tIFCONFIG=\"$NETWORKDIR/AUTO\"\n"
"\t\t. $IFCONFIG\n"
"\t\texport IFCONFIG\n"
"\t\t$SERVICESDIR/$SERVICE $IFACE down\n"
"\tfi\n"
"\tfi\n"
"\tRET=$?\n"
"\t# reload the Avahi daemon if it runs\n"
"\treload_avahi\n"
"\texit $RET\n"
"fi\n"
"END of ifplugd.action\n"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:239
msgid ""
"remember to add your computer network device to "
"/etc/sysconfig/ifplugd/ifplugd.conf"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:242
#, no-wrap
msgid ""
"3) Configuration\n"
"~~~~~~~~~~~~~~~~\n"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:245
msgid ""
"Script configuration go in the "
"/etc/sysconfig/network-recognition/network-recognition.conf file"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:249
msgid "2.1) Network configurations (IP): ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:252
msgid ""
"In fact i strongly use the wpa-service ipconf methods, that why i use the "
"same configuration files for networks."
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:254
msgid "this part comes from the wpa-service hint:"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:259
msgid ""
"you can set up your network according to it's network_name (eg SSID), this "
"means that if the SSID \"DHCP_network\" manage ip via a dhcp server, "
"wpa-service will use the SSID file descriptor to set up you network when "
"connecting to the SSID network."
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:262
msgid ""
"Those ssid descriptors are named with the name of the SSID they describe, "
"and took place in the /etc/sysconfig/network.d directory."
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:264
msgid "The \"AzErTy\" SSID descriptor will be /etc/sysconfig/network.d/AzeRtY"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:267
msgid "2.1.1) SSID descriptor syntax: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:270
msgid ""
"An SSID descriptor is a regular network configuration file as used in LFS "
"BOOK.  it means that if SSID \"IPV4\" use ipv4-static, the the descriptor "
"\"IPV4\" will be"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:279
#, no-wrap
msgid ""
"        cat > /etc/sysconfig/network.d/IPV4 << \"EOF\"\n"
"        ONBOOT=yes\n"
"        SERVICE=ipv4-static\n"
"        IP=192.168.1.1\n"
"        GATEWAY=192.168.1.2\n"
"        PREFIX=24\n"
"        BROADCAST=192.168.1.255\n"
"        EOF\n"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:281
msgid "and if the \"DHCP\" SSID use dhcp :"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:288
#, no-wrap
msgid ""
"        cat > /etc/sysconfig/network.d/DHCP << \"EOF\"\n"
"        ONBOOT=\"yes\"\n"
"        SERVICE=\"dhcpcd\"\n"
"        DHCP_START=\"-o\"\n"
"        DHCP_STOP=\"-k -o\"\n"
"\t# the '-o' prevent your interface being destroyed by dhcpcd \n"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:292 origin/network-recognition.txt:314
#, no-wrap
msgid ""
"        # Set PRINTIP=\"yes\" to have the script print\n"
"        # the DHCP assigned IP address\n"
"        PRINTIP=\"no\"\n"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:297 origin/network-recognition.txt:319
#, no-wrap
msgid ""
"        # Set PRINTALL=\"yes\" to print the DHCP assigned values for\n"
"        # IP, SM, DG, and 1st NS. This requires PRINTIP=\"yes\".\n"
"        PRINTALL=\"no\"\n"
"        EOF\n"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:300
#, no-wrap
msgid ""
"for convenience, your ip manager will fall back to "
"/etc/sysconfig/network.d/AUTO\n"
" when no SSID descriptor is available.\n"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:303
#, no-wrap
msgid ""
"Then install a common/automatic network configuration:\n"
"I use dhcpcd:   \n"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:310
#, no-wrap
msgid ""
"        cat > /etc/sysconfig/network.d/AUTO << \"EOF\"\n"
"        ONBOOT=\"yes\"\n"
"        SERVICE=\"dhcpcd\"\n"
"        DHCP_START=\"-o\"\n"
"        DHCP_STOP=\"-k -o\"\n"
"\t# the '-o' prevent your interface being destroyed by dhcpcd\n"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:322
#, no-wrap
msgid ""
"3) The netdevice file (The network description) \n"
"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:324
msgid "We've installed an example file in /etc/sysconfig/network.d"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:327
msgid ""
"Now edit the newly created netdevices file: Which should contains something "
"similar to:"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:335
#, no-wrap
msgid ""
"network={\n"
"        network_name=LaboPhy\n"
"\t# ip of the permanent device\n"
"        ip=192.168.0.23\n"
"\t# mac address of the permanent device\n"
"        mac=00:0F:B5:EE:88:8C\n"
"}\n"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:339
msgid ""
"You will directly see that you can define more than one network and also "
"more than one permanent device by duplicating the network blocs"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:342
msgid ""
"You can feed this file by running directly arpdiscover when you plug in a "
"new network:"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:344
msgid "arpdiscover IP iterations computer_network_device"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:347
msgid "another usefull tool to do this would be netdiscover"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:353
#, no-wrap
msgid ""
"4) Feeding our netdevices file\n"
"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
"The perfect tool: NetDiscover\n"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:355
msgid "use it as follow:"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:357
msgid "netdiscover -i IFACE"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:359
msgid "it will show you everything connected to your network (and more)"
msgstr ""

#. type: Plain text
#: origin/network-recognition.txt:365
#, no-wrap
msgid ""
"CHANGELOG:\n"
"2007 11 11 First release, first send to lfshint\n"
"2007 11 22 Second release added netdiscover method and some bugs fixed\n"
"\t\t\t+ avahi-daemon reload in ifplugd.action\n"
"\t\t\t+ a work around for bad promiscuous netcards mode\n"
msgstr ""
