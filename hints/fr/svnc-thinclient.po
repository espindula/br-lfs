# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-09-02 09:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: origin/svnc-thinclient.txt:2
msgid "AUTHOR:\t\tCsaba Henk <ekho@math-inst.hu>"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:4
msgid "DATE: 2003-10-27"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:6
msgid "LICENSE: The MIT License"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:8
msgid "SYNOPSIS: Setting up a graphical thin client using the svga vncviewer"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:14
msgid ""
"DESCRIPTION: This hints shows how to equip an uClibc-based bootfloppy with "
"the svga vncviewer. With this enhanced bootfloppy you can turn even low-end "
"computers to thin clients with the functionality of an X terminal. We also "
"describe a possible minimalistic server + thin client configuration."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:19
msgid ""
"PREREQUISITES: This hint should be useable on any not too aged Linux "
"installation with a non-broken toolchain. It was tested on a (by and large) "
"LFS-4.0 system."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:25
msgid ""
"ATTACHMENTS: "
"http://www.linuxfromscratch.org/hints/downloads/attachments/svnc-thinclient/make_uclibc-libvcauth "
"http://www.linuxfromscratch.org/hints/downloads/attachments/svnc-thinclient/make_uclibc-svncviewer "
"http://www.linuxfromscratch.org/patches/downloads/svgalib/svgalib-1.9.18-demos_Makefile-1.patch "
"http://www.linuxfromscratch.org/patches/downloads/svnc/svnc-0.1-modeforce-1.patch"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:27
msgid "HINT:"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:29
#, no-wrap
msgid ""
"Contents\n"
"========\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:47
#, no-wrap
msgid ""
" Preface\n"
" Introduction\n"
" What do we need?\n"
"Completing the bootfloppy\n"
" Installing more of uClibc\n"
" Installing svgalib\n"
" Installing svncviewer\n"
" Creating the bootdisk\n"
"Setting up the network environment\n"
" Setting up general server programs\n"
" Installing the vnc server\n"
" Connecting from client to server \n"
"Closing remarks\n"
" Version notes\n"
" Bugs and weirdnesses\n"
" Todo\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:49
#, no-wrap
msgid ""
"Preface\n"
"-------\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:53
#, no-wrap
msgid ""
"* This hint is co-developed with the uclibc-bootfloppy hint in the\n"
"framework of the lowlife project,\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:55
msgid "http://www.math-inst.hu/~ekho/lowlife/"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:57
msgid "This file belongs to lowlife-0.5.1."
msgstr ""

#. type: Bullet: '* '
#: origin/svnc-thinclient.txt:59
msgid "For the most recent version check out"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:61
msgid "http://www.math-inst.hu/~ekho/lowlife/svnc-thinclient.txt"
msgstr ""

#. type: Bullet: '* '
#: origin/svnc-thinclient.txt:63
msgid "Comments, ideas, critics, flames are welcome."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:71
#, no-wrap
msgid ""
"* (If you are an LFS user, you can skip this.) Although this document is\n"
"formally an LFS hint, you can see use of it without knowing what LFS is\n"
"(I tried to write it keeping this possibility in mind). Anyway, I\n"
"recommend you to check out what LFS is. If you are not familiar with\n"
"compiling source code in unix/linux environment, then there is no use of\n"
"going on without checking out what LFS is. Consult the following docs\n"
"first:\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:76
msgid ""
"http://www.linuxfromscratch.org/lfs/whatislfs.html "
"http://www.linuxfromscratch.org/faq/ "
"http://www.linuxfromscratch.org/hints/downloads/files/essential_prereading.txt "
"http://www.linuxfromscratch.org/lfs/view/stable/preface/prerequisites.html"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:78
#, no-wrap
msgid ""
"Introduction\n"
"------------\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:83
msgid ""
"As the Linux Xterminal mini-HOWTO claims: \"Ideally, an XT is silent, swift, "
"and deadly\". A cheap and great way to achieve this ideal is to use old PC's "
"as terminals. Two issues arise here:"
msgstr ""

#. type: Bullet: '1) '
#: origin/svnc-thinclient.txt:86
msgid "How to make them display X?"
msgstr ""

#. type: Bullet: '2) '
#: origin/svnc-thinclient.txt:86
msgid "How to make them silent?"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:95
msgid ""
"Concerning 2), the possible sources of noise are fans and HD. In case of old "
"PC's (486s and old Pentiums) the CPU needs no fan -- if there is any fan, "
"you can find it at the power supply, and it's not a big risk to plug that "
"out. This is where oldness becomes a feature.  Concerning the HD: to make "
"the it quiet, you should avoid using it.  An alternative is using a ramdisk "
"for carrying your root filesystem.  The most easy way to make the kernel "
"mount a ramdisk as root filesystem is booting from a floppy. This is why I "
"use a bootfloppy."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:100
msgid ""
"This design implies that in case of an old PC, we will be tight on "
"memory. One kind of reaction to this circumstance is trying to trim down X "
"for the floppy. I chose an other way, namely, displaying X via vnc: we put "
"svgalib + the svga vncviewer to the floppy."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:102
msgid "This hint is a continuation of the uclibc-bootfloppy hint ("
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:105
msgid ""
"http://www.linuxfromscratch.org/hints/downloads/files/uclibc-bootfloppy.txt "
"http://www.math-inst.hu/~ekho/lowlife/uclibc-bootfloppy.txt"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:110
msgid ""
") which describes how to put together a bootfloppy based on recent linux "
"kernel, the uClibc C library and busybox. The steps described here should be "
"performed when you get to the \"Other programs\" chapter of the "
"uclibc-bootfloppy hint."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:117
msgid ""
"This way we get a \"bleeding edge\" bootfloppy with recent versions of the "
"used programs, and this setup needs no more than 7M RAM -- in this value "
"kernel mem usage, ramdisk size, svncviewer displaying a bunch of graphic "
"programs are all included. This value could still be decreased by using "
"older stuff; why do I insist on being at the bleeding edge? See the answer "
"in the uclibc-bootfloppy hint."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:120
msgid ""
"This hint,additional info and downloadable bootdisk image with svnc can be "
"found at my homepage (or at its mirror):"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:123
msgid ""
"http://www.math-inst.hu/~ekho/lowlife/ "
"http://www.personal.ceu.hu/students/01/Csaba_Henk/lowlife/"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:129
msgid ""
"In this hint we the assume that you use an x86 PC (both for making and "
"booting the floppy) with gcc. You may try to port it to another architecture "
"/ compiler. Doing it on another architecture should not be hard. Doing it "
"with another compiler depends on how much does uClibc support that compiler."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:134
msgid ""
"If you copy command from this hint to your shell, be careful that "
"line-terminating backslashes (\\) will keep their position (no whitespace "
"characters should follow them). A possible solution is open this hint in the "
"Vim GUI, and copy'n'paste from there."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:136
#, no-wrap
msgid ""
"What do we need?\n"
"----------------\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:141
msgid ""
"Here I list the programs which we need for the bootfloppy and the ones which "
"are used in the particular server + client setup which will be described in "
"the sequel."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:147
msgid ""
"Generally you are encouraged to use the most update versions of the programs "
"(and your favorite distributions, if there are more of them).  Still there "
"are some items where I have some additional comment on the "
"version/distribution; these are marked with (!). You can find the version "
"notes at the end of this hint."
msgstr ""

#. type: Bullet: '* '
#: origin/svnc-thinclient.txt:149
msgid "The server side:"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:155
#, no-wrap
msgid ""
"tightvnc\n"
" "
"http://prdownloads.sourceforge.net/vnc-tight/tightvnc-1.2.*_unixsrc.tar.bz2\n"
"xinetd\n"
"some kind of telnet daemon\n"
"some kind of tftp daemon\n"
msgstr ""

#. type: Bullet: '* '
#: origin/svnc-thinclient.txt:157
msgid "The client (bootfloppy) side"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:165
#, no-wrap
msgid ""
"svgalib-1.9.18 (!)\n"
" http://www.arava.co.il/matan/svgalib/svgalib-1.9.18.tar.gz\n"
"svnc-0.1 (!)\n"
" ftp://ftp.FreeBSD.org/pub/FreeBSD/ports/distfiles/svnc-0.1.tgz\n"
" and the mirrors listed in\n"
" http://www.realvnc.com/pipermail/vnc-list/2002-June/031178.html\n"
"tightvnc (only needed for compiling svnc)\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:168
#, no-wrap
msgid ""
"Completing the bootfloppy\n"
"=========================\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:173
msgid ""
"First you need a bootfloppy development environment. Setting up one is "
"described in the uclibc-bootfloppy hint. Do what the uclibc-bootfloppy hint "
"tells you, until you get to the \"Other programs\" chapter."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:176
msgid ""
"Then do the following; you are supposed to work as the bootdisk user in the "
"present chapter (ie., type"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:178
msgid "su - bootdisk"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:180
msgid "if you didn't do it yet)."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:182
#, no-wrap
msgid ""
"Installing more of uClibc\n"
"-------------------------\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:187
#, no-wrap
msgid ""
"For svgalib we need the math libraries of uClibc. If you installed gpm         "
"\n"
"to the floppy filesystem correctly, you already have them. If you don't        "
"\n"
"have them on the floppy filesystem, type:\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:190
msgid "cd /usr/i386-linux-uclibc/lib/ && cp -a libm-* libm.so.0 ~/rfloppy/lib"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:192
#, no-wrap
msgid ""
"Installing svgalib\n"
"------------------\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:197
msgid ""
"First some necessary corrections for the 1.9.18 version of svgalib; "
"hopefully these will be unnecessary for subsequent releases. You find a "
"patch at"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:199
msgid "http://www.linuxfromscratch.org/patches/downloads/svgalib/svgalib-1.9.18-Makefiles-1.patch"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:201
msgid "or at"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:203
msgid "http://www.math-inst.hu/~ekho/lowlife/patches/svgalib-1.9.18-Makefiles-1.patch"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:206
msgid ""
"or in the patches directory if you read this hint as a file of the lowlife "
"tarball avaliable at"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:208
msgid "http://www.math-inst.hu/~ekho/lowlife"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:211
msgid ""
"This patch corrects some typos in the Makefiles. Put the patch to the "
"svgalib source dir as svgalib-1.9.18-Makefiles-1.patch. Then type"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:214
msgid ""
"ln -s ../egadrv.c src/drivers && patch -Np1 -i "
"svgalib-1.9.18-Makefiles-1.patch"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:216
msgid "(the first command is the correction of a file misplacement)."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:219
msgid ""
"These were the version-specific corrections. Now let's go for the real "
"stuff."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:225
msgid ""
"Adjust the list of supported drivers in Makefile.cfg according to your "
"needs. By carefully choosing the few drivers you need, you can decrease the "
"size of the binary with about 100 kb or maybe more! However, our filesystem "
"is big enough for the svga library with all default drivers compiled in."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:233
msgid ""
"Now we compile svgalib and install it to the directory of the floppy's "
"filesystem. In this development version of svgalib the svga-aware programs "
"are needed no more to run as setuid root, but a kernel module is to be "
"loaded for using svgalib. The commands below also compile and install the "
"kernel module. Store the location of your kernel for the floppy in the "
"variable KERNEL (eg., KERNEL=$HOME/linux-2.4.22), and then type"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:249
msgid ""
"make shared && cd sharedlib && for q in \"\" gl; do strip libvga$q.so.1.9.* "
"ln -s libvga$q.so.1.9.* libvga$q.so.1 ln -s libvga$q.so.1 libvga$q.so done "
"&& mkdir -p $HOME/rfloppy/usr/lib && cp -a libvga* $HOME/rfloppy/usr/lib && "
"# Now comes the compilation of the module cd ../kernel/svgalib_helper && "
"make KDIR=\"$KERNEL\" && mkdir -p $HOME/rfloppy/lib/modules && cp "
"svgalib_helper.o $HOME/rfloppy/lib/modules && cd ../.."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:252
msgid ""
"Also create the file $HOME/rfloppy/etc/vga/libvga.config, and put into it "
"your mouse type at least. Eg., my libvga.config looks like:"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:255
msgid "mouse IMPS2 mdev /dev/misc/psaux"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:259
msgid ""
"If you feel like, you can also compile the svga test suite. It is useful if "
"you want to custom-tailor your svga configuration (which means adjusting the "
"libvga.config file). To do so, type"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:266
#, no-wrap
msgid ""
"cd demos &&\n"
"make \"LIBS=../sharedlib/libvga.so ../sharedlib/libvgagl.so\" &&\n"
"cd ../threeDKit &&\n"
"make \"LIBS=../sharedlib/libvga.so ../sharedlib/libvgagl.so\" \\\n"
" \"INCLUDES = -I../include -I. -I../src -I../gl\" &&\n"
"cd ..\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:269
msgid ""
"in the svgalib source directory. You will find the executables in the demos "
"and threeDKit directories."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:272
msgid ""
"Do not delete the svgalib source dir -- we will need it in the following "
"section!"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:274
#, no-wrap
msgid ""
"Installing svncviewer\n"
"---------------------\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:279
msgid ""
"Do not yet extract the svncviewer tarball! The following commands will "
"assume that the svgalib source dir, the tightvnc and svncviewer tarballs and "
"you (ie., the bootdisk user) are at $HOME."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:285
msgid ""
"To get svncviewer compiled, we need the libvncauth.a library form the "
"tightvnc distribution. (Thus svncviewer is compiled inside the vnc source "
"tree.) The usual way to compile both of libvncauth.a and svncviewer is to "
"create makefiles with the xmkmf utility, and then running make."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:289
msgid ""
"However, xmkmf will not work with uClibc (unless we build X against uClibc, "
"and we don't want to do that). Therefore we compile both of libvncauth.a and "
"svncviewer in the following manner:"
msgstr ""

#. type: Bullet: '* '
#: origin/svnc-thinclient.txt:291
msgid "run xmkmf (imake) using glibc;"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:294
#, no-wrap
msgid ""
"* run make with options for using uClibc and local svgalib, and for size\n"
"optimization.\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:300
msgid ""
"In practice this means the following: first we define a variable which "
"stores the relative path from the svncviewer source dir to svgalib source "
"dir (we need this path as we don't install the uClibc-linked svgalib on the "
"development platform). If you follow my setup faithfully, it should be:"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:302
msgid "SVGADIR=../../svgalib-1.9.18"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:304
msgid "(otherwise find it out by yourself :)."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:306
msgid "Here I tell you about a patch I made for svncviewer:"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:309
msgid ""
"http://www.linuxfromscratch.org/patches/downloads/svnc/svnc-0.1-modeforce-1.patch "
"http://www.math-inst.hu/~ekho/lowlife/patches/svnc-0.1-modeforce-1.patch"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:315
msgid ""
"This introduces a -mode option for svncviewer with which you can force "
"svncviewer to use a given svga mode (these modes are described in the "
"svgalib docs or check out the vgatest executable of the svgalib test "
"kit). If you don't apply the patch just execute the following sequence of "
"commands, otherwise take a break for patching when its time comes."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:332
#, no-wrap
msgid ""
"bzcat tightvnc-1.2.*_unixsrc.tar.bz2 | tar xv &&\n"
"cd vnc_unixsrc &&\n"
"tar xvzf ../svnc-0.1.tgz &&\n"
"cd libvncauth &&\n"
"(unset CC; xmkmf) &&\n"
"make \"CC=i386-uclibc-gcc\" \"CDEBUGFLAGS = $CFLAGS -fno-strength-reduce\" "
"\\\n"
" \"AR = i386-uclibc-ar clq\" &&\n"
"cd ../svncviewer &&\n"
"# Now apply patch if you want to\n"
"(unset CC; xmkmf) &&\n"
"make \"CC=i386-uclibc-gcc\" \"CDEBUGFLAGS = $CFLAGS -fno-strength-reduce\" "
"\\\n"
" \"INCLUDES = -I../include -I. -I$SVGADIR/include -I$SVGADIR/gl\" \\\n"
" \"SVGALIB = $SVGADIR/sharedlib/libvga.so $SVGADIR/sharedlib/libvgagl.so\" "
"&&\n"
"strip svncviewer &&\n"
"mkdir -p $HOME/rfloppy/usr/bin &&\n"
"cp svncviewer $HOME/rfloppy/usr/bin\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:339
msgid ""
"If you intend to compile svncviewer in an environment without X (ie., you "
"don't have xmkmf), then try to compile libvncauth.a and svncviewer with the "
"help of the following scripts (they are simply the output of the respective "
"make commands; I give away these and not the Makefiles because xmkmf-made "
"Makefiles are huge and illegible): find them together among attachments,"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:341
msgid "http://www.linuxfromscratch.org/hints/downloads/attachments/svnc-thinclient/"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:343
msgid "or individually at"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:346
msgid ""
"http://www.math-inst.hu/~ekho/lowlife/non-X/make_uclibc-libvncauth "
"http://www.math-inst.hu/~ekho/lowlife/non-X/make_uclibc-svncviewer"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:348
#, no-wrap
msgid ""
"Creating the bootdisk\n"
"---------------------\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:352
msgid ""
"Proceed on as it is described in the similarly named chapter of the "
"uclibc-bootdisk hint."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:355
#, no-wrap
msgid ""
"Setting up the network environment\n"
"==================================\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:360
msgid ""
"You have the bootdisk with the svga vncviewer. If you know what you want to "
"do with it, you have clear ideas that in what network environment you will "
"use it, then the rest of the hint is not too interesting for you."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:369
msgid ""
"In the sequel we describe a minimalist local network setup: a server machine "
"running a vnc server, and a client machine booted with our bootfloppy, which "
"can connect to the server in three basic ways: it can transfer files via "
"tftp, it can get a character terminal on the server via telnet, and it can "
"display X desktops via vnc. Using the tftp and telnet services requires that "
"you enabled the respective clients when you compiled busybox. (And you will "
"also need ifconfig being enabled in busybox.)"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:373
msgid ""
"We will assume that you connect the two machines directly (without a switch "
"or things like that) and that you have a free network interface (network "
"card, serial/parallel port) on both machines."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:375
#, no-wrap
msgid ""
"Setting up general server programs\n"
"----------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:381
msgid ""
"Fix an unused IP address for the server and the client side, from the "
"private network IP-address range, from the same network class, and store it "
"in the $SERVER and $CLIENT variables, respectively. Eg., I use"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:384
msgid "SERVER=192.168.0.2 CLIENT=192.168.0.1"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:388
msgid ""
"Then you should install xinetd (or alternatively, inetd), some telnet "
"daemon, and some tftp daemon. These are covered by the BLFS book (available "
"at"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:390
msgid "http://beyond.linuxfromscratch.org"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:395
msgid ""
"). Choose a directory for tftp transfers, store its value in the variable "
"$TRANSFER. (That is, tftp clients can download files located in $TRANSFER, "
"and can upload files to $TRANSFER.) Choose carefully the list of those "
"users/groups which can write to $TRANSFER."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:399
msgid ""
"Configure xinetd to run telnetd and tftpd bound to $SERVER like this (the "
"names of the executables may be different on your system; and consider that "
"by the settings below tftp is ran by a specific user):"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:411
#, no-wrap
msgid ""
"echo \"\n"
"\tservice telnet\n"
"{\n"
"       socket_type             = stream\n"
"       wait                    = no\n"
"       user                    = root\n"
"       server                  = /usr/sbin/in.telnetd\n"
"       bind                    = $SERVER\n"
"       only_from               = $CLIENT\n"
"       log_on_failure += USERID\n"
"}\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:423
#, no-wrap
msgid ""
"\tservice tftp\n"
"{\n"
"       socket_type             = dgram\n"
"       protocol                = udp\n"
"       wait                    = yes\n"
"       user                    = tftpd\n"
"       server                  = /usr/sbin/tftpd\n"
"       server_args             = $TRANSFER\n"
"       bind                    = $SERVER\n"
"       only_from               = $CLIENT\n"
"}\" >> /etc/xinetd.conf\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:427
msgid ""
"Note that binding these services to $SERVER is essential for security -- "
"telnet transfers data unencrypted and tftp transfers data without asking for "
"password."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:430
msgid ""
"Now you can configure the network interface on the server -- in the "
"following example we use plip:"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:432
msgid "ifconfig plip0 $SERVER pointopoint $CLIENT"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:434
msgid "(It's your homework to find out how to get it executed at startup.)"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:436
msgid "Restart xinetd; in an \"official\" LFS/BLFS system it is done with"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:438
msgid "/etc/rc.d/init.d/xinetd restart"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:440
#, no-wrap
msgid ""
"Installing the vnc server\n"
"-------------------------\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:448
msgid ""
"In this setup we will install the vnc server in a standalone way, that is, "
"it won't be handled by xinetd so you will have to start it manually.  (One "
"benefit of this approach that in this case the vnc session remains alive "
"after a viewer disconnects, so you can use it as a portable X desktop, \"the "
"screen of X\".) If you would like a \"vnc + xinetd\"-ish vnc setup, check "
"out the tightvnc hint ("
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:450
msgid "http://www.linuxfromscratch.org/hints/downloads/files/tightvnc.txt"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:452
msgid ")."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:454
msgid "Install tightvnc with the following commands:"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:464
msgid ""
"xmkmf && make World && cd Xvnc && ./configure && make && cd .. && sed '/^ "
"*\\$fontPath/s%^%#%' vncserver > vncserver.tmp && mv vncserver.tmp vncserver "
"&& ./vncinstall /usr/bin /usr/share/man"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:466
msgid "[Explanation:"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:468
msgid "\"sed '/^ *\\$fontPath/s%^%#%' vncserver [...]\" :"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:472
msgid ""
"this command comments the $fontPath variable out, as I see no effect of "
"setting it other than getting error messages (it may be different on your "
"system).]"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:480
msgid ""
"Note: the above commands do not cover the installation of the java viewer, "
"which enables java-supporting browsers to display vnc desktops.  The java "
"viewer is shipped with the tightvnc source code in a precompiled form; "
"however, if you want to act according to LFS spirit, *do not* install it, "
"rather download the tightvnc-1.2.*_javasrc package from the tightvnc site, "
"and compile it yourself. That's pretty straightforward."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:482
#, no-wrap
msgid ""
"Connecting from client to server \n"
"--------------------------------\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:487
msgid ""
"Now its time to boot the floppy on the client machine. We will use the "
"$SERVER, $CLIENT variables with the same values on the client machine as "
"well."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:490
msgid ""
"When you get the prompt on the client, set up the network -- eg., continuing "
"the above example with plip:"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:492
msgid "ifconfig plip0 $CLIENT pointopoint $SERVER"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:495
#, no-wrap
msgid ""
"* If all is nice, you can get a prompt of the server on the client simply "
"by\n"
"typing\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:497
msgid "telnet $SERVER"
msgstr ""

#. type: Bullet: '* '
#: origin/svnc-thinclient.txt:499
msgid "Transferring files between the server and client is as follows:"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:503
msgid ""
"- downloading the file foo from server to client: on the server, put foo "
"into $TRANSFER, make it world-readable, then on the client: get sure that "
"foo does not exist in the current directory, then type:"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:505
msgid "tftp -g -r foo $SERVER"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:507
msgid "- uploading the file foo from client to server: on the server type"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:510
#, no-wrap
msgid ""
" > $TRANSFER/foo &&\n"
"chmod a+w $TRANSFER/foo\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:512
msgid "then on the client type"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:514
msgid "tftp -p -l foo $SERVER"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:516
msgid "-- its primitive, but saves your floppy from the bloat."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:520
#, no-wrap
msgid ""
"* And getting an X desktop via vnc: at the server, login as the user\n"
"whose desktop is to be reached from the client (you can use the telnet\n"
"of the client). Then type:\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:522
msgid "vncserver"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:525
msgid ""
"(you may need to pass -geometry and -depth options to be compatible with the "
"video capabilities of the client)."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:527
msgid "On the client, type:"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:530
msgid "insmod /lib/modules/svgalib_helper.o && svncviewer $SERVER:1"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:532
msgid "and see the desktop of the server."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:534
msgid "Customizations:"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:538
#, no-wrap
msgid ""
"* pass the \"-interface $SERVER\" option to the vnc server if you worry\n"
"for security and you want to make sure that only the client has access to\n"
"the vnc server;\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:543
#, no-wrap
msgid ""
"* pass the \"-compatiblekbd\" option to the vnc server if you want to use\n"
"non-standard characters; eg., this way typing Alt+i in an xterm gives\n"
"you an acuted e. This is the way to go for people whose language uses\n"
"nonstandard characters, as vnc does not support xmodmap well.\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:548
msgid ""
"There is a more tricky way of using vnc: with the help of ssh tunneling you "
"can reach any vnc server from the client which is reachable from the "
"server. Say you run a vnc server at pistike.org, on display 1 (port 5901), "
"as user steve. On the server type"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:550
msgid "ssh -g -L 5902:localhost:5901 steve@pistike.org"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:553
msgid ""
"This forwards port 5902 of the server to port 5901 of pistike.org. Thus when "
"you type"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:555
msgid "svncviewer $SERVER:2"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:559
msgid ""
"on the client, you will be connected to the vnc server of pistike.org.  "
"Moreover, the connection between the server and pistike.org will be secured."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:561
msgid "So that's the story."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:563
#, no-wrap
msgid ""
"Closing remarks\n"
"===============\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:566
#, no-wrap
msgid ""
"Version notes\n"
"-------------\n"
msgstr ""

#. type: Bullet: '* '
#: origin/svnc-thinclient.txt:569
msgid "svgalib-1.9.18:"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:578
msgid ""
"As it can be read in the svgalib.org site, \"Pre releases of svgalib-2 will "
"be called 1.9.x, with no pre, but they are still very experimental.\" Why do "
"we use experimental version? Simply because it works much more flawlessly: "
"the stable release (svgalib-1.4.3) was also willing to compile, but it gave "
"me segmentation faults. Note that the 1.9.18 version has some lesser bugs "
"which are corrected in this hint; these corrections are likely to become "
"unnecessary with a new release of svgalib. Compilation of the svgalib_helper "
"has changed in 1.9.18."
msgstr ""

#. type: Bullet: '* '
#: origin/svnc-thinclient.txt:580
msgid "snvc-0.1:"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:584
msgid ""
"You can find two different kind of releases of the svga vncviewer: there is "
"the original one, that's used in this hint, and there are the Debian "
"releases (see at"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:586
msgid "http://packages.qa.debian.org/s/svncviewer.html"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:597
msgid ""
"). For me the deb version seems to be an unclever dirty hack: its maintainer "
"changed keyboard handling in way such that you can compile the program with "
"an arbitrary keyboard layout (it's shipped with US and German layouts), but "
"this way several keyboard combination got disabled: eg., killing the viewer "
"with Ctrl+Alt+Backspace does not work; the Ctrl+Alt+Left/Right combinations "
"of icewm for changing desktops neither work. And the source ships with "
"precompiled libvncauth.a and svncviewer and bunch of other unnecessary "
"things; it's quite annoying (the manpage is fine, tho). So I sticked with "
"the oldie-but-goldie original version of svncviewer."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:601
msgid ""
"This hint is co-developed with the uclibc-bootfloppy hint in the framework "
"of the lowlife project, thus the following subsections regard to the whole "
"lowlife project."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:603
#, no-wrap
msgid ""
"Bugs and weirdnesses\n"
"--------------------\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:607
msgid ""
"The list below is about both of the uclibc-bootfloppy and the "
"svnc-thinclient hints."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:610
msgid ""
"The following weirdnesses are probably due to the respective programs and "
"not to doing something wrong in these hints."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:615
#, no-wrap
msgid ""
"* Sometimes when switching to another terminal and then back to the\n"
"svga vncviewer the keyboard gets screwed up. Using serial mouse,\n"
"sometimes the keyboard gets screwed up without any obvious reason.\n"
"However, after restarting the viewer, things behave normally again.\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:619
#, no-wrap
msgid ""
"* Using libvgagl-dependent programs (like svncviewer) on my 486\n"
"laptop, I see a horizontal white line at half height of the screen.\n"
"I wonder whether this occurs with other LCD monitors.\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:621
#, no-wrap
msgid ""
"Todo\n"
"----\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:627
msgid ""
"Now it seems that the uclibc-bootfloppy and svnc-thinclient hints got quite "
"close to their idea: you set up the development environment, su to bootdisk "
"user, type in some commands, finally put a floppy to the drive and run the "
"mkbootdisk script, and you have the bootfloppy."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:631
msgid ""
"However, I can say only \"Now it seems...\" but I can't say \"Now it is...\" "
"-- without testing the stuff by many people and getting feedback I can't."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:633
msgid "So the main TODO is to be done by you, kind reader: test and report!!"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:635
msgid "After it happens, these hints can be claimed to be mature."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:638
msgid ""
"Another TODO will be in the future to upgrade to newer versions of the "
"installed programs, if new versions come out."
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:640
msgid "ACKNOWLEDGEMENTS:"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:644 origin/svnc-thinclient.txt:665
msgid ""
"(This hint is co-developed with the uclibc-bootfloppy hint in the framework "
"of the lowlife project, thus this section regards to the whole lowlife "
"project.)"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:659
#, no-wrap
msgid ""
"  * Useful information resources:\n"
"\t- LFS mailing lists\n"
"\t- busybox mailing list\n"
"\t- uClibc mailing list archives\n"
"\t- vnc mailing list archives\n"
"\t- \"Creating a Custom Bootdisk\" chapter of the BLFS book\n"
"\t- Bootdisk HOWTO\n"
"\t- PLIP-install HOWTO\n"
"\t- http://ebusiness.gbdirect.co.uk/case_studies/xterminal.html\n"
"\t- the LODS project (http://www.khk.net/lods/index.html)\t\n"
"\t- the tomsrtbt project (http://www.toms.net/rb/)\n"
"  * Archaic had some useful advice about trimming the root filesys (/etc).\n"
"  * Following the advice of Bill Maltby, \"rdev $DISK 0,0\" is used rather\n"
"    than \"rdev $DISK $DISK\" or \"rdev $DISK 2,0\".\n"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:661
msgid "CHANGELOG:"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:668
msgid ""
"Important changes are tagged with (!)  Very important changes are tagged "
"with (!!)"
msgstr ""

#. type: Plain text
#: origin/svnc-thinclient.txt:737
#, no-wrap
msgid ""
"[2003-04-13]\n"
"  * VERSION 0.1 \n"
"  * Initial release\t\n"
"[2003-04-25]\n"
"  * VERSION 0.1.1 \n"
"  * Removed the loopmnt script. Now the files are just \n"
"    simply to put into a directory and not to an ext2 filesystem (!!)\n"
"  * Moved gpm from svnc-x_terminal.txt to uclibc-bootfloppy.txt \n"
"    (as I realized that svgalib does not use gpm)\n"
"  * Got rid of the ugly /usr/i386-linux-uclibc/lib/ ->\n"
"    ../../lib symlink (!!)\n"
"  * Many changes in the mkbootdisk script: \n"
"\t- encorporates functionality of ceased loopmnt script\n"
"\t- it does no more belong to a specific bootdisk user\n"
"\t- the floppy image can be dumped to stdout \n"
"   (!)\n"
"  * Now devfs is *the* way to go (!)\n"
"  * Removed /etc/{group,passwd,fstab} \n"
"  * Fixes, prettifying:\n"
"\t- Added Changelog, links to it, VERSION, trivial BUGS file\n"
"\t- Reduced egotripping in the 1st paragraph of index.html \n"
"\t- Added some explanation about the devfsd patch in index.html \n"
"\t- Removed the only reference to Micro$oft from the hints ;) (ie.\n"
"\t  now there is shown a more common example of mouse settings in\n"
"\t  libvga.config, in svnc-x_terminal.txt)\n"
"\t- \"Closing remarks\" in svnc-x_terminal.txt rethought \n"
"\t- Typo fixes; wording developed\n"
"\t- Applied the changes in the hints to the distributed floppy\n"
"\t  image \n"
"\t- Minor changes in index.html\n"
"[2003-06-11]\n"
"  * VERSION 0.5\n"
"  * Got rid of hacking system files -- now after putting together \n"
"    the development environment all stuff is done non-privileged (!!)\n"
"  * Added modeforce patch of svncviewer\n"
"  * Eliminating sed hacks -- rather using make with options (!)\n"
"  * Fixes of typos in svgalib-1.9.17 Makefiles are collected in a \n"
"    patch\n"
"  * svgalib compilation streamlined\n"
"  * Using rdev as \"rdev $DISK 0,0\" (!)\n"
"  * The mkbootdisk script now: \n"
"  \t- supports safe tempfile creation \n"
"  \t- hopefully work with all possible filenames\n"
"    (!)\n"
"  * Fixes, prettifying:\n"
"\t- Fixed some quite confusing typos\n"
"\t- Changelog reorganized\n"
"\t- mkbootdisk now has more transparent indentation\n"
"\t- Homepage domainname changed to www.math-inst.hu from\n"
"\t  www.renyi.hu (same domain, another alias) \n"
"[2003-10-31]\n"
"  * VERSION 0.5.1\n"
"  * Reorganized according to new LFS hint format (see\n"
"    http://www.linuxfromscratch.org/hints/submit.html) (!)\n"
"  * Changed license to MIT (!)\n"
"  * First compiled piece is kernel, thus uClibc can use correct headers\n"
"    (!)\n"
"  * Upgraded to uClibc-0.9.21, svgalib-1.9.18\n"
"  * Demofloppy got updated as well and put to a disctinct package\n"
"  * Fixes, prettifying:\n"
"\t- Some instructions got more streamlined\n"
"\t- Added chroot test of the filesystem\n"
"\t- The filename svnc-x_terminal.txt changed to svnc-thinclient.txt\n"
"\t- index.html updated and made more readable\n"
"[2003-11-01]\n"
"\t- Added list of all attachments to both of uclibc-bootfloppy\n"
"\t  and svnc-thinclient hints\n"
"  \t- More BLFS-friendly intro text in uclibc-bootfloppy hint  \n"
"\t- Added fdformat advice\n"
msgstr ""
