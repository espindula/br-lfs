# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-09-02 09:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: origin/small-lfs.txt:4
#, no-wrap
msgid ""
"AUTHOR:      Joachim Beckers <jbeckers@linuxfromscratch.org>\n"
"DATE:        2005-07-31\n"
"LICENSE:     GNU Free Documentation License version 1.2\n"
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:6
#, no-wrap
msgid "SYNOPSIS:    Tips and tricks for creating a small LFS system.\n"
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:8
msgid "PRIMARY URI: http://jbeckers.webhop.org/en/hints.html"
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:14
msgid ""
"DESCRIPTION: A freshly built LFS system is relatively small, but still, in "
"certain occasions, it can take up too much disk space. This hint provides "
"some easy and more advanced tips and tricks to strip down an LFS system, so "
"that it will fit on a smaller harddisk."
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:24
msgid ""
"PREREQUISITES: Since certain optimizations can only be done at build time, I "
"strongly advise you to read the entire hint before you start building your "
"LFS system, . This does not mean you can't use this hint to strip down an "
"existing LFS system, but there might be some difficulties.  Secondly I "
"assume that readers of this hint have some experience with LFS and with "
"Linux and its tools in general.  And of course, as you will know for sure: "
"make back-ups before you do anything potentially harmful to your system!"
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:26
msgid "HINT:"
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:33
#, no-wrap
msgid ""
"    Compile time optimizations:\n"
"    ===========================\n"
"Building up a small LFS system already starts at compile time. The compiler "
"and\n"
"linker have some features that allow them to create smaller "
"binaries/libraries.\n"
"To make use of these features, adjust your CFLAGS. During the LFS build, "
"this\n"
"should be done when setting up the environment and right after entering "
"chroot.\n"
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:43
#, no-wrap
msgid ""
"There are discussions about which CFLAGS to use. The truth is that no one "
"knows\n"
"exactly. On top of that, every system is different and requires different\n"
"optimizations. The best thing to do is to read up on compiler optimizations "
"and\n"
"decide for yourself. However, the most used and considered safe CFLAGS "
"are:\n"
" -Os, which tells the compiler to optimize for size,\n"
" -fomit-frame-pointer, which turns of frame pointers (a debugging "
"feature),\n"
" -march=<cpu-architecture>, which turns on cpu-specific optimizations,\n"
" -pipe, which tells gcc not to create temporary files but pipe data. Use "
"with\n"
"        caution, as it also makes gcc use more RAM.\n"
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:48
msgid ""
"Not only CFLAGS can reduce the size of binaries. There are other way to "
"accomplish the same result. Setting the environment variable CC to \"gcc "
"-s\" will cause gcc to strip binaries as they are created. Setting LDFLAGS "
"to \"-s\" will do the same thing for libraries."
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:53
#, no-wrap
msgid ""
"Notes: - A good starting point to learn about gcc and its options is this "
"hint:\n"
"         "
"http://www.linuxfromscratch.org/hints/downloads/files/optimization.txt\n"
"       - If you want the full reference, check out the online gcc docs:\n"
"         http://gcc.gnu.org/onlinedocs/\n"
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:56
msgid ""
"If you don't use NLS (a.k.a. locales), you can configure packages with "
"--disable-nls to conserve some room."
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:59
msgid ""
"For the three largest packages in the LFS book (gcc, glibc and the kernel)  "
"there are plenty of ways to slim them down."
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:63
#, no-wrap
msgid ""
"Some compilers in the GNU Compiler Collection are very rarely used. If you\n"
"think you don't need them, remove the sources before the build. e.g.:\n"
"    # rm -rf libjava libobjc gcc/ada gcc/f gcc/java gcc/objc\n"
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:71
#, no-wrap
msgid ""
"The other big package, glibc, is a bit harder to strip down. You can start "
"by\n"
"adding \"--enable-omitfp --enable-kernel=<kernel-version>\" as extra "
"configure\n"
"arguments. The former turns off frame pointers, while the latter disables "
"code\n"
"that is needed for compatibility with kernels older than your current "
"kernel.\n"
"After the build has finished, you can do:\n"
"    # rm libc_g.a\n"
"The library libc_g.a contains debugging symbols and can safely be removed.\n"
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:75
msgid ""
"Lastly, the kernel. The easiest way the create a small kernel is without any "
"doubt, by excluding as much as possible from your kernel's "
"configuration. Also, If you compile a keymap into the kernel, other keymaps "
"can be removed later on."
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:83
#, no-wrap
msgid ""
"    Run time optimizations:\n"
"    =======================\n"
"Stripping binaries and libraries can free a lot of space. Use the "
"instructions\n"
"provided in the LFS book to do this. To find out whether there are still\n"
"unstripped libraries or binaries, run the following command:\n"
"    # find / -exec file {} \\; | grep \"not stripped\"\n"
"These can be stripped as well.\n"
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:86
#, no-wrap
msgid ""
"Note: Do not strip any binary or library that's currently in use. It's "
"possible\n"
"      that the program using it will crash.\n"
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:90
msgid ""
"Compressing man and info pages is a second big win. For the most convenient "
"way of compressing man and info pages, see the compressdoc.sh script that "
"comes with the BLFS book."
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:93
msgid ""
"If you know all man and info pages by heart, you can remove them ;-). Other "
"kinds of documentation (licenses, READMEs, ...) can safely be removed as "
"well."
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:96
msgid ""
"If you have chosen to build all packages without support for locales, you "
"can remove everything in /usr/share/locale and /usr/lib/locale."
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:99
msgid ""
"If you have chosen to compile your keymap into the kernel, the same applies "
"for /usr/share/kbd."
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:102
msgid ""
"If you copy your timezone to /etc/localtime instead of making a symlink, all "
"of /usr/share/zoneinfo can be removed as well."
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:108
#, no-wrap
msgid ""
"    Extreme optimizations:\n"
"    ======================\n"
"As the title says, these are extreme optimizations that can easily break "
"your\n"
"system. They require extensive knowledge of the internals of a linux "
"system.\n"
"Use them at your own risk.\n"
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:111
#, no-wrap
msgid ""
"Note: It's a good idea to take back-ups of your system before you try any "
"of\n"
"      these optimizations.\n"
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:116
msgid ""
"Removing terminfo files that you don't use, can free up some space. For "
"instance, you could remove all the terminfo files except for linux and "
"xterm.  However, this requires knowledge about terminal types. If you do not "
"know what to keep and what to remove, leave the files alone."
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:121
msgid ""
"Secondly, almost all directories in /usr/share can be removed, even if you "
"use the programs that go with them. Take a look at the contents and decide "
"whether you want to take the risk of removing files that look "
"unimportant. Again, if you're not sure if you need the files or not, leave "
"them be."
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:128
msgid ""
"Next up is the hard part. Take a look at each binary installed in your "
"$PATH.  If you don't know what a binary does, then read the man page (if you "
"still have it installed ;-)), and decide if you need it or not. If you know "
"what it does, and you know that you don't need it, then remove it. There "
"will be some binaries that don't have man pages, don't offer any help, and "
"who's purpose is not obvious. Play it safe and leave it be in that case."
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:133
msgid ""
"It's not so easy removing stuff from /usr/lib, as it is not obvious what is "
"needed. It is safe to remove the debugging and profiling libraries (those "
"ending in _g.a or _p.a). They can be removed if you do not plan to debug or "
"profile code that uses them."
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:136
msgid ""
"That's it. If you've followed the instructions I provided, your system will "
"now be significantly smaller. Congratulations!"
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:139
msgid ""
"ACKNOWLEDGMENTS: Thanks to James Smaby, the author of the lowspace and "
"stripped-down hints."
msgstr ""

#. type: Plain text
#: origin/small-lfs.txt:146
msgid ""
"CHANGELOG: [2005-07-31] * Maintainership taken over.  * Merged the lowspace "
"and stripped-down hints into one * Various cleanups and updates * Converted "
"to new hint format.  * Published the hint on my website."
msgstr ""
