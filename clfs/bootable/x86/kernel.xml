<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
]>

<sect1 id="ch-bootable-kernel" role="wrap">
  <?dbhtml filename="kernel.html"?>

  <title>Linux-&linux-version2;</title>

  <indexterm zone="ch-bootable-kernel">
    <primary sortas="a-Linux">Linux</primary>
  </indexterm>

  <sect2 role="package"><title/>
    <para>Le paquet Linux contient le noyau Linux.</para>

  </sect2>

  <sect2 role="installation">
    <title>Installation du noyau</title>

    <para os="a">La construction du noyau implique quelques étapes &mdash; 
    la configuration, la compilation et l'installation. Lisez le fichier <filename>README</filename>
    dans l'arborescence des sources du noyau pour des méthodes alternatives de
    à celle utilisée par le livre pour configurer le noyau.</para>

    <para os="p1">Appliquez le dernier correctif de sous-niveau de Linux&nbsp;:</para>

<screen os="p2"><userinput>xzcat ../&linux-sublevel-patch; | patch -Np1 -i -</userinput></screen>

    <para os="b">Préparez la compilation en lançant la commande suivante&nbsp;:</para>

<screen os="c"><userinput>make mrproper</userinput></screen>

    <para os="d">Ceci garantit que l'arborescence du noyau est absolument propre. L'équipe du
    noyau recommande que cette commande soit exécutée avant chaque
    compilation du noyau. Ne pensez pas que l'arborescence des sources est propre après
    la décompression.</para>

    <note os="kc"><para>Un bon début pour paramétrer la
    configuration du noyau est de lancer <command>make defconfig</command>. Cela
    règlera la configuration de base correctement en prenant en compte votre
    architecture système.</para>

    <para>Assurez-vous de configurer les options suivantes comme indiqué, sans
    quoi le système pourrait ne pas marcher correctement, voire pas du tout.
    Reportez-vous à <filename>/usr/share/doc/systemd-&systemd-version;/README</filename>&nbsp;:</para>

    <screen role="nodump">General setup  ---&gt;
  [*] open by fhandle syscalls (CONFIG_FHANDLE)
  [ ] Auditing support (CONFIG_AUDIT)
  [*] Control Group support (CONFIG_CGROUPS)
Processor type and features  ---&gt;
  [*] Enable seccomp to safely compute untrusted bytecode (CONFIG_SECCOMP)
Networking support  ---&gt;
  Networking options  ---&gt;
    &lt;*&gt; The IPv6 protocol (CONFIG_IPV6)
Device Drivers  ---&gt;
  Generic Driver Options  ---&gt;
    ()  path to uevent helper (CONFIG_UEVENT_HELPER_PATH)
    [*] Maintain a devtmpfs filesystem to mount at /dev (CONFIG_DEVTMPFS)
    [ ] Fallback user-helper invocation for firmware loading (CONFIG_FW_LOADER_USER_HELPER)
File systems  ---&gt;
  [*] Inotify support for userspace (CONFIG_FSNOTIFY)
  &lt;*&gt; Kernel automounter version 4 support (also supports v3) (CONFIG_AUTOFS4_FS)
  Pseudo filesystems  ---&gt;
    [*] Tmpfs POSIX Access Control Lists (CONFIG_TMPFS_POSIX_ACL)
    [*] Tmpfs extended attributes (CONFIG_TMPFS_XATTR)
Firmware Drivers ---&gt;
  EFI (Extensible Firmware Interface) Support ---&gt;
    &lt;*&gt; EFI Variable Support via sysfs (CONFIG_EFI_VARS)
-*- Enable the block layer ---&gt; (CONFIG_BLOCK)
  Partition Types ---&gt;
    [*] Advanced partition selection (CONFIG_PARTITION_ADVANCED)
    [*]   EFI GUID Partition support (CONFIG_EFI_PARTITION)
Kernel Hacking ---&gt;
  [*] Collect scheduler debugging info (CONFIG_SCHED_DEBUG)
  [*] Collect scheduler statistics (CONFIG_SCHEDSTATS)</screen></note>

    <note os="kd"><para>Si "The IPv6 Protocol" n'est pas absolument nécessaire,
    il est fortement recommandé par les développeurs de Systemd. "EFI Variable support"
    et "EFI GUID Partition support" sont pour les systèmes UEFI. "Collect scheduler
    debugging info" et "Collect scheduler statistics" sont pour le démarrage
    avec systemd.</para></note>

    <para os="h">Configurez le noyau avec une interface en menus. CBLFS
    contient des informations sur les exigences de configuration particulières des paquets hors CLFS, sur <ulink
    url="&cblfs-root;"/>:</para>

<screen os="i"><userinput>make menuconfig</userinput></screen>

    <para os="j">Sinon, <command>make oldconfig</command> pourrait être plus
    adapté à certaines situations. Voir le fichier <filename>README</filename>
    pour plus d'informations.</para>

    <para os="k">Si vous le souhaitez, passez la configuration du noyau en copiant 
    le fichier de configuration du noyau, <filename>.config</filename>, du
    système hôte (s'il est disponible) dans le répertoire racine des sources 
    déballées du noyau. Toutefois, nous ne vous recommandons pas cette option.
    Il vaut souvent mieux explorer tous les menus de configuration et créer de zéro
    la configuration du noyau.</para>

    <para os="m">Compilez l'image et les modules du noyau&nbsp;:</para>

<screen os="n"><userinput>make</userinput></screen>

    <para os="o">Si vous utilisez les modules du noyau, il se peut que vous
    ayez besoin d'un fichier de configuration <filename>/etc/modprobe.d</filename>.
    Les informations sur les modules et la configuration du noyau se trouvent
    dans la documentation du noyau, dans le répertoire <filename
    class="directory">Documentation</filename> de l'arborescence des
    sources du noyau. En outre, <filename>modprobe.d(5)</filename> peut être
    intéressant.</para>

    <para os="s">Installez les modules, si la configuration du noyau en utilise&nbsp;:</para>

<screen os="t"><userinput>make modules_install</userinput></screen>

    <para os="s2">Installez le firmware si la configuration du noyau en utilise 
    un&nbsp;:</para>

<screen os="t2"><userinput>make firmware_install</userinput></screen>

    <para os="u">Après que la compilation est finie, des étapes supplémentaires
    sont nécessaire pour achever l'installation. Il faut copier certains fichiers
    dans le répertoire <filename class="directory">/tools/boot</filename>.</para>

    <para os="v">Lancez la commande suivante pour installer le noyau&nbsp;:</para>

<screen><userinput>cp -v arch/i386/boot/bzImage /boot/vmlinuz-clfs-&linux-version2;</userinput></screen>

    <para os="w"><filename>System.map</filename> est un fichier de symbole
    pour le noyau. Il pose les points d'entrée des fonctions de l'API du noyau
    et les adresses des structures de données du noyau pour la version du
    noyau. Lancez la commande suivante pour installer le fichier de plan&nbsp;:</para>

<screen os="w1"><userinput>cp -v System.map /boot/System.map-&linux-version2;</userinput></screen>

    <para os="x">The kernel configuration file <filename>.config</filename>
    produced by the <command>make menuconfig</command> step above contains
    all the configuration selections for the kernel that was just compiled.
    It is a good idea to keep this file for future reference:</para>

<screen os="x1"><userinput>cp -v .config /boot/config-&linux-version2;</userinput></screen>

    <para os="y">Il est important de remarquer que les fichiers du répertoire des
    sources du noyau n'appartiennent pas à <systemitem class="username">root</systemitem>.
    A chaque fois qu'un paquet est déballé par l'utilisateur <systemitem
    class="username">root</systemitem> (comme on le fait dans l'environnement
    de construction du système final), les fichiers prennent l'ID de l'utilisateur
    et du groupe tant qu'ils seront sur l'ordinateur de l'empaqueteur. Ce
    n'est pas un problème en général pour installer d'autres paquets car 
    l'arborescence des sources est supprimée après l'installation. Cependant,
    l'arborescence des sources de Linux est longtemps conservée. C'est pourquoi
    il y a des chances qu'un ID utilisateur utilisé par l'empaqueteur soit
    affecté à quelqu'un sur la machine. Cette personne aurait alors un accès en
écriture aux sources du noyau.</para>

    <para os="y1">Si vous allez garder l'arborescence des sources du noyau,
    lancez <command>chown -R 0:0</command> dans le répertoire <filename
    class="directory">linux-&linux-version;</filename> pour garantir que tous
    les fichiers appartiennent à l'utilisateur <systemitem
    class="username">root</systemitem>.</para>

    <warning os="z">
      <para>Certaines documentations du noyau recommandent de créer un lien
      symbolique de
      <filename class="symlink">/usr/src/linux</filename> vers le répertoire des
      sources du noyau. Il est spécifique aux noyaux antérieurs à la série 2.6
      et <emphasis>vous ne devez pas</emphasis> le créer sur un système CLFS
      car cela peut poser des problèmes aux paquets souhaitant se construire
      une fois que votre système CLFS de base est terminé.</para>

      <para>De plus, le répertoire <filename
      class="directory">include</filename> du système devrait 
      <emphasis>toujours</emphasis> être celui contre lequel Glibc a été
      compilé et <emphasis>jamais</emphasis> remplacé pao les en-têtes d'une
      version différente du noyau.</para>
    </warning>

  </sect2>

  <sect2 id="contents-kernel" role="content">
    <title>Contenu de Linux</title>

    <segmentedlist>
      <segtitle>Fichiers installés</segtitle>
      <segtitle>Répertoire installé</segtitle>

      <seglistitem>
        <seg>config-[linux-version], clfskernel-[linux-version],
        et System.map-[linux-version]</seg>
        <seg>/lib/modules</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="config">
        <term><filename>config-[linux-version]</filename></term>
        <listitem>
          <para>Contient tous les choix de configuration du noyau</para>
          <indexterm zone="ch-bootable-kernel config">
            <primary sortas="e-/boot/config">/boot/config-[linux-version]</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="clfskernel">
        <term><filename>clfskernel-[linux-version]</filename></term>
        <listitem>
          <para>Moteur du système Linux. Quand vous allumez l'ordinateur, le
          noyau est la première partie du système d'exploitation chargée. 
          Il détecte et initialise tous les composants matériels de l'ordinateur,
          ce qui rend disponibles les composants sous forme d'arborescence de
          fichiers au niveau logiciel et passe un processeur en 
          machine multitâches capable de lancer des scores de programmes
          qui se ressemblent et en même temps.</para>
          <indexterm zone="ch-bootable-kernel clfskernel">
            <primary sortas="b-clfskernel">clfskernel-[linux-version]</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="System.map">
        <term><filename>System.map-[linux-version]</filename></term>
        <listitem>
          <para>Une liste des adresses et des symboles&nbsp;; il pose les points
          d'entrée et les adresses des structures de données du noyau</para>
          <indexterm zone="ch-bootable-kernel System.map">
            <primary sortas="e-/boot/System.map">/boot/System.map-[linux-version]</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
