<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
]>

<sect1 id="pre-hostreqs">
  <?dbhtml filename="hostreqs.html"?>

  <title>Prérequis du système hôte</title>

    <para>Vous devriez pouvoir construire un système CLFS à partir de presque tout système 
    d'exploitation de type Unix. Votre système hôte 
    devrait avoir les logiciels suivants avec la version minimum indiquée. Remarquez aussi que beaucoup de distributions mettront les en-têtes 
    des logiciels dans des paquets séparés, ayant souvent la forme <quote>[package-name]-devel</quote> ou
    <quote>[package-name]-dev</quote>. Assurez-vous de les installer si votre distribution les fournit.</para>

  <itemizedlist spacing="compact">

    <listitem>
      <para><emphasis role="strong">Bash-2.05a</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Binutils-2.12</emphasis> (Les versions supérieures à &binutils-version; ne sont pas recommandées car 
      elles n'ont pas été testées)</para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Bison-1.875</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Bzip2-1.0.2</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Coreutils-5.0</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Diffutils-2.8</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Findutils-4.1.20</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Gawk-3.1.5</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">GCC-4.1.2</emphasis> et le compilateur C++,
      <command>g++</command> (les versions supérieures à &gcc-version; ne sont pas recommandées car 
      elles n'ont pas été testées)</para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Glibc-2.2.5</emphasis> (Les versions supérieures à &eglibc-version; ne sont pas recommandées car 
      elles n'ont pas été testées)</para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Grep-2.5</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Gzip-1.2.4</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Linux 2.6.32 (construit avec GCC 4.1.2 ou
      supérieur</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Make-3.80</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Ncurses-5.3</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Patch-2.5.4</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Sed-3.0.2</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Tar-1.22</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">Texinfo-4.4</emphasis></para>
    </listitem>

    <listitem>
      <para><emphasis role="strong">XZ-Utils-4.999.8beta</emphasis></para>
    </listitem>

  </itemizedlist>

 
  <para>Pour voir si votre système hôte fournit des versions appropriées,
  créez et lancez le script suivant. Lisez attentivement la sortie pour voir
  les erreurs et vous assurer d'installer tous les paquets indiqués comme non 
  trouvés&nbsp;:</para>

<screen role="nodump"><userinput>cat &gt; version-check.sh &lt;&lt; "EOF"
<literal>#!/bin/bash

# Simple script to list version numbers of critical development tools

bash --version | head -n1 | cut -d" " -f2-4
echo -n "Binutils: "; ld --version | head -n1 | cut -d" " -f3-
bison --version | head -n1
bzip2 --version 2&gt;&amp;1 &lt; /dev/null | head -n1 | cut -d" " -f1,6-
echo -n "Coreutils: "; chown --version | head -n1 | cut -d")" -f2
diff --version | head -n1
find --version | head -n1
gawk --version | head -n1
gcc --version | head -n1
g++ --version | head -n1
ldd $(which ${SHELL}) | grep libc.so | cut -d ' ' -f 3 | ${SHELL} | head -n 1 | cut -d ' ' -f 1-7
grep --version | head -n1
gzip --version | head -n1
uname -s -r
make --version | head -n1
tic -V
patch --version | head -n1
sed --version | head -n1
tar --version | head -n1
makeinfo --version | head -n1
xz --version | head -n1
echo 'main(){}' | gcc -v -o /dev/null -x c - > dummy.log 2>&amp;1
if ! grep -q ' error' dummy.log; then
  echo "Compilation réussie" &amp;&amp; rm dummy.log
else
  echo 1>&amp;2  "Compilation ÉCHOUÉE - installez peut-être plus de paquets de développement \
  Si vous voulez vous pouvez lire le journal dummy pour plus de détails."
fi</literal>
EOF

bash version-check.sh 2>errors.log &amp;&amp;
[ -s errors.log ] &amp;&amp; echo -e "\nLes paquets suivants sont introuvables :\n$(cat errors.log)"</userinput></screen>

</sect1>
