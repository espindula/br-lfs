diff -ru /home/jp/a/BOOK/final-system/common/temp-perl.xml BOOK/final-system/common/temp-perl.xml
--- /home/jp/a/BOOK/final-system/common/temp-perl.xml	2014-05-11 16:24:52.646516678 +0200
+++ BOOK/final-system/common/temp-perl.xml	2014-10-03 20:44:43.916339261 +0200
@@ -22,10 +22,14 @@
   <sect2 role="installation">
     <title>Installation of Perl</title>
 
-    <para os="a">First adapt some hard-wired paths to the C library by applying
-    the following patch:</para>
-
-<screen os="b"><userinput>patch -Np1 -i ../&perl-libc-patch;</userinput></screen>
+    <note os="a">
+      <para>In this section, we will add Perl to the temporary system in
+      <filename class="directory">/tools</filename>. This package installation
+      should technically be part of
+      <xref linkend="chapter-temp-system"/>, but Perl has often had problems
+      with cross-compiling, so we will compile and install it while in the
+      final build environment.</para>
+    </note>
 
     <para os="s1">Change a hardcoded path from
     <filename class="directory">/usr/include</filename> to
diff -ru /home/jp/a/BOOK/final-system/common/testsuitesagain.xml BOOK/final-system/common/testsuitesagain.xml
--- /home/jp/a/BOOK/final-system/common/testsuitesagain.xml	2014-05-11 16:24:52.646516678 +0200
+++ BOOK/final-system/common/testsuitesagain.xml	2014-10-03 20:44:43.916339261 +0200
@@ -11,9 +11,16 @@
   <title>About Test Suites, Again</title>
 
   <para>In the final-system build, you are no longer cross-compiling so it
-  is possible to run package testsuites. Some test suites are more important
-  than others. For example,  the test suites for the core toolchain
-  packages&mdash;GCC, Binutils, and Glibc&mdash;are of the utmost
+  is possible to run package test suites. Running the test suite for a
+  newly built package is a good idea because it can provide a <quote>sanity
+  check</quote> indicating that everything compiled correctly. A test suite
+  that passes its set of checks usually proves that the package is
+  functioning as the developer intended. It does not, however, guarantee
+  that the package is totally bug free.</para>
+
+  <para>Some test suites are more important than others. For example, the test
+  suites for the core toolchain packages&mdash;GCC, Binutils,
+  and Glibc&mdash;are of the utmost
   importance due to their central role in a properly functioning system.
   The test suites for GCC and Glibc can take a very long time to complete,
   especially on slower hardware, but are strongly recommended.</para>
diff -ru /home/jp/a/BOOK/final-system/common/texinfo.xml BOOK/final-system/common/texinfo.xml
--- /home/jp/a/BOOK/final-system/common/texinfo.xml	2014-05-11 16:24:52.646516678 +0200
+++ BOOK/final-system/common/texinfo.xml	2014-10-03 20:44:43.916339261 +0200
@@ -41,21 +41,6 @@
 
 <screen os="g"><userinput>make install</userinput></screen>
 
-    <para os="h">The Info documentation system uses a plain text file to hold
-    its list of menu entries. The file is located at
-    <filename>/usr/share/info/dir</filename>. Unfortunately, due to occasional
-    problems in the Makefiles of various packages, it can sometimes get out of
-    sync with the info pages installed on the system. If the
-    <filename>/usr/share/info/dir</filename> file ever needs to be recreated,
-    the following optional commands will accomplish the task:</para>
-
-<screen os="i" role="nodump"><userinput>pushd /usr/share/info
-rm dir
-for f in *
-do install-info $f dir 2&gt;/dev/null
-done
-popd</userinput></screen>
-
   </sect2>
 
   <sect2 id="contents-texinfo" role="content">
diff -ru /home/jp/a/BOOK/final-system/common/util-linux.xml BOOK/final-system/common/util-linux.xml
--- /home/jp/a/BOOK/final-system/common/util-linux.xml	2014-05-11 16:24:52.646516678 +0200
+++ BOOK/final-system/common/util-linux.xml	2014-10-03 20:44:43.916339261 +0200
@@ -41,9 +41,16 @@
   <sect2 role="installation">
     <title>Installation of Util-linux</title>
 
+    <note os="n">
+      <para><command>findmnt</command> and <command>lsblk</command> can
+      utilize <filename class="libraryfile">libudev</filename> for WWN and serial
+      number information. If this is desired, rebuild Util-linux after
+      <xref linkend="ch-system-systemd"/></para>
+    </note>
+
     <para os="a">Prepare Util-linux for compilation:</para>
 
-<screen os="b"><userinput>./configure --enable-write</userinput></screen>
+<screen os="b"><userinput>./configure --enable-write --docdir=/usr/share/doc/util-linux-&util-linux-version;</userinput></screen>
 
     <variablelist os="c">
       <title>The meaning of the configure options:</title>
@@ -62,27 +69,15 @@
 
 <screen os="e"><userinput>make</userinput></screen>
 
-    <para os="dummy1">Create two <systemitem class="groupname">dummy</systemitem> groups and a <systemitem class="username">dummy</systemitem> user to be used during Util-linux and Coreutils test suites:</para>
-
-<screen os="dummy2"><userinput remap="test">echo "dummy1:x:1000:" &gt;&gt; /etc/group
-echo "dummy2:x:1001:dummy" &gt;&gt; /etc/group
-echo "dummy:x:1000:1000::/root:/bin/bash" &gt;&gt; /etc/passwd</userinput></screen>
-
     <para os="f">To test the results, issue:</para>
 
-<screen os="f2"><userinput remap="test">chown -Rv dummy . &amp;&amp;
-su dummy -s /bin/bash -c "PATH=$PATH make -k check"</userinput></screen>
+<screen os="f2"><userinput remap="test">chown -Rv nobody . &amp;&amp;
+su nobody -s /bin/bash -c "PATH=$PATH make -k check"</userinput></screen>
 
     <para os="g">Install the package:</para>
 
 <screen os="h"><userinput>make install</userinput></screen>
 
-    <para os="i">Move the <command>logger</command> binary to
-    <filename class="directory">/bin</filename> as it is needed by the
-    CLFS-Bootscripts package:</para>
-
-<screen os="j"><userinput>mv -v /usr/bin/logger /bin</userinput></screen>
-
   </sect2>
 
   <sect2 id="contents-util-linux" role="content">
@@ -105,10 +100,12 @@
         raw, readprofile, rename, renice, resizepart, rev, rtcwake, script,
         scriptreplay, setarch, setsid, setterm, sfdisk, sulogin, swaplabel,
         swapoff, swapon, switch_root, tailf, taskset, ul, umount, unshare,
-        utmpdump, uuidd, uuidgen, wall, wdctl, whereis, wipefs, and write</seg>
-        <seg>libblkid.[a,so], libmount.[a,so], and libuuid.[a,so]</seg>
+        utmpdump, uuidd, uuidgen, wall, wdctl, whereis, wipefs, write</seg>
+        <seg>libblkid.[a,so], libmount.[a,so], libuuid.[a,so]</seg>
         <seg>/usr/include/blkid, /usr/include/libmount, /usr/include/uuid,
-        /usr/share/doc/util-linux/getopt, /var/lib/hwclock</seg>
+        /usr/share/bash-completion,
+        /usr/share/doc/util-linux-&util-linux-version;/getopt,
+        /var/lib/hwclock</seg>
       </seglistitem>
     </segmentedlist>
 
@@ -272,17 +269,6 @@
           </indexterm>
         </listitem>
       </varlistentry>
-
-      <varlistentry id="ddate">
-        <term><command>ddate</command></term>
-        <listitem>
-          <para>Gives the Discordian date or converts the given Gregorian date
-          to a Discordian one</para>
-          <indexterm zone="ch-system-util-linux ddate">
-            <primary sortas="b-ddate">ddate</primary>
-          </indexterm>
-        </listitem>
-      </varlistentry>
 
       <varlistentry id="delpart">
         <term><command>delpart</command></term>
diff -ru /home/jp/a/BOOK/final-system/common/vim.xml BOOK/final-system/common/vim.xml
--- /home/jp/a/BOOK/final-system/common/vim.xml	2014-05-11 16:24:52.646516678 +0200
+++ BOOK/final-system/common/vim.xml	2014-10-03 20:44:43.916339261 +0200
@@ -46,25 +46,7 @@
 
     <para os="d">Prepare Vim for compilation:</para>
 
-<screen os="e"><userinput>./configure \
-    --prefix=/usr --enable-multibyte</userinput></screen>
-
-    <variablelist os="f">
-      <title>The meaning of the configure options:</title>
-
-      <varlistentry>
-        <term><parameter>--enable-multibyte</parameter></term>
-        <listitem>
-          <para>This optional but highly recommended switch enables support
-          for editing files in multibyte character encodings. This is needed
-          if using a locale with a multibyte character set. This switch is
-          also helpful to be able to edit text files initially created in
-          Linux distributions like Fedora that use UTF-8 as a default
-          character set.</para>
-        </listitem>
-      </varlistentry>
-
-    </variablelist>
+<screen os="e"><userinput>./configure --prefix=/usr</userinput></screen>
 
     <para os="g">Compile the package:</para>
 
diff -ru /home/jp/a/BOOK/cross-tools/common/file.xml BOOK/cross-tools/common/file.xml
--- /home/jp/a/BOOK/cross-tools/common/file.xml	2014-05-11 16:24:52.642516678 +0200
+++ BOOK/cross-tools/common/file.xml	2014-10-03 20:44:43.904339261 +0200
@@ -12,7 +12,7 @@
 
   <indexterm zone="ch-cross-tools-file">
     <primary sortas="a-File">File</primary>
-    <secondary>cross-tools</secondary>
+    <secondary>cross tools</secondary>
   </indexterm>
 
   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
@@ -22,6 +22,17 @@
   <sect2 role="installation">
     <title>Installation of File</title>
 
+    <para>One method that <command>file</command> uses for identifying a given
+    file is to run <quote>magic tests</quote>, where it compares the file's
+    contents to data in <quote>magic files</quote>, which contain information
+    about a number of standard file formats. When File is compiled, it will run
+    <command>file -C</command> to combine the information from the
+    magic files in its source tree into a single <filename>magic.mgc</filename>
+    file, which it will use after it is installed. When we build File in 
+    <xref linkend="chapter-temp-system"/>, it will be cross-compiled, so it
+    will not be able to run the <command>file</command> program that it just
+    built, which means that we need one that will run on the host system.</para>
+
     <para>Prepare File for compilation:</para>
 
 <screen><userinput>./configure --prefix=/cross-tools --disable-static</userinput></screen>
diff -ru /home/jp/a/BOOK/final-system/common/xz.xml BOOK/final-system/common/xz.xml
--- /home/jp/a/BOOK/final-system/common/xz.xml	2014-05-11 16:24:52.646516678 +0200
+++ BOOK/final-system/common/xz.xml	2014-10-03 20:44:43.916339261 +0200
@@ -8,28 +8,28 @@
 <sect1 id="ch-system-xz" role="wrap">
   <?dbhtml filename="xz.html"?>
 
-  <title>XZ-Utils-&xz-version;</title>
+  <title>XZ Utils-&xz-version;</title>
 
   <indexterm zone="ch-system-xz">
-    <primary sortas="a-XZ-Utils">XZ-Utils</primary>
+    <primary sortas="a-XZ Utils">XZ Utils</primary>
   </indexterm>
 
   <sect2 role="package">
     <title/>
 
-    <para>The XZ-Utils package contains programs for compressing and
-    decompressing files. Compressing text files with <command>XZ-Utils</command>
+    <para>The XZ Utils package contains programs for compressing and
+    decompressing files. Compressing text files with <command>XZ Utils</command>
     yields a much better compression percentage than with the traditional
     <command>gzip</command>.</para>
 
   </sect2>
 
   <sect2 role="installation">
-    <title>Installation of XZ-Utils</title>
+    <title>Installation of XZ Utils</title>
 
-    <para os="a">Prepare XZ-Utils for compilation:</para>
+    <para os="a">Prepare XZ Utils for compilation:</para>
 
-<screen os="b"><userinput>./configure --prefix=/usr</userinput></screen>
+<screen os="b"><userinput>./configure --prefix=/usr --docdir=/usr/share/doc/xz-&xz-version;</userinput></screen>
 
     <para os="c">Compile the package:</para>
 
@@ -52,12 +52,12 @@
     location, and recreate the symlink pointing to it:</para>
 
 <screen os="k"><userinput>mv -v /usr/lib/liblzma.so.* /lib
-ln -svf ../../lib/liblzma.so.&xz-version; /usr/lib/liblzma.so</userinput></screen>
+ln -sfv ../../lib/$(readlink /usr/lib/liblzma.so) /usr/lib/liblzma.so</userinput></screen>
 
   </sect2>
 
   <sect2 id="contents-xz" role="content">
-    <title>Contents of XZ-Utils</title>
+    <title>Contents of XZ Utils</title>
 
     <segmentedlist>
       <segtitle>Installed programs</segtitle>
@@ -71,9 +71,9 @@
         xzegrep (link to xzgrep), xzfgrep (link to xzgrep), xzgrep, xzless,
         and xzmore</seg>
         <seg>liblzma.[a,so]</seg>
-        <seg>/usr/include/lzma, /usr/share/doc/xz</seg>
+        <seg>/usr/include/lzma, /usr/share/doc/xz-&xz-version;</seg>
       </seglistitem>
     </segmentedlist>
 
diff -ru /home/jp/a/BOOK/final-system/common/zlib.xml BOOK/final-system/common/zlib.xml
--- /home/jp/a/BOOK/final-system/common/zlib.xml	2014-05-11 16:24:52.646516678 +0200
+++ BOOK/final-system/common/zlib.xml	2014-10-03 20:44:43.916339261 +0200
@@ -38,7 +38,7 @@
 
     <para os="e">To test the results, issue:</para>
 
-<screen os="e2" ><userinput remap="test">make check</userinput></screen>
+<screen os="e2"><userinput remap="test">make check</userinput></screen>
 
     <para os="f">Install the package:</para>
 
@@ -46,12 +46,17 @@
 
     <para os="h">The previous command installed two <filename
     class="extension">.so</filename> files into <filename
-    class="directory">/usr/lib</filename>. We will move it into
-    <filename class="directory">/lib</filename> and then relink it
-    to <filename class="directory">/usr/lib</filename>:</para>
+    class="directory">/usr/lib</filename>. We will move them into
+    <filename class="directory">/lib</filename> and then recreate a link
+    in <filename class="directory">/usr/lib</filename>:</para>
 
 <screen os="i"><userinput>mv -v /usr/lib/libz.so.* /lib
-ln -svf ../../lib/libz.so.1 /usr/lib/libz.so</userinput></screen>
+ln -sfv ../../lib/$(readlink /usr/lib/libz.so) /usr/lib/libz.so</userinput></screen>
+
+    <para os="j">Install the documentation:</para>
+
+<screen os="k"><userinput>mkdir -pv /usr/share/doc/zlib-&zlib-version;
+cp -rv doc/* examples /usr/share/doc/zlib-&zlib-version;</userinput></screen>
 
   </sect2>
 
@@ -60,9 +65,11 @@
 
     <segmentedlist>
       <segtitle>Installed libraries</segtitle>
+      <segtitle>Installed directory</segtitle>
 
       <seglistitem>
         <seg>libz.[a,so]</seg>
+        <seg>/usr/share/doc/zlib-&zlib-version;</seg>
       </seglistitem>
     </segmentedlist>
 
diff -ru /home/jp/a/BOOK/cross-tools/common/gcc-final.xml BOOK/cross-tools/common/gcc-final.xml
--- /home/jp/a/BOOK/cross-tools/common/gcc-final.xml	2014-05-11 16:24:52.642516678 +0200
+++ BOOK/cross-tools/common/gcc-final.xml	2014-10-03 20:44:43.904339261 +0200
@@ -59,17 +59,15 @@
     xpointer="xpointer(//*[@os='h'])"/>
 
 <screen os="bf"><userinput>AR=ar LDFLAGS="-Wl,-rpath,/cross-tools/lib" \
-  ../gcc-&gcc-version;/configure --prefix=/cross-tools \
-  --build=${CLFS_HOST} --target=${CLFS_TARGET} --host=${CLFS_HOST} \
-  --with-sysroot=${CLFS} --with-local-prefix=/tools \
-  --with-native-system-header-dir=/tools/include --disable-nls \
-  --enable-shared --disable-static --enable-languages=c,c++ \
-  --enable-__cxa_atexit --enable-c99 --enable-long-long --enable-threads=posix \
-  --disable-multilib --with-mpc=/cross-tools --with-mpfr=/cross-tools \
-  --with-gmp=/cross-tools --with-cloog=/cross-tools \
-  --enable-cloog-backend=isl --with-isl=/cross-tools \
-  --disable-isl-version-check --with-system-zlib --enable-checking=release \
-  --enable-libstdcxx-time</userinput></screen>
+    ../gcc-&gcc-version;/configure --prefix=/cross-tools \
+    --build=${CLFS_HOST} --target=${CLFS_TARGET} --host=${CLFS_HOST} \
+    --with-sysroot=${CLFS} --with-local-prefix=/tools \
+    --with-native-system-header-dir=/tools/include --disable-nls \
+    --disable-static --enable-languages=c,c++ --enable-__cxa_atexit \
+    --enable-threads=posix --disable-multilib \
+    --with-mpc=/cross-tools --with-mpfr=/cross-tools --with-gmp=/cross-tools \
+    --with-cloog=/cross-tools --with-isl=/cross-tools --with-system-zlib \
+    --enable-checking=release --enable-libstdcxx-time</userinput></screen>
 
     <variablelist os="bg">
       <title>The meaning of the new configure options:</title>
@@ -93,23 +91,18 @@
       </varlistentry>
 
       <varlistentry os="bg3">
-        <term><parameter>--enable-c99</parameter></term>
+        <term><parameter>--enable-threads=posix</parameter></term>
         <listitem>
-          <para>Enable C99 support for C programs.</para>
+          <para>This enables C++ exception handling for multi-threaded code.</para>
         </listitem>
       </varlistentry>
 
       <varlistentry os="bg4">
-        <term><parameter>--enable-long-long</parameter></term>
-        <listitem>
-          <para>Enables long long support in the compiler.</para>
-        </listitem>
-      </varlistentry>
-
-      <varlistentry os="bg5">
-        <term><parameter>--enable-threads=posix</parameter></term>
+        <term><parameter>--enable-libstdcxx-time</parameter></term>
         <listitem>
-          <para>This enables C++ exception handling for multi-threaded code.</para>
+          <para>This enables link-time checks for the availability of
+          clock_gettime clocks, and nanosleep and sched_yield functions, in the
+          C library.</para>
         </listitem>
       </varlistentry>
 
