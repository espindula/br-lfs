# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2017-11-28 11:00+0000\n"
"PO-Revision-Date: 2017-07-19 12:14+0000\n"
"Last-Translator: roptat <roptat@lepiller.eu>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Generator: Pootle 2.8\n"
"X-POOTLE-MTIME: 1500466446.772034\n"

#. type: Content of: <sect1><title>
#: clfs-en/BOOK/final-system/multilib/multiarch_wrapper.xml:11
msgid "Creating a Multiarch Wrapper"
msgstr ""
"Création d'un programme enveloppe multi-architecture («&nbsp;Multiarch "
"Wrapper&nbsp;»)"

#. type: Content of: <sect1><indexterm><primary>
#: clfs-en/BOOK/final-system/multilib/multiarch_wrapper.xml:14
msgid "Multiarch Wrapper"
msgstr "Multiarch Wrapper"

#. type: Content of: <sect1><sect2><para>
#: clfs-en/BOOK/final-system/multilib/multiarch_wrapper.xml:20
msgid ""
"The Multiarch Wrapper is used to wrap certain binaries that have hardcoded "
"paths to libraries or are architecture specific."
msgstr ""
"Le programme envoloppe multi-architecture, ou «&nbsp;Multiarch "
"Wrapper&nbsp;», sert à envelopper certains binaires contenant en dur les "
"chemins vers leurs bibliothèques ou bien qui sont spécifiques à certaines "
"architectures.."

#. type: Content of: <sect1><sect2><title>
#: clfs-en/BOOK/final-system/multilib/multiarch_wrapper.xml:26
msgid "Installation of The Multiarch Wrapper"
msgstr "Installation du programme enveloppe multi-architecture"

#. type: Content of: <sect1><sect2><para>
#: clfs-en/BOOK/final-system/multilib/multiarch_wrapper.xml:28
msgid "Create the source file:"
msgstr "Créez le fichier source&nbsp;:"

#. type: Content of: <sect1><sect2><screen>
#: clfs-en/BOOK/final-system/multilib/multiarch_wrapper.xml:30
#, no-wrap
msgid ""
"<userinput>cat &gt; multiarch_wrapper.c &lt;&lt; \"EOF\"\n"
"#define _GNU_SOURCE\n"
"\n"
"#include &lt;errno.h&gt;\n"
"#include &lt;stdio.h&gt;\n"
"#include &lt;stdlib.h&gt;\n"
"#include &lt;sys/types.h&gt;\n"
"#include &lt;sys/wait.h&gt;\n"
"#include &lt;unistd.h&gt;\n"
"\n"
"#ifndef DEF_SUFFIX\n"
"#  define DEF_SUFFIX \"64\"\n"
"#endif\n"
"\n"
"int main(int argc, char **argv)\n"
"{\n"
"  char *filename;\n"
"  char *suffix;\n"
"\n"
"  if(!(suffix = getenv(\"USE_ARCH\")))\n"
"    if(!(suffix = getenv(\"BUILDENV\")))\n"
"      suffix = DEF_SUFFIX;\n"
"\n"
"  if (asprintf(&amp;filename, \"%s-%s\", argv[0], suffix) &lt; 0) {\n"
"    perror(argv[0]);\n"
"    return -1;\n"
"  }\n"
"\n"
"  int status = EXIT_FAILURE;\n"
"  pid_t pid = fork();\n"
"\n"
"  if (pid == 0) {\n"
"    execvp(filename, argv);\n"
"    perror(filename);\n"
"  } else if (pid &lt; 0) {\n"
"    perror(argv[0]);\n"
"  } else {\n"
"    if (waitpid(pid, &amp;status, 0) != pid) {\n"
"      status = EXIT_FAILURE;\n"
"      perror(argv[0]);\n"
"    } else {\n"
"      status = WEXITSTATUS(status);\n"
"    }\n"
"  }\n"
"\n"
"  free(filename);\n"
"\n"
"  return status;\n"
"}\n"
"\n"
"EOF</userinput>"
msgstr ""
"<userinput>cat &gt; multiarch_wrapper.c &lt;&lt; \"EOF\"\n"
"#define _GNU_SOURCE\n"
"\n"
"#include &lt;errno.h&gt;\n"
"#include &lt;stdio.h&gt;\n"
"#include &lt;stdlib.h&gt;\n"
"#include &lt;sys/types.h&gt;\n"
"#include &lt;sys/wait.h&gt;\n"
"#include &lt;unistd.h&gt;\n"
"\n"
"#ifndef DEF_SUFFIX\n"
"#  define DEF_SUFFIX \"64\"\n"
"#endif\n"
"\n"
"int main(int argc, char **argv)\n"
"{\n"
"  char *filename;\n"
"  char *suffix;\n"
"\n"
"  if(!(suffix = getenv(\"USE_ARCH\")))\n"
"    if(!(suffix = getenv(\"BUILDENV\")))\n"
"      suffix = DEF_SUFFIX;\n"
"\n"
"  if (asprintf(&amp;filename, \"%s-%s\", argv[0], suffix) &lt; 0) {\n"
"    perror(argv[0]);\n"
"    return -1;\n"
"  }\n"
"\n"
"  int status = EXIT_FAILURE;\n"
"  pid_t pid = fork();\n"
"\n"
"  if (pid == 0) {\n"
"    execvp(filename, argv);\n"
"    perror(filename);\n"
"  } else if (pid &lt; 0) {\n"
"    perror(argv[0]);\n"
"  } else {\n"
"    if (waitpid(pid, &amp;status, 0) != pid) {\n"
"      status = EXIT_FAILURE;\n"
"      perror(argv[0]);\n"
"    } else {\n"
"      status = WEXITSTATUS(status);\n"
"    }\n"
"  }\n"
"\n"
"  free(filename);\n"
"\n"
"  return status;\n"
"}\n"
"\n"
"EOF</userinput>"

#. type: Content of: <sect1><sect2><para>
#: clfs-en/BOOK/final-system/multilib/multiarch_wrapper.xml:82
msgid "Compile and Install the Multiarch Wrapper:"
msgstr "Compilez et installez le «&nbsp;Multiarch Wrapper&nbsp;»&nbsp;:"

#. type: Content of: <sect1><sect2><screen>
#: clfs-en/BOOK/final-system/multilib/multiarch_wrapper.xml:84
#, no-wrap
msgid "<userinput>gcc ${BUILD64} multiarch_wrapper.c -o /usr/bin/multiarch_wrapper</userinput>"
msgstr "<userinput>gcc ${BUILD64} multiarch_wrapper.c -o /usr/bin/multiarch_wrapper</userinput>"

#. type: Content of: <sect1><sect2><para>
#: clfs-en/BOOK/final-system/multilib/multiarch_wrapper.xml:86
msgid ""
"This multiarch wrapper is going to be used later on in the book with Perl. "
"It will also be very useful outside of the base CLFS system."
msgstr ""
"Ce programme sera utilisé plus tard dans le livre avec Perl. Il sera "
"également très utile hors du système CLFS de base."

#. type: Content of: <sect1><sect2><para>
#: clfs-en/BOOK/final-system/multilib/multiarch_wrapper.xml:89
msgid "Create a testcase:"
msgstr "Faisons un test&nbsp;:"

#. type: Content of: <sect1><sect2><screen>
#: clfs-en/BOOK/final-system/multilib/multiarch_wrapper.xml:91
#, no-wrap
msgid ""
"<userinput>echo 'echo \"32bit Version\"' &gt; test-32\n"
"echo 'echo \"64bit Version\"' &gt; test-64\n"
"chmod -v 755 test-32 test-64\n"
"ln -sv /usr/bin/multiarch_wrapper test</userinput>"
msgstr ""
"<userinput>echo 'echo \"32bit Version\"' &gt; test-32\n"
"echo 'echo \"64bit Version\"' &gt; test-64\n"
"chmod -v 755 test-32 test-64\n"
"ln -sv /usr/bin/multiarch_wrapper test</userinput>"

#. type: Content of: <sect1><sect2><para>
#: clfs-en/BOOK/final-system/multilib/multiarch_wrapper.xml:96
msgid "Test the wrapper:"
msgstr "Testons le programme enveloppe&nbsp;:"

#. type: Content of: <sect1><sect2><screen>
#: clfs-en/BOOK/final-system/multilib/multiarch_wrapper.xml:98
#, no-wrap
msgid ""
"<userinput>USE_ARCH=32 ./test\n"
"USE_ARCH=64 ./test</userinput>"
msgstr ""
"<userinput>USE_ARCH=32 ./test\n"
"USE_ARCH=64 ./test</userinput>"

#. type: Content of: <sect1><sect2><para>
#: clfs-en/BOOK/final-system/multilib/multiarch_wrapper.xml:101
msgid "The output of the above command should be:"
msgstr "Le résultat de ces commandes devrait être alors&nbsp;:"

#. type: Content of: <sect1><sect2><screen>
#: clfs-en/BOOK/final-system/multilib/multiarch_wrapper.xml:103
#, no-wrap
msgid ""
"<userinput>32bit Version\n"
"64bit Version</userinput>"
msgstr ""
"<userinput>32bit Version\n"
"64bit Version</userinput>"

#. type: Content of: <sect1><sect2><para>
#: clfs-en/BOOK/final-system/multilib/multiarch_wrapper.xml:106
msgid "Remove the testcase source, binaries, and link:"
msgstr "Supprimez les sources, les binaires et le lien du test&nbsp;:"

#. type: Content of: <sect1><sect2><screen>
#: clfs-en/BOOK/final-system/multilib/multiarch_wrapper.xml:108
#, no-wrap
msgid "<userinput>rm -v multiarch_wrapper.c test{,-32,-64}</userinput>"
msgstr "<userinput>rm -v multiarch_wrapper.c test{,-32,-64}</userinput>"

#. type: Content of: <sect1><sect2><title>
#: clfs-en/BOOK/final-system/multilib/multiarch_wrapper.xml:113
msgid "Contents of The Multiarch Wrapper"
msgstr "Contenu de The Multiarch Wrapper"

#. type: Content of: <sect1><sect2><segmentedlist><segtitle>
#: clfs-en/BOOK/final-system/multilib/multiarch_wrapper.xml:116
msgid "Installed programs"
msgstr "Programmes installés"

#. type: Content of: <sect1><sect2><variablelist><varlistentry><listitem><indexterm><primary>
#: clfs-en/BOOK/final-system/multilib/multiarch_wrapper.xml:119
#: clfs-en/BOOK/final-system/multilib/multiarch_wrapper.xml:135
msgid "multiarch_wrapper"
msgstr "multiarch_wrapper"

#. type: Content of: <sect1><sect2><variablelist><bridgehead>
#: clfs-en/BOOK/final-system/multilib/multiarch_wrapper.xml:124
msgid "Short Descriptions"
msgstr "Descriptions courtes"

#. type: Content of: <sect1><sect2><variablelist><varlistentry><term>
#: clfs-en/BOOK/final-system/multilib/multiarch_wrapper.xml:129
msgid "<command>multiarch_wrapper</command>"
msgstr "<command>multiarch_wrapper</command>"

#. type: Content of: <sect1><sect2><variablelist><varlistentry><listitem><para>
#: clfs-en/BOOK/final-system/multilib/multiarch_wrapper.xml:131
msgid ""
"Will execute a different program based on the <envar>USE_ARCH</envar> "
"variable. The <envar>USE_ARCH</envar> variable will be the suffix of the "
"executed program."
msgstr ""
"Exécute un programme différent en se basant sur la variable <envar>USE_ARCH</"
"envar>. Cette variable <envar>USE_ARCH</envar> sera alors le suffixe du "
"programme exécuté."
