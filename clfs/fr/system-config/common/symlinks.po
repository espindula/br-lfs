# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2017-06-07 22:16+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Content of: <sect1><title>
#: clfs-en/BOOK/system-config/common/symlinks.xml:11
msgid "Creating custom symlinks to devices"
msgstr ""

#. type: Content of: <sect1><sect2><title>
#: clfs-en/BOOK/system-config/common/symlinks.xml:15
msgid "CD-ROM symlinks"
msgstr ""

#. type: Content of: <sect1><sect2><para>
#: clfs-en/BOOK/system-config/common/symlinks.xml:17
msgid ""
"Some software that you may want to install later (e.g., various media "
"players) expect the /dev/cdrom and /dev/dvd symlinks to exist.  Also, it may "
"be convenient to put references to those symlinks into "
"<filename>/etc/fstab</filename>. For each of your CD-ROM devices, find the "
"corresponding directory under <filename class=\"directory\">/sys</filename> "
"(e.g., this can be <filename class=\"directory\">/sys/block/hdd</filename>) "
"and run a command similar to the following:"
msgstr ""

#. type: Content of: <sect1><sect2><screen>
#: clfs-en/BOOK/system-config/common/symlinks.xml:26
#, no-wrap
msgid "<userinput>udevadm test /sys/block/hdd</userinput>"
msgstr ""

#. type: Content of: <sect1><sect2><para>
#: clfs-en/BOOK/system-config/common/symlinks.xml:28
msgid "Look at the lines containing the output of various *_id programs."
msgstr ""

#. type: Content of: <sect1><sect2><para>
#: clfs-en/BOOK/system-config/common/symlinks.xml:30
msgid ""
"There are two approaches to creating symlinks. The first one is to use the "
"model name and the serial number, the second one is based on the location of "
"the device on the bus. If you are going to use the first approach, create a "
"file similar to the following:"
msgstr ""

#. type: Content of: <sect1><sect2><screen>
#: clfs-en/BOOK/system-config/common/symlinks.xml:35
#, no-wrap
msgid ""
"<userinput>cat &gt;/etc/udev/rules.d/82-cdrom.rules &lt;&lt; EOF\n"
"<literal>\n"
"# Custom CD-ROM symlinks\n"
"SUBSYSTEM==\"block\", ENV{ID_MODEL}==\"SAMSUNG_CD-ROM_SC-148F\", \\\n"
"    ENV{ID_REVISION}==\"PS05\", SYMLINK+=\"cdrom\"\n"
"SUBSYSTEM==\"block\", ENV{ID_MODEL}==\"PHILIPS_CDD5301\", \\\n"
"    ENV{ID_SERIAL}==\"5VO1306DM00190\", SYMLINK+=\"cdrom1 dvd\"\n"
"</literal>\n"
"EOF</userinput>"
msgstr ""

#. type: Content of: <sect1><sect2><note><para>
#: clfs-en/BOOK/system-config/common/symlinks.xml:46
msgid ""
"Although the examples in this book work properly, be aware that Udev does "
"not recognize the backslash for line continuation.  If modifying Udev rules "
"with an editor, be sure to leave each rule on one physical line."
msgstr ""

#. type: Content of: <sect1><sect2><para>
#: clfs-en/BOOK/system-config/common/symlinks.xml:52
msgid ""
"This way, the symlinks will stay correct even if you move the drives to "
"different positions on the IDE bus, but the <filename>/dev/cdrom</filename> "
"symlink won't be created if you replace the old SAMSUNG CD-ROM with a new "
"drive."
msgstr ""

#. type: Content of: <sect1><sect2><para>
#: clfs-en/BOOK/system-config/common/symlinks.xml:59
msgid ""
"The SUBSYSTEM==&quot;block&quot; key is needed in order to avoid matching "
"SCSI generic devices. Without it, in the case with SCSI CD-ROMs, the "
"symlinks will sometimes point to the correct <filename>/dev/srX</filename> "
"devices, and sometimes to <filename>/dev/sgX</filename>, which is wrong."
msgstr ""

#. type: Content of: <sect1><sect2><para>
#: clfs-en/BOOK/system-config/common/symlinks.xml:65
msgid "The second approach yields:"
msgstr ""

#. type: Content of: <sect1><sect2><screen>
#: clfs-en/BOOK/system-config/common/symlinks.xml:67
#, no-wrap
msgid ""
"<userinput>cat &gt;/etc/udev/rules.d/82-cdrom.rules &lt;&lt; EOF\n"
"<literal>\n"
"# Custom CD-ROM symlinks\n"
"SUBSYSTEM==\"block\", ENV{ID_TYPE}==\"cd\", \\\n"
"    ENV{ID_PATH}==\"pci-0000:00:07.1-ide-0:1\", SYMLINK+=\"cdrom\"\n"
"SUBSYSTEM==\"block\", ENV{ID_TYPE}==\"cd\", \\\n"
"    ENV{ID_PATH}==\"pci-0000:00:07.1-ide-1:1\", SYMLINK+=\"cdrom1 dvd\"\n"
"</literal>\n"
"EOF</userinput>"
msgstr ""

#. type: Content of: <sect1><sect2><para>
#: clfs-en/BOOK/system-config/common/symlinks.xml:77
msgid ""
"This way, the symlinks will stay correct even if you replace drives with "
"different models, but place them to the old positions on the IDE bus. The "
"ENV{ID_TYPE}==&quot;cd&quot; key makes sure that the symlink disappears if "
"you put something other than a CD-ROM in that position on the bus."
msgstr ""

#. type: Content of: <sect1><sect2><para>
#: clfs-en/BOOK/system-config/common/symlinks.xml:83
msgid "Of course, it is possible to mix the two approaches."
msgstr ""

#. type: Content of: <sect1><sect2><title>
#: clfs-en/BOOK/system-config/common/symlinks.xml:89
msgid "Dealing with duplicate devices"
msgstr ""

#. type: Content of: <sect1><sect2><para>
#: clfs-en/BOOK/system-config/common/symlinks.xml:91
msgid ""
"As explained in <xref linkend=\"ch-config-udev\"/>, the order in which "
"devices with the same function appear in <filename "
"class=\"directory\">/dev</filename> is essentially random.  E.g., if you "
"have a USB web camera and a TV tuner, sometimes "
"<filename>/dev/video0</filename> refers to the camera and "
"<filename>/dev/video1</filename> refers to the tuner, and sometimes after a "
"reboot the order changes to the opposite one.  For all classes of hardware "
"except sound cards and network cards, this is fixable by creating udev rules "
"for custom persistent symlinks.  The case of network cards is covered "
"separately in <xref linkend=\"chapter-network\"/>, and sound card "
"configuration can be found in <ulink url=\"&cblfs-root;\">CBLFS</ulink>."
msgstr ""

#. type: Content of: <sect1><sect2><para>
#: clfs-en/BOOK/system-config/common/symlinks.xml:104
msgid ""
"For each of your devices that is likely to have this problem (even if the "
"problem doesn't exist in your current Linux distribution), find the "
"corresponding directory under <filename "
"class=\"directory\">/sys/class</filename> or <filename "
"class=\"directory\">/sys/block</filename>.  For video devices, this may be "
"<filename "
"class=\"directory\">/sys/class/video4linux/video<replaceable>X</replaceable></filename>.  "
"Figure out the attributes that identify the device uniquely (usually, vendor "
"and product IDs and/or serial numbers work):"
msgstr ""

#. type: Content of: <sect1><sect2><screen>
#: clfs-en/BOOK/system-config/common/symlinks.xml:115
#, no-wrap
msgid "<userinput>udevadm info -a -p /sys/class/video4linux/video0</userinput>"
msgstr ""

#. type: Content of: <sect1><sect2><para>
#: clfs-en/BOOK/system-config/common/symlinks.xml:117
msgid "Then write rules that create the symlinks, e.g.:"
msgstr ""

#. type: Content of: <sect1><sect2><screen>
#: clfs-en/BOOK/system-config/common/symlinks.xml:119
#, no-wrap
msgid ""
"<userinput>cat &gt;/etc/udev/rules.d/83-duplicate_devs.rules &lt;&lt; EOF\n"
"<literal>\n"
"# Persistent symlinks for webcam and tuner\n"
"KERNEL==\"video*\", SYSFS{idProduct}==\"1910\", SYSFS{idVendor}==\"0d81\", "
"\\\n"
"    SYMLINK+=\"webcam\"\n"
"KERNEL==\"video*\", SYSFS{device}==\"0x036f\", SYSFS{vendor}==\"0x109e\", "
"\\\n"
"    SYMLINK+=\"tvtuner\"\n"
"</literal>\n"
"EOF</userinput>"
msgstr ""

#. type: Content of: <sect1><sect2><para>
#: clfs-en/BOOK/system-config/common/symlinks.xml:129
msgid ""
"The result is that <filename>/dev/video0</filename> and "
"<filename>/dev/video1</filename> devices still refer randomly to the tuner "
"and the web camera (and thus should never be used directly), but there are "
"symlinks <filename>/dev/tvtuner</filename> and "
"<filename>/dev/webcam</filename> that always point to the correct device."
msgstr ""
