<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
]>

<sect1 id="ch-scripts-usage">
  <?dbhtml filename="usage.html"?>

  <title>Comment fonctionnent ces scripts de démarrage&nbsp;?</title>

  <indexterm zone="ch-scripts-usage">
    <primary sortas="a-Bootscripts">Bootscripts</primary>
  <secondary>utilisation</secondary></indexterm>

  <para>Linux utilise un service de démarrage spécial nommé SysVinit qui
  est basé sur un concept de <emphasis>niveaux d'exécution</emphasis>.
  Cela peut être bien différent d'un système à un autre, du coup, il ne
  peut pas être supposé que, parce que cela fonctionne dans une
  distribution Linux particulière, cela fonctionnera de la même façon
  dans CLFS. CLFS a sa propre façon de le faire mais il respecte
  généralement les standards établis.</para>

  <para>SysVinit (qui sera nommé par la suite <quote>init</quote>)
  fonctionne en utilisant un schéma de niveaux d'exécution. Ils sont au
  nombre de sept (numérotés de 0 à 6). En fait, il en existe plus mais
  ils sont pour des cas spéciaux et ne sont généralement pas utilisés.
  Voir <filename>init(8)</filename> pour plus de détails. Chacun d'entre
  eux correspond à des actions que l'ordinateur est supposé effectuer
  lorsqu'il démarre. Le niveau d'exécution par défaut est 3. Voici les
  descriptions sur l'implémentation des différents niveaux
  d'exécution&nbsp;:</para>

<literallayout>
0: arrête l'ordinateur
1: mode simple utilisateur
2: mode multi-utilisateur sans réseau 
3: mode multi-utilisateur avec réseau
4: réservé pour la personnalisation, sinon identique à 3
5: identique à 4, il est habituellement utilisé pour la connexion GUI
(comme <command>xdm</command> de X ou <command>kdm</command> de KDE) 
6: redémarre l'ordinateur</literallayout>

  <para>La commande utilisée pour modifier le niveau d'exécution est
  <command>init
  <replaceable>[niveau_execution]</replaceable></command>, où
  <replaceable>[niveau_execution]</replaceable> est le niveau
  d'exécution cible.
  Par exemple, pour redémarrer l'ordinateur, un utilisateur pourrait
  lancer la commande <command>init 6</command> qui est un alias de la
  commande <command>reboot</command>. De même, <command>init 0</command>
  est un alias pour la commande <command>halt</command>.</para>

  <para>Il existe un certain nombre de répertoires sous
  <filename class="directory">/etc/rc.d</filename> qui ressemble à
  <filename class="directory">rc?.d</filename> (où ? est le numéro du
  niveau d'exécution) et 
  <filename class="directory">rcsysinit.d</filename>, tous contenant un
  certain nombre de liens symboliques. Certains commencent avec un
  <emphasis>K</emphasis>, les autres avec un <emphasis>S</emphasis>, et
  tous ont deux nombres après la lettre initiale. Le K signifie l'arrêt
  (kill) d'un service et le S son lancement (start). Les nombres
  déterminent l'ordre dans lequel les scripts sont exécutés, de 00 à
  99&mdash;plus ce nombre est petit, plus tôt le script correspondant
  sera exécuté. Quand <command>init</command> bascule sur un autre
  niveau d'exécution, les services appropriés sont soit lancé soit tués,
  suivant le niveau d'exécution choisi.</para>

  <para>Les vrais scripts sont dans
  <filename class="directory">/etc/rc.d/init.d</filename>. Ils font le
  vrai boulot et les liens symboliques pointent tous vers eux. Les liens
  d'arrêt et de lancement pointent vers le même script dans 
  <filename class="directory">/etc/rc.d/init.d</filename>. Ceci est dû
  au fait que les scripts peuvent être appelés avec différents
  paramètres comme <option>start</option>,
  <option>stop</option>, <option>restart</option>,
  <option>reload</option> et <option>status</option>. Quand
  un lien K est rencontré, le script approprié est lancé avec l'argument
  <option>stop</option>. Quand un lien S est rencontré, le script
  approprié est lancé avec l'argument
  <option>start</option>.</para>

  <para>Il existe une exception à cette explication. Les liens
  commençant avec un <emphasis>S</emphasis> dans les répertoires
  <filename class="directory">rc0.d</filename> et
  <filename class="directory">rc6.d</filename> ne lanceront aucun
  service. Ils seront
  appelés avec l'argument <parameter>stop</parameter> pour arrêter
  quelque chose.
  La logique derrière ceci est que, quand un utilisateur va redémarrer
  ou arrêter le système, rien ne doit être lancé. Le système a seulement
  besoin d'être stoppé.</para>

  <para>Voici des descriptions de ce que font les arguments des
  scripts&nbsp;:</para>

  <variablelist>
    <varlistentry>
      <term><parameter>start</parameter></term>
      <listitem>
        <para>Le service est lancé.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter>stop</parameter></term>
      <listitem>
        <para>Le service est stoppé.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter>restart</parameter></term>
      <listitem>
        <para>Le service est stoppé puis de nouveau lancé.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter>reload</parameter></term>
      <listitem>
        <para>La configuration du service est mise à jour. Ceci est utilisé
        après que le fichier de configuration d'un service a été modifié, quand le
        service n'a pas besoin d'être redémarré.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter>status</parameter></term>
      <listitem>
        <para>Indique si le service est en cours d'exécution ainsi que les
        PID associés.</para>
      </listitem>
    </varlistentry>

  </variablelist>

  <para>Vous êtes libre de modifier la façon dont le processus de
  démarrage fonctionne (après tout, c'est votre système LFS). Les
  fichiers donnés ici sont un exemple d'une façon de faire.</para>

</sect1>
