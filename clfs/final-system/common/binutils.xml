<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-binutils" role="wrap">
  <?dbhtml filename="binutils.html"?>

  <title>Binutils-&binutils-version;</title>

  <indexterm zone="ch-system-binutils">
    <primary sortas="a-Binutils">Binutils</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para os="a">Le paquet Binutils contient un éditeur de liens, un assembleur
    et d'autres outils pour gérer des fichiers objets.</para>

  </sect2>

  <sect2 role="installation">
    <title>Installation de Binutils</title>

    <para os="b">Vérifiez que les pseudo-terminaux (PTY) fonctionnent
    correctement dans l'environnement chroot. Vérifiez que tout est bien
    configuré en effectuant un simple test&nbsp;:</para>

<screen os="c" role="nodump"><userinput>expect -c "spawn ls"</userinput></screen>

    <para os="d">Cette commande devrait donner la sortie suivante&nbsp;:</para>

<screen os="e"><computeroutput>spawn ls</computeroutput></screen>

    <para os="f">Si, à la place, elle donne un message disant qu'il faut créer plus de ptys, alors l'environnement n'est pas bien paramétré 
    pour l'opération PTY. Ce problème doit être résolu avant de lancer les suites de
    tests pour Binutils et GCC.</para>

<!--
    <para os="p1">Le correctif suivant contient un certain nombre de mises à jour
    vers la branche &binutils-version; faites par les développeurs de Binutils&nbsp;:</para>

    <screen os="p2"><userinput>patch -Np1 -i ../&binutils-branch_update-patch;</userinput></screen>
-->

    <para os="g">La documentation de Binutils recommande de construire Binutils
    à l'extérieur du répertoire des sources dans un répertoire
    dédié&nbsp;:</para>

<screen os="h"><userinput>mkdir -v ../binutils-build
cd ../binutils-build</userinput></screen>

    <para os="i">Préparez la compilation de Binutils&nbsp;:</para>

<screen os="ca"><userinput>CC="gcc -isystem /usr/include" \
  ../binutils-&binutils-dir;/configure --prefix=/usr \
     --enable-shared</userinput></screen>

    <para os="j">Compilez le paquet&nbsp;:</para>

<screen os="k"><userinput>make tooldir=/usr</userinput></screen>

<!--    <important os="l">
      <para>Pendant <command>make configure-host</command> il se peut que vous receviez le message d'erreur suivant. Vous 
      pouvez l'ignorer en toute sécurité.</para>

<screen><computeroutput>WARNING: `flex' is missing on your system. You should only
need it if you modified a `.l' file. You may need the `Flex'
package in order for those modifications to take effect. You
can get `Flex' from any GNU archive site.</computeroutput></screen>
    </important>
-->

<screen os="m"><userinput>make tooldir=/usr</userinput></screen>

    <variablelist os="n">
      <title>Voici la signification du paramètre de make&nbsp;:</title>

      <varlistentry>
        <term><parameter>tooldir=/usr</parameter></term>
        <listitem>
          <para>Normalement, le répertoire
          <filename class="directory">tooldir</filename> (celui où seront
          placés les exécutables) est configuré avec
          <filename class="directory">$(exec_prefix)/$(target_alias)</filename>.
          Comme il s'agit d'un système personnalisé, nous n'avons pas
          besoin d'un répertoire spécifique à notre cible dans
          <filename class="directory">/usr</filename>.</para>
        </listitem>
      </varlistentry>
    </variablelist>



    <important os="o">
      <para>Étant donné le rôle critique de Binutils dans le bon fonctionnement
      d'un système, les développeurs de CLFS recommandent fortement de lancer la
      suite de tests.</para>
    </important>

    <para os="p">Testez les résultats&nbsp;:</para>

<screen os="q"><userinput remap="test">make check</userinput></screen>

    <para os="r">Installez le paquet&nbsp;:</para>

<screen os="s"><userinput>make tooldir=/usr install</userinput></screen>

  </sect2>

  <sect2 id="contents-binutils" role="content">
    <title>Contenu de Binutils</title>

    <segmentedlist>
      <segtitle>Programmes installés</segtitle>
      <segtitle>Bibliothèques installées</segtitle>
      <segtitle>Répertoire installé</segtitle>
      <seglistitem>
        <seg>addr2line, ar, as, c++filt, elfedit, gprof, ld, ld.bfd, nm,
        objcopy, objdump, ranlib, readelf, size, strings, strip</seg>
        <seg>libbfd.[a,so], libopcodes.[a,so]</seg>
        <seg>/usr/lib/ldscripts</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descriptions courtes</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="addr2line">
        <term><command>addr2line</command></term>
        <listitem>
          <para>Traduit les adresses de programme en noms de fichier et numéros de
          ligne&nbsp;; suivant une adresse et le nom d'un exécutable, il utilise les
          informations de débogage disponibles dans l'exécutable pour déterminer le
          fichier source et le numéro de ligne associé à cette adresse</para>
          <indexterm zone="ch-system-binutils addr2line">
            <primary sortas="b-addr2line">addr2line</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ar">
        <term><command>ar</command></term>
        <listitem>
          <para>Crée, modifie et extrait des archives</para>
          <indexterm zone="ch-system-binutils ar">
            <primary sortas="b-ar">ar</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="as">
        <term><command>as</command></term>
        <listitem>
          <para>Un assembleur qui assemble la sortie de <command>gcc</command>
          en des fichiers objets</para>
          <indexterm zone="ch-system-binutils as">
            <primary sortas="b-as">as</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="c-filt">
        <term><command>c++filt</command></term>
        <listitem>
          <para>Utilisé par l'éditeur de liens pour récupérer les symboles C++ 
          et Java, et pour empêcher les fonctions surchargées d'arrêter 
          brutalement le programme</para>
          <indexterm zone="ch-system-binutils c-filt">
            <primary sortas="b-c++filt">c++filt</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="elfedit">
        <term><command>elfedit</command></term>
        <listitem>
          <para>Mise à jour de l'en-tête ELF des fichiers ELF</para>
          <indexterm zone="ch-system-binutils elfedit">
            <primary sortas="b-elfedit">elfedit</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gprof">
        <term><command>gprof</command></term>
        <listitem>
          <para>Affiche les données de profilage d'appels dans un graphe</para>
          <indexterm zone="ch-system-binutils gprof">
            <primary sortas="b-gprof">gprof</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ld">
        <term><command>ld</command></term>
        <listitem>
          <para>Un éditeur de liens combinant un certain nombre d'objets et de fichiers
          archives en un seul fichier, en déplaçant leur données et en regroupant les
          références de symboles</para>
          <indexterm zone="ch-system-binutils ld">
            <primary sortas="b-ld">ld</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ld.bfd">
        <term><command>ld.bfd</command></term>
        <listitem>
          <para>Lien en dur vers <command>ld</command></para>
          <indexterm zone="ch-system-binutils ld.bfd">
            <primary sortas="b-ld.bfd">ld.bfd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="nm">
        <term><command>nm</command></term>
        <listitem>
          <para>Liste les symboles disponibles dans un fichier objet</para>
          <indexterm zone="ch-system-binutils nm">
            <primary sortas="b-nm">nm</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="objcopy">
        <term><command>objcopy</command></term>
        <listitem>
          <para>Traduit un type de fichier objet en un autre</para>
          <indexterm zone="ch-system-binutils objcopy">
            <primary sortas="b-objcopy">objcopy</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="objdump">
        <term><command>objdump</command></term>
        <listitem>
          <para>Affiche des informations sur le fichier objet donné, les options
          contrôlant les informations à afficher&nbsp;; l'information affichée est
          surtout utile aux programmeurs qui travaillent sur les outils de compilation
          </para>
          <indexterm zone="ch-system-binutils objdump">
            <primary sortas="b-objdump">objdump</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ranlib">
        <term><command>ranlib</command></term>
        <listitem>
          <para>Génère un index du contenu d'une archive et le stocke dans l'archive&nbsp;;
          l'index liste tous les symboles définis par les membres de l'archive qui sont
          des fichiers objet déplaçables</para>
          <indexterm zone="ch-system-binutils ranlib">
            <primary sortas="b-ranlib">ranlib</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="readelf">
        <term><command>readelf</command></term>
        <listitem>
          <para>Affiche des informations sur les binaires du type ELF</para>
          <indexterm zone="ch-system-binutils readelf">
            <primary sortas="b-readelf">readelf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="size">
        <term><command>size</command></term>
        <listitem>
          <para>Liste les tailles des sections et la taille totale pour les fichiers
          objets donnés</para>
          <indexterm zone="ch-system-binutils size">
            <primary sortas="b-size">size</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="strings">
        <term><command>strings</command></term>
        <listitem>
          <para>Affiche, pour chaque fichier donné, la séquence de caractères affichables
          qui sont d'au moins la taille spécifiée (par défaut, 4)&nbsp;; pour les fichiers
          objets, il affiche, par défaut, seulement les chaînes des sections
          d'initialisation et de chargement alors que pour les autres types de fichiers,
          il parcourt le fichier entier</para>
          <indexterm zone="ch-system-binutils strings">
            <primary sortas="b-strings">strings</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="strip">
        <term><command>strip</command></term>
        <listitem>
          <para>Supprime les symboles des fichiers objets</para>
          <indexterm zone="ch-system-binutils strip">
            <primary sortas="b-strip">strip</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libbfd">
        <term><filename class="libraryfile">libbfd</filename></term>
        <listitem>
          <para>Bibliothèque des descripteurs de fichiers binaires
          (<foreignphrase>Binary File Descriptor</foreignphrase>)</para>
          <indexterm zone="ch-system-binutils libbfd">
            <primary sortas="c-libbfd">libbfd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libopcodes">
        <term><filename class="libraryfile">libopcodes</filename></term>
        <listitem>
          <para>Une bibliothèque de gestion des opcodes&mdash;la <quote>version
          lisible</quote> des instructions du processeur&nbsp;; elle est utilisée pour
          construire des outils comme
          <command>objdump</command>.</para>
          <indexterm zone="ch-system-binutils libopcodes">
            <primary sortas="c-libopcodes">libopcodes</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>

