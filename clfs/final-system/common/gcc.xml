<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-gcc" role="wrap">
  <?dbhtml filename="gcc.html"?>

  <title>GCC-&gcc-version;</title>

  <indexterm zone="ch-system-gcc">
    <primary sortas="a-GCC">GCC</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>Le paquet GCC contient la collection de compilateurs GNU, qui
    inclut les compilateurs C et C++.</para>

  </sect2>

  <sect2 role="installation">
    <title>Installation de GCC</title>

    <para os="p1">Le correctif suivant contient un certain nombre de mises à jour
    vers la branche &gcc-version; des développeurs de GCC&nbsp;:</para>

    <screen os="p2"><userinput>patch -Np1 -i ../&gcc-branch_update-patch;</userinput></screen>

    <para os="fix1">Appliquez une subsitution <command>sed</command> qui
    supprimera l'exécution du script <command>fixincludes</command>&nbsp;:</para>

<screen os="fix2"><userinput>cp -v gcc/Makefile.in{,.orig}
sed 's@\./fixinc\.sh@-c true@' gcc/Makefile.in.orig > gcc/Makefile.in</userinput></screen>

    <para os="d">Appliquez une substitution <command>sed</command> qui va supprimer l'installation de
    <filename class="libraryfile">libiberty.a</filename>. La
    version of <filename class="libraryfile">libiberty.a</filename> fournie par Binutils sera utilisée à la 
    place&nbsp;:</para>

<screen os="e"><userinput>sed -i 's/install_to_$(INSTALL_DEST) //' libiberty/Makefile.in</userinput></screen>

    <para os="f">La documentation de GCC recommande de construire GCC en dehors
    du répertoire source, c'est-à-dire dans un répertoire dédié&nbsp;:</para>


<screen os="g"><userinput>mkdir -v ../gcc-build
cd ../gcc-build</userinput></screen>

    <para os="h">Préparez la compilation de GCC&nbsp;:</para>

<screen os="i"><userinput>CC="gcc -isystem /usr/include" \
CXX="g++ -isystem /usr/include" \
LDFLAGS="-Wl,-rpath-link,/usr/lib:/lib" \
  ../gcc-&gcc-version;/configure --prefix=/usr \
    --libexecdir=/usr/lib --enable-shared --enable-threads=posix \
    --enable-__cxa_atexit --enable-c99 --enable-long-long \
    --enable-clocale=gnu --enable-languages=c,c++ \
    --disable-multilib --disable-libstdcxx-pch \
    --enable-cloog-backend=isl --disable-isl-version-check --with-system-zlib \
    --enable-checking=release --enable-libstdcxx-time \
    --disable-install-libiberty</userinput></screen>

    <para os="j">Compilez le paquet&nbsp;:</para>

<screen os="k"><userinput>make</userinput></screen>

    <important os="l">
      <para>Dans cette section, la suite de tests pour GCC est considérée
      critique. Ne les sautez sous aucun prétexte.</para>
    </important>

   <para os="s1">Augmentez la taille de la pile avant de lancer les tests&nbsp;:</para>

<screen os="s2"><userinput remap="test">ulimit -s 32768</userinput></screen>

    <para os="m">Testez les résultats mais ne vous arrêtez pas aux
    erreurs&nbsp;:</para>

<screen os="n"><userinput remap="test">make -k check</userinput></screen>

    <para os="o">L'option <parameter>-k</parameter> est utilisé pour que la suite de test s'exécute jusqu'à la fin et ne 
    s'arrête pas au premier échec. La suite de tests de GCC est très complète et il est presque certain qu'elle générera 
    quelques échecs. Pour recevoir un résumé des résultats de la suite de tests, lancez&nbsp;:</para>

<screen os="p"><userinput remap="test">../gcc-&gcc-version;/contrib/test_summary</userinput></screen>

    <para os="q">Pour n'avoir que les résumés, redirigez la sortie vers
    <userinput>grep -A7 Summ</userinput>.</para>

    <para os="r">Quelques échecs inattendus sont inévitables. Les développeurs
    de GCC connaissent ces problèmes, mais ne les ont pas encore
    résolus.</para>

    <para os="s">Installez le paquet&nbsp;:</para>

<screen os="t"><userinput>make install</userinput></screen>

    <para os="u">Quelques paquets s'attendent à ce que le préprocesseur C soit
    installé dans le répertoire 
    <filename class="directory">/lib</filename> Pour supporter ces
    paquets, créez ce lien symbolique&nbsp;:</para>

<screen os="v"><userinput>ln -sv ../usr/bin/cpp /lib</userinput></screen>

    <para os="w">Beaucoup de paquets utilisent le nom <command>cc</command>
    pour appeler le compilateur C. Pour satisfaire ces paquets, créez un
    lien symbolique&nbsp;:</para>

<screen os="x"><userinput>ln -sv gcc /usr/bin/cc</userinput></screen>

    <para os="y">Enfin, déplacez un fichier mal placé&nbsp;:</para>

<screen os="z"><userinput>mv -v /usr/lib/*gdb.py /usr/share/gdb/auto-load/usr/lib</userinput></screen>

  </sect2>

  <sect2 id="contents-gcc" role="content">
    <title>Contenu de GCC</title>

    <segmentedlist>
      <segtitle>Programmes installés</segtitle>
      <segtitle>Bibliothèques installés</segtitle>
      <segtitle>Répertoires installés</segtitle>

      <seglistitem>
        <seg>c++, cc (link to gcc), cpp, g++, gcc et gcov</seg>
        <seg>libasan.[a,so], libgcc.a, libgcc_eh.a, libgcc_s.so, libgcov.a,
        libgomp.[a,so], libmudflap.[a,so], libmudflapth.[a,so], libssp.[a,so],
        libssp_nonshared.a, libstdc++.[a,so], libsupc++.a, and libtsan.[a,so]</seg>
        <seg>/usr/include/c++, /usr/lib/gcc, /usr/share/gcc-&gcc-version;</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Descriptions courtes</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="cc">
        <term><command>cc</command></term>
        <listitem>
          <para>Le compilateur C</para>
          <indexterm zone="ch-system-gcc cc">
            <primary sortas="b-cc">cc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="cpp">
        <term><command>cpp</command></term>
        <listitem>
          <para>Le préprocesseur C&nbsp;; il est utilisé par le compilateur pour
          l'extension des instructions #include, #define et d'autres instructions similaires
          dans les fichiers sources</para>
          <indexterm zone="ch-system-gcc cpp">
            <primary sortas="b-cpp">cpp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="c">
        <term><command>c++</command></term>
        <listitem>
          <para>Le compilateur C++</para>
          <indexterm zone="ch-system-gcc c">
            <primary sortas="b-c++">c++</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="g">
        <term><command>g++</command></term>
        <listitem>
          <para>Le compilateur C++</para>
          <indexterm zone="ch-system-gcc g">
            <primary sortas="b-g++">g++</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcc">
        <term><command>gcc</command></term>
        <listitem>
          <para>Le compilateur C</para>
          <indexterm zone="ch-system-gcc gcc">
            <primary sortas="b-gcc">gcc</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="gcov">
        <term><command>gcov</command></term>
        <listitem>
          <para>Un outil de tests&nbsp;; il est utilisé pour analyser les programmes et
          savoir où des optimisations seraient suivies du plus d'effet</para>
          <indexterm zone="ch-system-gcc gcov">
            <primary sortas="b-gcov">gcov</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libasan">
        <term><filename class="libraryfile">libasan</filename></term>
        <listitem>
          <para>La bibliothèque d'exécution Address Sanitizer</para>
          <indexterm zone="ch-system-gcc libasan">
            <primary sortas="c-libasan">libasan</primary>
          </indexterm>
        </listitem>
      </varlistentry>


      <varlistentry id="libgcc">
        <term><filename class="libraryfile">libgcc</filename></term>
        <listitem>
          <para>Contient un support en exécution pour <command>gcc</command></para>
          <indexterm zone="ch-system-gcc libgcc">
            <primary sortas="c-libgcc*">libgcc*</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libgcov">
        <term><filename class="libraryfile">libgcov</filename></term>
        <listitem>
          <para>Bibliothèque qui est liée à un programme lorsqu'on demande à
          <command>gcc</command> d'activer le profilage</para>
          <indexterm zone="ch-system-gcc libgcov">
            <primary sortas="c-libgcov">libgcov</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libgomp">
        <term><filename class="libraryfile">libgomp</filename></term>
        <listitem>
          <para>une implémentation GNU de l'API OpenMP pour la programmation en
          C/C++ et Fortran de mémoire parallèle partagée pour plusieurs plateformes</para>
          <indexterm zone="ch-system-gcc libgomp">
            <primary sortas="c-libgomp">libgomp</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libmudflap">
        <term><filename class="libraryfile">libmudflap</filename></term>
        <listitem>
          <para>Les bibliothèques libmudflap sont utilisées par GCC pour des opérations d'instrumentalisation des 
          pointeurs et de déréférencement des tableaux.</para>
          <indexterm zone="ch-system-gcc libmudflap">
            <primary sortas="c-libmudflap*">libmudflap*</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libssp">
        <term><filename class="libraryfile">libssp</filename></term>
        <listitem>
          <para>Contient le support des routines pour la fonctionnalité de
          protecteur Stack-mashing de GCC</para>
          <indexterm zone="ch-system-gcc libssp">
            <primary sortas="c-libssp*">libssp*</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libstdc">
        <term><filename class="libraryfile">libstdc++</filename></term>
        <listitem>
          <para>La bibliothèque C++ standard</para>
          <indexterm zone="ch-system-gcc libstdc">
            <primary sortas="c-libstdc++">libstdc++</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libsupc">
        <term><filename class="libraryfile">libsupc++</filename></term>
        <listitem>
          <para>Fournit des routines pour le support du langage de programmation C++</para>
          <indexterm zone="ch-system-gcc libsupc">
            <primary sortas="c-libsupc++">libsupc++</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libtsan">
        <term><filename class="libraryfile">libtsan</filename></term>
        <listitem>
          <para>La bibliothèque pendant l'exécution Thread Sanitizer</para>
          <indexterm zone="ch-system-gcc libtsan">
            <primary sortas="c-libtsan">libtsan</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>

