<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
]>

<sect1 id="ch-temp-system-choose">
  <?dbhtml filename="choose.html"?>

  <title>To Boot or to Chroot?</title>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="../common/choose.xml"
    xpointer="xpointer(//*[@os='a'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="../common/choose.xml"
    xpointer="xpointer(//*[@os='b'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="../common/choose.xml"
    xpointer="xpointer(//*[@os='c'])"/>

  <para>Powerpc64 is slightly different from some of the other
  architectures, because a 64-bit kernel running 32-bit userspace can
  successfully chroot and execute 64-bit programs.  However, if the
  kernel personality has been set to 32-bit by a utility such as
  linux32, it will eventually fail when Glibc thinks it is building
  on a 32-bit system and tries to include incompatible assembler code
  in the 64-bit glibc.</para>

  <para>To see if you can successfully chroot to build the final powerpc64
  system, enter the following command which tests if you are running a
  64-bit Linux 2.6 kernel (with a 64-bit personality):</para>

<screen><userinput>uname -a | grep '^Linux.*2\.6\..*ppc64' &amp;&amp; \
    echo "ok to chroot" || echo "you must boot"</userinput></screen>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="../common/choose.xml"
    xpointer="xpointer(//*[@os='g'])"/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="../common/choose.xml"
    xpointer="xpointer(//*[@os='h'])"/>

</sect1>
